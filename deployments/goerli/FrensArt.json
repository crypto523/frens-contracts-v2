{
  "address": "0xf34966A88647B0Ca34ae3752Adb9cB145F81b116",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IFrensStorage",
          "name": "frensStorage_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "renderTokenById",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x16cdf56d98619bee6fcaaa42f40fe4160061a838f5236f5a7b6e095839c6e35b",
  "receipt": {
    "to": null,
    "from": "0x6C55105954b7fd0c4Bf3df00dFD739fA71e2fD20",
    "contractAddress": "0xf34966A88647B0Ca34ae3752Adb9cB145F81b116",
    "transactionIndex": 57,
    "gasUsed": "643330",
    "logsBloom": "0x
    "blockHash": "0x8863d653a095a57c092ccfa074a29308d9314fec4a9e67ebde2bf2c66e0d1909",
    "transactionHash": "0x16cdf56d98619bee6fcaaa42f40fe4160061a838f5236f5a7b6e095839c6e35b",
    "logs": [],
    "blockNumber": 10146999,
    "cumulativeGasUsed": "4701705",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5fc3B2e43CE41568675F33d57303BE77780B00f9"
  ],
  "solcInputHash": "6b8e0506e998861965edae95c87e0a81",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFrensStorage\",\"name\":\"frensStorage_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"renderTokenById\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FrensArt.sol\":\"FrensArt\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/FrensArt.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\n///@title Frens Art\\n///@author 0xWildhare and Frens Team\\n///@dev generates the svg artwork for the NFT by compiling strings from various contracts\\n\\nimport \\\"./interfaces/IFrensMetaHelper.sol\\\";\\nimport \\\"./interfaces/IPmFont.sol\\\";\\nimport \\\"./interfaces/IFrensLogo.sol\\\";\\nimport \\\"./interfaces/IWaves.sol\\\";\\nimport \\\"./interfaces/IFrensStorage.sol\\\";\\n\\ncontract FrensArt {\\n\\n    IFrensStorage frensStorage;\\n    \\n    constructor(\\n        IFrensStorage frensStorage_\\n    ) {\\n        frensStorage = frensStorage_;\\n    }\\n\\n    function renderTokenById(uint256 id) external view returns (string memory) {\\n        IFrensMetaHelper frensMetaHelper = IFrensMetaHelper(frensStorage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"FrensMetaHelper\\\"))));\\n        IPmFont pmFont = IPmFont(frensStorage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"PmFont\\\"))));\\n        IWaves waves = IWaves(frensStorage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"Waves\\\"))));\\n        IFrensLogo frensLogo = IFrensLogo(frensStorage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"FrensLogo\\\"))));\\n        string memory depositString = frensMetaHelper.getDepositStringForId(id);\\n        string memory pool = frensMetaHelper.getPoolString(id);\\n        bytes memory permanentMarker = pmFont.getPmFont();\\n        bytes memory logo = frensLogo.getLogo();\\n        bytes memory wavesGraphic = waves.getWaves();\\n        string memory render = string(\\n            abi.encodePacked(\\n                \\\"<defs>\\\",\\n                '<linearGradient id=\\\"grad1\\\" x1=\\\"0%\\\" y1=\\\"0%\\\" x2=\\\"100%\\\" y2=\\\"100%\\\">',\\n                '<stop offset=\\\"0%\\\" style=\\\"stop-color:#3f19ee;stop-opacity:1\\\" />',\\n                '<stop offset=\\\"100%\\\" style=\\\"stop-color:#54dae0;stop-opacity:1\\\" />',\\n                \\\"</linearGradient>\\\",\\n                permanentMarker,\\n                '<rect height=\\\"400\\\" width=\\\"400\\\" fill=\\\"url(#grad1)\\\" />',\\n                logo,\\n                wavesGraphic,\\n                '<text font-size=\\\"15.5\\\" x=\\\"200\\\" y=\\\"163\\\" text-anchor=\\\"middle\\\" font-family=\\\"Sans,Arial\\\" letter-spacing=\\\"6\\\" fill=\\\"white\\\">',\\n                \\\"DEPOSIT\\\",\\n                \\\"</text>\\\",\\n                '<text font-size=\\\"45\\\" x=\\\"200\\\" y=\\\"212\\\" text-anchor=\\\"middle\\\"  font-weight=\\\"910\\\" font-family=\\\"Sans,Arial\\\" letter-spacing=\\\"-1\\\" fill=\\\"white\\\">',\\n                depositString,\\n                \\\" ETH \\\",\\n                \\\"</text>\\\",\\n                '<text font-size=\\\"18.7\\\" x=\\\"200\\\" y=\\\"243\\\" text-anchor=\\\"middle\\\" font-family=\\\"Permanent Marker\\\" fill=\\\"white\\\">',\\n                \\\"FRENS POOL STAKE\\\",\\n                \\\"</text>\\\",\\n                '<rect x=\\\"27\\\" y=\\\"345\\\" height=\\\"30\\\" width=\\\"346\\\" fill=\\\"#4554EA\\\" opacity=\\\".4\\\" />',\\n                '<text font-size=\\\"10\\\" x=\\\"200\\\" y=\\\"365\\\" text-anchor=\\\"middle\\\" font-weight=\\\"bold\\\" font-family=\\\"Sans,Arial\\\" fill=\\\"white\\\">',\\n                pool,\\n                \\\"</text>\\\"\\n            )\\n        );\\n\\n        return render;\\n    }\\n}\\n\",\"keccak256\":\"0x6fc3ddbcb82a540c6cb5862bfd3b32b758f6f28292ce6553f9b31d5242076e5e\",\"license\":\"MIT\"},\"contracts/interfaces/IFrensLogo.sol\":{\"content\":\"pragma solidity 0.8.20;\\n//SPDX-License-Identifier: MIT\\n\\ninterface IFrensLogo {\\n  function getLogo() external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0x71b64fda21ce2b1daa8f795394c34335837044734eaeaf1e73bd7d3a836365bf\",\"license\":\"MIT\"},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"content\":\"pragma solidity 0.8.20;\\n//SPDX-License-Identifier: MIT\\n\\ninterface IFrensMetaHelper {\\n\\n  //function getColor(address a) external pure returns(string memory);\\n\\n  function getEthDecimalString(uint amountInWei) external pure returns(string memory);\\n\\n  // function getOperatorsForPool(address poolAddress) external view returns (uint32[] memory, string memory);\\n\\n  function getPoolString(uint id) external view returns (string memory);\\n\\n  function getEns(address addr) external view returns(bool, string memory);\\n\\n  function getDepositStringForId(uint id) external view returns(string memory);\\n}\\n\",\"keccak256\":\"0xc08609d3c44bdaf6d77150129ed72337dfaee1a560e305bd2f435bb8ac0d1f46\",\"license\":\"MIT\"},\"contracts/interfaces/IFrensStorage.sol\":{\"content\":\"pragma solidity 0.8.20;\\n\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\n//modified from IRocketStorage on 03/12/2022 by 0xWildhare\\n\\ninterface IFrensStorage {\\n\\n   \\n    // Guardian\\n    function getGuardian() external view returns(address);\\n    function setGuardian(address _newAddress) external;\\n    function confirmGuardian() external;\\n    function burnKeys() external;\\n\\n    // Getters\\n    function getAddress(bytes32 _key) external view returns (address);\\n    function getUint(bytes32 _key) external view returns (uint);\\n    function getBool(bytes32 _key) external view returns (bool);   \\n\\n    // Setters\\n    function setAddress(bytes32 _key, address _value) external;\\n    function setUint(bytes32 _key, uint _value) external;\\n    function setBool(bytes32 _key, bool _value) external;    \\n\\n    // Deleters\\n    function deleteAddress(bytes32 _key) external;\\n    function deleteUint(bytes32 _key) external;\\n    function deleteBool(bytes32 _key) external;    \\n\\n    // Arithmetic \\n    function addUint(bytes32 _key, uint256 _amount) external;\\n    function subUint(bytes32 _key, uint256 _amount) external;\\n    \\n}\\n\",\"keccak256\":\"0xfd293708621d8eb26c25db108d90583d36ab7f4a7f1f71a75e0b6f54c9a0a451\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/IPmFont.sol\":{\"content\":\"pragma solidity 0.8.20;\\n//SPDX-License-Identifier: MIT\\n\\ninterface IPmFont {\\n  function getPmFont() external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0x505d6001f751cbbe1261b1a87160d99c438ff76d198f316b5fc8a9066f629e24\",\"license\":\"MIT\"},\"contracts/interfaces/IWaves.sol\":{\"content\":\"pragma solidity 0.8.20;\\n//SPDX-License-Identifier: MIT\\n\\ninterface IWaves {\\n  function getWaves() external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0x5a318f5ff6701f3371425a37f40db5dfc5a960a197602bb561ca084b305d12b5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60803461007357601f610ac338819003918201601f19168301916001600160401b038311848410176100775780849260209460405283398101031261007357516001600160a01b03811690819003610073575f80546001600160a01b031916919091179055604051610a37908161008c8239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080604081815260049182361015610015575f80fd5b5f803560e01c63a2d6c6da14610029575f80fd5b346108fc57602093846003193601126108f85781546f636f6e74726163742e6164647265737360801b8685018181526e233932b739a6b2ba30a432b63832b960891b6030870152601f86526001600160a01b039584359493871693919061008f81610920565b519020928751936321f8a72160e01b90818652838601526024948a818781865afa9081156108895790899189916108db575b50169589518b81019086825265141b519bdb9d60d21b6030820152601681526100e981610920565b519020918a5192818452858401528b838881875afa9283156108505789936108bc575b508a518c81019087825264576176657360d81b60308201526015815261013181610920565b519020958b5196828852868801528c878981885afa9687156108b2578d929189918c99610893575b508d51848101918252684672656e734c6f676f60b81b60308201526019815261018181610920565b519020918d5196879384928352898301525afa92831561088957889361085a575b50895163ef21184f60e01b815284810182905295888782818b5afa96871561085057908992918398610834575b508b51809981936324a8b96b60e21b8352888301525afa9586156107ea5788959493929188918298610818575b50838b51809b81936378bf42b960e11b8352165afa9788156107ea5787986107f4575b509086859392828b51809881936305b3806b60e11b8352165afa9485156107ea579087929183966107ce575b5089516354ea17bf60e11b81529384928391165afa9485156107c35792887f3c7465787420666f6e742d73697a653d2231352e352220783d223230302220799796936107699693866103829796610793575b50506401022aa24160dd1b908a51998a968488019a651e3232b3399f60d11b8c527f3c6c696e6561724772616469656e742069643d226772616431222078313d223060268a01527f25222079313d223025222078323d2231303025222079323d2231303025223e0060468a01527f3c73746f70206f66667365743d22302522207374796c653d2273746f702d636f60658a01527f6c6f723a233366313965653b73746f702d6f7061636974793a3122202f3e000060858a01527f3c73746f70206f66667365743d223130302522207374796c653d2273746f702d60a38a01527f636f6c6f723a233534646165303b73746f702d6f7061636974793a3122202f3e60c38a0152701e17b634b732b0b923b930b234b2b73a1f60791b60e38a01526103cf815180928860f48d0191016108ff565b88017f3c72656374206865696768743d22343030222077696474683d2234303022206660f48201527334b6361e913ab9361411b3b930b218949110179f60611b61011482015286519061042b8261012899898b850191016108ff565b0161043e82518093888a850191016108ff565b01948501527f3d223136332220746578742d616e63686f723d226d6964646c652220666f6e746101488501527f2d66616d696c793d2253616e732c417269616c22206c65747465722d737061636101688501527434b7339e911b11103334b6361e913bb434ba32911f60591b6101888501526611115413d4d25560ca1b61019d850152661e17ba32bc3a1f60c91b93846101a48201527f3c7465787420666f6e742d73697a653d2234352220783d223230302220793d226101ab8201527f3231322220746578742d616e63686f723d226d6964646c65222020666f6e742d6101cb8201527f7765696768743d223931302220666f6e742d66616d696c793d2253616e732c416101eb8201527f7269616c22206c65747465722d73706163696e673d222d31222066696c6c3d2261020b820152663bb434ba32911f60c91b61022b820152610596825180936102329687850191016108ff565b0191820152816102378201527f3c7465787420666f6e742d73697a653d2231382e372220783d2232303022207961023e8201527f3d223234332220746578742d616e63686f723d226d6964646c652220666f6e7461025e8201527f2d66616d696c793d225065726d616e656e74204d61726b6572222066696c6c3d61027e82015267113bb434ba32911f60c11b61029e8201526f4652454e5320504f4f4c205354414b4560801b6102a6820152816102b68201527f3c7265637420783d2232372220793d2233343522206865696768743d223330226102bd8201527f2077696474683d22333436222066696c6c3d222334353534454122206f7061636102dd8201526a34ba3c9e91171a1110179f60a91b6102fd8201527f3c7465787420666f6e742d73697a653d2231302220783d223230302220793d226103088201527f3336352220746578742d616e63686f723d226d6964646c652220666f6e742d776103288201527f65696768743d22626f6c642220666f6e742d66616d696c793d2253616e732c41610348820152723934b0b611103334b6361e913bb434ba32911f60691b6103688201528251906107558261037b958d87850191016108ff565b019182015203610362810185520183610950565b61078583519485938185525192838092860152858501906108ff565b601f01601f19168101030190f35b6401022aa24160dd1b929650906107bb913d8091833e6107b38183610950565b810190610995565b94905f61029d565b8751903d90823e3d90fd5b6107e39196503d8085833e6107b38183610950565b945f61024b565b89513d89823e3d90fd5b85939291985061080e88913d8084833e6107b38183610950565b989192935061021f565b61082d9198503d8084833e6107b38183610950565b965f6101fc565b6108499198503d8085833e6107b38183610950565b965f6101cf565b8b513d8b823e3d90fd5b61087b9193508b3d8d11610882575b6108738183610950565b810190610972565b915f6101a2565b503d610869565b8a513d8a823e3d90fd5b6108ab919950843d8611610882576108738183610950565b975f610159565b8c513d8c823e3d90fd5b6108d49193508c8d3d10610882576108738183610950565b915f61010c565b6108f291508c8d3d10610882576108738183610950565b5f6100c1565b5080fd5b80fd5b5f5b8381106109105750505f910152565b8181015183820152602001610901565b6040810190811067ffffffffffffffff82111761093c57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761093c57604052565b9081602091031261099157516001600160a01b03811681036109915790565b5f80fd5b60208183031261099157805167ffffffffffffffff9182821161099157019082601f8301121561099157815190811161093c57604051926109e0601f8301601f191660200185610950565b81845260208284010111610991576109fe91602080850191016108ff565b9056fea264697066735822122059b480fdd34c2a6e5afb2abb71c14e9fc12c74861b142152f96c4e2d4238aad764736f6c63430008140033",
  "deployedBytecode": "0x6080604081815260049182361015610015575f80fd5b5f803560e01c63a2d6c6da14610029575f80fd5b346108fc57602093846003193601126108f85781546f636f6e74726163742e6164647265737360801b8685018181526e233932b739a6b2ba30a432b63832b960891b6030870152601f86526001600160a01b039584359493871693919061008f81610920565b519020928751936321f8a72160e01b90818652838601526024948a818781865afa9081156108895790899189916108db575b50169589518b81019086825265141b519bdb9d60d21b6030820152601681526100e981610920565b519020918a5192818452858401528b838881875afa9283156108505789936108bc575b508a518c81019087825264576176657360d81b60308201526015815261013181610920565b519020958b5196828852868801528c878981885afa9687156108b2578d929189918c99610893575b508d51848101918252684672656e734c6f676f60b81b60308201526019815261018181610920565b519020918d5196879384928352898301525afa92831561088957889361085a575b50895163ef21184f60e01b815284810182905295888782818b5afa96871561085057908992918398610834575b508b51809981936324a8b96b60e21b8352888301525afa9586156107ea5788959493929188918298610818575b50838b51809b81936378bf42b960e11b8352165afa9788156107ea5787986107f4575b509086859392828b51809881936305b3806b60e11b8352165afa9485156107ea579087929183966107ce575b5089516354ea17bf60e11b81529384928391165afa9485156107c35792887f3c7465787420666f6e742d73697a653d2231352e352220783d223230302220799796936107699693866103829796610793575b50506401022aa24160dd1b908a51998a968488019a651e3232b3399f60d11b8c527f3c6c696e6561724772616469656e742069643d226772616431222078313d223060268a01527f25222079313d223025222078323d2231303025222079323d2231303025223e0060468a01527f3c73746f70206f66667365743d22302522207374796c653d2273746f702d636f60658a01527f6c6f723a233366313965653b73746f702d6f7061636974793a3122202f3e000060858a01527f3c73746f70206f66667365743d223130302522207374796c653d2273746f702d60a38a01527f636f6c6f723a233534646165303b73746f702d6f7061636974793a3122202f3e60c38a0152701e17b634b732b0b923b930b234b2b73a1f60791b60e38a01526103cf815180928860f48d0191016108ff565b88017f3c72656374206865696768743d22343030222077696474683d2234303022206660f48201527334b6361e913ab9361411b3b930b218949110179f60611b61011482015286519061042b8261012899898b850191016108ff565b0161043e82518093888a850191016108ff565b01948501527f3d223136332220746578742d616e63686f723d226d6964646c652220666f6e746101488501527f2d66616d696c793d2253616e732c417269616c22206c65747465722d737061636101688501527434b7339e911b11103334b6361e913bb434ba32911f60591b6101888501526611115413d4d25560ca1b61019d850152661e17ba32bc3a1f60c91b93846101a48201527f3c7465787420666f6e742d73697a653d2234352220783d223230302220793d226101ab8201527f3231322220746578742d616e63686f723d226d6964646c65222020666f6e742d6101cb8201527f7765696768743d223931302220666f6e742d66616d696c793d2253616e732c416101eb8201527f7269616c22206c65747465722d73706163696e673d222d31222066696c6c3d2261020b820152663bb434ba32911f60c91b61022b820152610596825180936102329687850191016108ff565b0191820152816102378201527f3c7465787420666f6e742d73697a653d2231382e372220783d2232303022207961023e8201527f3d223234332220746578742d616e63686f723d226d6964646c652220666f6e7461025e8201527f2d66616d696c793d225065726d616e656e74204d61726b6572222066696c6c3d61027e82015267113bb434ba32911f60c11b61029e8201526f4652454e5320504f4f4c205354414b4560801b6102a6820152816102b68201527f3c7265637420783d2232372220793d2233343522206865696768743d223330226102bd8201527f2077696474683d22333436222066696c6c3d222334353534454122206f7061636102dd8201526a34ba3c9e91171a1110179f60a91b6102fd8201527f3c7465787420666f6e742d73697a653d2231302220783d223230302220793d226103088201527f3336352220746578742d616e63686f723d226d6964646c652220666f6e742d776103288201527f65696768743d22626f6c642220666f6e742d66616d696c793d2253616e732c41610348820152723934b0b611103334b6361e913bb434ba32911f60691b6103688201528251906107558261037b958d87850191016108ff565b019182015203610362810185520183610950565b61078583519485938185525192838092860152858501906108ff565b601f01601f19168101030190f35b6401022aa24160dd1b929650906107bb913d8091833e6107b38183610950565b810190610995565b94905f61029d565b8751903d90823e3d90fd5b6107e39196503d8085833e6107b38183610950565b945f61024b565b89513d89823e3d90fd5b85939291985061080e88913d8084833e6107b38183610950565b989192935061021f565b61082d9198503d8084833e6107b38183610950565b965f6101fc565b6108499198503d8085833e6107b38183610950565b965f6101cf565b8b513d8b823e3d90fd5b61087b9193508b3d8d11610882575b6108738183610950565b810190610972565b915f6101a2565b503d610869565b8a513d8a823e3d90fd5b6108ab919950843d8611610882576108738183610950565b975f610159565b8c513d8c823e3d90fd5b6108d49193508c8d3d10610882576108738183610950565b915f61010c565b6108f291508c8d3d10610882576108738183610950565b5f6100c1565b5080fd5b80fd5b5f5b8381106109105750505f910152565b8181015183820152602001610901565b6040810190811067ffffffffffffffff82111761093c57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761093c57604052565b9081602091031261099157516001600160a01b03811681036109915790565b5f80fd5b60208183031261099157805167ffffffffffffffff9182821161099157019082601f8301121561099157815190811161093c57604051926109e0601f8301601f191660200185610950565b81845260208284010111610991576109fe91602080850191016108ff565b9056fea264697066735822122059b480fdd34c2a6e5afb2abb71c14e9fc12c74861b142152f96c4e2d4238aad764736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3548,
        "contract": "contracts/FrensArt.sol:FrensArt",
        "label": "frensStorage",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IFrensStorage)6708"
      }
    ],
    "types": {
      "t_contract(IFrensStorage)6708": {
        "encoding": "inplace",
        "label": "contract IFrensStorage",
        "numberOfBytes": "20"
      }
    }
  }
}