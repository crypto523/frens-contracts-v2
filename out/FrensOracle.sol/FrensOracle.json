{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IFrensStorage",
          "name": "frensStorage_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "checkValidatorState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "isExiting",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "pubKey",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "_isExiting",
          "type": "bool"
        }
      ],
      "name": "setExiting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60803461007457601f6104f338819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600180546001600160a01b03191691909117905560405161046390816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163809bef62146101d457508063d3b150e6146100ab5763d6e65cb91461004457600080fd5b346100a75760203660031901126100a757803567ffffffffffffffff81116100a3576020809461007c60ff9461008f943691016103be565b908286519483868095519384920161040a565b820190815203019020541690519015158152f35b8380fd5b8280fd5b50346100a757816003193601126100a757803567ffffffffffffffff81116100a3576100da90369083016103be565b602435928315158094036101d05760015481516353adc3e960e11b8152602094916001600160a01b039190869082908590829086165afa9081156101c657889161018c575b501633036101585750908261013f9392519382858094519384920161040a565b8101858152030190209060ff8019835416911617905580f35b83606492519162461bcd60e51b8352820152601060248201526f36bab9ba1031329033bab0b93234b0b760811b6044820152fd5b90508581813d83116101bf575b6101a3818361036a565b810103126101bb575181811681036101bb573861011f565b8780fd5b503d610199565b84513d8a823e3d90fd5b8480fd5b9390503461036757602093846003193601126103635782356001600160a01b03811693908490036100a75763ac2a5dfd60e01b825282828281875afa91821561035957908392918794926102da575b5085519460ff83519686818187019961023d81838d61040a565b8101888152030190205416610268575b50509261008f929160ff94865194859384925192839161040a565b8091929394503b156100a3579083809282885180958193630a645e5560e21b83525af180156102d0579087949392911561024d579091935067ffffffffffffffff82116102bd5750845284918061008f61024d565b634e487b7160e01b835260419052602482fd5b86513d86823e3d90fd5b91509192503d8084833e6102ee818361036a565b81019086818303126100a35780519067ffffffffffffffff82116101d0570181601f820112156100a357805190610324826103a2565b926103318851948561036a565b8284528883830101116101d05782916103529189808098979601910161040a565b9038610223565b85513d85823e3d90fd5b5080fd5b80fd5b90601f8019910116810190811067ffffffffffffffff82111761038c57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161038c57601f01601f191660200190565b81601f82011215610405578035906103d5826103a2565b926103e3604051948561036a565b8284526020838301011161040557816000926020809301838601378301015290565b600080fd5b60005b83811061041d5750506000910152565b818101518382015260200161040d56fea26469706673582212200b8f09f05930d40fcb23ecf6bac65d301171689072a70f98366acd32e639792a64736f6c63430008110033",
    "sourceMap": "416:924:3:-:0;;;;;;;;;;;;;-1:-1:-1;;416:924:3;;;;-1:-1:-1;;;;;416:924:3;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;416:924:3;;;;;;;;;;;-1:-1:-1;;;;;;416:924:3;;;;;;;;;;;;;;;;;-1:-1:-1;416:924:3;;;;;;-1:-1:-1;416:924:3;;;;;-1:-1:-1;416:924:3",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604081815260048036101561001557600080fd5b600092833560e01c908163809bef62146101d457508063d3b150e6146100ab5763d6e65cb91461004457600080fd5b346100a75760203660031901126100a757803567ffffffffffffffff81116100a3576020809461007c60ff9461008f943691016103be565b908286519483868095519384920161040a565b820190815203019020541690519015158152f35b8380fd5b8280fd5b50346100a757816003193601126100a757803567ffffffffffffffff81116100a3576100da90369083016103be565b602435928315158094036101d05760015481516353adc3e960e11b8152602094916001600160a01b039190869082908590829086165afa9081156101c657889161018c575b501633036101585750908261013f9392519382858094519384920161040a565b8101858152030190209060ff8019835416911617905580f35b83606492519162461bcd60e51b8352820152601060248201526f36bab9ba1031329033bab0b93234b0b760811b6044820152fd5b90508581813d83116101bf575b6101a3818361036a565b810103126101bb575181811681036101bb573861011f565b8780fd5b503d610199565b84513d8a823e3d90fd5b8480fd5b9390503461036757602093846003193601126103635782356001600160a01b03811693908490036100a75763ac2a5dfd60e01b825282828281875afa91821561035957908392918794926102da575b5085519460ff83519686818187019961023d81838d61040a565b8101888152030190205416610268575b50509261008f929160ff94865194859384925192839161040a565b8091929394503b156100a3579083809282885180958193630a645e5560e21b83525af180156102d0579087949392911561024d579091935067ffffffffffffffff82116102bd5750845284918061008f61024d565b634e487b7160e01b835260419052602482fd5b86513d86823e3d90fd5b91509192503d8084833e6102ee818361036a565b81019086818303126100a35780519067ffffffffffffffff82116101d0570181601f820112156100a357805190610324826103a2565b926103318851948561036a565b8284528883830101116101d05782916103529189808098979601910161040a565b9038610223565b85513d85823e3d90fd5b5080fd5b80fd5b90601f8019910116810190811067ffffffffffffffff82111761038c57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161038c57601f01601f191660200190565b81601f82011215610405578035906103d5826103a2565b926103e3604051948561036a565b8284526020838301011161040557816000926020809301838601378301015290565b600080fd5b60005b83811061041d5750506000910152565b818101518382015260200161040d56fea26469706673582212200b8f09f05930d40fcb23ecf6bac65d301171689072a70f98366acd32e639792a64736f6c63430008110033",
    "sourceMap": "416:924:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;416:924:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;1240:26:3;;416:924;;;-1:-1:-1;;;;;416:924:3;;;;;;;;;;;;1240:26;;;;;;;;;;;416:924;;;1226:10;:40;416:924;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;416:924:3;;;;;1240:26;;;;;;;;;;;;;;;;:::i;:::-;;;416:924;;;;;;;;;;;;1240:26;;;416:924;;;;1240:26;;;;;;416:924;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;416:924:3;;;;;;;;;-1:-1:-1;;;946:13:3;;;;;;;;;;;;;;;;;;;;;;;416:924;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;969:61;;416:924;;;;;;;;;;;;;;;;;;;;;:::i;969:61::-;1004:15;;;;;;;;;;416:924;;;;;;;;;;;;;;1004:15;;;;;;;;;;;;;;;969:61;1004:15;416:924;;;;;;;;;-1:-1:-1;416:924:3;;;;;;969:61;;416:924;-1:-1:-1;;;416:924:3;;;;;;;;1004:15;416:924;;;;;;;;;946:13;;;;;;;;;;;;;;;:::i;:::-;;;416:924;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;946:13;;;;;416:924;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;416:924:3;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;416:924:3;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;416:924:3;;;;;;;;;;-1:-1:-1;;416:924:3;;;;:::o;:::-;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "checkValidatorState(address)": "809bef62",
    "isExiting(bytes)": "d6e65cb9",
    "setExiting(bytes,bool)": "d3b150e6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFrensStorage\",\"name\":\"frensStorage_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"checkValidatorState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isExiting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_isExiting\",\"type\":\"bool\"}],\"name\":\"setExiting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkValidatorState(address)\":{\"details\":\"called by the staking pool to check if the validator is exiting\"},\"setExiting(bytes,bool)\":{\"details\":\"allows multisig (guardian) to set a pool as exiting. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FrensOracle.sol\":\"FrensOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensOracle.sol\":{\"keccak256\":\"0x30740d6312c426f42cb777e76c7745f18a19b1808dae6330676789657225fabb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4bb947459b959e121ea109081f257da032450cac899bb87ee7181a2befbbea7\",\"dweb:/ipfs/QmUut1Yn1RYkaHsi158cPjGg6ebjhAUYR9fuuimATN6AAo\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensOracle.sol\":{\"keccak256\":\"0xdf2291434faca3e9976a42d2328a4347ced5978b29477e40eb75642185afdf67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f84266eaa6df4162f6a2be8dac55a8fd6ba4865a1dda48f4c1dd27c07c8c4316\",\"dweb:/ipfs/QmWbkZtvjrmJ61ZvnFn81UsLEoqzzah7oDkb66eEoSqJ1y\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x426ac9a703a13d4127b56886421d55a8380292dadfb2693d2e8373316075f220\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e8179a87c1e6fcb4762230888412cfaa2e7ba52d314cee3ffe8a17933f259ccf\",\"dweb:/ipfs/QmacSF3u61KjNyK982VwKAA1G86cLZBhYvpPJhdprTg2Rd\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x8448797e921559460625e4be65815d7ba0318aae1ecfdc3ea1d701008a391d13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90b383ecf3f89ca5f35182f64c053367f6e0bcb4463df42377d4eb023e43113f\",\"dweb:/ipfs/QmVoXzc1FQaGvfDLZZsMwfzUv1Kc9Y7Ds9QqTGhG1gvDMk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IFrensStorage",
              "name": "frensStorage_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkValidatorState",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExiting",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "_isExiting",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setExiting"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkValidatorState(address)": {
            "details": "called by the staking pool to check if the validator is exiting"
          },
          "setExiting(bytes,bool)": {
            "details": "allows multisig (guardian) to set a pool as exiting. "
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/FrensOracle.sol": "FrensOracle"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensOracle.sol": {
        "keccak256": "0x30740d6312c426f42cb777e76c7745f18a19b1808dae6330676789657225fabb",
        "urls": [
          "bzz-raw://e4bb947459b959e121ea109081f257da032450cac899bb87ee7181a2befbbea7",
          "dweb:/ipfs/QmUut1Yn1RYkaHsi158cPjGg6ebjhAUYR9fuuimATN6AAo"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensOracle.sol": {
        "keccak256": "0xdf2291434faca3e9976a42d2328a4347ced5978b29477e40eb75642185afdf67",
        "urls": [
          "bzz-raw://f84266eaa6df4162f6a2be8dac55a8fd6ba4865a1dda48f4c1dd27c07c8c4316",
          "dweb:/ipfs/QmWbkZtvjrmJ61ZvnFn81UsLEoqzzah7oDkb66eEoSqJ1y"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x426ac9a703a13d4127b56886421d55a8380292dadfb2693d2e8373316075f220",
        "urls": [
          "bzz-raw://e8179a87c1e6fcb4762230888412cfaa2e7ba52d314cee3ffe8a17933f259ccf",
          "dweb:/ipfs/QmacSF3u61KjNyK982VwKAA1G86cLZBhYvpPJhdprTg2Rd"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x8448797e921559460625e4be65815d7ba0318aae1ecfdc3ea1d701008a391d13",
        "urls": [
          "bzz-raw://90b383ecf3f89ca5f35182f64c053367f6e0bcb4463df42377d4eb023e43113f",
          "dweb:/ipfs/QmVoXzc1FQaGvfDLZZsMwfzUv1Kc9Y7Ds9QqTGhG1gvDMk"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/FrensOracle.sol",
    "id": 673,
    "exportedSymbols": {
      "FrensOracle": [
        672
      ],
      "IFrensArt": [
        3066
      ],
      "IFrensOracle": [
        3124
      ],
      "IFrensStorage": [
        3275
      ],
      "IStakingPool": [
        3421
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1340:3",
    "nodes": [
      {
        "id": 587,
        "nodeType": "PragmaDirective",
        "src": "0:31:3",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 588,
        "nodeType": "ImportDirective",
        "src": "294:39:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPool.sol",
        "file": "./interfaces/IStakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 673,
        "sourceUnit": 3422,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 589,
        "nodeType": "ImportDirective",
        "src": "334:39:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensOracle.sol",
        "file": "./interfaces/IFrensOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 673,
        "sourceUnit": 3125,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 590,
        "nodeType": "ImportDirective",
        "src": "374:40:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensStorage.sol",
        "file": "./interfaces/IFrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 673,
        "sourceUnit": 3276,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 672,
        "nodeType": "ContractDefinition",
        "src": "416:924:3",
        "nodes": [
          {
            "id": 596,
            "nodeType": "VariableDeclaration",
            "src": "539:39:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "d6e65cb9",
            "mutability": "mutable",
            "name": "isExiting",
            "nameLocation": "569:9:3",
            "scope": 672,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
              "typeString": "mapping(bytes => bool)"
            },
            "typeName": {
              "id": 595,
              "keyType": {
                "id": 593,
                "name": "bytes",
                "nodeType": "ElementaryTypeName",
                "src": "547:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                }
              },
              "nodeType": "Mapping",
              "src": "539:22:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
                "typeString": "mapping(bytes => bool)"
              },
              "valueType": {
                "id": 594,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "556:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 599,
            "nodeType": "VariableDeclaration",
            "src": "585:26:3",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "599:12:3",
            "scope": 672,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFrensStorage_$3275",
              "typeString": "contract IFrensStorage"
            },
            "typeName": {
              "id": 598,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 597,
                "name": "IFrensStorage",
                "nameLocations": [
                  "585:13:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3275,
                "src": "585:13:3"
              },
              "referencedDeclaration": 3275,
              "src": "585:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFrensStorage_$3275",
                "typeString": "contract IFrensStorage"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 610,
            "nodeType": "FunctionDefinition",
            "src": "618:86:3",
            "nodes": [],
            "body": {
              "id": 609,
              "nodeType": "Block",
              "src": "659:45:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 605,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "669:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensStorage_$3275",
                        "typeString": "contract IFrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 606,
                      "name": "frensStorage_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "684:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensStorage_$3275",
                        "typeString": "contract IFrensStorage"
                      }
                    },
                    "src": "669:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$3275",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "id": 608,
                  "nodeType": "ExpressionStatement",
                  "src": "669:28:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "frensStorage_",
                  "nameLocation": "644:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "630:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFrensStorage_$3275",
                    "typeString": "contract IFrensStorage"
                  },
                  "typeName": {
                    "id": 601,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 600,
                      "name": "IFrensStorage",
                      "nameLocations": [
                        "630:13:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3275,
                      "src": "630:13:3"
                    },
                    "referencedDeclaration": 3275,
                    "src": "630:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$3275",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "629:29:3"
            },
            "returnParameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:0:3"
            },
            "scope": 672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 646,
            "nodeType": "FunctionDefinition",
            "src": "786:284:3",
            "nodes": [],
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "859:211:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 620,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "882:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "869:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPool_$3421",
                        "typeString": "contract IStakingPool"
                      },
                      "typeName": {
                        "id": 619,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 618,
                          "name": "IStakingPool",
                          "nameLocations": [
                            "869:12:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3421,
                          "src": "869:12:3"
                        },
                        "referencedDeclaration": 3421,
                        "src": "869:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3421",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 624,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 622,
                        "name": "poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "902:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 621,
                      "name": "IStakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3421,
                      "src": "889:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStakingPool_$3421_$",
                        "typeString": "type(contract IStakingPool)"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPool_$3421",
                      "typeString": "contract IStakingPool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "869:45:3"
                },
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "pubKey",
                      "nameLocation": "937:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "924:19:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 625,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "924:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 630,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 627,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "946:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3421",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "id": 628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "951:6:3",
                      "memberName": "pubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3301,
                      "src": "946:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view external returns (bytes memory)"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "946:13:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "924:35:3"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 631,
                      "name": "isExiting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "972:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
                        "typeString": "mapping(bytes memory => bool)"
                      }
                    },
                    "id": 633,
                    "indexExpression": {
                      "id": 632,
                      "name": "pubKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "982:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "972:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 640,
                  "nodeType": "IfStatement",
                  "src": "969:61:3",
                  "trueBody": {
                    "id": 639,
                    "nodeType": "Block",
                    "src": "990:40:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 634,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 620,
                              "src": "1004:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStakingPool_$3421",
                                "typeString": "contract IStakingPool"
                              }
                            },
                            "id": 636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1009:8:3",
                            "memberName": "exitPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3420,
                            "src": "1004:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1004:15:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 638,
                        "nodeType": "ExpressionStatement",
                        "src": "1004:15:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 641,
                      "name": "isExiting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "1046:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
                        "typeString": "mapping(bytes memory => bool)"
                      }
                    },
                    "id": 643,
                    "indexExpression": {
                      "id": 642,
                      "name": "pubKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "1056:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1046:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 617,
                  "id": 644,
                  "nodeType": "Return",
                  "src": "1039:24:3"
                }
              ]
            },
            "baseFunctions": [
              3116
            ],
            "documentation": {
              "id": 611,
              "nodeType": "StructuredDocumentation",
              "src": "710:71:3",
              "text": "@dev called by the staking pool to check if the validator is exiting"
            },
            "functionSelector": "809bef62",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkValidatorState",
            "nameLocation": "795:19:3",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "823:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "815:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "814:21:3"
            },
            "returnParameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "853:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "852:6:3"
            },
            "scope": 672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 671,
            "nodeType": "FunctionDefinition",
            "src": "1141:192:3",
            "nodes": [],
            "body": {
              "id": 670,
              "nodeType": "Block",
              "src": "1208:125:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 655,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1226:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1230:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1226:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 657,
                              "name": "frensStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 599,
                              "src": "1240:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFrensStorage_$3275",
                                "typeString": "contract IFrensStorage"
                              }
                            },
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1253:11:3",
                            "memberName": "getGuardian",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3192,
                            "src": "1240:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1240:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1226:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d75737420626520677561726469616e",
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1268:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06c186a7f228984c160e264b8e18583eb31f00eea2d76d4e90ba0553b56e30a",
                          "typeString": "literal_string \"must be guardian\""
                        },
                        "value": "must be guardian"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06c186a7f228984c160e264b8e18583eb31f00eea2d76d4e90ba0553b56e30a",
                          "typeString": "literal_string \"must be guardian\""
                        }
                      ],
                      "id": 654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1218:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1218:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:69:3"
                },
                {
                  "expression": {
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 664,
                        "name": "isExiting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "1297:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(bytes memory => bool)"
                        }
                      },
                      "id": 666,
                      "indexExpression": {
                        "id": 665,
                        "name": "pubKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "1307:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1297:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 667,
                      "name": "_isExiting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "1317:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1297:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:30:3"
                }
              ]
            },
            "baseFunctions": [
              3123
            ],
            "documentation": {
              "id": 647,
              "nodeType": "StructuredDocumentation",
              "src": "1076:61:3",
              "text": "@dev allows multisig (guardian) to set a pool as exiting. "
            },
            "functionSelector": "d3b150e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setExiting",
            "nameLocation": "1150:10:3",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "pubKey",
                  "nameLocation": "1174:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "1161:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "_isExiting",
                  "nameLocation": "1187:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "1182:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:38:3"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1208:0:3"
            },
            "scope": 672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 591,
              "name": "IFrensOracle",
              "nameLocations": [
                "440:12:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3124,
              "src": "440:12:3"
            },
            "id": 592,
            "nodeType": "InheritanceSpecifier",
            "src": "440:12:3"
          }
        ],
        "canonicalName": "FrensOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          672,
          3124
        ],
        "name": "FrensOracle",
        "nameLocation": "425:11:3",
        "scope": 673,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 3
}