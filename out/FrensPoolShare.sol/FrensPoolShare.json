{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IFrensStorage",
          "name": "frensStorage_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getPoolById",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolByIds",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "renderTokenById",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60803462000404576200282590813803601f1991601f91838382011682019460018060401b039183871083881117620003ee57808492604098895283396020938491810103126200040457516001600160a01b0380821692909183900362000404576200006b62000409565b94600b86526a4652454e5320536861726560a81b858701526200008d62000409565b60058152644652454e5360d81b86820152865197838911620003ee576000988954986001998a81811c91168015620003e3575b8a821014620003cf579081868493116200037c575b5089908683116001146200031b578c926200030f575b5050600019600383901b1c191690891b1789555b8151938411620002fb5787548881811c91168015620002f0575b88821014620002dc57908184869594931162000285575b5087928411600114620002245750889262000218575b5050600019600383901b1c191690851b1784555b600b80546001600160a01b03198082163390811790935592167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a3600c541617600c55828052600a8152838320338452815260ff848420541615620001cb575b83516123fb90816200042a8239f35b828052600a815283832090338452528282209060ff19825416179055339033907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4388080620001bc565b01519050388062000146565b888a52878a20899590939291168a5b898282106200026e575050841162000254575b505050811b0184556200015a565b015160001960f88460031b161c1916905538808062000246565b8385015186558b9790950194938401930162000233565b9091929350888a52878a208480870160051c8201928a8810620002d2575b9187968c92969594930160051c01915b828110620002c357505062000130565b8c81558796508b9101620002b3565b92508192620002a3565b634e487b7160e01b8a52602260045260248afd5b90607f169062000119565b634e487b7160e01b89526041600452602489fd5b015190503880620000eb565b908c91858d95168380528c8420935b8d8282106200036557505084116200034b575b505050811b018955620000ff565b015160001960f88460031b161c191690553880806200033d565b8385015186558f979095019493840193016200032a565b9091508b8052898c208680850160051c8201928c8610620003c5575b918d91869594930160051c01915b828110620003b6575050620000d5565b8e81558594508d9101620003a6565b9250819262000398565b634e487b7160e01b8c52602260045260248cfd5b90607f1690620000c0565b634e487b7160e01b600052604160045260246000fd5b600080fd5b60408051919082016001600160401b03811183821017620003ee5760405256fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146114bb5750806306fdde03146113f0578063081812fc146113d0578063095ea7b3146112635780630bc59b381461121257806318160ddd146112445780631dc82a751461121257806323b872dd146111ed578063248a9ca3146111c35780632f2ff15d146111175780632f745c591461106b57806336568abe14610fd957806342842e0e14610fa557806342966c6814610c605780634f558e7914610c215780634f6ccce714610b8e5780636352211e14610b5d5780636a6278421461091357806370a08231146108e6578063715018a6146108895780638da5cb5b1461086057806391d148541461081a57806395d89b4114610704578063a217fddf146106e9578063a22cb4651461061a578063a2d6c6da14610553578063b88d4fde146104a0578063c87b56dd14610317578063d5391393146102dc578063d547741f1461029e578063e985e9c51461024c5763f2fde38b1461018357600080fd5b346102485760203660031901126102485761019c6115a3565b906101a5611b84565b6001600160a01b039182169283156101f6575050600b54826001600160601b0360a01b821617600b55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461029a578060031936011261029a5760ff8160209361026c6115a3565b6102746115be565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b5090346102485780600319360112610248576102d991356102d460016102c26115be565b93838752600a602052862001546117d8565b611b0e565b80f35b50503461029a578160031936011261029a57602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b509034610248576020918260031936011261049c57600c5482516f636f6e74726163742e6164647265737360801b858201908152754672656e73506f6f6c5368617265546f6b656e55524960501b6030830152602682526001600160a01b0393919260608401919085169067ffffffffffffffff831185841017610489578260248180948b948d9998978c52885190206321f8a72160e01b835260648901525afa92831561047f5787908594610444575b5050506024908551948593849263c87b56dd60e01b8452803590840152165afa93841561043957809461040f575b505061040b905192828493845283019061157e565b0390f35b61040b92945090610431913d8091833e610429818361163b565b810190611776565b9290386103f6565b8251903d90823e3d90fd5b9080929394503d8311610478575b61045c818561163b565b81010312610248575183811681036102485790602486386103c8565b503d610452565b86513d86823e3d90fd5b634e487b7160e01b895260418452602489fd5b8380fd5b509034610248576080366003190112610248576104bb6115a3565b906104c46115be565b604435906064359467ffffffffffffffff861161054f573660238701121561054f57850135936104ff6104f68661165d565b9451948561163b565b84845286366024878901011161054c576020866105479760246102d99a0183890137860101526105376105328433611d97565b611cc2565b610542838383611eab565b6122e0565b611d77565b80fd5b8680fd5b509034610248576020918260031936011261049c57838135808252600d85528260018060a01b0386818786205416875196878092638ae578fd60e01b82525afa94851561047f5784956105df575b50906024918651958694859363516b636d60e11b8552840152165afa93841561043957809461040f57505061040b905192828493845283019061157e565b9094508681813d8311610613575b6105f7818361163b565b8101031261049c575190848216820361049c57909360246105a1565b503d6105ed565b5090346102485780600319360112610248576106346115a3565b90602435918215158093036106e5576001600160a01b0316923384146106a35750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b50503461029a578160031936011261029a5751908152602090f35b50913461054c578060031936011261054c578151918160019283549384811c91818616958615610810575b60209687851081146107fd578899509688969785829a5291826000146107d657505060011461077b575b50505061040b929161076c91038561163b565b5192828493845283019061157e565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106107be575050508201018161076c61040b610759565b8054848a0186015288955087949093019281016107a5565b60ff19168782015293151560051b8601909301935084925061076c915061040b9050610759565b634e487b7160e01b835260228a52602483fd5b92607f169261072f565b50346102485781600319360112610248578160209360ff9261083a6115be565b90358252600a86528282206001600160a01b039091168252855220549151911615158152f35b50503461029a578160031936011261029a57600b5490516001600160a01b039091168152602090f35b833461054c578060031936011261054c576108a2611b84565b600b80546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461029a57602036600319011261029a5760209061090c6109076115a3565b611bdc565b9051908152f35b5082903461029a5760209081600319360112610248576109316115a3565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68452600a8352848420338552835260ff858520541615610b1b5760085491828552600d84528585206001600160601b0360a01b90338282541617905586519461099a86611609565b8686526001600160a01b038416928315610adb576000868152600260205260409020546109d3906001600160a01b031615155b15611e05565b6008549086895260098352818a8a2055600160401b821015610ac8575091836102d99899600288979694610a2f89610a168960016105479f9e9b01600855612367565b90919082549060031b91821b91600019901b1916179055565b8c83610a3a8a611bdc565b8683526006845281832081845284528183208a905589835260078452912055600d8152600087815260026020526040902054610a80906001600160a01b031615156109cd565b838d5260038152828d2060018154019055868d52528a2091825416179055877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46121c6565b634e487b7160e01b895260419052602488fd5b816064928a519262461bcd60e51b845283015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b5060649184519162461bcd60e51b8352820152601b60248201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044820152fd5b50913461054c57602036600319011261054c5750610b7d60209235611c9f565b90516001600160a01b039091168152f35b50823461054c57602036600319011261054c5750803590600854821015610bc957602083610bbb84612367565b91905490519160031b1c8152f35b608490602084519162461bcd60e51b8352820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152fd5b50913461054c57602036600319011261054c5750610c5760209235600052600260205260018060a01b0360406000205416151590565b90519015158152f35b5082903461029a5760209283600319360112610248578135808452600d85528184205490926001600160a01b0392909183163303610f5757610ca184611c9f565b838116801597918815610ed6575050600854858752600982528083882055600160401b811015610ec35785610a16826001610cdf9401600855612367565b6008546000199490858101908111610eb05786885260098352610d058489205491612367565b90549060031b1c610d1981610a1684612367565b885260098352838820558587528683812055600854978815610e9d5785889998979801610d4581612367565b8882549160031b1b19169055600855878752600d8352818488205416901580610e96575b610ddd575b5090600291610d7c88611c9f565b948888528252838720946001600160601b0360a01b958681541690551694858752600382528387209081540190558686525283209081541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a480f35b8394959650916024919281945192838092635a2d1e0760e11b82528b8a8301525afa908115610e8c578891610e53575b50610e1e5790869493929188610d6e565b50905162461bcd60e51b815291820152601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508281813d8311610e85575b610e6a818361163b565b81010312610e8157610e7b90611679565b88610e0d565b8780fd5b503d610e60565b84513d8a823e3d90fd5b5086610d69565b634e487b7160e01b885260318552602488fd5b634e487b7160e01b885260118552602488fd5b634e487b7160e01b875260418452602487fd5b610edf90611bdc565b600019810191908211610eb0578688526007835283882054828103610f20575b50868852878481205587526006825282872090875281528582812055610cdf565b81895260068452848920838a52845284892054828a5260068552858a20828b52855280868b20558952600784528489205589610eff565b5162461bcd60e51b8152908101859052602360248201527f63616e6e6f74206275726e207368617265732066726f6d206f7468657220706f6044820152626f6c7360e81b6064820152608490fd5b50503461029a576105476102d991610fbc366115d4565b91925192610fc984611609565b8684526105376105328433611d97565b5082903461029a578260031936011261029a57610ff46115be565b90336001600160a01b0383160361101057906102d99135611b0e565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b50913461054c578160031936011261054c576110856115a3565b6024359061109281611bdc565b8210156110c0576001600160a01b031682526006602090815283832091835290815290829020548251908152f35b835162461bcd60e51b8152602081870152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b503461024857816003193601126102485735906111326115be565b90828452600a60205261114a600182862001546117d8565b828452600a60209081528185206001600160a01b039093168086529290528084205460ff1615611178578380f35b828452600a6020528084208285526020528320600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a43880808380f35b50346102485760203660031901126102485781602093600192358152600a85522001549051908152f35b833461054c576102d96111ff366115d4565b9161120d6105328433611d97565b611eab565b503461024857602036600319011261024857358252600d6020908152918190205490516001600160a01b039091168152f35b50503461029a578160031936011261029a576020906008549051908152f35b503461024857816003193601126102485761127c6115a3565b6024359290916001600160a01b039190828061129787611c9f565b1694169380851461138357803314908115611364575b50156112fc57848652602052842080546001600160a01b031916831790556112d483611c9f565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff8287205416386112ad565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b50913461054c57602036600319011261054c5750610b7d60209235611686565b50913461054c578060031936011261054c5781519181825492600184811c918186169586156114b1575b60209687851081146107fd578899509688969785829a5291826000146107d65750506001146114565750505061040b929161076c91038561163b565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410611499575050508201018161076c61040b610759565b8054848a018601528895508794909301928101611480565b92607f169261141a565b92505034610248576020366003190112610248573563ffffffff60e01b81168091036102485760209250637965db0b60e01b81149081156114fe575b5015158152f35b63780e9d6360e01b811491508115611518575b50386114f7565b6380ac58cd60e01b81149150811561154a575b8115611539575b5038611511565b6301ffc9a760e01b14905038611532565b635b5e139f60e01b8114915061152b565b60005b83811061156e5750506000910152565b818101518382015260200161155e565b906020916115978151809281855285808601910161155b565b601f01601f1916010190565b600435906001600160a01b03821682036115b957565b600080fd5b602435906001600160a01b03821682036115b957565b60609060031901126115b9576001600160a01b039060043582811681036115b9579160243590811681036115b9579060443590565b6020810190811067ffffffffffffffff82111761162557604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761162557604052565b67ffffffffffffffff811161162557601f01601f191660200190565b519081151582036115b957565b6000818152600260205260409020546116a9906001600160a01b03161515611c53565b6000818152600d60205260018060a01b03908160408220541692604051637e01dd6960e11b8152816004820152606081602481885afa90811561176b57839161172f575b50156116f95750505090565b600081815260026020526040908190205493945092611722906001600160a01b03161515611c53565b8152600460205220541690565b90506060813d8211611763575b816117496060938361163b565b8101031261024857604061175d9101611679565b386116ed565b3d915061173c565b6040513d85823e3d90fd5b6020818303126115b95780519067ffffffffffffffff82116115b9570181601f820112156115b95780516117a98161165d565b926117b7604051948561163b565b818452602082840101116115b9576117d5916020808501910161155b565b90565b600090808252602090600a8252604092838120338252835260ff8482205416156118025750505050565b83519167ffffffffffffffff90336060850183811186821017611afa578752602a85528585019187368437855115611ae65760308353855191600192831015611ad2576078602188015360295b838111611a685750611a265790875193608085019085821090821117611a12578852604284528684019460603687378451156119fe576030865384518210156119fe5790607860218601536041915b8183116119905750505061194e5761194a93869361192e9361191f6048946118f69a519a8b957f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008c880152518092603788019061155b565b8401917001034b99036b4b9b9b4b733903937b6329607d1b60378401525180938684019061155b565b0103602881018752018561163b565b5192839262461bcd60e51b84526004840152602483019061157e565b0390fd5b60648587519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f811660108110156119ea576f181899199a1a9b1b9c1cb0b131b232b360811b901a6119c085886123b4565b5360041c9280156119d65760001901919061189e565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b86526041600452602486fd5b60648789519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b90600f81166010811015611abe576f181899199a1a9b1b9c1cb0b131b232b360811b901a611a96838a6123b4565b5360041c908015611aaa576000190161184f565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b90600091808352600a602052604083209160018060a01b03169182845260205260ff604084205416611b3f57505050565b808352600a602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b600b546001600160a01b03163303611b9857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b03168015611bfc57600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b15611c5a57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152600260205260409020546001600160a01b03166117d5811515611c53565b15611cc957565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15611d7e57565b60405162461bcd60e51b81528061194a60048201611d24565b906001600160a01b038080611dab84611c9f565b16931691838314938415611dde575b508315611dc8575b50505090565b611dd491929350611686565b1614388080611dc2565b909350600052600560205260406000208260005260205260ff604060002054169238611dba565b15611e0c57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b15611e5857565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b611ecf91611eb884611c9f565b6001600160a01b0393848416939185168414611e51565b8382169384156121755783801592836000146120c25750506008549286600052600960205283604060002055600160401b84101561162557611f1c87610a16866001899801600855612367565b83860361208f575b5084600092878452602092600d8452604091818387205416901580612087575b611fcf575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95611f8091611f798b611c9f565b1614611e51565b878452600483526002818520936001600160601b0360a01b94858154169055878652600381528286206000198154019055838652828620600181540190558986525283209182541617905580a4565b8495965082602493959294505192838092635a2d1e0760e11b82528c60048301525afa90811561207d578591612048575b506120115784939291869138611f49565b815162461bcd60e51b815260048101849052601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508381813d8311612076575b61205f818361163b565b810103126106e55761207090611679565b38612000565b503d612055565b83513d87823e3d90fd5b506001611f44565b61209890611bdc565b60406000878152600660205281812083825260205288828220558881526007602052205538611f24565b86829592036120d2575b50611f1c565b6120dd919450611bdc565b60001981019390841161215f5784936000908882526020906007825260409182842054828103612128575b508a845283838120558784526006815282842091845252812055386120cc565b8885526006825283852083865282528385205489865260068352848620828752835280858720558552600782528385205538612108565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b91929091803b156122d757612213936040519081630a85bd0160e11b9384825233600483015260009687602484015260448301526080606483015281878160209a8b96608483019061157e565b03926001600160a01b03165af1849181612297575b50612286575050503d60001461227e573d6122428161165d565b90612250604051928361163b565b81528091833d92013e5b8051918261227b5760405162461bcd60e51b81528061194a60048201611d24565b01fd5b50606061225a565b6001600160e01b0319161492509050565b9091508581813d83116122d0575b6122af818361163b565b810103126106e557516001600160e01b0319811681036106e5579038612228565b503d6122a5565b50915050600190565b92939190803b1561235d57612332946040518092630a85bd0160e11b9485835233600484015260018060a01b03809816602484015260448301526080606483015281806020998a95608483019061157e565b03916000988991165af18491816122975750612286575050503d60001461227e573d6122428161165d565b5050915050600190565b60085481101561239e5760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b90815181101561239e57016020019056fea264697066735822122070139beba341a4bd449d54e8461ae464e502cc5fda26235f580984007be5cb7164736f6c63430008140033",
    "sourceMap": "548:3151:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;548:3151:3;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;548:3151:3;;;;;;:::i;:::-;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;-1:-1:-1;548:3151:3;;;;;;;;;;;;;;;;-1:-1:-1;548:3151:3;;;;;;;;;;;;;;-1:-1:-1;548:3151:3;;;;;;;;;;;;;;;-1:-1:-1;;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;548:3151:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;548:3151:3;;;719:10:40;548:3151:3;;;;;;;;2573:40:31;;;;1001:28:3;548:3151;;;1001:28;548:3151;;;;3004:6:29;548:3151:3;;;;;719:10:40;548:3151:3;;;;;;;;;;7543:23:29;7539:149;;548:3151:3;;;;;;;;;;7539:149:29;548:3151:3;;;3004:6:29;548:3151:3;;;;;719:10:40;;548:3151:3;;;;;;;;;;;;;;;719:10:40;;;7637:40:29;;;;;7539:149;;;;;548:3151:3;;;;-1:-1:-1;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;548:3151:3;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;-1:-1:-1;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;548:3151:3;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;548:3151:3;;;;;-1:-1:-1;548:3151:3;;-1:-1:-1;548:3151:3;;;;;;;;;;-1:-1:-1;;;;;548:3151:3;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146114bb5750806306fdde03146113f0578063081812fc146113d0578063095ea7b3146112635780630bc59b381461121257806318160ddd146112445780631dc82a751461121257806323b872dd146111ed578063248a9ca3146111c35780632f2ff15d146111175780632f745c591461106b57806336568abe14610fd957806342842e0e14610fa557806342966c6814610c605780634f558e7914610c215780634f6ccce714610b8e5780636352211e14610b5d5780636a6278421461091357806370a08231146108e6578063715018a6146108895780638da5cb5b1461086057806391d148541461081a57806395d89b4114610704578063a217fddf146106e9578063a22cb4651461061a578063a2d6c6da14610553578063b88d4fde146104a0578063c87b56dd14610317578063d5391393146102dc578063d547741f1461029e578063e985e9c51461024c5763f2fde38b1461018357600080fd5b346102485760203660031901126102485761019c6115a3565b906101a5611b84565b6001600160a01b039182169283156101f6575050600b54826001600160601b0360a01b821617600b55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461029a578060031936011261029a5760ff8160209361026c6115a3565b6102746115be565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b5090346102485780600319360112610248576102d991356102d460016102c26115be565b93838752600a602052862001546117d8565b611b0e565b80f35b50503461029a578160031936011261029a57602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b509034610248576020918260031936011261049c57600c5482516f636f6e74726163742e6164647265737360801b858201908152754672656e73506f6f6c5368617265546f6b656e55524960501b6030830152602682526001600160a01b0393919260608401919085169067ffffffffffffffff831185841017610489578260248180948b948d9998978c52885190206321f8a72160e01b835260648901525afa92831561047f5787908594610444575b5050506024908551948593849263c87b56dd60e01b8452803590840152165afa93841561043957809461040f575b505061040b905192828493845283019061157e565b0390f35b61040b92945090610431913d8091833e610429818361163b565b810190611776565b9290386103f6565b8251903d90823e3d90fd5b9080929394503d8311610478575b61045c818561163b565b81010312610248575183811681036102485790602486386103c8565b503d610452565b86513d86823e3d90fd5b634e487b7160e01b895260418452602489fd5b8380fd5b509034610248576080366003190112610248576104bb6115a3565b906104c46115be565b604435906064359467ffffffffffffffff861161054f573660238701121561054f57850135936104ff6104f68661165d565b9451948561163b565b84845286366024878901011161054c576020866105479760246102d99a0183890137860101526105376105328433611d97565b611cc2565b610542838383611eab565b6122e0565b611d77565b80fd5b8680fd5b509034610248576020918260031936011261049c57838135808252600d85528260018060a01b0386818786205416875196878092638ae578fd60e01b82525afa94851561047f5784956105df575b50906024918651958694859363516b636d60e11b8552840152165afa93841561043957809461040f57505061040b905192828493845283019061157e565b9094508681813d8311610613575b6105f7818361163b565b8101031261049c575190848216820361049c57909360246105a1565b503d6105ed565b5090346102485780600319360112610248576106346115a3565b90602435918215158093036106e5576001600160a01b0316923384146106a35750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b50503461029a578160031936011261029a5751908152602090f35b50913461054c578060031936011261054c578151918160019283549384811c91818616958615610810575b60209687851081146107fd578899509688969785829a5291826000146107d657505060011461077b575b50505061040b929161076c91038561163b565b5192828493845283019061157e565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106107be575050508201018161076c61040b610759565b8054848a0186015288955087949093019281016107a5565b60ff19168782015293151560051b8601909301935084925061076c915061040b9050610759565b634e487b7160e01b835260228a52602483fd5b92607f169261072f565b50346102485781600319360112610248578160209360ff9261083a6115be565b90358252600a86528282206001600160a01b039091168252855220549151911615158152f35b50503461029a578160031936011261029a57600b5490516001600160a01b039091168152602090f35b833461054c578060031936011261054c576108a2611b84565b600b80546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461029a57602036600319011261029a5760209061090c6109076115a3565b611bdc565b9051908152f35b5082903461029a5760209081600319360112610248576109316115a3565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68452600a8352848420338552835260ff858520541615610b1b5760085491828552600d84528585206001600160601b0360a01b90338282541617905586519461099a86611609565b8686526001600160a01b038416928315610adb576000868152600260205260409020546109d3906001600160a01b031615155b15611e05565b6008549086895260098352818a8a2055600160401b821015610ac8575091836102d99899600288979694610a2f89610a168960016105479f9e9b01600855612367565b90919082549060031b91821b91600019901b1916179055565b8c83610a3a8a611bdc565b8683526006845281832081845284528183208a905589835260078452912055600d8152600087815260026020526040902054610a80906001600160a01b031615156109cd565b838d5260038152828d2060018154019055868d52528a2091825416179055877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46121c6565b634e487b7160e01b895260419052602488fd5b816064928a519262461bcd60e51b845283015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b5060649184519162461bcd60e51b8352820152601b60248201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044820152fd5b50913461054c57602036600319011261054c5750610b7d60209235611c9f565b90516001600160a01b039091168152f35b50823461054c57602036600319011261054c5750803590600854821015610bc957602083610bbb84612367565b91905490519160031b1c8152f35b608490602084519162461bcd60e51b8352820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152fd5b50913461054c57602036600319011261054c5750610c5760209235600052600260205260018060a01b0360406000205416151590565b90519015158152f35b5082903461029a5760209283600319360112610248578135808452600d85528184205490926001600160a01b0392909183163303610f5757610ca184611c9f565b838116801597918815610ed6575050600854858752600982528083882055600160401b811015610ec35785610a16826001610cdf9401600855612367565b6008546000199490858101908111610eb05786885260098352610d058489205491612367565b90549060031b1c610d1981610a1684612367565b885260098352838820558587528683812055600854978815610e9d5785889998979801610d4581612367565b8882549160031b1b19169055600855878752600d8352818488205416901580610e96575b610ddd575b5090600291610d7c88611c9f565b948888528252838720946001600160601b0360a01b958681541690551694858752600382528387209081540190558686525283209081541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a480f35b8394959650916024919281945192838092635a2d1e0760e11b82528b8a8301525afa908115610e8c578891610e53575b50610e1e5790869493929188610d6e565b50905162461bcd60e51b815291820152601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508281813d8311610e85575b610e6a818361163b565b81010312610e8157610e7b90611679565b88610e0d565b8780fd5b503d610e60565b84513d8a823e3d90fd5b5086610d69565b634e487b7160e01b885260318552602488fd5b634e487b7160e01b885260118552602488fd5b634e487b7160e01b875260418452602487fd5b610edf90611bdc565b600019810191908211610eb0578688526007835283882054828103610f20575b50868852878481205587526006825282872090875281528582812055610cdf565b81895260068452848920838a52845284892054828a5260068552858a20828b52855280868b20558952600784528489205589610eff565b5162461bcd60e51b8152908101859052602360248201527f63616e6e6f74206275726e207368617265732066726f6d206f7468657220706f6044820152626f6c7360e81b6064820152608490fd5b50503461029a576105476102d991610fbc366115d4565b91925192610fc984611609565b8684526105376105328433611d97565b5082903461029a578260031936011261029a57610ff46115be565b90336001600160a01b0383160361101057906102d99135611b0e565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b50913461054c578160031936011261054c576110856115a3565b6024359061109281611bdc565b8210156110c0576001600160a01b031682526006602090815283832091835290815290829020548251908152f35b835162461bcd60e51b8152602081870152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b503461024857816003193601126102485735906111326115be565b90828452600a60205261114a600182862001546117d8565b828452600a60209081528185206001600160a01b039093168086529290528084205460ff1615611178578380f35b828452600a6020528084208285526020528320600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a43880808380f35b50346102485760203660031901126102485781602093600192358152600a85522001549051908152f35b833461054c576102d96111ff366115d4565b9161120d6105328433611d97565b611eab565b503461024857602036600319011261024857358252600d6020908152918190205490516001600160a01b039091168152f35b50503461029a578160031936011261029a576020906008549051908152f35b503461024857816003193601126102485761127c6115a3565b6024359290916001600160a01b039190828061129787611c9f565b1694169380851461138357803314908115611364575b50156112fc57848652602052842080546001600160a01b031916831790556112d483611c9f565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff8287205416386112ad565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b50913461054c57602036600319011261054c5750610b7d60209235611686565b50913461054c578060031936011261054c5781519181825492600184811c918186169586156114b1575b60209687851081146107fd578899509688969785829a5291826000146107d65750506001146114565750505061040b929161076c91038561163b565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410611499575050508201018161076c61040b610759565b8054848a018601528895508794909301928101611480565b92607f169261141a565b92505034610248576020366003190112610248573563ffffffff60e01b81168091036102485760209250637965db0b60e01b81149081156114fe575b5015158152f35b63780e9d6360e01b811491508115611518575b50386114f7565b6380ac58cd60e01b81149150811561154a575b8115611539575b5038611511565b6301ffc9a760e01b14905038611532565b635b5e139f60e01b8114915061152b565b60005b83811061156e5750506000910152565b818101518382015260200161155e565b906020916115978151809281855285808601910161155b565b601f01601f1916010190565b600435906001600160a01b03821682036115b957565b600080fd5b602435906001600160a01b03821682036115b957565b60609060031901126115b9576001600160a01b039060043582811681036115b9579160243590811681036115b9579060443590565b6020810190811067ffffffffffffffff82111761162557604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761162557604052565b67ffffffffffffffff811161162557601f01601f191660200190565b519081151582036115b957565b6000818152600260205260409020546116a9906001600160a01b03161515611c53565b6000818152600d60205260018060a01b03908160408220541692604051637e01dd6960e11b8152816004820152606081602481885afa90811561176b57839161172f575b50156116f95750505090565b600081815260026020526040908190205493945092611722906001600160a01b03161515611c53565b8152600460205220541690565b90506060813d8211611763575b816117496060938361163b565b8101031261024857604061175d9101611679565b386116ed565b3d915061173c565b6040513d85823e3d90fd5b6020818303126115b95780519067ffffffffffffffff82116115b9570181601f820112156115b95780516117a98161165d565b926117b7604051948561163b565b818452602082840101116115b9576117d5916020808501910161155b565b90565b600090808252602090600a8252604092838120338252835260ff8482205416156118025750505050565b83519167ffffffffffffffff90336060850183811186821017611afa578752602a85528585019187368437855115611ae65760308353855191600192831015611ad2576078602188015360295b838111611a685750611a265790875193608085019085821090821117611a12578852604284528684019460603687378451156119fe576030865384518210156119fe5790607860218601536041915b8183116119905750505061194e5761194a93869361192e9361191f6048946118f69a519a8b957f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008c880152518092603788019061155b565b8401917001034b99036b4b9b9b4b733903937b6329607d1b60378401525180938684019061155b565b0103602881018752018561163b565b5192839262461bcd60e51b84526004840152602483019061157e565b0390fd5b60648587519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f811660108110156119ea576f181899199a1a9b1b9c1cb0b131b232b360811b901a6119c085886123b4565b5360041c9280156119d65760001901919061189e565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b86526041600452602486fd5b60648789519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b90600f81166010811015611abe576f181899199a1a9b1b9c1cb0b131b232b360811b901a611a96838a6123b4565b5360041c908015611aaa576000190161184f565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b90600091808352600a602052604083209160018060a01b03169182845260205260ff604084205416611b3f57505050565b808352600a602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b600b546001600160a01b03163303611b9857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b03168015611bfc57600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b15611c5a57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152600260205260409020546001600160a01b03166117d5811515611c53565b15611cc957565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15611d7e57565b60405162461bcd60e51b81528061194a60048201611d24565b906001600160a01b038080611dab84611c9f565b16931691838314938415611dde575b508315611dc8575b50505090565b611dd491929350611686565b1614388080611dc2565b909350600052600560205260406000208260005260205260ff604060002054169238611dba565b15611e0c57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b15611e5857565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b611ecf91611eb884611c9f565b6001600160a01b0393848416939185168414611e51565b8382169384156121755783801592836000146120c25750506008549286600052600960205283604060002055600160401b84101561162557611f1c87610a16866001899801600855612367565b83860361208f575b5084600092878452602092600d8452604091818387205416901580612087575b611fcf575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95611f8091611f798b611c9f565b1614611e51565b878452600483526002818520936001600160601b0360a01b94858154169055878652600381528286206000198154019055838652828620600181540190558986525283209182541617905580a4565b8495965082602493959294505192838092635a2d1e0760e11b82528c60048301525afa90811561207d578591612048575b506120115784939291869138611f49565b815162461bcd60e51b815260048101849052601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508381813d8311612076575b61205f818361163b565b810103126106e55761207090611679565b38612000565b503d612055565b83513d87823e3d90fd5b506001611f44565b61209890611bdc565b60406000878152600660205281812083825260205288828220558881526007602052205538611f24565b86829592036120d2575b50611f1c565b6120dd919450611bdc565b60001981019390841161215f5784936000908882526020906007825260409182842054828103612128575b508a845283838120558784526006815282842091845252812055386120cc565b8885526006825283852083865282528385205489865260068352848620828752835280858720558552600782528385205538612108565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b91929091803b156122d757612213936040519081630a85bd0160e11b9384825233600483015260009687602484015260448301526080606483015281878160209a8b96608483019061157e565b03926001600160a01b03165af1849181612297575b50612286575050503d60001461227e573d6122428161165d565b90612250604051928361163b565b81528091833d92013e5b8051918261227b5760405162461bcd60e51b81528061194a60048201611d24565b01fd5b50606061225a565b6001600160e01b0319161492509050565b9091508581813d83116122d0575b6122af818361163b565b810103126106e557516001600160e01b0319811681036106e5579038612228565b503d6122a5565b50915050600190565b92939190803b1561235d57612332946040518092630a85bd0160e11b9485835233600484015260018060a01b03809816602484015260448301526080606483015281806020998a95608483019061157e565b03916000988991165af18491816122975750612286575050503d60001461227e573d6122428161165d565b5050915050600190565b60085481101561239e5760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b90815181101561239e57016020019056fea264697066735822122070139beba341a4bd449d54e8461ae464e502cc5fda26235f580984007be5cb7164736f6c63430008140033",
    "sourceMap": "548:3151:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;548:3151:3;;;;;;:::i;:::-;1063:62:31;;;:::i;:::-;-1:-1:-1;;;;;548:3151:3;;;;2169:22:31;;548:3151:3;;;;2525:6:31;548:3151:3;;-1:-1:-1;;;;;548:3151:3;;;;;2525:6:31;548:3151:3;;2573:40:31;;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;548:3151:3;;;;;4508:18:33;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5360:7:29;548:3151:3;;2516:4:29;548:3151:3;;;:::i;:::-;;;;;4478:6:29;548:3151:3;;;;4478:22:29;548:3151:3;2516:4:29;:::i;:::-;5360:7;:::i;:::-;548:3151:3;;;;;;;;;;;;;;;;;;;693:24;548:3151;;;;;;;;;;;;;;;;;;;2420:12;548:3151;;;-1:-1:-1;;;2454:62:3;;;548:3151;;;-1:-1:-1;;;548:3151:3;;;;2454:62;;;-1:-1:-1;;;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2444:73;;548:3151;;;2420:98;;;;;548:3151;2420:98;;;;;;;;;;;;;548:3151;;;;;;;;;;;;;;;;2536:35;;548:3151;;2536:35;;;548:3151;;2536:35;;;;;;;;;;;548:3151;;;;;;;;;;;;;;;;:::i;:::-;;;;2536:35;548:3151;2536:35;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;548:3151;;;;;;;;;;2420:98;;;;;;;;;;;;;;;;;:::i;:::-;;;548:3151;;;;;;;;;;;;2420:98;548:3151;2420:98;;;;;;;;;;548:3151;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;548:3151:3;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6620:47:33;548:3151:3;;6612:110:33;548:3151:3;;;;;;;;;;5409:99:33;5417:41;719:10:40;;5417:41:33;:::i;:::-;5409:99;:::i;:::-;6594:7;;;;;:::i;:::-;6620:47;:::i;:::-;6612:110;:::i;548:3151:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1607:9;548:3151;;;;;;;;;;;;;;;;;;;;;;;;2747:17;;;;;;;;;;;;;548:3151;;;;;;;;;;;;;;;2781:28;;;;548:3151;;2781:28;;;;;;;;;;;548:3151;;;;;;;;;;;;;;;:::i;2747:17::-;;;;;;;;;;;;;;;;;:::i;:::-;;;548:3151;;;;;;;;;;;;;2747:17;;548:3151;2747:17;;;;;;;548:3151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;548:3151:3;;719:10:40;13216:17:33;;548:3151:3;;719:10:40;;548:3151:3;;13273:18:33;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;13334:41:33;548:3151:3;719:10:40;13334:41:33;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2721:7:33;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;548:3151:3;;;;;;;;;;;-1:-1:-1;;548:3151:3;;;;;;;;;;;;;;;;-1:-1:-1;548:3151:3;;-1:-1:-1;548:3151:3;;-1:-1:-1;548:3151:3;;-1:-1:-1;548:3151:3;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3004:6:29;548:3151:3;;;;;-1:-1:-1;;;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:6:31;548:3151:3;;;-1:-1:-1;;;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;1063:62:31;;:::i;:::-;2525:6;548:3151:3;;-1:-1:-1;;;;;;548:3151:3;;;;;;;-1:-1:-1;;;;;548:3151:3;2573:40:31;548:3151:3;;2573:40:31;548:3151:3;;;;;;;;;;-1:-1:-1;;548:3151:3;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;693:24;548:3151;;3004:6:29;548:3151:3;;;;;1236:10;548:3151;;;;;;;;;;;;;1717:10:36;548:3151:3;;;;;1347:9;548:3151;;;;;-1:-1:-1;;;;;548:3151:3;;1236:10;;548:3151;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;548:3151:3;;;9170:16:33;;548:3151:3;;-1:-1:-1;548:3151:3;;;6930:7:33;548:3151:3;;;;;;9233:58:33;;-1:-1:-1;;;;;548:3151:3;7344:31:33;;9242:16;9241:17;9233:58;:::i;:::-;1717:10:36;548:3151:3;;;;;3784:15:36;548:3151:3;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;8612:150:33;548:3151:3;;9876:7:33;548:3151:3;;;;;;;;;8633:53:33;548:3151:3;;;;1717:10:36;548:3151:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3397:20:36;;;;;:::i;:::-;548:3151:3;;;3427:12:36;548:3151:3;;;;;;;;;;;;;;;;;;;3471:17:36;548:3151:3;;;;;1347:9;548:3151;;-1:-1:-1;548:3151:3;;;6930:7:33;548:3151:3;;;;;;9437:58:33;;-1:-1:-1;;;;;548:3151:3;7344:31:33;;9446:16;7256:126;9437:58;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;9913:33:33;;;;;8633:53;:::i;548:3151:3:-;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;548:3151:3;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;548:3151:3;;;;;;;;;;;;;;-1:-1:-1;;548:3151:3;;;;;;;;1717:10:36;548:3151:3;1915:38:36;;548:3151:3;;;;2019:17:36;;;;:::i;:::-;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;-1:-1:-1;;548:3151:3;;;;;1503:12;548:3151;;;-1:-1:-1;548:3151:3;6930:7:33;548:3151:3;;;;;;;;-1:-1:-1;548:3151:3;;;7344:31:33;;7256:126;;1503:12:3;548:3151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3329:9;548:3151;;;;;;;;-1:-1:-1;;;;;548:3151:3;;;;;3307:10;:41;548:3151;;10412:23:33;;;:::i;:::-;548:3151:3;;;2629:18:36;;;548:3151:3;2629:18:36;;;;548:3151:3;;3811:10:36;548:3151:3;;;;3784:15:36;548:3151:3;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;3811:10:36;548:3151:3;;:::i;:::-;6018:10:36;548:3151:3;-1:-1:-1;;548:3151:3;;;;;;;;;;;;;6070:15:36;548:3151:3;;6438:26:36;548:3151:3;;;;6438:26:36;;:::i;:::-;548:3151:3;;;;;;6475:36:36;:22;;;;:::i;:36::-;548:3151:3;;6070:15:36;548:3151:3;;;;;;;;;;;;;;6018:10:36;548:3151:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;6018:10:36;548:3151:3;;;;3329:9;548:3151;;;;;;;;3106:18;;:38;;;2625:183:36;3102:127:3;;2625:183:36;10607:23:33;;10963:7;10607:23;;;;:::i;:::-;548:3151:3;;;;;;;;;;-1:-1:-1;;;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10995:36:33;;;;548:3151:3;;3102:127;548:3151;;;;;;;;;;;;;;;;;;;3168:20;;;;;;548:3151;3168:20;;;;;;;;;;;3102:127;548:3151;;;3102:127;;;;;;;;;548:3151;-1:-1:-1;548:3151:3;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;3168:20;;;;;;;;;;;;;;;;:::i;:::-;;;548:3151;;;;;;;:::i;:::-;3168:20;;;548:3151;;;;3168:20;;;;;;548:3151;;;;;;;;;3106:38;;;;;548:3151;-1:-1:-1;;;548:3151:3;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;2625:183:36;4773:22;;;:::i;:::-;-1:-1:-1;;548:3151:3;;;;;;;;;;;4830:17:36;548:3151:3;;;;;;4960:28:36;;;4956:323;;2625:183;548:3151:3;;;;;;;;;;;5415:12:36;548:3151:3;;;;;;;;;;;;;;;2625:183:36;;4956:323;548:3151:3;;;5026:12:36;548:3151:3;;;;;;;;;;;;;;;;;5026:12:36;548:3151:3;;;;;;;;;;;;;;;;;4830:17:36;548:3151:3;;;;;;4956:323:36;;;548:3151:3;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;6620:47:33;6612:110;548:3151:3;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;5409:99:33;5417:41;719:10:40;;5417:41:33;:::i;548:3151:3:-;;;;;;;;;;;;;;;;;:::i;:::-;719:10:40;;-1:-1:-1;;;;;548:3151:3;;6007:23:29;548:3151:3;;;6111:7:29;548:3151:3;;6111:7:29;:::i;548:3151:3:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1438:23:36;;;;:::i;:::-;1430:31;;548:3151:3;;;-1:-1:-1;;;;;548:3151:3;;;1526:12:36;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4478:6:29;548:3151:3;;2516:4:29;548:3151:3;;;;4478:22:29;548:3151:3;2516:4:29;:::i;:::-;548:3151:3;;;4478:6:29;548:3151:3;;;;;;;-1:-1:-1;;;;;548:3151:3;;;;;;;;;;;;;;;7543:23:29;7539:149;;548:3151:3;;;7539:149:29;548:3151:3;;;4478:6:29;548:3151:3;;;;;;;;;;;;;;;;;;;;;719:10:40;7637:40:29;;;;;7539:149;;;548:3151:3;;;;;;;;;;-1:-1:-1;;548:3151:3;;;;;;;;;;;;4478:6:29;548:3151:3;;;4478:22:29;548:3151:3;;;;;;;;;;;;4923:7:33;548:3151:3;;;:::i;:::-;719:10:40;4793:99:33;4801:41;719:10:40;;4801:41:33;:::i;4793:99::-;4923:7;:::i;548:3151:3:-;;;;;;;-1:-1:-1;;548:3151:3;;;;;;;807:41;548:3151;;;;;;;;;;;-1:-1:-1;;;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;1717:10:36;548:3151:3;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;548:3151:3;;;;3564:23:33;548:3151:3;3564:23:33;:::i;:::-;548:3151:3;;;3605:11:33;;;;548:3151:3;;719:10:40;;3686:21:33;:62;;;;;548:3151:3;;;;;;;;;;;;;;-1:-1:-1;;;;;;548:3151:3;;;;;12895:23:33;548:3151:3;12895:23:33;:::i;:::-;548:3151:3;12886:46:33;;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3686:62:33;548:3151:3;;;;4508:18:33;548:3151:3;;;;;719:10:40;548:3151:3;;;;;;;;;;3686:62:33;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;-1:-1:-1;;548:3151:3;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;548:3151:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2714:47:29;;;:87;;;;548:3151:3;;;;;;;2714:87:29;-1:-1:-1;;;1130:50:36;;;-1:-1:-1;1130:90:36;;;;2714:87:29;;;;;1130:90:36;-1:-1:-1;;;1707:40:33;;;-1:-1:-1;1707:104:33;;;;1130:90:36;1707:156:33;;;;1130:90:36;;;;;1707:156:33;-1:-1:-1;;;937:40:42;;-1:-1:-1;1707:156:33;;;:104;-1:-1:-1;;;1763:48:33;;;-1:-1:-1;1707:104:33;;548:3151:3;;;;;;;;-1:-1:-1;;548:3151:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;548:3151:3;;;;:::o;:::-;;;;-1:-1:-1;;;;;548:3151:3;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;548:3151:3;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;548:3151:3;;;;:::o;:::-;;;;;;;;;;:::o;1754:463::-;-1:-1:-1;548:3151:3;;;6930:7:33;548:3151:3;;;;;;13539:53:33;;-1:-1:-1;;;;;548:3151:3;7344:31:33;;13539:53;:::i;:::-;-1:-1:-1;548:3151:3;;;1918:9;548:3151;;;;;;;;;;;;;;;;;;;;2043:33;;;;;;548:3151;2043:33;;548:3151;2043:33;;;;;;;;;548:3151;2043:33;;;1754:463;-1:-1:-1;2086:116:3;;;2113:15;;;;:::o;2086:116::-;-1:-1:-1;548:3151:3;;;6930:7:33;548:3151:3;;;;;;;;13547:16:33;;-1:-1:-1;548:3151:3;13539:53:33;;-1:-1:-1;;;;;548:3151:3;7344:31:33;;13539:53;:::i;:::-;548:3151:3;;2043:33;548:3151;;;;;2158:33;:::o;2043:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;548:3151;;;;;;;;;:::i;:::-;2043:33;;;;;;-1:-1:-1;2043:33:3;;;548:3151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;3334:103:29:-;-1:-1:-1;548:3151:3;;;;;;3004:6:29;548:3151:3;;;;;;;719:10:40;548:3151:3;;;;;;;;;;3805:23:29;3801:390;;3334:103;;;;:::o;3801:390::-;548:3151:3;;;;;719:10:40;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1670:15:41;;;548:3151:3;;;;;;;;;;1695:15:41;548:3151:3;;;1695:15:41;548:3151:3;1753:5:41;;;;;;1865:10;246:18;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1670:15:41;;;548:3151:3;;;;;;;;1695:15:41;548:3151:3;;;1695:15:41;548:3151:3;1720:128:41;1753:5;;;;;;1865:10;;;246:18;;548:3151:3;;;;3896:252:29;548:3151:3;;;;;;;3896:252:29;;;548:3151:3;3896:252:29;;;548:3151:3;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;:::i;:::-;;3896:252:29;;;;;;;;;:::i;:::-;548:3151:3;;;;;;;3844:336:29;;1836:1:41;3844:336:29;;548:3151:3;;;;;;:::i;:::-;3844:336:29;;;246:18:41;;548:3151:3;;;;;;;246:18:41;;;1836:1;246:18;;;;;;548:3151:3;246:18:41;548:3151:3;;;246:18:41;;1760:3;1800:11;;;1808:3;1800:11;;1791:21;;;;;;-1:-1:-1;;;1791:21:41;;1779:33;;;;:::i;:::-;;1836:1;548:3151:3;1760:3:41;548:3151:3;;;;-1:-1:-1;;548:3151:3;;1725:26:41;;;548:3151:3;-1:-1:-1;;;548:3151:3;;;1836:1:41;548:3151:3;;;;1791:21:41;-1:-1:-1;;;548:3151:3;;;1836:1:41;548:3151:3;;;;;-1:-1:-1;;;548:3151:3;;;1836:1:41;548:3151:3;;;;;-1:-1:-1;;;548:3151:3;;;1836:1:41;548:3151:3;;;;246:18:41;;548:3151:3;;;;;;;246:18:41;;;1836:1;246:18;;;;;;548:3151:3;246:18:41;548:3151:3;;;246:18:41;;1760:3;1800:11;1808:3;1800:11;;1791:21;;;;;;-1:-1:-1;;;1791:21:41;;1779:33;;;;:::i;:::-;;1836:1;548:3151:3;1760:3:41;548:3151:3;;;;-1:-1:-1;;548:3151:3;1725:26:41;;548:3151:3;-1:-1:-1;;;548:3151:3;;;1836:1:41;548:3151:3;;;;1791:21:41;-1:-1:-1;;;548:3151:3;;;1836:1:41;548:3151:3;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;7865:234:29;;-1:-1:-1;548:3151:3;;;;3004:6:29;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;7944:149:29;;7865:234;;;:::o;7944:149::-;548:3151:3;;;3004:6:29;548:3151:3;;;;;;;;;;;;;;;;;;;;8042:40:29;719:10:40;8042:40:29;;;7865:234::o;1359:130:31:-;1273:6;548:3151:3;-1:-1:-1;;;;;548:3151:3;719:10:40;1422:23:31;548:3151:3;;1359:130:31:o;548:3151:3:-;;;;;;;;;;;;;;;;;;;;;;;;;1929:204:33;-1:-1:-1;;;;;548:3151:3;2028:19:33;;548:3151:3;;2045:1:33;548:3151:3;2110:9:33;548:3151:3;;;2045:1:33;548:3151:3;;1929:204:33;:::o;548:3151:3:-;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;;2190:219:33;-1:-1:-1;548:3151:3;;;6930:7:33;548:3151:3;;;;;;-1:-1:-1;;;;;548:3151:3;2324:56:33;2332:19;;;2324:56;:::i;548:3151:3:-;;;;:::o;:::-;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;548:3151:3;;;;;;;;:::i;7540:261:33:-;;-1:-1:-1;;;;;548:3151:3;;7665:23:33;7540:261;7665:23;:::i;:::-;548:3151:3;;;7706:16:33;;;;:52;;;;;7540:261;7706:87;;;;;7540:261;7698:96;;;7540:261;:::o;7706:87::-;7762:20;;;;;;:::i;:::-;548:3151:3;7762:31:33;7706:87;;;;;:52;548:3151:3;;;-1:-1:-1;548:3151:3;4508:18:33;548:3151:3;;;-1:-1:-1;548:3151:3;;-1:-1:-1;548:3151:3;;;;;-1:-1:-1;548:3151:3;;;7706:52:33;;;;548:3151:3;;;;:::o;:::-;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;11423:1233:33;11542:81;11423:1233;11550:23;;;:::i;:::-;-1:-1:-1;;;;;548:3151:3;;;;;;;;11550:31:33;;11542:81;:::i;:::-;548:3151:3;;;11641:16:33;;;548:3151:3;;2629:18:36;;;2625:183;;;2629:18;;;548:3151:3;;3811:10:36;548:3151:3;;;15870:13:33;548:3151:3;3784:15:36;548:3151:3;;;;15870:13:33;548:3151:3;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;3811:10:36;548:3151:3;;:::i;:::-;2919:10:36;;;2915:81;;2625:183;2817:179;;;548:3151:3;;;;;;3073:9;548:3151;;;;;;;;;;3106:18;;:38;;;2625:183:36;3102:127:3;;2625:183:36;11851:23:33;12570:27;11851:23;11843:81;11851:23;;;;:::i;:::-;548:3151:3;11851:31:33;11843:81;:::i;:::-;548:3151:3;;;11993:15:33;548:3151:3;;12533:7:33;548:3151:3;;;;-1:-1:-1;;;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12570:27:33;;11423:1233::o;3102:127:3:-;548:3151;;;;;;;;;;;;;;;;;;;3168:20;;;;;;548:3151;3168:20;;;;;;;;;;;3102:127;548:3151;;;3102:127;;;;;;;;;548:3151;;;-1:-1:-1;;;548:3151:3;;3168:20;548:3151;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;3168:20;;;;;;;;;;;;;;;;:::i;:::-;;;548:3151;;;;;;;:::i;:::-;3168:20;;;;;;;;;548:3151;;;;;;;;;3106:38;;548:3151;3106:38;;2915:81:36;3397:20;;;:::i;:::-;548:3151:3;2817:179:36;548:3151:3;;;3427:12:36;548:3151:3;;;;;;;;;;;;;;;;;;3471:17:36;548:3151:3;;;;2915:81:36;;;2625:183;2724:10;;;;;2720:88;;2625:183;;;;2720:88;4773:22;;;;;:::i;:::-;-1:-1:-1;;548:3151:3;;;;;;;;;;;;;;;;;4830:17:36;548:3151:3;;;;;;;;4960:28:36;;;4956:323;;2720:88;548:3151:3;;;;;;;;;;;;5415:12:36;548:3151:3;;;;;;;;;;;;2720:88:36;;;4956:323;548:3151:3;;;5026:12:36;548:3151:3;;;;;;;;;;;;;;;;;5026:12:36;548:3151:3;;;;;;;;;;;;;;;;;4830:17:36;548:3151:3;;;;;;4956:323:36;;;548:3151:3;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;548:3151:3;;;;;;;14151:831:33;;;;;1465:19:39;;:23;:19;;548:3151:3;;;;;;;;;14355:71:33;;;;719:10:40;14355:71:33;;;548:3151:3;;;;;;;;;;;;;;;;;14355:71:33;;;;548:3151:3;;;;;;;;:::i;:::-;14355:71:33;;-1:-1:-1;;;;;548:3151:3;14355:71:33;;;;;;;14316:660;-1:-1:-1;14351:573:33;;14543:381;;;548:3151:3;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;14593:18:33;;;548:3151:3;;-1:-1:-1;;;14635:60:33;;548:3151:3;14635:60:33;14355:71;14635:60;;;:::i;14589:321::-;14797:95;;548:3151:3;;;;;14351:573:33;-1:-1:-1;;;;;;548:3151:3;14476:51:33;;-1:-1:-1;548:3151:3;-1:-1:-1;14469:58:33:o;14355:71::-;;;;;;;;;;;;;;;;;:::i;:::-;;;548:3151:3;;;;;-1:-1:-1;;;;;;548:3151:3;;;;;;14355:71:33;;;;;;;;;14316:660;14954:11;;;;14961:4;14954:11;:::o;14151:831::-;;;;;1465:19:39;;:23;:19;;548:3151:3;;;;;;;;;14355:71:33;;;;719:10:40;14355:71:33;;;548:3151:3;;;;;;;;;;;;;;;;;;;;;;14355:71:33;;;548:3151:3;;;;;;;;:::i;:::-;14355:71:33;-1:-1:-1;;548:3151:3;;;;14355:71:33;;;;;;;-1:-1:-1;14351:573:33;;14543:381;;;548:3151:3;;;;;;;;;:::i;14316:660:33:-;14954:11;;;;;14961:4;14954:11;:::o;548:3151:3:-;1717:10:36;548:3151:3;;;;;;1717:10:36;-1:-1:-1;548:3151:3;;;;-1:-1:-1;548:3151:3;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "MINTER_ROLE()": "d5391393",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "exists(uint256)": "4f558e79",
    "getApproved(uint256)": "081812fc",
    "getPoolById(uint256)": "0bc59b38",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address)": "6a627842",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "poolByIds(uint256)": "1dc82a75",
    "renderTokenById(uint256)": "a2d6c6da",
    "renounceOwnership()": "715018a6",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenByIndex(uint256)": "4f6ccce7",
    "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFrensStorage\",\"name\":\"frensStorage_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getPoolById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolByIds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"renderTokenById\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"sets the storage contract and the token name/symbol\"},\"getApproved(uint256)\":{\"details\":\"stakingPool is allowed during rageQuit, so the user cannot block the sale of the NFT by changing the allow\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address)\":{\"details\":\"callable by the staking pools only\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FrensPoolShare.sol\":\"FrensPoolShare\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0x5ce2993858376e9ffe5eb15b047a7d82d426ab088bc1d5a9e215e0b27229f92b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca822d066c53c7b2d3874f2ac9b1db57fa44ed41fbbc4ba1870b608e009f02bb\",\"dweb:/ipfs/QmWD2raDz6W47vpoHrg1JDBSjwUw3N9nH1vxCjA6izwpYk\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0x9ca4f7eb7011a8f1ed7a6d9a0f88ab68b29d49b63aa8864a694b63d5551a0bad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://691442367708458da9827c029828f74ddea99a4b327a2e31f2efdfd759b97f88\",\"dweb:/ipfs/Qmbd6EADu2GntQhPobDgdRg9c6vzwutzgn7fZfa5gTC8Jr\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0xef1985c0b95767f7b96d1f21aed9e48142c021d25d574f0615323ec2b83ad996\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074079edb1b5b586e73914cd4203e49eb5fd813baa6fc85038de0f23bd5a25e7\",\"dweb:/ipfs/QmQXtreUs6eJyuoLEGb79a1nWwdiziQeoL2kbjTPnYk1G3\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0xb5ee629c513705bc3c46fbe4ce81f6a9edac2c0d1f7030da14b3859a2e8aa39e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://970db7758aa9fa468922dae70b2c85c3094506dfb59293520d4fd83769b3bee1\",\"dweb:/ipfs/QmVjiqtVZYCxXVKtxsFZhMJvFcTYhKFuiBa6eP3UtpnVeW\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0xfd293708621d8eb26c25db108d90583d36ab7f4a7f1f71a75e0b6f54c9a0a451\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c10da0cd1b7cccb05340a2505803ca0ff8fe1821c5107059c95d09eff6e7a1a4\",\"dweb:/ipfs/QmfSzqmRf2sYBMfXzav6jdkuNc6N4xoN3NUJ1o5624vUkt\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0xfcce7e4e1de632af6ab1d89918ff97980a3b0e282eab86875e86128c41260574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://caa6604f6c96202509d52c75a78ceecee9bf95fa4dfc040c47a7d05c1d1cc250\",\"dweb:/ipfs/QmbjsaNxKJP9HAyk6HmSVE83XgNtFLRMAtTWp87uszQ8ab\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IFrensStorage",
              "name": "frensStorage_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolById",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolByIds",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "renderTokenById",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOfOwnerByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "constructor": {
            "details": "sets the storage contract and the token name/symbol"
          },
          "getApproved(uint256)": {
            "details": "stakingPool is allowed during rageQuit, so the user cannot block the sale of the NFT by changing the allow"
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "mint(address)": {
            "details": "callable by the staking pools only"
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenByIndex(uint256)": {
            "details": "See {IERC721Enumerable-tokenByIndex}."
          },
          "tokenOfOwnerByIndex(address,uint256)": {
            "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
          },
          "totalSupply()": {
            "details": "See {IERC721Enumerable-totalSupply}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/FrensPoolShare.sol": "FrensPoolShare"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0x5ce2993858376e9ffe5eb15b047a7d82d426ab088bc1d5a9e215e0b27229f92b",
        "urls": [
          "bzz-raw://ca822d066c53c7b2d3874f2ac9b1db57fa44ed41fbbc4ba1870b608e009f02bb",
          "dweb:/ipfs/QmWD2raDz6W47vpoHrg1JDBSjwUw3N9nH1vxCjA6izwpYk"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0x9ca4f7eb7011a8f1ed7a6d9a0f88ab68b29d49b63aa8864a694b63d5551a0bad",
        "urls": [
          "bzz-raw://691442367708458da9827c029828f74ddea99a4b327a2e31f2efdfd759b97f88",
          "dweb:/ipfs/Qmbd6EADu2GntQhPobDgdRg9c6vzwutzgn7fZfa5gTC8Jr"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0xef1985c0b95767f7b96d1f21aed9e48142c021d25d574f0615323ec2b83ad996",
        "urls": [
          "bzz-raw://074079edb1b5b586e73914cd4203e49eb5fd813baa6fc85038de0f23bd5a25e7",
          "dweb:/ipfs/QmQXtreUs6eJyuoLEGb79a1nWwdiziQeoL2kbjTPnYk1G3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0xb5ee629c513705bc3c46fbe4ce81f6a9edac2c0d1f7030da14b3859a2e8aa39e",
        "urls": [
          "bzz-raw://970db7758aa9fa468922dae70b2c85c3094506dfb59293520d4fd83769b3bee1",
          "dweb:/ipfs/QmVjiqtVZYCxXVKtxsFZhMJvFcTYhKFuiBa6eP3UtpnVeW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0xfd293708621d8eb26c25db108d90583d36ab7f4a7f1f71a75e0b6f54c9a0a451",
        "urls": [
          "bzz-raw://c10da0cd1b7cccb05340a2505803ca0ff8fe1821c5107059c95d09eff6e7a1a4",
          "dweb:/ipfs/QmfSzqmRf2sYBMfXzav6jdkuNc6N4xoN3NUJ1o5624vUkt"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0xfcce7e4e1de632af6ab1d89918ff97980a3b0e282eab86875e86128c41260574",
        "urls": [
          "bzz-raw://caa6604f6c96202509d52c75a78ceecee9bf95fa4dfc040c47a7d05c1d1cc250",
          "dweb:/ipfs/QmbjsaNxKJP9HAyk6HmSVE83XgNtFLRMAtTWp87uszQ8ab"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a",
        "urls": [
          "bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe",
          "dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b",
        "urls": [
          "bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c",
          "dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/FrensPoolShare.sol",
    "id": 916,
    "exportedSymbols": {
      "AccessControl": [
        26718
      ],
      "Address": [
        28728
      ],
      "Context": [
        28750
      ],
      "ERC165": [
        28949
      ],
      "ERC721": [
        27852
      ],
      "ERC721Enumerable": [
        28340
      ],
      "FrensPoolShare": [
        915
      ],
      "IAccessControl": [
        26791
      ],
      "IERC165": [
        28961
      ],
      "IERC721": [
        27968
      ],
      "IERC721Enumerable": [
        28371
      ],
      "IERC721Metadata": [
        28398
      ],
      "IERC721Receiver": [
        27986
      ],
      "IFrensArt": [
        2802
      ],
      "IFrensPoolShare": [
        2911
      ],
      "IFrensPoolShareTokenURI": [
        2921
      ],
      "IFrensStorage": [
        3011
      ],
      "IStakingPool": [
        3154
      ],
      "Math": [
        29826
      ],
      "Ownable": [
        26904
      ],
      "Strings": [
        28925
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3668:3",
    "nodes": [
      {
        "id": 599,
        "nodeType": "PragmaDirective",
        "src": "32:23:3",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 600,
        "nodeType": "ImportDirective",
        "src": "144:50:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensPoolShareTokenURI.sol",
        "file": "./interfaces/IFrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 916,
        "sourceUnit": 2922,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 601,
        "nodeType": "ImportDirective",
        "src": "195:36:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensArt.sol",
        "file": "./interfaces/IFrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 916,
        "sourceUnit": 2803,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 602,
        "nodeType": "ImportDirective",
        "src": "232:42:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensPoolShare.sol",
        "file": "./interfaces/IFrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 916,
        "sourceUnit": 2912,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 603,
        "nodeType": "ImportDirective",
        "src": "275:39:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPool.sol",
        "file": "./interfaces/IStakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 916,
        "sourceUnit": 3155,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 604,
        "nodeType": "ImportDirective",
        "src": "315:40:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensStorage.sol",
        "file": "./interfaces/IFrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 916,
        "sourceUnit": 3012,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 605,
        "nodeType": "ImportDirective",
        "src": "356:78:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 916,
        "sourceUnit": 28341,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 606,
        "nodeType": "ImportDirective",
        "src": "435:58:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 916,
        "sourceUnit": 26719,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 607,
        "nodeType": "ImportDirective",
        "src": "494:52:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 916,
        "sourceUnit": 26905,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 915,
        "nodeType": "ContractDefinition",
        "src": "548:3151:3",
        "nodes": [
          {
            "id": 620,
            "nodeType": "VariableDeclaration",
            "src": "655:62:3",
            "nodes": [],
            "constant": true,
            "functionSelector": "d5391393",
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "679:11:3",
            "scope": 915,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 616,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "655:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 618,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "703:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 617,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "693:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 619,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "693:24:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 623,
            "nodeType": "VariableDeclaration",
            "src": "728:26:3",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "742:12:3",
            "scope": 915,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFrensStorage_$3011",
              "typeString": "contract IFrensStorage"
            },
            "typeName": {
              "id": 622,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 621,
                "name": "IFrensStorage",
                "nameLocations": [
                  "728:13:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3011,
                "src": "728:13:3"
              },
              "referencedDeclaration": 3011,
              "src": "728:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFrensStorage_$3011",
                "typeString": "contract IFrensStorage"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 627,
            "nodeType": "VariableDeclaration",
            "src": "807:41:3",
            "nodes": [],
            "baseFunctions": [
              2872
            ],
            "constant": false,
            "functionSelector": "1dc82a75",
            "mutability": "mutable",
            "name": "poolByIds",
            "nameLocation": "839:9:3",
            "scope": 915,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 626,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 624,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "815:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "807:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 625,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "823:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 649,
            "nodeType": "FunctionDefinition",
            "src": "919:170:3",
            "nodes": [],
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "991:98:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 638,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "1001:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensStorage_$3011",
                        "typeString": "contract IFrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 639,
                      "name": "frensStorage_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 631,
                      "src": "1016:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensStorage_$3011",
                        "typeString": "contract IFrensStorage"
                      }
                    },
                    "src": "1001:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$3011",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "1001:28:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 643,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26430,
                        "src": "1050:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 644,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1070:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1074:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1070:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 642,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26626,
                      "src": "1039:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1039:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "1039:42:3"
                }
              ]
            },
            "documentation": {
              "id": 628,
              "nodeType": "StructuredDocumentation",
              "src": "855:59:3",
              "text": "@dev sets the storage contract and the token name/symbol"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4652454e53205368617265",
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "967:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ecbecac469104f4d50b6cdee80edb575321dc69156ea71f439031a32c50b4b3c",
                      "typeString": "literal_string \"FRENS Share\""
                    },
                    "value": "FRENS Share"
                  },
                  {
                    "hexValue": "4652454e53",
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "982:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8bd933cac16115dfc04a1aff836f3905cc5e73305ea8e74c23868f6c7eabf6aa",
                      "typeString": "literal_string \"FRENS\""
                    },
                    "value": "FRENS"
                  }
                ],
                "id": 636,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 633,
                  "name": "ERC721",
                  "nameLocations": [
                    "960:6:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27852,
                  "src": "960:6:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "960:30:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "mutability": "mutable",
                  "name": "frensStorage_",
                  "nameLocation": "945:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "931:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFrensStorage_$3011",
                    "typeString": "contract IFrensStorage"
                  },
                  "typeName": {
                    "id": 630,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 629,
                      "name": "IFrensStorage",
                      "nameLocations": [
                        "931:13:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3011,
                      "src": "931:13:3"
                    },
                    "referencedDeclaration": 3011,
                    "src": "931:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$3011",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "930:29:3"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "991:0:3"
            },
            "scope": 915,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 685,
            "nodeType": "FunctionDefinition",
            "src": "1142:285:3",
            "nodes": [],
            "body": {
              "id": 684,
              "nodeType": "Block",
              "src": "1184:243:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 657,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "1223:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 658,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1236:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1240:6:3",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1236:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 656,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26482,
                          "src": "1215:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1215:32:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520617265206e6f7420616c6c6f77656420746f206d696e74",
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1261:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        },
                        "value": "you are not allowed to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        }
                      ],
                      "id": 655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1194:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:106:3"
                },
                {
                  "assignments": [
                    665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 665,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "1318:3:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 684,
                      "src": "1310:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 664,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1310:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 668,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 666,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28075,
                      "src": "1324:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:13:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1310:27:3"
                },
                {
                  "expression": {
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 669,
                        "name": "poolByIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "1347:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 671,
                      "indexExpression": {
                        "id": 670,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "1357:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1347:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 674,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1372:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1376:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1372:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1364:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1364:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1364:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1347:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "1347:36:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 680,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 652,
                        "src": "1403:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 681,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "1416:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 679,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27402,
                        27431
                      ],
                      "referencedDeclaration": 27402,
                      "src": "1393:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 683,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:27:3"
                }
              ]
            },
            "baseFunctions": [
              2877
            ],
            "documentation": {
              "id": 650,
              "nodeType": "StructuredDocumentation",
              "src": "1095:42:3",
              "text": "@dev callable by the staking pools only"
            },
            "functionSelector": "6a627842",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1151:4:3",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "1164:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 685,
                  "src": "1156:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1155:21:3"
            },
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:0:3"
            },
            "scope": 915,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 697,
            "nodeType": "FunctionDefinition",
            "src": "1433:89:3",
            "nodes": [],
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "1486:36:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 693,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "1511:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 692,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27353,
                      "src": "1503:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1503:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 691,
                  "id": 695,
                  "nodeType": "Return",
                  "src": "1496:19:3"
                }
              ]
            },
            "baseFunctions": [
              2889
            ],
            "functionSelector": "4f558e79",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nameLocation": "1442:6:3",
            "parameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1454:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "1449:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1448:10:3"
            },
            "returnParameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "1480:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1479:6:3"
            },
            "scope": 915,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 710,
            "nodeType": "FunctionDefinition",
            "src": "1528:101:3",
            "nodes": [],
            "body": {
              "id": 709,
              "nodeType": "Block",
              "src": "1589:40:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 704,
                          "name": "poolByIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 627,
                          "src": "1607:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 706,
                        "indexExpression": {
                          "id": 705,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "1617:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1607:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 707,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1606:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 703,
                  "id": 708,
                  "nodeType": "Return",
                  "src": "1599:23:3"
                }
              ]
            },
            "baseFunctions": [
              2896
            ],
            "functionSelector": "0bc59b38",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolById",
            "nameLocation": "1537:11:3",
            "parameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1554:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "1549:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1548:10:3"
            },
            "returnParameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "1580:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1579:9:3"
            },
            "scope": 915,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 757,
            "nodeType": "FunctionDefinition",
            "src": "1754:463:3",
            "nodes": [],
            "body": {
              "id": 756,
              "nodeType": "Block",
              "src": "1856:361:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 722,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 713,
                        "src": "1881:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 721,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27730,
                      "src": "1866:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 724,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:23:3"
                },
                {
                  "assignments": [
                    726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 726,
                      "mutability": "mutable",
                      "name": "poolAddr",
                      "nameLocation": "1907:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 756,
                      "src": "1899:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 725,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1899:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 730,
                  "initialValue": {
                    "baseExpression": {
                      "id": 727,
                      "name": "poolByIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "1918:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 729,
                    "indexExpression": {
                      "id": 728,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 713,
                      "src": "1928:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1918:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1899:37:3"
                },
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "stakingPool",
                      "nameLocation": "1959:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 756,
                      "src": "1946:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPool_$3154",
                        "typeString": "contract IStakingPool"
                      },
                      "typeName": {
                        "id": 732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 731,
                          "name": "IStakingPool",
                          "nameLocations": [
                            "1946:12:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3154,
                          "src": "1946:12:3"
                        },
                        "referencedDeclaration": 3154,
                        "src": "1946:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3154",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 735,
                        "name": "poolAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "1986:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 734,
                      "name": "IStakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3154,
                      "src": "1973:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStakingPool_$3154_$",
                        "typeString": "type(contract IStakingPool)"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1973:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPool_$3154",
                      "typeString": "contract IStakingPool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1946:49:3"
                },
                {
                  "assignments": [
                    null,
                    null,
                    739
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 739,
                      "mutability": "mutable",
                      "name": "quitting",
                      "nameLocation": "2031:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 756,
                      "src": "2026:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 738,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2026:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 744,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 742,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 713,
                        "src": "2068:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 740,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "2043:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3154",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2055:12:3",
                      "memberName": "rageQuitInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3123,
                      "src": "2043:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_bool_$",
                        "typeString": "function (uint256) view external returns (uint256,uint256,bool)"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2043:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2005:71:3"
                },
                {
                  "condition": {
                    "id": 745,
                    "name": "quitting",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 739,
                    "src": "2089:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 754,
                    "nodeType": "Block",
                    "src": "2144:58:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 751,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 713,
                              "src": "2183:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 749,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "2165:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_FrensPoolShare_$915_$",
                                "typeString": "type(contract super FrensPoolShare)"
                              }
                            },
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2171:11:3",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27182,
                            "src": "2165:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2165:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 720,
                        "id": 753,
                        "nodeType": "Return",
                        "src": "2158:33:3"
                      }
                    ]
                  },
                  "id": 755,
                  "nodeType": "IfStatement",
                  "src": "2086:116:3",
                  "trueBody": {
                    "id": 748,
                    "nodeType": "Block",
                    "src": "2099:40:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 746,
                          "name": "poolAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 726,
                          "src": "2120:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 720,
                        "id": 747,
                        "nodeType": "Return",
                        "src": "2113:15:3"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              27182,
              27957
            ],
            "documentation": {
              "id": 711,
              "nodeType": "StructuredDocumentation",
              "src": "1635:114:3",
              "text": "@dev stakingPool is allowed during rageQuit, so the user cannot block the sale of the NFT by changing the allow"
            },
            "functionSelector": "081812fc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "1763:11:3",
            "overrides": {
              "id": 717,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 715,
                  "name": "ERC721",
                  "nameLocations": [
                    "1821:6:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27852,
                  "src": "1821:6:3"
                },
                {
                  "id": 716,
                  "name": "IERC721",
                  "nameLocations": [
                    "1829:7:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27968,
                  "src": "1829:7:3"
                }
              ],
              "src": "1812:25:3"
            },
            "parameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 713,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1783:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "1775:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1774:17:3"
            },
            "returnParameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "1847:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1846:9:3"
            },
            "scope": 915,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 789,
            "nodeType": "FunctionDefinition",
            "src": "2223:355:3",
            "nodes": [],
            "body": {
              "id": 788,
              "nodeType": "Block",
              "src": "2337:241:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "frensPoolShareTokenURI",
                      "nameLocation": "2371:22:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 788,
                      "src": "2347:46:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensPoolShareTokenURI_$2921",
                        "typeString": "contract IFrensPoolShareTokenURI"
                      },
                      "typeName": {
                        "id": 768,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 767,
                          "name": "IFrensPoolShareTokenURI",
                          "nameLocations": [
                            "2347:23:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2921,
                          "src": "2347:23:3"
                        },
                        "referencedDeclaration": 2921,
                        "src": "2347:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensPoolShareTokenURI_$2921",
                          "typeString": "contract IFrensPoolShareTokenURI"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 782,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "636f6e74726163742e61646472657373",
                                    "id": 776,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2471:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                      "typeString": "literal_string \"contract.address\""
                                    },
                                    "value": "contract.address"
                                  },
                                  {
                                    "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                                    "id": 777,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2491:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                      "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                    },
                                    "value": "FrensPoolShareTokenURI"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                      "typeString": "literal_string \"contract.address\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                      "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 774,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2454:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 775,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2458:12:3",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2454:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2454:62:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 773,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2444:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2444:73:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 771,
                            "name": "frensStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "2420:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFrensStorage_$3011",
                              "typeString": "contract IFrensStorage"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2433:10:3",
                          "memberName": "getAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2946,
                          "src": "2420:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2420:98:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 770,
                      "name": "IFrensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2921,
                      "src": "2396:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IFrensPoolShareTokenURI_$2921_$",
                        "typeString": "type(contract IFrensPoolShareTokenURI)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2396:123:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensPoolShareTokenURI_$2921",
                      "typeString": "contract IFrensPoolShareTokenURI"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2347:172:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 785,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "2568:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 783,
                        "name": "frensPoolShareTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "2536:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensPoolShareTokenURI_$2921",
                          "typeString": "contract IFrensPoolShareTokenURI"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2559:8:3",
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2920,
                      "src": "2536:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory)"
                      }
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2536:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 766,
                  "id": 787,
                  "nodeType": "Return",
                  "src": "2529:42:3"
                }
              ]
            },
            "baseFunctions": [
              2903,
              27112
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2232:8:3",
            "overrides": {
              "id": 763,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 761,
                  "name": "ERC721",
                  "nameLocations": [
                    "2288:6:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27852,
                  "src": "2288:6:3"
                },
                {
                  "id": 762,
                  "name": "IFrensPoolShare",
                  "nameLocations": [
                    "2296:15:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2911,
                  "src": "2296:15:3"
                }
              ],
              "src": "2279:33:3"
            },
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2258:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "2250:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2250:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2240:26:3"
            },
            "returnParameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "2322:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2321:15:3"
            },
            "scope": 915,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 818,
            "nodeType": "FunctionDefinition",
            "src": "2584:232:3",
            "nodes": [],
            "body": {
              "id": 817,
              "nodeType": "Block",
              "src": "2657:159:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 798,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "2680:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 817,
                      "src": "2667:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPool_$3154",
                        "typeString": "contract IStakingPool"
                      },
                      "typeName": {
                        "id": 797,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 796,
                          "name": "IStakingPool",
                          "nameLocations": [
                            "2667:12:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3154,
                          "src": "2667:12:3"
                        },
                        "referencedDeclaration": 3154,
                        "src": "2667:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3154",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 804,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 801,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "2712:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 800,
                          "name": "getPoolById",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 710,
                          "src": "2700:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2700:15:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 799,
                      "name": "IStakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3154,
                      "src": "2687:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStakingPool_$3154_$",
                        "typeString": "type(contract IStakingPool)"
                      }
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2687:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPool_$3154",
                      "typeString": "contract IStakingPool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2667:49:3"
                },
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "frensArt",
                      "nameLocation": "2736:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 817,
                      "src": "2726:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensArt_$2802",
                        "typeString": "contract IFrensArt"
                      },
                      "typeName": {
                        "id": 806,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 805,
                          "name": "IFrensArt",
                          "nameLocations": [
                            "2726:9:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2802,
                          "src": "2726:9:3"
                        },
                        "referencedDeclaration": 2802,
                        "src": "2726:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensArt_$2802",
                          "typeString": "contract IFrensArt"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 808,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "2747:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3154",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2752:10:3",
                      "memberName": "artForPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3067,
                      "src": "2747:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IFrensArt_$2802_$",
                        "typeString": "function () view external returns (contract IFrensArt)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2747:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensArt_$2802",
                      "typeString": "contract IFrensArt"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2726:38:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 814,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "2806:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 812,
                        "name": "frensArt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "2781:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensArt_$2802",
                          "typeString": "contract IFrensArt"
                        }
                      },
                      "id": 813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2790:15:3",
                      "memberName": "renderTokenById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2801,
                      "src": "2781:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory)"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2781:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 795,
                  "id": 816,
                  "nodeType": "Return",
                  "src": "2774:35:3"
                }
              ]
            },
            "baseFunctions": [
              2910
            ],
            "functionSelector": "a2d6c6da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renderTokenById",
            "nameLocation": "2593:15:3",
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2617:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "2609:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2609:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2608:12:3"
            },
            "returnParameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "2642:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2641:15:3"
            },
            "scope": 915,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 874,
            "nodeType": "FunctionDefinition",
            "src": "2822:413:3",
            "nodes": [],
            "body": {
              "id": 873,
              "nodeType": "Block",
              "src": "2964:271:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 833,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "3001:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 834,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "3007:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 835,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "3011:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 836,
                        "name": "batchSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 826,
                        "src": "3020:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 830,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2974:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_FrensPoolShare_$915_$",
                          "typeString": "type(contract super FrensPoolShare)"
                        }
                      },
                      "id": 832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2980:20:3",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28178,
                      "src": "2974:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2974:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 838,
                  "nodeType": "ExpressionStatement",
                  "src": "2974:56:3"
                },
                {
                  "assignments": [
                    841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 841,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "3053:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 873,
                      "src": "3040:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPool_$3154",
                        "typeString": "contract IStakingPool"
                      },
                      "typeName": {
                        "id": 840,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 839,
                          "name": "IStakingPool",
                          "nameLocations": [
                            "3040:12:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3154,
                          "src": "3040:12:3"
                        },
                        "referencedDeclaration": 3154,
                        "src": "3040:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3154",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 847,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 843,
                          "name": "poolByIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 627,
                          "src": "3073:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 845,
                        "indexExpression": {
                          "id": 844,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 824,
                          "src": "3083:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3073:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 842,
                      "name": "IStakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3154,
                      "src": "3060:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStakingPool_$3154_$",
                        "typeString": "type(contract IStakingPool)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3060:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPool_$3154",
                      "typeString": "contract IStakingPool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3040:52:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 848,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "3106:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3122:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3114:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 849,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3114:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3114:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3106:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 854,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "3128:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3142:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3134:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 855,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3134:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3134:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3128:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3106:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 872,
                  "nodeType": "IfStatement",
                  "src": "3102:127:3",
                  "trueBody": {
                    "id": 871,
                    "nodeType": "Block",
                    "src": "3146:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 864,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 824,
                                    "src": "3180:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 862,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 841,
                                    "src": "3168:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStakingPool_$3154",
                                      "typeString": "contract IStakingPool"
                                    }
                                  },
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3173:6:3",
                                  "memberName": "locked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3061,
                                  "src": "3168:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (uint256) view external returns (bool)"
                                  }
                                },
                                "id": 865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3168:20:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3192:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "3168:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e6f74207472616e7366657261626c65",
                              "id": 868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3199:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc5adcc6364a36f166c628224ef3f0e42e4865e6c0f9c19b8035158c5353f4f0",
                                "typeString": "literal_string \"not transferable\""
                              },
                              "value": "not transferable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc5adcc6364a36f166c628224ef3f0e42e4865e6c0f9c19b8035158c5353f4f0",
                                "typeString": "literal_string \"not transferable\""
                              }
                            ],
                            "id": 861,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3160:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3160:58:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 870,
                        "nodeType": "ExpressionStatement",
                        "src": "3160:58:3"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              28178
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "2831:20:3",
            "overrides": {
              "id": 828,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2955:8:3"
            },
            "parameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2869:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "2861:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2861:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 822,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2891:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "2883:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2883:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 824,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2908:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "2903:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 826,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nameLocation": "2930:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "2925:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2925:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2851:94:3"
            },
            "returnParameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2964:0:3"
            },
            "scope": 915,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 897,
            "nodeType": "FunctionDefinition",
            "src": "3241:199:3",
            "nodes": [],
            "body": {
              "id": 896,
              "nodeType": "Block",
              "src": "3276:164:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 880,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3307:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3311:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3307:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 884,
                                "name": "poolByIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 627,
                                "src": "3329:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 886,
                              "indexExpression": {
                                "id": 885,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 876,
                                "src": "3339:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3329:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3321:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 882,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3321:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3321:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3307:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f74206275726e207368617265732066726f6d206f7468657220706f6f6c73",
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3362:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3feaaf2056280d91c2d646c181396d9292c35880029cebf37f8765fc0aacf7a2",
                          "typeString": "literal_string \"cannot burn shares from other pools\""
                        },
                        "value": "cannot burn shares from other pools"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3feaaf2056280d91c2d646c181396d9292c35880029cebf37f8765fc0aacf7a2",
                          "typeString": "literal_string \"cannot burn shares from other pools\""
                        }
                      ],
                      "id": 879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3286:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3286:123:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 891,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:123:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 893,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "3425:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 892,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27575,
                      "src": "3419:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3419:14:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 895,
                  "nodeType": "ExpressionStatement",
                  "src": "3419:14:3"
                }
              ]
            },
            "baseFunctions": [
              2882
            ],
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "3250:4:3",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3260:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "3255:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3255:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3254:14:3"
            },
            "returnParameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3276:0:3"
            },
            "scope": 915,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 914,
            "nodeType": "FunctionDefinition",
            "src": "3446:251:3",
            "nodes": [],
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "3637:60:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 910,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "3678:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 908,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3654:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_FrensPoolShare_$915_$",
                          "typeString": "type(contract super FrensPoolShare)"
                        }
                      },
                      "id": 909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3660:17:3",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26463,
                      "src": "3654:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 907,
                  "id": 912,
                  "nodeType": "Return",
                  "src": "3647:43:3"
                }
              ]
            },
            "baseFunctions": [
              26463,
              28036,
              28960
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3455:17:3",
            "overrides": {
              "id": 904,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 901,
                  "name": "ERC721Enumerable",
                  "nameLocations": [
                    "3568:16:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28340,
                  "src": "3568:16:3"
                },
                {
                  "id": 902,
                  "name": "AccessControl",
                  "nameLocations": [
                    "3586:13:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26718,
                  "src": "3586:13:3"
                },
                {
                  "id": 903,
                  "name": "IERC165",
                  "nameLocations": [
                    "3601:7:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28961,
                  "src": "3601:7:3"
                }
              ],
              "src": "3559:50:3"
            },
            "parameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3489:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "3482:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3472:34:3"
            },
            "returnParameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "3627:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3627:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3626:6:3"
            },
            "scope": 915,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 608,
              "name": "IFrensPoolShare",
              "nameLocations": [
                "579:15:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2911,
              "src": "579:15:3"
            },
            "id": 609,
            "nodeType": "InheritanceSpecifier",
            "src": "579:15:3"
          },
          {
            "baseName": {
              "id": 610,
              "name": "ERC721Enumerable",
              "nameLocations": [
                "600:16:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28340,
              "src": "600:16:3"
            },
            "id": 611,
            "nodeType": "InheritanceSpecifier",
            "src": "600:16:3"
          },
          {
            "baseName": {
              "id": 612,
              "name": "AccessControl",
              "nameLocations": [
                "622:13:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26718,
              "src": "622:13:3"
            },
            "id": 613,
            "nodeType": "InheritanceSpecifier",
            "src": "622:13:3"
          },
          {
            "baseName": {
              "id": 614,
              "name": "Ownable",
              "nameLocations": [
                "641:7:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26904,
              "src": "641:7:3"
            },
            "id": 615,
            "nodeType": "InheritanceSpecifier",
            "src": "641:7:3"
          }
        ],
        "canonicalName": "FrensPoolShare",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          915,
          26904,
          26718,
          28340,
          2911,
          28371,
          27852,
          28398,
          27968,
          28949,
          28961,
          26791,
          28750
        ],
        "name": "FrensPoolShare",
        "nameLocation": "557:14:3",
        "scope": 916,
        "usedErrors": [],
        "usedEvents": [
          26730,
          26739,
          26748,
          26805,
          27867,
          27876,
          27885
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 3
}