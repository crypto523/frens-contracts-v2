{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensOracle",
      "outputs": [
        {
          "internalType": "contract FrensOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool2",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBalanceOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetPoolById",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIsApprovedForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintingDirectly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwnerOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSafeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenByIndex",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUnauthorizedAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testexists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "736:10076:49:-:0;;;;;;1594:4:25;736:10076:49;;;;;;;;;1777:42;1195;736:10076;;;;;;;;;1187:51;736:10076;;;1187:51;736:10076;1385:42;736:10076;1385:42;736:10076;;;1385:42;736:10076;1461:42;736:10076;1461:42;736:10076;;;1461:42;736:10076;;1545:25;736:10076;;;1545:25;736:10076;1604:42;736:10076;1604:42;736:10076;;;1604:42;736:10076;1691:42;736:10076;1683:51;736:10076;;;1683:51;736:10076;1769:51;736:10076;;;1769:51;736:10076;;1842:101;736:10076;;:::i;:::-;;;;;;;;;-1:-1:-1;;736:10076:49;1842:101;736:10076;;;;;;;;-1:-1:-1;;;736:10076:49;;1980:69;736:10076;;;;;;;:::i;:::-;;;;;;-1:-1:-1;736:10076:49;;1980:69;736:10076;1980:69;736:10076;;;;;;;;2073:197;736:10076;;:::i;:::-;;;;;;;-1:-1:-1;736:10076:49;2073:197;736:10076;;;;;;-1:-1:-1;;;;;;;;;;;736:10076:49;;;;;;;;;;;2304:66;;736:10076;;;;;;;;;;;2073:197;736:10076;;;;;-1:-1:-1;;;;;;;;;;;736:10076:49;;;;;;;;;;;;;;;;;1980:69;736:10076;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1842:101;736:10076;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610156200001357600080fd5b60003560e01c806309d26b6c1462002a685780630a9254e414620020105780630c56ae3b1462001fe55780631aeb10a61462001ca0578063223e6be41462001c7557806325b5e62f1462001c4a57806330dbf8871462001c1f5780633a7684631462001bee5780633df77c0e14620018465780634fc1a73e14620015f8578063524ad4951462001496578063591167c7146200146b5780635f583c1d146200144057806363c72d6014620014155780636a7179c3146200130c57806370557298146200106a57806371a29bb71462000e11578063796a773d1462000d0d578063874962501462000ac157806390ec5d9614620005a857806394cd95e3146200057d5780639e535c691462000345578063a1b8adcb146200031a578063ba414fa614620002f1578063bc073b1814620002c6578063bc48e947146200029b578063c09cec771462000270578063cc91c4361462000245578063edc91a92146200021a578063f8ccbf4714620001f2578063fa7626d414620001cd5763fb47e3a2146200019d57600080fd5b34620001c8576000366003190112620001c8576016546040516001600160a01b039091168152602090f35b600080fd5b34620001c8576000366003190112620001c857602060ff600054166040519015158152f35b34620001c8576000366003190112620001c857602060ff60005460101c166040519015158152f35b34620001c8576000366003190112620001c8576010546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576011546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576017546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576009546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c857600a546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c85760206200031062002d51565b6040519015158152f35b34620001c8576000366003190112620001c857600c546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c857600f54604051638da5cb5b60e01b80825260209290916001600160a01b039184908290600490829086165afa80156200051957620003a1916000916200055b575b503062003051565b620003b0816016541662002e3c565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c8576000809160646040518094819363f28dceb360e01b83528960048401528960248401527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448401525af18015620005195762000549575b5080600f5416816017541690803b15620001c8576000809160246040518094819363f2fde38b60e01b9788845260048401525af18015620005195762000537575b50620004723062002e3c565b81600f5416908260175416823b15620001c8576024600092836040519586948593845260048401525af18015620005195762000525575b5082816017541691600f54169260046040518095819382525afa9182156200051957620004e193600093620004e3575b505062003051565b005b62000508929350803d1062000511575b620004ff818362002cad565b81019062002e1b565b908380620004d9565b503d620004f3565b6040513d6000823e3d90fd5b620005309062002c61565b83620004a9565b620005429062002c61565b8462000466565b620005549062002c61565b8362000425565b620005769150853d87116200051157620004ff818362002cad565b8562000399565b34620001c8576000366003190112620001c8576008546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576016546001600160a01b0390620005d490821662002e3c565b80600d5416803b15620001c8576000600191600460405180948193633e7ea84160e21b83525af18015620005195762000aaf575b5080600f541681601654169160405190632f745c5960e01b8252836004830152600060248301526020938483604481875afa9283156200051957859060009462000a77575b506024929394604051938480926331a9108f60e11b82528860048301525afa9081156200051957620006899260009262000a53575b5062003051565b6017620006998282541662002e3c565b737109709ecfa91a80626ff3989d68f67f5b1dd12d91823b15620001c85760405163f28dceb360e01b815260008180620006d66004820162003250565b038183885af18015620005195762000a41575b5080600f5416928160165416938284541690803b15620001c857604051632142170760e11b8082526001600160a01b0397881660048301529690921660248301526044820187905260009082908183816064810103925af18015620005195762000a2f575b506200075e826016541662002e3c565b81600f5416826016541683855416823b15620001c8576040518781526001600160a01b0392831660048201529116602482015260448101879052906000908290606490829084905af18015620005195762000a1d575b506024828454168784600f5416604051938480926331a9108f60e11b82528b60048301525afa9081156200051957620007f692600092620009f9575062003051565b620008048284541662002e3c565b803b15620001c8576000809160846040518094819363f28dceb360e01b83528b6004840152603260248401527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448401527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648401525af180156200051957620009e7575b5080600f54168183541682600b541690823b15620001c8576040518681526001600160a01b0391821660048201529116602482015260448101869052906000908290606490829084905af180156200051957620009d5575b506040516101f38082018281106001600160401b03821117620009bf5782916200bed1833903906000f080156200051957620009178284541662002e3c565b818080600f5416945416911693833b15620001c8576040519081526001600160a01b039182166004820152908416602482015260448101859052916000908390606490829084905af191821562000519578592620009ad575b50600f5416926024604051809581936331a9108f60e11b835260048301525afa9182156200051957620004e193600093620004e357505062003051565b620009b89062002c61565b8562000970565b634e487b7160e01b600052604160045260246000fd5b620009e09062002c61565b85620008d8565b620009f29062002c61565b8562000880565b62000a15919250893d8b116200051157620004ff818362002cad565b908962000682565b62000a289062002c61565b86620007b4565b62000a3a9062002c61565b866200074e565b62000a4c9062002c61565b85620006e9565b62000a6f919250863d88116200051157620004ff818362002cad565b908662000682565b80939450813d831162000aa7575b62000a91818362002cad565b81010312620001c857846024925193926200064d565b503d62000a85565b62000aba9062002c61565b8162000608565b34620001c8576000366003190112620001c8576016546001600160a01b039062000aed90821662003159565b60005b60ff811062000afb57005b600d9082825416803b15620001c85760405191633e7ea84160e21b92838152600081600481600180975af18015620005195762000cfb575b50600f918583541660405193848094630178b36760e31b9384835281600484015260209687916024998a915afa918215620005195762000b8c9262000b869160009162000cd9575b508b8b541662003051565b62002f1a565b600e908982541691823b15620001c8576000869360048b604051968793849283525af19283156200051957889362000cc7575b50868b855416604051948580928982528660048301525afa801562000519578b62000b869262000bfb9560009362000ca3575b50541662003051565b9588885416803b15620001c8576004600092604051968793849283525af190811562000519578493899262000c91575b505416936040518095819382528760048301525afa908115620005195762000c679462000b8693879260009462000c6d575b5050541662003051565b62000af0565b62000c88929450803d106200051157620004ff818362002cad565b91878062000c5d565b62000c9c9062002c61565b8962000c2b565b62000cbf9193508a3d8c116200051157620004ff818362002cad565b918e62000bf2565b62000cd29062002c61565b8b62000bbf565b62000cf49150883d8a116200051157620004ff818362002cad565b8c62000b7b565b62000d069062002c61565b8562000b33565b34620001c8576000366003190112620001c8576016546001600160a01b039062000d3990821662002e3c565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c85760405163f28dceb360e01b815260206004820152601b60248201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044820152906000908290606490829084905af18015620005195762000dff575b5080600f54169060165416813b15620001c8576000916024839260405194859384926335313c2160e11b845260048401525af18015620005195762000df457005b620004e19062002c61565b62000e0a9062002c61565b8162000db3565b34620001c8576000366003190112620001c85760005b60ff811062000e3257005b601680546001600160a01b03919062000e4d90831662002e3c565b600d918083541690813b15620001c85760405191633e7ea84160e21b92838152600081600481600180965af18015620005195762001058575b50600f8281541690604051809881976331a9108f60e11b948584528260048501526020998a9160249d8e915afa801562000519578762000b869262000ed6956000936200103c5750541662003051565b9460179562000ee88688541662002e3c565b85600e541690813b15620001c857600086926004604051809581938883525af191821562000519578b926200102a575b508887855416604051938480928982528560048301525afa908115620005195762000b8662000f5792899460009162001008575b50848b541662003051565b9862000f668289541662002e3c565b5416803b15620001c8576004600092604051968793849283525af190811562000519578693859262000ff6575b505416966040518098819382528860048301525afa918215620005195762000fcc9562000b869460009462000fd2575050541662003051565b62000e27565b62000fed929450803d106200051157620004ff818362002cad565b91868062000c5d565b620010019062002c61565b8962000f93565b6200102391508c8d3d106200051157620004ff818362002cad565b8e62000f4c565b620010359062002c61565b8b62000f18565b62000cbf9193508c8d3d106200051157620004ff818362002cad565b620010639062002c61565b8662000e86565b34620001c8576000366003190112620001c8576016546001600160a01b03906200109690821662002e3c565b80600d5416803b15620001c8576000600191600460405180948193633e7ea84160e21b83525af180156200051957620012fa575b5080600f54169080601654169160405192632f745c5960e01b8452806004850152600060248501526020918285604481845afa9485156200051957600095620012c3575b509082602492604051938480926331a9108f60e11b82528960048301525afa91821562000519576200114a936000936200129f57505062003051565b62001159816017541662002e3c565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c8576000604051809263f28dceb360e01b8252818381620011986004820162003250565b03925af1801562000519576200128d575b5080600f541690806016541691816017541690803b15620001c8576040516323b872dd60e01b8082526001600160a01b0395861660048301529490921660248301526044820185905260009082908183816064810103925af1801562000519576200127b575b506200121f816016541662002e3c565b80600f54168160165416916017541691813b15620001c8576040519384526001600160a01b0390811660048501529190911660248301526044820192909252906000908290606490829084905af18015620005195762000df457005b620012869062002c61565b836200120f565b620012989062002c61565b82620011a9565b620012ba929350803d106200051157620004ff818362002cad565b908580620004d9565b919094508282813d8311620012f2575b620012df818362002cad565b81010312620001c857905193826200110e565b503d620012d3565b620013059062002c61565b81620010ca565b34620001c8576000366003190112620001c8576016546001600160a01b03906200133890821662003159565b60005b60ff81106200134657005b81600d5416803b15620001c8576000600191600460405180948193633e7ea84160e21b83525af18015620005195762001403575b5081600f5416906040518092634f6ccce760e01b825282600483015281602460209586935afa9283156200051957600093620013ca575b505062000b8681620013c4931462002f40565b6200133b565b90809350813d8311620013fb575b620013e4818362002cad565b81010312620001c85790519062000b8681620013b1565b503d620013d8565b6200140e9062002c61565b826200137a565b34620001c8576000366003190112620001c8576015546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c857600e546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c857600f546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576016546001600160a01b0390620014c290821662003159565b60005b60ff8110620014d057005b600f908282541660405192839182634f558e7960e01b91828252856004830152602094859160249889915afa801562000519576200151991600091620015d6575b501562002f40565b85600d541691823b15620001c8576000600193600460405180968193633e7ea84160e21b83525af1908115620005195784938892620015c4575b505416946040518096819382528660048301525afa801562000519576200158a9362000b869260009262001590575b505062002f40565b620014c5565b620015b49250803d10620015bc575b620015ab818362002cad565b81019062002d37565b858062001582565b503d6200159f565b620015cf9062002c61565b8862001553565b620015f19150853d8711620015bc57620015ab818362002cad565b8862001511565b34620001c8576000366003190112620001c8576016546001600160a01b03906200162490821662003159565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c85760405163f28dceb360e01b80825260206004830152601b60248301527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044830152919060008160648183865af18015620005195762001834575b5082600f54168360165416813b15620001c8576000916024839260405194859384926335313c2160e11b845260048401525af18015620005195762001822575b50803b15620001c85760405182815260008180620016fd600482016200329e565b038183865af18015620005195762001810575b5082600f541691836016541692803b15620001c85760008091604460405180948193632f2ff15d60e01b998a84527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6600485015260248401525af180156200051957620017fe575b50813b15620001c85760009060405192839182528183816200179d600482016200329e565b03925af180156200051957620017ec575b5081600f54169160165416823b15620001c8576044600092836040519586948593845282600485015260248401525af18015620005195762000df457005b620017f79062002c61565b82620017ae565b620018099062002c61565b8462001778565b6200181b9062002c61565b8362001710565b6200182d9062002c61565b83620016dc565b6200183f9062002c61565b836200169c565b34620001c8576000366003190112620001c857601680546001600160a01b0391906200187490831662003159565b6000915b60ff83106200188357005b600d81815416803b15620001c85760405191633e7ea84160e21b8352600083600481600180965af19283156200051957869362001bdc575b50600f80548654604051632f745c5960e01b81529087166001600160a01b031660048201526024810198909852602097929088908490881681806044810103915afa92831562000519578693869160009162001ba4575b501460405191620019238362002c91565b82526c06669727374206973206973203609c1b89830152801562001b5c575b5050541694838554169181604051809881956370a0823160e01b835260048301526024998a915afa928315620005195760009362001b27575b5083019182841162001b1257620019d1949596506040516200199d8162002c91565b601181527073686f756c6420686176652069202b203160781b83820152838214159081620019d9575b505050505062002f1a565b919062001878565b62001a0c7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583916040519182918262003206565b0390a162001a1d575b8080620019c6565b6000805160206200c0c483398151915260806040518481526022858201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b6060820152a1604051926040845262001a9b60408501604090600a8152690808115e1c1958dd195960b21b60208201520190565b9083850152837fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89485920390a16040519182916040835262001af860408401604090600a815269080808081058dd1d585b60b21b60208201520190565b918301520390a162001b0962002f9b565b84808062001a15565b86634e487b7160e01b60005260116004526000fd5b9092508181813d831162001b54575b62001b42818362002cad565b81010312620001c8575191876200197b565b503d62001b36565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358362001b9362001b9c936040519182918262003206565b0390a162002f40565b878062001942565b945050508783813d831162001bd4575b62001bc0818362002cad565b81010312620001c857848693518a62001912565b503d62001bb4565b62001be79062002c61565b86620018bb565b34620001c8576000366003190112620001c8576020604051737109709ecfa91a80626ff3989d68f67f5b1dd12d8152f35b34620001c8576000366003190112620001c857600b546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576012546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576013546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c857601680546001600160a01b03919062001cce90831662003159565b60005b60ff811062001cdc57005b82600d5416803b15620001c8576000600191600460405180948193633e7ea84160e21b83525af18015620005195762001fd3575b50600f80548354604051632f745c5960e01b81529086166001600160a01b031660048201526024810184905291929160209182908290881681806044810103915afa80156200051957839060009062001f9b575b62001d7192501462002f40565b84835416906040519182828163020604bf60e21b9384825287600483015260249687915afa80156200051957889160009162001f79575b50168062001e83575b5086855416906017958887541692803b15620001c85760405163095ea7b360e01b81526001600160a01b03949094166004850152602484018790526000908490604490829084905af1908115620005195784938a9262001e71575b505416936040518095819382528760048301525afa908115620005195762001e479462000b8693889260009462001e4d575050541662003051565b62001cd1565b62001e68929450803d106200051157620004ff818362002cad565b91888062000c5d565b62001e7c9062002c61565b8a62001e0c565b6000805160206200c0c483398151915260806040518581526025868201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b6060820152a1604051906040825262001f0460408301604090600a8152690808115e1c1958dd195960b21b60208201520190565b9084830152817f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9283920390a1604051604081528062001f5f60408201604090600a815269080808081058dd1d585b60b21b60208201520190565b6000868301520390a162001f7262002f9b565b8762001db1565b62001f949150843d86116200051157620004ff818362002cad565b8962001da8565b50508181813d831162001fcb575b62001fb5818362002cad565b81010312620001c8578262001d71915162001d64565b503d62001fa9565b62001fde9062002c61565b8362001d10565b34620001c8576000366003190112620001c857600d546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576040516106528082018281106001600160401b03821117620009bf57829162008ac5833903906000f080156200051957600b80546001600160a01b0319166001600160a01b039290921691821790556040517f65787465726e616c2e636f6e74726163742e6164647265737300000000000000602082018181526a535356526567697374727960a81b60398401526024808452939192620020c48162002c75565b5190206012546001600160a01b0316823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af18015620005195762002a56575b5060018060a01b03600b541660405160208101908382526e11195c1bdcda5d10dbdb9d1c9858dd608a1b603982015260288152620021588162002c75565b5190206011546001600160a01b0316823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af18015620005195762002a44575b5060018060a01b03600b5416906040516020810191825262454e5360e81b6039820152601c8152620021e08162002c91565b5190206013546001600160a01b0316823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af18015620005195762002a32575b50600b54604051906001600160a01b031661285c8083016001600160401b038111848210176200299c5760209284926200504e843981520301906000f080156200051957600f80546001600160a01b0319166001600160a01b03928316908117909155600b546040516f636f6e74726163742e6164647265737360801b602082019081526d4672656e73506f6f6c536861726560901b6030830152601e82529190931692620022e58162002c91565b51902090823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af18015620005195762002a20575b50600b54604051906001600160a01b0316612dba8083016001600160401b038111848210176200299c57602092849262009117843981520301906000f080156200051957600c80546001600160a01b0319166001600160a01b03928316908117909155600b546040516f636f6e74726163742e6164647265737360801b60208201908152715374616b696e67506f6f6c466163746f727960701b6030830152602282529190931692620023e38162002c75565b51902090823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af18015620005195762002a0e575b50600f54600c546001600160a01b039182169116813b15620001c857600091604483926040519485938492632f2ff15d60e01b8452826004850152888401525af180156200051957620029fc575b50600b54604051906001600160a01b03166104f38083016001600160401b038111848210176200299c57602092849262004b5b843981520301906000f080156200051957601080546001600160a01b0319166001600160a01b03928316908117909155600b546040516f636f6e74726163742e6164647265737360801b602082019081526a4672656e734f7261636c6560a81b6030830152601b82529190931692620025288162002c91565b51902090823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af180156200051957620029ea575b50600b54604051906001600160a01b0316610d268083016001600160401b038111848210176200299c57602092849262003e35843981520301906000f080156200051957600980546001600160a01b0319166001600160a01b03928316908117909155600b546040516f636f6e74726163742e6164647265737360801b602082019081526e233932b739a6b2ba30a432b63832b960891b6030830152601f82529190931692620026238162002c91565b51902090823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af180156200051957620029d8575b50600b54604051906001600160a01b03166001600160401b0361121b830190811190831117620029c35761121b620078aa833961121b82015260208161121b81010301906000f080156200051957600a80546001600160a01b0319166001600160a01b03928316908117909155600b546040516f636f6e74726163742e6164647265737360801b60208201908152754672656e73506f6f6c5368617265546f6b656e55524960501b60308301526026825291909316926200272f8162002c75565b51902090823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af180156200051957620029b1575b50600b54604051906001600160a01b0316610acf8083016001600160401b038111848210176200299c57602092849262003366843981520301906000f080156200051957600880546001600160a01b0319166001600160a01b03928316179055600b546040516f636f6e74726163742e6164647265737360801b602082019081526a4672656e734f7261636c6560a81b6030830152601b82529190921691620028238162002c91565b5190206010546001600160a01b0316823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af1801562000519576200298a575b50600c54601554604051630319e90960e41b8082526001600160a01b0392831660048301526000858301819052919390926020928592604492849291165af18015620005195760209260009162002968575b50600d80546001600160a01b0319166001600160a01b03928316179055600c5460155460405193845282166004840152600094830185905291938492604492849291165af1908115620005195760009162002944575b50600e80546001600160a01b0319166001600160a01b0392909216919091179055005b62002961915060203d6020116200051157620004ff818362002cad565b8162002921565b620029839150833d85116200051157620004ff818362002cad565b84620028cb565b620029959062002c61565b8162002879565b84634e487b7160e01b60005260416004526000fd5b620029bc9062002c61565b816200277a565b82634e487b7160e01b60005260416004526000fd5b620029e39062002c61565b816200266e565b620029f59062002c61565b8162002573565b62002a079062002c61565b816200247c565b62002a199062002c61565b816200242e565b62002a2b9062002c61565b8162002330565b62002a3d9062002c61565b8162002236565b62002a4f9062002c61565b82620021ae565b62002a619062002c61565b826200211a565b34620001c8576000366003190112620001c8576016546001600160a01b039062002a9490821662003159565b60005b6040811062002c075750600f5460165460175460405163e985e9c560e01b8082529285166001600160a01b0390811660048301529185169091166024820152602093919284908290604490829086165afa8015620005195762002b049160009162002be557501562002f40565b80600f5416918160175416833b15620001c85760009360448592604051968793849263a22cb46560e01b84526004840152600160248401525af1918215620005195762002b9093859362002bd3575b50600f546016546017546040519485526001600160a01b039184168216600486015283161660248401529193849290911690829081906044820190565b03915afa9081156200051957620004e19260009262002bb157505062002f40565b62002bcb9250803d10620015bc57620015ab818362002cad565b828062001582565b62002bde9062002c61565b8562002b53565b62002c009150853d8711620015bc57620015ab818362002cad565b8562001511565b81600d541690813b15620001c8576000600192600460405180958193633e7ea84160e21b83525af1918215620005195762002c499262002c4f575b5062002f1a565b62002a97565b62002c5a9062002c61565b8362002c42565b6001600160401b038111620009bf57604052565b606081019081106001600160401b03821117620009bf57604052565b604081019081106001600160401b03821117620009bf57604052565b90601f801991011681019081106001600160401b03821117620009bf57604052565b60005b83811062002ce35750506000910152565b818101518382015260200162002cd2565b3d1562002d32573d906001600160401b038211620009bf576040519162002d26601f8201601f19166020018462002cad565b82523d6000602084013e565b606090565b90816020910312620001c857518015158103620001c85790565b6000805460081c60ff161562002d6b575460081c60ff1690565b80737109709ecfa91a80626ff3989d68f67f5b1dd12d803b62002d8d57505090565b81925060405182602082018381526519985a5b195960d21b60408401526040835262002db98362002c75565b62002df56024604051809362002de46020830197630667f9d760e41b89525180928585019062002ccf565b810103600481018452018262002cad565b51925af15062002e1862002e0862002cf4565b6020808251830101910162002d37565b90565b90816020910312620001c857516001600160a01b0381168103620001c85790565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c85760405163c88a5e6d60e01b81526001600160a01b0390921660048301819052600160801b6024840152600092838160448183875af1801562002f0f5762002ef9575b50813b1562002ef557829160248392604051948593849263ca669fa760e01b845260048401525af1801562002eea5762002ed3575050565b62002edf829162002c61565b62002ee75750565b80fd5b6040513d84823e3d90fd5b8280fd5b62002f079093919362002c61565b913862002e9b565b6040513d86823e3d90fd5b600019811462002f2a5760010190565b634e487b7160e01b600052601160045260246000fd5b1562002f4857565b6000805160206200c0c4833981519152606060405160208152601760208201527f4572726f723a20417373657274696f6e204661696c65640000000000000000006040820152a162002f9962002f9b565b565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b62002fca575b5061010061ff00196000541617600055565b6040519060208201908082526519985a5b195960d21b6040840152600160608401526060835260808301918383106001600160401b03841117620009bf576000836200303a60248397849760405260a08101956370ca10bb60e01b875262002de48251809260a485019062002ccf565b51925af1506200304962002cf4565b503862002fb8565b6001600160a01b0391821691168181036200306a575050565b62003146906040906000805160206200c0c48339815191526080835160208152602560208201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b6164648582015264726573735d60d81b6060820152a1815193828552620030f0838601604090600a8152690808115e1c1958dd195960b21b60208201520190565b906020860152847f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9586920390a181519282849384528301604090600a815269080808081058dd1d585b60b21b60208201520190565b9060208301520390a162002f9962002f9b565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c85760405163c88a5e6d60e01b81526001600160a01b0390921660048301819052600160801b6024840152600092838160448183875af1801562002f0f57620031f0575b50813b1562002ef55782916024839260405194859384926303223eab60e11b845260048401525af1801562002eea5762002ed3575050565b620031fe9093919362002c61565b9138620031b8565b60a09160408252600560408301526422b93937b960d91b60608301526080602083015262003244815180928160808601526020868601910162002ccf565b601f01601f1916010190565b60809060208152602d60208201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b60608201520190565b60e09060208152609460208201527f416363657373436f6e74726f6c3a206163636f756e742030783030303030303060408201527f303030303030303030303030303030303030303030303030303030306131316360608201527f65206973206d697373696e6720726f6c6520307830303030303030303030303060808201527f303030303030303030303030303030303030303030303030303030303030303060a082015273030303030303030303030303030303030303030360641b60c0820152019056fe60803461007457601f610acf38819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b031916919091179055604051610a3f90816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b6000803560e01c63a2d6c6da1461002c57600080fd5b346108ff57602093846003193601126108fb5781546f636f6e74726163742e6164647265737360801b8685018181526e233932b739a6b2ba30a432b63832b960891b6030870152601f86526001600160a01b039584359493871693919061009281610925565b519020928751936321f8a72160e01b90818652838601526024948a818781865afa90811561088c5790899189916108de575b50169589518b81019086825265141b519bdb9d60d21b6030820152601681526100ec81610925565b519020918a5192818452858401528b838881875afa9283156108535789936108bf575b508a518c81019087825264576176657360d81b60308201526015815261013481610925565b519020958b5196828852868801528c878981885afa9687156108b5578d929189918c99610896575b508d51848101918252684672656e734c6f676f60b81b60308201526019815261018481610925565b519020918d5196879384928352898301525afa92831561088c57889361085d575b50895163ef21184f60e01b815284810182905295888782818b5afa96871561085357908992918398610837575b508b51809981936324a8b96b60e21b8352888301525afa9586156107ed578895949392918891829861081b575b50838b51809b81936378bf42b960e11b8352165afa9788156107ed5787986107f7575b509086859392828b51809881936305b3806b60e11b8352165afa9485156107ed579087929183966107d1575b5089516354ea17bf60e11b81529384928391165afa9485156107c65792887f3c7465787420666f6e742d73697a653d2231352e352220783d2232303022207997969361076c9693866103829796610796575b50506401022aa24160dd1b908a51998a968488019a651e3232b3399f60d11b8c527f3c6c696e6561724772616469656e742069643d226772616431222078313d223060268a01527f25222079313d223025222078323d2231303025222079323d2231303025223e0060468a01527f3c73746f70206f66667365743d22302522207374796c653d2273746f702d636f60658a01527f6c6f723a233366313965653b73746f702d6f7061636974793a3122202f3e000060858a01527f3c73746f70206f66667365743d223130302522207374796c653d2273746f702d60a38a01527f636f6c6f723a233534646165303b73746f702d6f7061636974793a3122202f3e60c38a0152701e17b634b732b0b923b930b234b2b73a1f60791b60e38a01526103d2815180928860f48d019101610902565b88017f3c72656374206865696768743d22343030222077696474683d2234303022206660f48201527334b6361e913ab9361411b3b930b218949110179f60611b61011482015286519061042e8261012899898b85019101610902565b0161044182518093888a85019101610902565b01948501527f3d223136332220746578742d616e63686f723d226d6964646c652220666f6e746101488501527f2d66616d696c793d2253616e732c417269616c22206c65747465722d737061636101688501527434b7339e911b11103334b6361e913bb434ba32911f60591b6101888501526611115413d4d25560ca1b61019d850152661e17ba32bc3a1f60c91b93846101a48201527f3c7465787420666f6e742d73697a653d2234352220783d223230302220793d226101ab8201527f3231322220746578742d616e63686f723d226d6964646c65222020666f6e742d6101cb8201527f7765696768743d223931302220666f6e742d66616d696c793d2253616e732c416101eb8201527f7269616c22206c65747465722d73706163696e673d222d31222066696c6c3d2261020b820152663bb434ba32911f60c91b61022b82015261059982518093610232968785019101610902565b0191820152816102378201527f3c7465787420666f6e742d73697a653d2231382e372220783d2232303022207961023e8201527f3d223234332220746578742d616e63686f723d226d6964646c652220666f6e7461025e8201527f2d66616d696c793d225065726d616e656e74204d61726b6572222066696c6c3d61027e82015267113bb434ba32911f60c11b61029e8201526f4652454e5320504f4f4c205354414b4560801b6102a6820152816102b68201527f3c7265637420783d2232372220793d2233343522206865696768743d223330226102bd8201527f2077696474683d22333436222066696c6c3d222334353534454122206f7061636102dd8201526a34ba3c9e91171a1110179f60a91b6102fd8201527f3c7465787420666f6e742d73697a653d2231302220783d223230302220793d226103088201527f3336352220746578742d616e63686f723d226d6964646c652220666f6e742d776103288201527f65696768743d22626f6c642220666f6e742d66616d696c793d2253616e732c41610348820152723934b0b611103334b6361e913bb434ba32911f60691b6103688201528251906107588261037b958d8785019101610902565b019182015203610362810185520183610957565b6107888351948593818552519283809286015285850190610902565b601f01601f19168101030190f35b6401022aa24160dd1b929650906107be913d8091833e6107b68183610957565b81019061099d565b9490386102a0565b8751903d90823e3d90fd5b6107e69196503d8085833e6107b68183610957565b943861024e565b89513d89823e3d90fd5b85939291985061081188913d8084833e6107b68183610957565b9891929350610222565b6108309198503d8084833e6107b68183610957565b96386101ff565b61084c9198503d8085833e6107b68183610957565b96386101d2565b8b513d8b823e3d90fd5b61087e9193508b3d8d11610885575b6108768183610957565b810190610979565b91386101a5565b503d61086c565b8a513d8a823e3d90fd5b6108ae919950843d8611610885576108768183610957565b973861015c565b8c513d8c823e3d90fd5b6108d79193508c8d3d10610885576108768183610957565b913861010f565b6108f591508c8d3d10610885576108768183610957565b386100c4565b5080fd5b80fd5b60005b8381106109155750506000910152565b8181015183820152602001610905565b6040810190811067ffffffffffffffff82111761094157604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761094157604052565b9081602091031261099857516001600160a01b03811681036109985790565b600080fd5b60208183031261099857805167ffffffffffffffff9182821161099857019082601f8301121561099857815190811161094157604051926109e8601f8301601f191660200185610957565b8184526020828401011161099857610a069160208085019101610902565b9056fea26469706673582212203fd81d9bb20f7e1abde5dfba47fb59f61ba2ac0b60d2bf0dbf89df0c4d13590364736f6c634300081100336080604090808252346101535780610d26803803809161001f8285610158565b833960209283918101031261015357516001600160a01b0380821692909183900361015357600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b0384118585101761013d5760248484938193828c52885190206321f8a72160e01b835260448901525afa928315610132576000936100f5575b5050501690600054161760005551610baa908161017c8239f35b813d831161012b575b6101088185610158565b81010312610127575190828216820361012457503880806100db565b80fd5b5080fd5b503d6100fe565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761013d5760405256fe60806040526004361015610013575b600080fd5b60003560e01c806392a2e5ac14610063578063de1c7f701461005a578063edd148a2146100515763ef21184f1461004957600080fd5b61000e6101eb565b5061000e6101bd565b5061000e610178565b3461000e576100bc6100b0610077366100f9565b6020608060248160018060a01b0394856000541690630178b36760e31b83526084525afa80156100ec575b6000906100c0575b16610ac5565b60405191829182610153565b0390f35b5060203d81116100e5575b806100d86100e092610328565b60800161037a565b6100aa565b503d6100cb565b6100f46103a7565b6100a2565b602090600319011261000e5760043590565b60005b83811061011e5750506000910152565b818101518382015260200161010e565b906020916101478151809281855285808601910161010b565b601f01601f1916010190565b90602061016492818152019061012e565b90565b6001600160a01b0381160361000e57565b503461000e57602036600319011261000e5761019e60043561019981610167565b610585565b906100bc6040519283921515835260406020840152604083019061012e565b503461000e576100bc6101d76101d2366100f9565b6103fd565b60405191829160208352602083019061012e565b503461000e576100bc6100b0610200366100f9565b60005461027990610221906001600160a01b03165b6001600160a01b031690565b604051630178b36760e31b81526004810184905260209384929091908390829060249082905afa908115610304575b6000916102d7575b506040518080958194632daad61d60e01b8352600483019190602083019252565b03916001600160a01b03165afa9182156102ca575b60009261029d575b50506103fd565b6102bc9250803d106102c3575b6102b48183610358565b8101906103b4565b3880610296565b503d6102aa565b6102d26103a7565b61028e565b6102f79150833d85116102fd575b6102ef8183610358565b810190610392565b38610258565b503d6102e5565b61030c6103a7565b610250565b50634e487b7160e01b600052604160045260246000fd5b601f80199101166080016080811067ffffffffffffffff82111761034b57604052565b610353610311565b604052565b90601f8019910116810190811067ffffffffffffffff82111761034b57604052565b602090607f19011261000e5760805161016481610167565b9081602091031261000e575161016481610167565b506040513d6000823e3d90fd5b9081602091031261000e575190565b906103fb60216040518094600360fc1b60208301526103eb815180926020868601910161010b565b8101036001810185520183610358565b565b66038d7ea4c68000670de0b6b3a76400006104198184046108de565b92060490610426826108de565b916064811061049d575b600a11610485575b602161016491604051938161045786935180926020808701910161010b565b8201601760f91b6020820152610476825180936020878501910161010b565b01036001810184520182610358565b906021610494610164926103c3565b92915050610438565b916104a9600a916103c3565b929050610430565b60209067ffffffffffffffff81116104cf575b601f01601f19160190565b6104d7610311565b6104c4565b604051906020820182811067ffffffffffffffff821117610501575b60405260008252565b610509610311565b6104f8565b9081602091031261000e5751801515810361000e5790565b60208183031261000e5780519067ffffffffffffffff821161000e570181601f8201121561000e578051610559816104b1565b926105676040519485610358565b8184526020828401011161000e57610164916020808501910161010b565b600154909190610623906105a1906001600160a01b0316610215565b6040516020918183809301906105ff816105f16105e2856019907f65787465726e616c2e636f6e74726163742e616464726573730000000000000081520190565b62454e5360e81b815260030190565b03601f198101835282610358565b5190209060405180809681946321f8a72160e01b8352600483019190602083019252565b03915afa9182156107b7575b600092610798575b506001600160a01b039182169361064d906107c4565b604051630178b8bf60e01b8152600481018290529092908281602481895afa90811561078b575b60009161076e575b501691821561075e57604051631ef3fca760e31b8152600481018290526106de958390829060249082905afa928315610751575b60009361071f575b505060009192604051808097819463691f343160e01b8352600483019190602083019252565b03915afa928315610712575b6000936106f657509190565b61016491933d8091833e61070a8183610358565b810190610526565b61071a6103a7565b6106ea565b60009350908161074392903d1061074a575b61073b8183610358565b81019061050e565b91386106b8565b503d610731565b6107596103a7565b6106b0565b50505090506000906101646104dc565b6107859150833d85116102fd576102ef8183610358565b3861067c565b6107936103a7565b610674565b816107b09293503d84116102fd576102ef8183610358565b9038610637565b6107bf6103a7565b61062f565b6028805b610835575050602860002060405160208101917f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e283526040820152604081526060810181811067ffffffffffffffff821117610828575b60405251902090565b610830610311565b61081f565b6f181899199a1a9b1b9c1cb0b131b232b360811b91600f9182821684901a600019820153600119019283928260041c161a825360081c916107c8565b604051906060820182811067ffffffffffffffff82111761089f575b604052602a8252604082602036910137565b6108a7610311565b61088d565b906108b6826104b1565b6108c36040519182610358565b82815280926108d4601f19916104b1565b0190602036910137565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015610a13575b506d04ee2d6d415b85acef810000000080831015610a04575b50662386f26fc10000808310156109f5575b506305f5e100808310156109e6575b50612710808310156109d7575b5060648210156109c7575b600a809210156109bd575b6001908160216109758287016108ac565b95860101905b610987575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353049182156109b85791908261097b565b610980565b9160010191610964565b9190606460029104910191610959565b6004919392049101913861094e565b60089193920491019138610941565b60109193920491019138610932565b60209193920491019138610920565b604093508104915038610907565b50634e487b7160e01b600052603260045260246000fd5b906020918051821015610a4a57010190565b610a52610a21565b010190565b8015610a64576000190190565b634e487b7160e01b600052601160045260246000fd5b15610a8157565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b610acd610871565b90815115610b67575b603060208301538151600190811015610b5a575b90607860218401536029915b808311610b095750610164915015610a7a565b9080600f610b4692166010811015610b4d575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a610b3c8587610a38565b5360041c92610a57565b9190610af6565b610b55610a21565b610b1c565b610b62610a21565b610aea565b610b6f610a21565b610ad656fea26469706673582212208dc03ab91967b5c7924338f0a6efde6efb533b3d22b2edab7a6fff8dc145eb0164736f6c6343000811003360803461007457601f6104f338819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600180546001600160a01b03191691909117905560405161046390816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163809bef62146101d457508063d3b150e6146100ab5763d6e65cb91461004457600080fd5b346100a75760203660031901126100a757803567ffffffffffffffff81116100a3576020809461007c60ff9461008f943691016103be565b908286519483868095519384920161040a565b820190815203019020541690519015158152f35b8380fd5b8280fd5b50346100a757816003193601126100a757803567ffffffffffffffff81116100a3576100da90369083016103be565b602435928315158094036101d05760015481516353adc3e960e11b8152602094916001600160a01b039190869082908590829086165afa9081156101c657889161018c575b501633036101585750908261013f9392519382858094519384920161040a565b8101858152030190209060ff8019835416911617905580f35b83606492519162461bcd60e51b8352820152601060248201526f36bab9ba1031329033bab0b93234b0b760811b6044820152fd5b90508581813d83116101bf575b6101a3818361036a565b810103126101bb575181811681036101bb573861011f565b8780fd5b503d610199565b84513d8a823e3d90fd5b8480fd5b9390503461036757602093846003193601126103635782356001600160a01b03811693908490036100a75763ac2a5dfd60e01b825282828281875afa91821561035957908392918794926102da575b5085519460ff83519686818187019961023d81838d61040a565b8101888152030190205416610268575b50509261008f929160ff94865194859384925192839161040a565b8091929394503b156100a3579083809282885180958193630a645e5560e21b83525af180156102d0579087949392911561024d579091935067ffffffffffffffff82116102bd5750845284918061008f61024d565b634e487b7160e01b835260419052602482fd5b86513d86823e3d90fd5b91509192503d8084833e6102ee818361036a565b81019086818303126100a35780519067ffffffffffffffff82116101d0570181601f820112156100a357805190610324826103a2565b926103318851948561036a565b8284528883830101116101d05782916103529189808098979601910161040a565b9038610223565b85513d85823e3d90fd5b5080fd5b80fd5b90601f8019910116810190811067ffffffffffffffff82111761038c57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161038c57601f01601f191660200190565b81601f82011215610405578035906103d5826103a2565b926103e3604051948561036a565b8284526020838301011161040557816000926020809301838601378301015290565b600080fd5b60005b83811061041d5750506000910152565b818101518382015260200161040d56fea26469706673582212200b8f09f05930d40fcb23ecf6bac65d301171689072a70f98366acd32e639792a64736f6c6343000811003360803462000404576200285c90813803601f1991601f91838382011682019460018060401b039183871083881117620003ee57808492604098895283396020938491810103126200040457516001600160a01b0380821692909183900362000404576200006b62000409565b94600b86526a4652454e5320536861726560a81b858701526200008d62000409565b60058152644652454e5360d81b86820152865197838911620003ee576000988954986001998a81811c91168015620003e3575b8a821014620003cf579081868493116200037c575b5089908683116001146200031b578c926200030f575b5050600019600383901b1c191690891b1789555b8151938411620002fb5787548881811c91168015620002f0575b88821014620002dc57908184869594931162000285575b5087928411600114620002245750889262000218575b5050600019600383901b1c191690851b1784555b600b80546001600160a01b03198082163390811790935592167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a3600c541617600c55828052600a8152838320338452815260ff848420541615620001cb575b835161243290816200042a8239f35b828052600a815283832090338452528282209060ff19825416179055339033907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4388080620001bc565b01519050388062000146565b888a52878a20899590939291168a5b898282106200026e575050841162000254575b505050811b0184556200015a565b015160001960f88460031b161c1916905538808062000246565b8385015186558b9790950194938401930162000233565b9091929350888a52878a208480870160051c8201928a8810620002d2575b9187968c92969594930160051c01915b828110620002c357505062000130565b8c81558796508b9101620002b3565b92508192620002a3565b634e487b7160e01b8a52602260045260248afd5b90607f169062000119565b634e487b7160e01b89526041600452602489fd5b015190503880620000eb565b908c91858d95168380528c8420935b8d8282106200036557505084116200034b575b505050811b018955620000ff565b015160001960f88460031b161c191690553880806200033d565b8385015186558f979095019493840193016200032a565b9091508b8052898c208680850160051c8201928c8610620003c5575b918d91869594930160051c01915b828110620003b6575050620000d5565b8e81558594508d9101620003a6565b9250819262000398565b634e487b7160e01b8c52602260045260248cfd5b90607f1690620000c0565b634e487b7160e01b600052604160045260246000fd5b600080fd5b60408051919082016001600160401b03811183821017620003ee5760405256fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146115085750806306fdde031461143d578063081812fc1461141d578063095ea7b3146112b05780630bc59b381461125f57806318160ddd146112915780631dc82a751461125f57806323b872dd1461123a578063248a9ca3146112105780632f2ff15d146111645780632f745c59146110b857806336568abe1461102657806342842e0e14610fc957806342966c6814610c845780634f558e7914610c455780634f6ccce714610bb25780636352211e14610b815780636a6278421461091357806370a08231146108e6578063715018a6146108895780638da5cb5b1461086057806391d148541461081a57806395d89b4114610704578063a217fddf146106e9578063a22cb4651461061a578063a2d6c6da14610553578063b88d4fde146104a0578063c87b56dd14610317578063d5391393146102dc578063d547741f1461029e578063e985e9c51461024c5763f2fde38b1461018357600080fd5b346102485760203660031901126102485761019c6115f0565b906101a5611bb5565b6001600160a01b039182169283156101f6575050600b54826001600160601b0360a01b821617600b55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461029a578060031936011261029a5760ff8160209361026c6115f0565b61027461160b565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b5090346102485780600319360112610248576102d991356102d460016102c261160b565b93838752600a60205286200154611809565b611b3f565b80f35b50503461029a578160031936011261029a57602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b509034610248576020918260031936011261049c57600c5482516f636f6e74726163742e6164647265737360801b858201908152754672656e73506f6f6c5368617265546f6b656e55524960501b6030830152602682526001600160a01b0393919260608401919085169067ffffffffffffffff831185841017610489578260248180948b948d9998978c52885190206321f8a72160e01b835260648901525afa92831561047f5787908594610444575b5050506024908551948593849263c87b56dd60e01b8452803590840152165afa93841561043957809461040f575b505061040b90519282849384528301906115cb565b0390f35b61040b92945090610431913d8091833e6104298183611656565b8101906117a7565b9290386103f6565b8251903d90823e3d90fd5b9080929394503d8311610478575b61045c8185611656565b81010312610248575183811681036102485790602486386103c8565b503d610452565b86513d86823e3d90fd5b634e487b7160e01b895260418452602489fd5b8380fd5b509034610248576080366003190112610248576104bb6115f0565b906104c461160b565b604435906064359467ffffffffffffffff861161054f573660238701121561054f57850135936104ff6104f68661168e565b94519485611656565b84845286366024878901011161054c576020866105479760246102d99a0183890137860101526105376105328433611dc8565b611cf3565b610542838383611edc565b612313565b611da8565b80fd5b8680fd5b509034610248576020918260031936011261049c57838135808252600d85528260018060a01b0386818786205416875196878092638ae578fd60e01b82525afa94851561047f5784956105df575b50906024918651958694859363516b636d60e11b8552840152165afa93841561043957809461040f57505061040b90519282849384528301906115cb565b9094508681813d8311610613575b6105f78183611656565b8101031261049c575190848216820361049c57909360246105a1565b503d6105ed565b5090346102485780600319360112610248576106346115f0565b90602435918215158093036106e5576001600160a01b0316923384146106a35750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b50503461029a578160031936011261029a5751908152602090f35b50913461054c578060031936011261054c578151918160019283549384811c91818616958615610810575b60209687851081146107fd578899509688969785829a5291826000146107d657505060011461077b575b50505061040b929161076c910385611656565b519282849384528301906115cb565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106107be575050508201018161076c61040b610759565b8054848a0186015288955087949093019281016107a5565b60ff19168782015293151560051b8601909301935084925061076c915061040b9050610759565b634e487b7160e01b835260228a52602483fd5b92607f169261072f565b50346102485781600319360112610248578160209360ff9261083a61160b565b90358252600a86528282206001600160a01b039091168252855220549151911615158152f35b50503461029a578160031936011261029a57600b5490516001600160a01b039091168152602090f35b833461054c578060031936011261054c576108a2611bb5565b600b80546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461029a57602036600319011261029a5760209061090c6109076115f0565b611c0d565b9051908152f35b5082903461029a5760209081600319360112610248576109316115f0565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68452600a8352848420338552835260ff858520541615610b3f5760085491828552600d84528585206001600160601b0360a01b90338282541617905586519480860186811067ffffffffffffffff821117610b2c5788528686526001600160a01b038416928315610aec576000868152600260205260409020546109e2906001600160a01b031615155b15611e36565b6008549086895260098352818a8a2055600160401b821015610ad9575091836102d99899600288979694610a4089610a258960016105479f9e9b0160085561239e565b90919082549060031b600019811b9283911b16911916179055565b8c83610a4b8a611c0d565b8683526006845281832081845284528183208a905589835260078452912055600d8152600087815260026020526040902054610a91906001600160a01b031615156109dc565b838d5260038152828d2060018154019055868d52528a2091825416179055877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46121f7565b634e487b7160e01b895260419052602488fd5b816064928a519262461bcd60e51b845283015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b634e487b7160e01b885260418452602488fd5b5060649184519162461bcd60e51b8352820152601b60248201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044820152fd5b50913461054c57602036600319011261054c5750610ba160209235611cd0565b90516001600160a01b039091168152f35b50823461054c57602036600319011261054c5750803590600854821015610bed57602083610bdf8461239e565b91905490519160031b1c8152f35b608490602084519162461bcd60e51b8352820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152fd5b50913461054c57602036600319011261054c5750610c7b60209235600052600260205260018060a01b0360406000205416151590565b90519015158152f35b5082903461029a5760209283600319360112610248578135808452600d85528184205490926001600160a01b0392909183163303610f7b57610cc584611cd0565b838116801597918815610efa575050600854858752600982528083882055600160401b811015610ee75785610a25826001610d03940160085561239e565b6008546000199490858101908111610ed45786885260098352610d29848920549161239e565b90549060031b1c610d3d81610a258461239e565b885260098352838820558587528683812055600854978815610ec15785889998979801610d698161239e565b8882549160031b1b19169055600855878752600d8352818488205416901580610eba575b610e01575b5090600291610da088611cd0565b948888528252838720946001600160601b0360a01b958681541690551694858752600382528387209081540190558686525283209081541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a480f35b8394959650916024919281945192838092635a2d1e0760e11b82528b8a8301525afa908115610eb0578891610e77575b50610e425790869493929188610d92565b50905162461bcd60e51b815291820152601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508281813d8311610ea9575b610e8e8183611656565b81010312610ea557610e9f906116aa565b88610e31565b8780fd5b503d610e84565b84513d8a823e3d90fd5b5086610d8d565b634e487b7160e01b885260318552602488fd5b634e487b7160e01b885260118552602488fd5b634e487b7160e01b875260418452602487fd5b610f0390611c0d565b600019810191908211610ed4578688526007835283882054828103610f44575b50868852878481205587526006825282872090875281528582812055610d03565b81895260068452848920838a52845284892054828a5260068552858a20828b52855280868b20558952600784528489205589610f23565b5162461bcd60e51b8152908101859052602360248201527f63616e6e6f74206275726e207368617265732066726f6d206f7468657220706f6044820152626f6c7360e81b6064820152608490fd5b5091903461029a57610fda36611621565b91835193602085019085821067ffffffffffffffff83111761101357916102d99593916105479593528684526105376105328433611dc8565b634e487b7160e01b875260418852602487fd5b5082903461029a578260031936011261029a5761104161160b565b90336001600160a01b0383160361105d57906102d99135611b3f565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b50913461054c578160031936011261054c576110d26115f0565b602435906110df81611c0d565b82101561110d576001600160a01b031682526006602090815283832091835290815290829020548251908152f35b835162461bcd60e51b8152602081870152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b5034610248578160031936011261024857359061117f61160b565b90828452600a60205261119760018286200154611809565b828452600a60209081528185206001600160a01b039093168086529290528084205460ff16156111c5578380f35b828452600a6020528084208285526020528320600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a43880808380f35b50346102485760203660031901126102485781602093600192358152600a85522001549051908152f35b833461054c576102d961124c36611621565b9161125a6105328433611dc8565b611edc565b503461024857602036600319011261024857358252600d6020908152918190205490516001600160a01b039091168152f35b50503461029a578160031936011261029a576020906008549051908152f35b50346102485781600319360112610248576112c96115f0565b6024359290916001600160a01b03919082806112e487611cd0565b169416938085146113d0578033149081156113b1575b501561134957848652602052842080546001600160a01b0319168317905561132183611cd0565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff8287205416386112fa565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b50913461054c57602036600319011261054c5750610ba1602092356116b7565b50913461054c578060031936011261054c5781519181825492600184811c918186169586156114fe575b60209687851081146107fd578899509688969785829a5291826000146107d65750506001146114a35750505061040b929161076c910385611656565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106114e6575050508201018161076c61040b610759565b8054848a0186015288955087949093019281016114cd565b92607f1692611467565b92505034610248576020366003190112610248573563ffffffff60e01b81168091036102485760209250637965db0b60e01b811490811561154b575b5015158152f35b63780e9d6360e01b811491508115611565575b5038611544565b6380ac58cd60e01b811491508115611597575b8115611586575b503861155e565b6301ffc9a760e01b1490503861157f565b635b5e139f60e01b81149150611578565b60005b8381106115bb5750506000910152565b81810151838201526020016115ab565b906020916115e4815180928185528580860191016115a8565b601f01601f1916010190565b600435906001600160a01b038216820361160657565b600080fd5b602435906001600160a01b038216820361160657565b6060906003190112611606576001600160a01b0390600435828116810361160657916024359081168103611606579060443590565b90601f8019910116810190811067ffffffffffffffff82111761167857604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161167857601f01601f191660200190565b5190811515820361160657565b6000818152600260205260409020546116da906001600160a01b03161515611c84565b6000818152600d60205260018060a01b03908160408220541692604051637e01dd6960e11b8152816004820152606081602481885afa90811561179c578391611760575b501561172a5750505090565b600081815260026020526040908190205493945092611753906001600160a01b03161515611c84565b8152600460205220541690565b90506060813d8211611794575b8161177a60609383611656565b8101031261024857604061178e91016116aa565b3861171e565b3d915061176d565b6040513d85823e3d90fd5b6020818303126116065780519067ffffffffffffffff8211611606570181601f820112156116065780516117da8161168e565b926117e86040519485611656565b818452602082840101116116065761180691602080850191016115a8565b90565b600090808252602090600a8252604092838120338252835260ff8482205416156118335750505050565b83519167ffffffffffffffff90336060850183811186821017611b2b578752602a85528585019187368437855115611b175760308353855191600192831015611b03576078602188015360295b838111611a995750611a575790875193608085019085821090821117611a4357885260428452868401946060368737845115611a2f57603086538451821015611a2f5790607860218601536041915b8183116119c15750505061197f5761197b93869361195f936119506048946119279a519a8b957f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008c88015251809260378801906115a8565b8401917001034b99036b4b9b9b4b733903937b6329607d1b6037840152518093868401906115a8565b01036028810187520185611656565b5192839262461bcd60e51b8452600484015260248301906115cb565b0390fd5b60648587519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015611a1b576f181899199a1a9b1b9c1cb0b131b232b360811b901a6119f185886123eb565b5360041c928015611a07576000190191906118cf565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b86526041600452602486fd5b60648789519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b90600f81166010811015611aef576f181899199a1a9b1b9c1cb0b131b232b360811b901a611ac7838a6123eb565b5360041c908015611adb5760001901611880565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b90600091808352600a602052604083209160018060a01b03169182845260205260ff604084205416611b7057505050565b808352600a602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b600b546001600160a01b03163303611bc957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b03168015611c2d57600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b15611c8b57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152600260205260409020546001600160a01b0316611806811515611c84565b15611cfa57565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15611daf57565b60405162461bcd60e51b81528061197b60048201611d55565b906001600160a01b038080611ddc84611cd0565b16931691838314938415611e0f575b508315611df9575b50505090565b611e05919293506116b7565b1614388080611df3565b909350600052600560205260406000208260005260205260ff604060002054169238611deb565b15611e3d57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b15611e8957565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b611f0091611ee984611cd0565b6001600160a01b0393848416939185168414611e82565b8382169384156121a65783801592836000146120f35750506008549286600052600960205283604060002055600160401b84101561167857611f4d87610a2586600189980160085561239e565b8386036120c0575b5084600092878452602092600d84526040918183872054169015806120b8575b612000575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95611fb191611faa8b611cd0565b1614611e82565b878452600483526002818520936001600160601b0360a01b94858154169055878652600381528286206000198154019055838652828620600181540190558986525283209182541617905580a4565b8495965082602493959294505192838092635a2d1e0760e11b82528c60048301525afa9081156120ae578591612079575b506120425784939291869138611f7a565b815162461bcd60e51b815260048101849052601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508381813d83116120a7575b6120908183611656565b810103126106e5576120a1906116aa565b38612031565b503d612086565b83513d87823e3d90fd5b506001611f75565b6120c990611c0d565b60406000878152600660205281812083825260205288828220558881526007602052205538611f55565b8682959203612103575b50611f4d565b61210e919450611c0d565b6000198101939084116121905784936000908882526020906007825260409182842054828103612159575b508a845283838120558784526006815282842091845252812055386120fd565b8885526006825283852083865282528385205489865260068352848620828752835280858720558552600782528385205538612139565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9192600092909190803b1561230957612245946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b9660848301906115cb565b03926001600160a01b03165af18491816122c9575b506122b8575050503d6000146122b0573d6122748161168e565b906122826040519283611656565b81528091833d92013e5b805191826122ad5760405162461bcd60e51b81528061197b60048201611d55565b01fd5b50606061228c565b6001600160e01b0319161492509050565b9091508581813d8311612302575b6122e18183611656565b810103126106e557516001600160e01b0319811681036106e557903861225a565b503d6122d7565b5050915050600190565b9293600093909291803b156123935794849161236d9660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c9760848301906115cb565b0393165af18491816122c957506122b8575050503d6000146122b0573d6122748161168e565b505050915050600190565b6008548110156123d55760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b9081518110156123d557016020019056fea2646970667358221220b3ae91f69940b823159207eaf627dbf6d854c99fd544bfbb2601cbe0bfffb95d64736f6c634300081100336080604090808252346200016457806200121b803803809162000023828562000169565b83396020928391810103126200016457516001600160a01b038082169290918390036200016457600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b038411858510176200014e5760248484938193828c52885190206321f8a72160e01b835260448901525afa9283156200014357600093620000ff575b505050169060005416176000555161108d90816200018e8239f35b813d83116200013b575b62000115818562000169565b81010312620001375751908282168203620001345750388080620000e4565b80fd5b5080fd5b503d62000109565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200014e5760405256fe6040608081526004908136101561001557600080fd5b6000803560e01c63c87b56dd1461002b57600080fd5b346107ec57602092836003193601126107e8578154813592859291610060906001600160a01b03165b6001600160a01b031690565b93634f558e7960e01b608052836080607f1961007f849060a491608452565b0181885afa80156107db575b82906107ab575b61009b906108d4565b6001546100b0906001600160a01b0316610054565b94818761013487825199818b018b6100fd6100e2836010906f636f6e74726163742e6164647265737360801b81520190565b6e233932b739a6b2ba30a432b63832b960891b8152600f0190565b039b610111601f199d8e8101835282610885565b51902084516321f8a72160e01b81528a8101918252938492918391829160200190565b03915afa90811561079e575b8691610781575b508151630178b36760e31b81528088019384526001600160a01b0391821694919384928a918391908290819060200103915afa908115610774575b8791610757575b501693815192631865c57d60e01b8452868981868b818b5afa95861561074a575b829661072c575b5061024395968a86519663ef21184f60e01b88528488806101d98a8683019190602083019252565b0381865afa97881561071f575b8598610703575b5080516333c7180560e11b815284818d81806102108d8983019190602083019252565b03915afa9485156106f6575b86956106c7575b5050516376e8a45160e11b81529081019283529687928391829160200190565b03915afa9384156106ba575b8794610696575b5061026086610e41565b9661026a83610c0d565b988c51809a8c820161029490601190706672656e20706f6f6c207368617265202360781b81520190565b61029d916109cf565b038c81018b526102ad908b610885565b8c51809b81016102e190601b907f74686973206672656e206861732061206465706f736974206f6620000000000081520190565b6102eb90876109cf565b6c01022ba341034b7103837b7b61609d1b8152600d0161030b908b6109cf565b7f2c207769746820636c61696d61626c652062616c616e6365206f6620000000008152601c0161033b90886109cf565b630408ae8d60e31b8152600401038c81018c52610358908c610885565b8d8d518092638da5cb5b60e01b8252818b5afa918215610689575b9161065c575b501661038490610e41565b9461038e916109e6565b61039790610f6e565b9489519788978c89016103ba90600990683d913730b6b2911d1160b91b81520190565b6103c3916109cf565b71111610113232b9b1b934b83a34b7b7111d1160711b81526012016103e7916109cf565b7f222c202265787465726e616c5f75726c223a2268747470733a2f2f6170702e6681526d72656e732e66756e2f706f6f6c2f60901b6020820152602e0161042e90826109cf565b7f222c202261747472696275746573223a205b7b2274726169745f74797065223a81527110113837b7b6111610113b30b63ab2911d1160711b6020820152603201610478916109cf565b7f227d2c7b2274726169745f74797065223a20226465706f736974222c20227661815266363ab2911d101160c91b60208201526027016104b7916109cf565b630408ae8d60e31b81526004017f227d2c7b2274726169745f74797065223a2022636c61696d61626c65222c20228152683b30b63ab2911d101160b91b6020820152602901610505916109cf565b630408ae8d60e31b81526004017f227d2c7b2274726169745f74797065223a2022706f6f6c207374617465222c20815269113b30b63ab2911d101160b11b6020820152602a01610554916109cf565b7f227d2c7b2274726169745f74797065223a2022706f6f6c2063726561746f722281526b1610113b30b63ab2911d101160a11b6020820152602c01610598916109cf565b6e113eae96101134b6b0b3b2911d101160891b8152600f017f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000008152601a016105df916109cf565b61227d60f01b81526002010382810182526105fa9082610885565b61060390610f6e565b82517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000094810194855293849190601d0161063c916109cf565b03908101835261064c9083610885565b51610658819282610812565b0390f35b61067c91508d803d10610682575b6106748183610885565b810190610914565b38610379565b503d61066a565b6106916108c7565b610373565b6106b39194503d8089833e6106ab8183610885565b81019061095e565b9238610256565b6106c26108c7565b61024f565b6106e7929550803d106106ef575b6106df8183610885565b8101906109c0565b92388e610223565b503d6106d5565b6106fe6108c7565b61021c565b6107189198503d8087833e6106ab8183610885565b96386101ed565b6107276108c7565b6101e6565b6102439650610744903d8085833e6106ab8183610885565b956101b1565b6107526108c7565b6101aa565b61076e9150893d8b11610682576106748183610885565b38610189565b61077c6108c7565b610182565b6107989150883d8a11610682576106748183610885565b38610147565b6107a66108c7565b610140565b50833d85116107d4575b6107cd816107c561009b93610855565b6080016108a7565b9050610092565b503d6107b5565b6107e36108c7565b61008b565b5080fd5b80fd5b60005b8381106108025750506000910152565b81810151838201526020016107f2565b6040916020825261083281518092816020860152602086860191016107ef565b601f01601f1916010190565b50634e487b7160e01b600052604160045260246000fd5b601f80199101166080016080811067ffffffffffffffff82111761087857604052565b61088061083e565b604052565b90601f8019910116810190811067ffffffffffffffff82111761087857604052565b602090607f1901126108c25760805180151581036108c25790565b600080fd5b506040513d6000823e3d90fd5b156108db57565b60405162461bcd60e51b81526020600482015260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b908160209103126108c257516001600160a01b03811681036108c25790565b60209067ffffffffffffffff8111610951575b601f01601f19160190565b61095961083e565b610946565b6020818303126108c25780519067ffffffffffffffff82116108c2570181601f820112156108c257805161099181610933565b9261099f6040519485610885565b818452602082840101116108c2576109bd91602080850191016107ef565b90565b908160209103126108c2575190565b906109e2602092828151948592016107ef565b0190565b610afb916000610a446109bd9360405190638ae578fd60e01b825260208260048160018060a01b038099165afa918215610b61575b8492610b41575b5060405194858094819363516b636d60e11b8352600483019190602083019252565b0392165afa908115610b34575b600091610b1b575b50610b0d604051938492610af560208501606c907f3c7376672077696474683d2234303022206865696768743d223430302220786d81527f6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f7376672260208201527f20786d6c6e733a786c696e6b3d22687474703a2f2f7777772e77332e6f72672f60408201526b189c9c9c97bc3634b735911f60a11b60608201520190565b906109cf565b651e17b9bb339f60d11b815260060190565b03601f198101835282610885565b610b2e913d8091833e6106ab8183610885565b38610a59565b610b3c6108c7565b610a51565b610b5a91925060203d8111610682576106748183610885565b9038610a22565b610b696108c7565b610a1b565b604051906020820182811067ffffffffffffffff821117610b93575b60405260008252565b610b9b61083e565b610b8a565b604051906060820182811067ffffffffffffffff821117610bce575b604052602a8252604082602036910137565b610bd661083e565b610bbc565b90610be582610933565b610bf26040519182610885565b8281528092610c03601f1991610933565b0190602036910137565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015610d42575b506d04ee2d6d415b85acef810000000080831015610d33575b50662386f26fc1000080831015610d24575b506305f5e10080831015610d15575b5061271080831015610d06575b506064821015610cf6575b600a80921015610cec575b600190816021610ca4828701610bdb565b95860101905b610cb6575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215610ce757919082610caa565b610caf565b9160010191610c93565b9190606460029104910191610c88565b60049193920491019138610c7d565b60089193920491019138610c70565b60109193920491019138610c61565b60209193920491019138610c4f565b604093508104915038610c36565b50634e487b7160e01b600052601160045260246000fd5b600281901b91906001600160fe1b03811603610d7f57565b610d87610d50565b565b9060028201809211610d7f57565b9060208201809211610d7f57565b50634e487b7160e01b600052603260045260246000fd5b906020918051821015610dce57010190565b610dd6610da5565b010190565b8015610de9575b6000190190565b610df1610d50565b610de2565b15610dfd57565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b610e49610ba0565b90815115610ee3575b603060208301538151600190811015610ed6575b90607860218401536029915b808311610e8557506109bd915015610df6565b9080600f610ec292166010811015610ec9575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a610eb88587610dbc565b5360041c92610ddb565b9190610e72565b610ed1610da5565b610e98565b610ede610da5565b610e66565b610eeb610da5565b610e52565b604051906060820182811067ffffffffffffffff821117610f61575b604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b610f6961083e565b610f0c565b80511561104e57610f7d610ef0565b610f99610f94610f8d8451610d89565b6003900490565b610d67565b91610fab610fa684610d97565b610bdb565b92835280815182019060208501935b828210610ffc57505050600390510680600114610feb57600214610fdc575090565b603d60f81b6000199091015290565b50613d3d60f01b6001199091015290565b9091936004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301939190610fba565b506109bd610b6e56fea2646970667358221220a0efb57049f621d8f561c460c3358c53e07f6a266c251708af0a20755c2517a564736f6c634300081100336080806040523461002857600380546001600160a01b03191633179055610624908161002e8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80630e14a376146105455780631e0ea61e1461046e57806321f8a7211461043c5780632c62ff2d1461040057806367a6a917146103405780637ae1cfca146103145780638a0dac4a146102cb578063a75b87d2146102a2578063abfdcced1461024f578063adb353dc1461020f578063bd02d0f5146101e9578063ca446dd91461018f578063e2a4853a1461015857838163e2b202bf1461011e575063ebb9d8c9146100c857600080fd5b3461011a576100d636610587565b92906100ed60018060a01b036003541633146105a2565b845283602052832090815492830392831161010757505580f35b634e487b7160e01b845260119052602483fd5b8280fd5b808484346101545760203660031901126101545761014760018060a01b036003541633146105a2565b3582528160205281205580f35b5050fd5b50503461018b5761016836610587565b919061017f60018060a01b036003541633146105a2565b83528260205282205580f35b5080fd5b50903461011a578060031936011261011a576024356001600160a01b0381811693918490036101e5576101c7906003541633146105a2565b3583526001602052822080546001600160a01b031916909117905580f35b8480fd5b503461011a57602036600319011261011a57602092829135815280845220549051908152f35b503461011a5761021e36610587565b929061023560018060a01b036003541633146105a2565b845283602052832090815492830180931161010757505580f35b50903461011a578060031936011261011a576024359182151580930361029e5761028460018060a01b036003541633146105a2565b358352600260205282209060ff8019835416911617905580f35b8380fd5b50503461018b578160031936011261018b5760035490516001600160a01b039091168152602090f35b83823461018b57602036600319011261018b5780356001600160a01b038181169182900361029e57610302906003541633146105a2565b81546001600160a01b03191617905580f35b503461011a57602036600319011261011a578160209360ff923581526002855220541690519015158152f35b5091903461018b578160031936011261018b57600354926001600160a01b03808516919061036f3384146105a2565b8154166103bd57507fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e96792936bffffffffffffffffffffffff60a01b166003558151908152836020820152a180f35b606490602084519162461bcd60e51b8352820152601f60248201527f6d7573742073657420677561726469616e20746f2030783030206669727374006044820152fd5b503461011a57602036600319011261011a5761042760018060a01b036003541633146105a2565b35825260026020528120805460ff1916905580f35b503461011a57602036600319011261011a5735825260016020908152918190205490516001600160a01b039091168152f35b5091903461018b578160031936011261018b5782546001600160a01b0380821690338290036104e9577fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e9679495600354936bffffffffffffffffffffffff60a01b9084828716176003551690558351921682526020820152a180f35b835162461bcd60e51b8152602081880152603060248201527f436f6e6669726d6174696f6e206d75737420636f6d652066726f6d206e65772060448201526f677561726469616e206164647265737360801b6064820152608490fd5b503461011a57602036600319011261011a5761056c60018060a01b036003541633146105a2565b3582526001602052812080546001600160a01b031916905580f35b604090600319011261059d576004359060243590565b600080fd5b156105a957565b60405162461bcd60e51b815260206004820152601960248201527f4163636f756e74206973206e6f74206120677561726469616e000000000000006044820152606490fdfea2646970667358221220b9ebbc341785a3e30fcf9382bfbab662a7418f08fed9d818f0c8da206fc42b0064736f6c634300081100336080604090808252346101535780612dba803803809161001f8285610158565b833960209283918101031261015357516001600160a01b0380821692909183900361015357600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b0384118585101761013d5760248484938193828c52885190206321f8a72160e01b835260448901525afa928315610132576000936100f5575b5050501690600054161760005551612c3e908161017c8239f35b813d831161012b575b6101088185610158565b81010312610127575190828216820361012457503880806100db565b80fd5b5080fd5b503d6100fe565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761013d5760405256fe6080604090808252600436101561001557600080fd5b600091823560e01c63319e90901461002c57600080fd5b346101705780600319360112610170576001600160a01b039160043583811691908290036101965760243591821515809303610192578460015416612a6e938484019267ffffffffffffffff958585108786111761017e5792859491928a97969360609561019b8639835260208301528782015203019083f09384156101745780835416941693803b156101705782906044855180958193632f2ff15d60e01b83527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660048401528960248401525af180156101665761013f575b60208484817fb224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e8280513381523087820152a251908152f35b8111610152576020935081523880610107565b634e487b7160e01b84526041600452602484fd5b83513d87823e3d90fd5b8280fd5b83513d84823e3d90fd5b634e487b7160e01b8a52604160045260248afd5b8580fd5b8480fdfe6080604081815234620002605760608262002a6e803803809162000024828562000297565b83398101031262000260576200003a82620002bb565b602092838101519081151580920362000260578301516001600160a01b03808216959186900362000260576200007033620002d0565b60018060a01b0319918683600f541617600f5585518181016f636f6e74726163742e6164647265737360801b9182825267119c995b9cd05c9d60c21b603082015260188152620000c08162000265565b5190209087516321f8a72160e01b92838252600482015283816024818d5afa90811562000255578493929186916000916200020c575b5090602492911687600e541617600e5589518481019182526d4672656e73506f6f6c536861726560901b6030820152601e8152620001348162000265565b5190209189519a8b938492835260048301525afa9081156200020157600091620001bd575b50620001969596501690600d541617600d5560ff8019600854169116809117600855600014620001a4576000805460ff60a01b19169055620002d0565b516127569081620003188239f35b6000805460ff60a01b1916600160a01b179055620002d0565b87813d8311620001f9575b620001d4818362000297565b81010312620001f65750620001ee620001969596620002bb565b869562000159565b80fd5b503d620001c8565b86513d6000823e3d90fd5b85819495969293503d83116200024d575b62000229818362000297565b81010312620001f657508392918562000244602493620002bb565b909192620000f6565b503d6200021d565b89513d6000823e3d90fd5b600080fd5b604081019081106001600160401b038211176200028157604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176200028157604052565b51906001600160a01b03821682036200026057565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604081815260048036101561001e575b505050361561001c57005b005b600092833560e01c90816312686aae14611669575080631865c57d14611638578063299179541461152a5780632cf2cd48146115035780632daad61d146114dc57806330dbf887146114b3578063379607f51461102d5780633a4b66f11461101457806341c6138314610ff5578063441a3e7014610e2f57806345b58fe414610d7c5780634b2b4e3614610cbf57806351ff484714610c27578063591167c714610bfe578063678e300a14610bde578063715018a614610b845780637d88209714610b655780638620891c146109df578063888e9cf8146109925780638ae578fd146109695780638da5cb5b146109415780639426e2261461091a578063ac2a5dfd14610882578063b45a3c0e14610856578063cfb5a5f8146107ad578063e2d9ae3e1461078e578063e3f05d831461076a578063e4a502761461068f578063e6b1a3ae1461054f578063e920eec014610523578063f2fde38b14610459578063f9faa104146101d85763fc03bad20361001157346101d45760203660031901126101d457606092818392358252602052209081549160ff60026001830154920154169082519384526020840152151590820152f35b8280fd5b50826003193601126101d45734156104225760ff835460a01c168181101561040f5760016102069114611892565b6102266801bc16d674ec80000061021f600554346118d7565b11156118fa565b600d5482516318160ddd60e01b8152602093909290916001600160a01b0390859085908490829085165afa9384156103ac5786946103dc575b50838652600185523483872055610278346005546118d7565b600555600754680100000000000000008110156103c95760018101806007558110156103b65790848793927fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801558483526002865260018484205560ff60085460081c16600387528484209060ff801983541691151516179055600d5416803b156101d457829060248551809581936335313c2160e11b835233878401525af180156103ac5761035c575b857fd91527a40417d48f76ba016aaa9157e2ddaca6cb5b660432901659cb075058fc60608787878051923484523390840152820152a180f35b67ffffffffffffffff82969396116103995750845292817fd91527a40417d48f76ba016aaa9157e2ddaca6cb5b660432901659cb075058fc610323565b634e487b7160e01b835260419052602482fd5b83513d88823e3d90fd5b634e487b7160e01b875260328352602487fd5b634e487b7160e01b875260418352602487fd5b9093508481813d8311610408575b6103f48183611870565b810103126104045751923861025f565b8580fd5b503d6103ea565b634e487b7160e01b845260218252602484fd5b6020606492519162461bcd60e51b8352820152601260248201527136bab9ba103232b837b9b4ba1032ba3432b960711b6044820152fd5b5090346101d45760203660031901126101d4576001600160a01b0382358181169391929084900361051f5761048c612668565b83156104cd57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b833461054c5761054961053536611708565b95610544959195949294612668565b611eac565b80f35b80fd5b50346101d45760208060031936011261068b5781356001600160a01b038116939084900361051f5761057f612668565b805163516b636d60e11b81526001848201528581602481885afa908115610681578691610604575b5051156105cc575050506bffffffffffffffffffffffff60a01b600e541617600e5580f35b5162461bcd60e51b81529182015260146024820152731a5b9d985b1a5908185c9d0818dbdb9d1c9858dd60621b604482015260649150fd5b90503d8087833e6106158183611870565b810190838183031261067d5780519067ffffffffffffffff8211610679570181601f8201121561067d57805161064a816119db565b9261065785519485611870565b818452858284010111610679576106739185808501910161168d565b386105a7565b8780fd5b8680fd5b82513d88823e3d90fd5b8380fd5b50503461076657816003193601126107665780519082600a546106b181611772565b8085529160019180831690811561073e57506001146106f3575b5050506106dd826106ef940383611870565b519182916020835260208301906116b0565b0390f35b9450600a85526000805160206126c18339815191525b828610610726575050506106dd8260206106ef95820101946106cb565b80546020878701810191909152909501948101610709565b6106ef9750869350602092506106dd94915060ff191682840152151560051b820101946106cb565b5080fd5b50503461076657816003193601126107665760209060ff6008541690519015158152f35b505034610766578160031936011261076657602090600c549051908152f35b50346101d45760203660031901126101d457600d548251631dc82a7560e01b81528235928101839052906001600160a01b03906020908390602490829085165afa91821561084c57916108119161081694936020979261081d575b50163014611977565b6123cf565b9051908152f35b61083e919250873d8111610845575b6108368183611870565b810190611958565b9038610808565b503d61082c565b84513d87823e3d90fd5b50346101d45760203660031901126101d4578160209360ff923581526003855220541690519015158152f35b505034610766578160031936011261076657805190826009546108a481611772565b8085529160019180831690811561073e57506001146108cf575050506106dd826106ef940383611870565b9450600985526000805160206126e18339815191525b828610610902575050506106dd8260206106ef95820101946106cb565b805460208787018101919091529095019481016108e5565b50503461076657816003193601126107665760209060ff60085460101c1690519015158152f35b505034610766578160031936011261076657905490516001600160a01b039091168152602090f35b505034610766578160031936011261076657600e5490516001600160a01b039091168152602090f35b50346101d45760203660031901126101d457356007548110156101d4576007602093527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801549051908152f35b506020908160031936011261068b5780359060ff855460a01c1681811015610b52576001610a0d9114611892565b610a266801bc16d674ec80000061021f600554346118d7565b600d548451631dc82a7560e01b8152828101849052906001600160a01b039081168583602481845afa928315610b48576024938793610a6e928b92610b305750163014611977565b865192838092634f558e7960e01b825287878301525afa908115610b26578691610af9575b5015610ac25750906001918452528120610aae3482546118d7565b9055610abc346005546118d7565b60055580f35b835162461bcd60e51b815290810183905260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b610b199150843d8611610b1f575b610b118183611870565b8101906119c3565b38610a93565b503d610b07565b85513d88823e3d90fd5b61083e919250853d8711610845576108368183611870565b87513d8a823e3d90fd5b634e487b7160e01b865260218252602486fd5b5050346107665781600319360112610766576020906005549051908152f35b833461054c578060031936011261054c57610b9d612668565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50913461054c57602036600319011261054c575061081660209235612442565b505034610766578160031936011261076657600d5490516001600160a01b039091168152602090f35b50503461076657816003193601126107665780519082600b54610c4981611772565b8085529160019180831690811561073e5750600114610c74575050506106dd826106ef940383611870565b9450600b85526000805160206127018339815191525b828610610ca7575050506106dd8260206106ef95820101946106cb565b80546020878701810191909152909501948101610c8a565b50346101d457610cce36611708565b93610cdd989698939193612668565b60085460101c60ff1615610d6757505050505092610cfe91929336916119f7565b602081519101208151610d1b81610d14816117ac565b0382611870565b6020815191012003610d325750505b610549611a68565b906020606492519162461bcd60e51b8352820152600f60248201526e0e0eac496caf240dad2e6dac2e8c6d608b1b6044820152fd5b92955092955092610d7796611eac565b610d2a565b82843461054c578060031936011261054c579080519182906007549182855260208095018093600784527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890845b818110610e1b5750505081610de0910382611870565b83519485948186019282875251809352850193925b828110610e0457505050500390f35b835185528695509381019392810192600101610df5565b825484529288019260019283019201610dca565b5090346101d457806003193601126101d4578135602480359360ff865460a01c1681811015610fe3576001610e649114611892565b600d5484516331a9108f60e11b8082528382018690526020949290916001600160a01b0391869082908690829086165afa908115610fd9579082918b91610fbc575b50163303610f8a578589526001855287878a205410610f5157918493918695938a9897895260018552878920610edd8b825461237f565b9055610eeb8a60055461237f565b600555600d54168751968794859384528301525afa928315610f485750610549948493849384938492610f2b575b50505af1610f2561238c565b50611e8f565b610f419250803d10610845576108368183611870565b3880610f19565b513d85823e3d90fd5b865162461bcd60e51b8152808501869052601481850152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b6044820152606490fd5b865162461bcd60e51b8152808501869052600d818501526c3737ba103a34329037bbb732b960991b6044820152606490fd5b610fd39150873d8911610845576108368183611870565b38610ea6565b88513d8c823e3d90fd5b50634e487b7160e01b86526021905284fd5b5050346107665781600319360112610766576020906006549051908152f35b833461054c578060031936011261054c57610d2a612668565b5082903461076657602092836003193601126101d457600d548151631dc82a7560e01b815283358185018190526024966001600160a01b039593909290839082908a9082908a165afa9081156113c35790611093918891611496575b5086163014611977565b60ff865460a01c168381101561148457600181146114425760644711156113f2576003146113ea5784600f5416828551818101906f636f6e74726163742e6164647265737360801b82526a4672656e734f7261636c6560a81b6030820152601b81526110fe8161183e565b519020898751809481936321f8a72160e01b8352898301525afa9081156113c35786898993869385916113cd575b50885163404df7b160e11b815230898201529485938492165af19081156113c35787916113a6575b50945b611160826123cf565b95828852600284528588206111768882546118d7565b9055611184876006546118d7565b60065581600f541690865185810190731c1c9bdd1bd8dbdb0b9999594b9c195c98d95b9d60621b8252601481526111ba8161183e565b5190209087519163bd02d0f560e01b83528783015285828c81865afa918215610fd9578a92611373575b50811515908161136a575b5061125b575b50509086978392600d989798541694865195869384926331a9108f60e11b84528301525afa928315610f48575061054994849384938493849261123e5750505af1610f2561238c565b6112549250803d10610845576108368183611870565b8880610f19565b8487989293985181810190751c1c9bdd1bd8dbdb0b9999594b9c9958da5c1a595b9d60521b82526016815261128f8161183e565b5190208b8951809681936321f8a72160e01b83528b8301525afa928315611360578993611338575b506112c4826064926123bc565b0491600183116112ed575b50976112e1849392899a99989961237f565b969791928199506111f5565b6000198301908382116113265792899a926113188b8080809d9e6112e1978c9b9a5af1610f2561238c565b929a509293509796976112cf565b634e487b7160e01b8a52601187528a8afd5b6064919350826113576112c492883d8a11610845576108368183611870565b949250506112b7565b87513d8b823e3d90fd5b9050158b6111ef565b9091508581813d831161139f575b61138b8183611870565b8101031261139b5751908b6111e4565b8980fd5b503d611381565b6113bd9150833d8511610b1f57610b118183611870565b88611154565b85513d89823e3d90fd5b6113e49150843d8611610845576108368183611870565b8c61112c565b600194611157565b845162461bcd60e51b81528085018490526025818a01527f6d7573742062652067726561746572207468616e203130302077656920746f20604482015264636c61696d60d81b6064820152608490fd5b845162461bcd60e51b8152808501849052601c818a01527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152606490fd5b634e487b7160e01b8752602184528787fd5b6114ad9150843d8611610845576108368183611870565b89611089565b505034610766578160031936011261076657600f5490516001600160a01b039091168152602090f35b50346101d45760203660031901126101d45760209282913581526001845220549051908152f35b50346101d45760203660031901126101d45760209282913581526002845220549051908152f35b5090346101d457826003193601126101d45760018060a01b0380600f541660208351818101906f636f6e74726163742e6164647265737360801b82526a4672656e734f7261636c6560a81b6030820152601b81526115878161183e565b51902060248551809481936321f8a72160e01b8352898301525afa90811561162e578591611610575b501633036115cd57825460ff60a01b1916600360a01b1783558280f35b906020606492519162461bcd60e51b8352820152601860248201527f6d7573742062652063616c6c6564206279206f7261636c6500000000000000006044820152fd5b611628915060203d8111610845576108368183611870565b386115b0565b83513d87823e3d90fd5b5050346107665781600319360112610766576106ef90611656612562565b90519182916020835260208301906116b0565b84903461076657816003193601126107665760209060ff60085460081c1615158152f35b60005b8381106116a05750506000910152565b8181015183820152602001611690565b906020916116c98151809281855285808601910161168d565b601f01601f1916010190565b9181601f840112156117035782359167ffffffffffffffff8311611703576020838186019501011161170357565b600080fd5b9060806003198301126117035767ffffffffffffffff6004358181116117035783611735916004016116d5565b939093926024358381116117035782611750916004016116d5565b939093926044359182116117035761176a916004016116d5565b909160643590565b90600182811c921680156117a2575b602083101461178c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611781565b600954600092916117bc82611772565b8082529160019081811690811561182157506001146117da57505050565b9192935060096000526000805160206126e1833981519152916000925b84841061180957505060209250010190565b805460208585018101919091529093019281016117f7565b915050602093945060ff929192191683830152151560051b010190565b6040810190811067ffffffffffffffff82111761185a57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761185a57604052565b1561189957565b60405162461bcd60e51b81526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b6044820152606490fd5b919082018092116118e457565b634e487b7160e01b600052601160045260246000fd5b1561190157565b60405162461bcd60e51b815260206004820152602960248201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686044820152680c2dc406664408ae8d60bb1b6064820152608490fd5b9081602091031261170357516001600160a01b03811681036117035790565b1561197e57565b60405162461bcd60e51b815260206004820152601960248201527f77726f6e67207374616b696e6720706f6f6c20666f72206964000000000000006044820152606490fd5b90816020910312611703575180151581036117035790565b67ffffffffffffffff811161185a57601f01601f191660200190565b929192611a03826119db565b91611a116040519384611870565b829481845281830111611703578281602093846000960137010152565b15611a3557565b60405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720737461746560a81b6044820152606490fd5b6801bc16d674ec80000090814710611e59578160055403611e1e57600080549260ff8460a01c169360049485811015611e0b57611aa86001809214611a2e565b60ff60085460101c1615611dd35760018060a01b039384600f54166040958651602095868201937f65787465726e616c2e636f6e74726163742e616464726573730000000000000085526e11195c1bdcda5d10dbdb9d1c9858dd608a1b603984015260288352606083019067ffffffffffffffff9584831087841117611dbf57828c52845190206321f8a72160e01b835260648501528890829060249082905afa928315611db5578693611d80575b505060ff60a01b1916600160a11b178455600c54911695863b1561068b5787516304512a2360e31b815260808b82015294849286929190611b9a608485016117ac565b60031985820381016024870152600a54879492611bb682611772565b918282528d8582169182600014611d61575050600114611d18575b50508584030160448601528592600b5491611beb83611772565b92838352878d8383169283600014611cf757505050600114611cab575b5050508391829160648301520391895af18015611ca157611c58575b5050507f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce19293945082519182523390820152a1565b8211611c8e57507f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce192949550835284933880611c24565b634e487b7160e01b815260418752602490fd5b86513d84823e3d90fd5b918b939450600b88526000805160206127018339815191529288935b828510611cdc57505050010190808480611c08565b80548486018701528b99508c98508d95909401938101611cc7565b60ff19168582015294151560051b9093019093019450839250819050611c08565b8c929550600a89526000805160206126c18339815191529189925b818410611d465750500101923880611bd1565b80548385018601528c9a508d99508e94909301928501611d33565b60ff19168382015292151560051b909101909101945038905080611bd1565b611da592935060609089903d8b11611dad575b611d9d8285611870565b010190611958565b903880611b57565b3d9150611d93565b8a513d88823e3d90fd5b50634e487b7160e01b875260418d52602487fd5b60405162461bcd60e51b815260208188015260116024820152701d985b1a59185d1bdc881b9bdd081cd95d607a1b6044820152606490fd5b634e487b7160e01b845260218652602484fd5b60405162461bcd60e51b81526020600482015260136024820152726e6f7420656e6f756768206465706f7369747360681b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d0dcdee840cadcdeeaced040cae8d60931b6044820152606490fd5b15611e9657565b634e487b7160e01b600052600160045260246000fd5b929094939194600160f81b3001908130116118e457604051602092838201908152838252611ed98261183e565b611ee436868b6119f7565b848151910120915190200361233a5760085460ff81166122e0575b5060009260ff845460a01c169760048910156122cc57611f226001809a14611a2e565b67ffffffffffffffff928381116122b85780611f3f600954611772565b98601f998a811161225d575b5087908a83116001146121e75788926121dc575b5050600019600383901b1c1916908a1b176009555b8282116121c8578190611f88600a54611772565b88811161216d575b5085908883116001146121005786926120f5575b5050600019600383901b1c191690881b17600a555b85116120e157611fca600b54611772565b848111612091575b508193851160011461201f575091839491849394612014575b50501b916000199060031b1c191617600b555b600c556201000062ff0000196008541617600855565b013592503880611feb565b600b825260008051602061270183398151915293918591601f19831691905b88838310612077575050501061205d575b505050811b01600b55611ffe565b0135600019600384901b60f8161c1916905538808061204f565b86860135885590960195938401938793509081019061203e565b600b83526000805160206127018339815191528580880160051c8201928489106120d8575b0160051c019087905b8281106120cd575050611fd2565b8481550187906120bf565b925081926120b6565b634e487b7160e01b82526041600452602482fd5b013590503880611fa4565b600a87528a93506000805160206126c183398151915291601f198416885b88828210612157575050841161213d575b505050811b01600a55611fb9565b0135600019600384901b60f8161c1916905538808061212f565b8385013586558e9790950194928301920161211e565b909150600a86526000805160206126c18339815191528880850160051c8201928786106121bf575b918c91869594930160051c01915b8281106121b1575050611f90565b8881558594508c91016121a3565b92508192612195565b634e487b7160e01b85526041600452602485fd5b013590503880611f5f565b600989528c93506000805160206126e183398151915291601f1984168a5b8a82821061223e5750508411612224575b505050811b01600955611f74565b0135600019600384901b60f8161c19169055388080612216565b91929596849587849396013581550195019201908e9594939291612205565b909150600988526000805160206126e18339815191528a80850160051c8201928986106122af575b918e91869594930160051c01915b8281106122a1575050611f4b565b8a81558594508e9101612293565b92508192612285565b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b85526021600452602485fd5b6000549060ff8260a01c1660048110156123245761230e9161230460ff9215611a2e565b60101c1615611e8f565b60ff60a01b1916600160a01b1760005538611eff565b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260048101839052601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d6174636800006044820152606490fd5b919082039182116118e457565b3d156123b7573d9061239d826119db565b916123ab6040519384611870565b82523d6000602084013e565b606090565b818102929181159184041417156118e457565b471561243c5760009081526001602052604081205460026020526124056040832054916123ff47600654906118d7565b906123bc565b6005549081156124285704801561242357612420925061237f565b90565b505090565b634e487b7160e01b84526012600452602484fd5b50600090565b600060ff815460a01c1691600483101561254e57600183036124645750905090565b61246d906123cf565b9160018060a01b03600f5416602060405181810190731c1c9bdd1bd8dbdb0b9999594b9c195c98d95b9d60621b8252601481526124a98161183e565b51902060246040518094819363bd02d0f560e01b835260048301525afa92831561254257809361250c575b50508115159081612500575b506124e9575090565b9060646124f982612420946123bc565b049061237f565b600391501415386124e0565b909192506020823d821161253a575b8161252860209383611870565b8101031261054c5750519038806124d4565b3d915061251b565b604051903d90823e3d90fd5b634e487b7160e01b82526021600452602482fd5b60ff60005460a01c16600481101561232457801561262e576002811461260b57600181146125dc576003146125ba5760405161259d8161183e565b600d81526c7374617465206661696c75726560981b602082015290565b6040516125c68161183e565b6006815265195e1a5d195960d21b602082015290565b506040516125e98161183e565b6012815271616363657074696e67206465706f7369747360701b602082015290565b506040516126188161183e565b60068152651cdd185ad95960d21b602082015290565b5060405161263b8161183e565b601781527f6177616974696e672076616c696461746f7220696e666f000000000000000000602082015290565b6000546001600160a01b0316330361267c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfec65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a86e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9a26469706673582212200c7387857b330d1a544edf4a2d51850f06bc6a18edb655f4c8d0e4d02d1e360964736f6c63430008110033a2646970667358221220acb392a873786a5e848550f235a635ccf93e7fc03b556e9ae39aab46606ad47e64736f6c6343000811003360808060405234610016576101d7908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63150b7a021461002857600080fd5b346100b75760803660031901126100b7576001600160a01b0360043581811681036100ba5760243591821682036100ba5760643567ffffffffffffffff938482116100b757366023830112156100b75781600401359485116100b75736602486840101116100b75760206100a4866024850160443588886100be565b6040516001600160e01b03199091168152f35b80fd5b8280fd5b9293926001600160a01b03908116911614610192576001146101845767ffffffffffffffff80821161016e5760405190601f8301601f19908116603f011682019081118282101761016e5760405281815260208101913681850111610169576020816000927f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d968637830101525190201461015e57630a85bd0160e11b90565b630a85bd0160e11b90565b600080fd5b634e487b7160e01b600052604160045260246000fd5b50630a85bd0160e11b919050565b50630a85bd0160e11b9291505056fea264697066735822122086b91bcd075a62b7d5d8d06fd1c6dfbee1e30244f294caa445420e9c9c9fa00f64736f6c6343000811003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50a26469706673582212207880379054c128329bbb4ebb18fa1b05ea30d4708486cb63152b59f0eea20ee464736f6c63430008110033",
    "sourceMap": "736:10076:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;1652:82;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;1103:30;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;1154:84;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;1740:80;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;798:38;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;842:52;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;938:44;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;7724:14;736:10076;;;-1:-1:-1;;;7724:22:49;;;;;736:10076;;-1:-1:-1;;;;;736:10076:49;7724:22;;736:10076;;;;;;;;7724:22;;;;;;;;736:10076;7724:22;;;736:10076;7717:4;;7724:22;:::i;:::-;7755:11;736:10076;7760:5;736:10076;;7755:11;:::i;:::-;736:10076;7774:51;;;;;736:10076;;;;;;;;;;;;;7774:51;;;736:10076;7774:51;;736:10076;;;;;;;;;;;7774:51;;;;;;;;736:10076;;;7724:14;736:10076;;;7866:3;736:10076;;7833:37;;;;;;736:10076;;;;;;;;;;;;;7833:37;;;;736:10076;7833:37;;736:10076;7833:37;;;;;;;;736:10076;7717:4;7883:13;7717:4;7883:13;:::i;:::-;736:10076;7724:14;736:10076;;;;7866:3;736:10076;;7905:37;;;;;736:10076;;;;;;7905:37;;;;;;;736:10076;7905:37;;736:10076;7905:37;;;;;;;;736:10076;;;;7866:3;736:10076;;;7724:14;736:10076;;;;;;7964:22;;;;;;;;;;;;;7950:37;7964:22;736:10076;7964:22;;;736:10076;7950:37;;;:::i;:::-;736:10076;7964:22;;;;;;;-1:-1:-1;7964:22:49;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;736:10076;;;;;;;;;7905:37;;;;:::i;:::-;;;;7833;;;;:::i;:::-;;;;7774:51;;;;:::i;:::-;;;;7724:22;;;;;;;;;;;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;768:24;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;8678:5;736:10076;-1:-1:-1;;;;;736:10076:49;8673:11;;736:10076;;8673:11;:::i;:::-;736:10076;8692:11;736:10076;;8692:37;;;;;736:10076;;;;;;;;;;;;;8692:37;;;;;;;;;;736:10076;;;8747:14;736:10076;;;8678:5;736:10076;;;;;;;;;8747:44;;;736:10076;8747:44;;736:10076;;;;;1671:64:25;8747:44:49;;;;736:10076;8747:44;;;;;;;;;;;736:10076;8747:44;;;736:10076;;;;;;;;;;;;;;;8815:26;;;736:10076;8815:26;;1671:64:25;8815:26:49;;;;;;;8799:43;8815:26;736:10076;8815:26;;;736:10076;8799:43;;:::i;:::-;8855:3;8850:9;736:10076;;;;8850:9;:::i;:::-;736:10076;8867:64;;;;;;736:10076;;-1:-1:-1;;;8867:64:49;;736:10076;;;8867:64;736:10076;8867:64;;;:::i;:::-;;;;;;;;;;;;;736:10076;;;8747:14;736:10076;;;;8678:5;736:10076;;;;;;;8939:47;;;;;;736:10076;;-1:-1:-1;;;8939:47:49;;;-1:-1:-1;;;;;736:10076:49;;;;8939:47;;736:10076;;;;;;;;;;;;1671:64:25;;;736:10076:49;;;;;;;;;;8939:47;;;;;;;;;;736:10076;;8994:11;736:10076;8678:5;736:10076;;8994:11;:::i;:::-;736:10076;8747:14;736:10076;;;8678:5;736:10076;;;;;;9013:47;;;;;736:10076;;9013:47;;;-1:-1:-1;;;;;736:10076:49;;;;9013:47;;736:10076;;;;;;;;;;1671:64:25;;;736:10076:49;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;9013:47:49;;;;;;;;736:10076;;;;;;;;;8747:14;736:10076;;;;;;;;;;;9082:26;;;736:10076;9082:26;;1671:64:25;9082:26:49;;;;;;;9068:41;9082:26;736:10076;9082:26;;;9068:41;;:::i;:::-;9117:9;736:10076;;;;9117:9;:::i;:::-;9134:69;;;;;736:10076;;;;;;;;;;;;;9134:69;;;736:10076;9134:69;;736:10076;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;9134:69;;;;;;;;736:10076;;;8747:14;736:10076;;;;;;;9256:12;736:10076;;9211:63;;;;;;736:10076;;9211:63;;;-1:-1:-1;;;;;736:10076:49;;;;9211:63;;736:10076;;;;;;;;;;1671:64:25;;;736:10076:49;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;9211:63:49;;;;;;;;736:10076;;;;9309:17;;;;;;;-1:-1:-1;;;;;9309:17:49;;;;;;;;;;;;736:10076;9309:17;;;;;9334:9;736:10076;;;;9334:9;:::i;:::-;736:10076;;;8747:14;736:10076;;;;;;;9351:62;;;;;;736:10076;;9351:62;;;-1:-1:-1;;;;;736:10076:49;;;;9351:62;;736:10076;;;;;;;;;;;1671:64:25;;;736:10076:49;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;9351:62:49;;;;;;;;;;;736:10076;;8747:14;736:10076;;;;;;;;;;;;;9452:26;;736:10076;9452:26;;1671:64:25;9452:26:49;;;;;;;;;736:10076;9452:26;;;;;;:::i;9351:62::-;;;;:::i;:::-;;;;9309:17;1671:64:25;;;736:10076:49;1671:64:25;;736:10076:49;1671:64:25;736:10076:49;;1671:64:25;9211:63:49;;;;:::i;:::-;;;;9134:69;;;;:::i;:::-;;;;9082:26;;;;;;;;;;;;;;;:::i;:::-;;;;;9013:47;;;;:::i;:::-;;;;8939;;;;:::i;:::-;;;;8867:64;;;;:::i;:::-;;;;8815:26;;;;;;;;;;;;;;;:::i;:::-;;;;;8747:44;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;;;;8747:44;;;;;;;;;8692:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;6650:5;736:10076;-1:-1:-1;;;;;736:10076:49;6640:16;;736:10076;;6640:16;:::i;:::-;736:10076;6689:7;6693:3;6689:7;;;;736:10076;6682:607;6708:11;736:10076;;;;;6708:37;;;;;736:10076;;;;;;6708:37;;;;736:10076;;;;;6708:37;;;;;;;;;;6682:607;6779:14;;736:10076;;;;;;;;;;;;;;6779:29;;;;;736:10076;6779:29;;1671:64:25;6779:29:49;736:10076;;;;6779:29;;;;;;;;;;6873:3;6779:29;6849:13;6779:29;736:10076;6779:29;;;6682:607;736:10076;;;;;6849:13;:::i;:::-;6873:3;:::i;:::-;6886:12;736:10076;;;;;6886:38;;;;;;736:10076;;;;;;;6886:38;;;;;;;;;;;;;;;;;;6682:607;736:10076;;;;;;;;6959:29;;;;;;;;736:10076;6959:29;;1671:64:25;6959:29:49;;;;;;;7030:14;6959:29;7055:3;6959:29;736:10076;6959:29;;;6682:607;736:10076;;;7030:14;:::i;7055:3::-;736:10076;;;;;7068:37;;;;;736:10076;;;;;7068:37;;;;;;;;;;;;;;;;;;;;6682:607;736:10076;;;;;;7182:29;;;;;;;736:10076;7182:29;;1671:64:25;7182:29:49;;;;;;;7276:3;7182:29;7252:13;7182:29;;;736:10076;7182:29;;;6682:607;736:10076;;;;7252:13;:::i;7276:3::-;6682:607;;7182:29;;;;;;;-1:-1:-1;7182:29:49;;;;;;:::i;:::-;;;;;;7068:37;;;;:::i;:::-;;;;6959:29;;;;;;;;;;;;;;;:::i;:::-;;;;;6886:38;;;;:::i;:::-;;;;6779:29;;;;;;;;;;;;;;:::i;:::-;;;;6708:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;5191:5;736:10076;-1:-1:-1;;;;;736:10076:49;5186:11;;736:10076;;5186:11;:::i;:::-;736:10076;5205:46;;;;;736:10076;;-1:-1:-1;;;5205:46:49;;736:10076;;5205:46;;736:10076;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;5205:46:49;;;;;;;;736:10076;;;5259:14;736:10076;;;5191:5;736:10076;;5259:35;;;;;736:10076;;;;;;;;;;;;;;;5259:35;;736:10076;5259:35;;736:10076;5259:35;;;;;;;;736:10076;5259:35;;;;:::i;5205:46::-;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;;8063:7;8067:3;8063:7;;;;736:10076;8056:558;8087:5;736:10076;;-1:-1:-1;;;;;736:10076:49;8087:5;8082:11;;736:10076;;8082:11;:::i;:::-;8103;736:10076;;;;;8103:37;;;;;;736:10076;;;;;;8103:37;;;;736:10076;;;;;8103:37;;;;;;;;;;8056:558;8168:14;;736:10076;;;;;;;;;;;;;;8168:25;;;;;736:10076;8168:25;;1671:64:25;8168:25:49;736:10076;;;;8168:25;;;;;;;;;;8203:24;8168:25;8237:3;8168:25;736:10076;8168:25;;;736:10076;;;8203:24;:::i;8237:3::-;8255;;736:10076;8250:9;736:10076;;;;8250:9;:::i;:::-;736:10076;8269:12;736:10076;;8269:38;;;;;;736:10076;;;;;;8269:38;;;;;;;;;;;;;;;;;;8056:558;736:10076;;;;;;;;8333:25;;;;;;;;736:10076;8333:25;;1671:64:25;8333:25:49;;;;;;;8368:20;8398:3;8333:25;;;736:10076;8333:25;;;8056:558;736:10076;;;;;8368:20;:::i;8398:3::-;736:10076;8411:9;736:10076;;;;8411:9;:::i;:::-;736:10076;;8430:37;;;;;736:10076;;;;;8430:37;;;;;;;;;;;;;;;;;;;;8056:558;736:10076;;;;;;8536:25;;;;;;;736:10076;8536:25;;1671:64:25;8536:25:49;;;;;;;8601:3;8536:25;8571:20;8536:25;736:10076;8536:25;;;736:10076;;;;8571:20;:::i;8601:3::-;8056:558;;8536:25;;;;;;;-1:-1:-1;8536:25:49;;;;;;:::i;:::-;;;;;;8430:37;;;;:::i;:::-;;;;8333:25;;;;;;;-1:-1:-1;8333:25:49;;;;;;:::i;:::-;;;;8269:38;;;;:::i;:::-;;;;8168:25;;;;;;;;-1:-1:-1;8168:25:49;;;;;;:::i;8103:37::-;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;9803:5;736:10076;-1:-1:-1;;;;;736:10076:49;9798:11;;736:10076;;9798:11;:::i;:::-;736:10076;9817:11;736:10076;;9817:37;;;;;736:10076;;;;;;;;;;;;;9817:37;;;;;;;;;;736:10076;;;9872:14;736:10076;;;;9803:5;736:10076;;;;;;;;;9872:44;;;736:10076;9872:44;;736:10076;;;;;1671:64:25;9872:44:49;;;;736:10076;9872:44;;;;;;;;;736:10076;9872:44;;;736:10076;;;;;;;;;;;;;;;9940:26;;;736:10076;9940:26;;1671:64:25;9940:26:49;;;;;;;9924:43;9940:26;736:10076;9940:26;;;9924:43;;;:::i;:::-;9975:9;736:10076;9980:3;736:10076;;9975:9;:::i;:::-;736:10076;9992:64;;;;;736:10076;;;;;;;;9992:64;;;;;;736:10076;9992:64;;;:::i;:::-;;;;;;;;;;;736:10076;;;9872:14;736:10076;;;;9803:5;736:10076;;;;9980:3;736:10076;;10064:43;;;;;;736:10076;;-1:-1:-1;;;10064:43:49;;;-1:-1:-1;;;;;736:10076:49;;;;10064:43;;736:10076;;;;;;;;;;;;1671:64:25;;;736:10076:49;;;;;;;;;;10064:43;;;;;;;;;;736:10076;;10115:11;736:10076;9803:5;736:10076;;10115:11;:::i;:::-;736:10076;9872:14;736:10076;;;9803:5;736:10076;;;9980:3;736:10076;;10134:43;;;;;;736:10076;;10134:43;;;-1:-1:-1;;;;;736:10076:49;;;;10134:43;;736:10076;;;;;;;;;;;;1671:64:25;;;;736:10076:49;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;10134:43:49;;;;;;;;736:10076;10064:43;;;;:::i;:::-;;;;9992:64;;;;:::i;:::-;;;;9940:26;;;;;;;-1:-1:-1;9940:26:49;;;;;;:::i;:::-;;;;;;9872:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;;;;9872:44;;;;;;;9817:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;9546:5;736:10076;-1:-1:-1;;;;;736:10076:49;9536:16;;736:10076;;9536:16;:::i;:::-;736:10076;9585:7;9589:3;9585:7;;;;736:10076;9578:165;736:10076;9604:11;736:10076;;9604:37;;;;;736:10076;;;;;;;;;;;;;9604:37;;;;;;;;;;9578:165;736:10076;;9661:14;736:10076;;;;;;;;;;9661:30;;;736:10076;9661:30;;1671:64:25;9661:30:49;736:10076;9661:30;;;;;;;;;;;736:10076;9661:30;;;9578:165;9712:7;;;;9731:3;9712:7;;;:::i;9731:3::-;9578:165;;9661:30;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;;;9712:7;736:10076;9661:30;;;;;;;9604:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;1577:69;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;1024:31;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;1061:36;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;6361:5;736:10076;-1:-1:-1;;;;;736:10076:49;6351:16;;736:10076;;6351:16;:::i;:::-;736:10076;6408:7;6412:3;6408:7;;;;736:10076;6401:178;6439:14;736:10076;;;;;;;;;;;;;;6439:24;;;;;736:10076;6439:24;;1671:64:25;6439:24:49;736:10076;;;;6439:24;;;;;;;;;7918:5:28;6439:24:49;736:10076;6439:24;;;6401:178;7918:5:28;;;:::i;:::-;736:10076:49;6474:11;736:10076;;6474:37;;;;;;736:10076;;;;;;;;;;;;;6474:37;;;;;;;;;;;;;;;6401:178;736:10076;;;;;;6532:24;;;;;;;736:10076;6532:24;;1671:64:25;6532:24:49;;;;;;6567:3;6532:24;;;736:10076;6532:24;;;6401:178;6532:24;;;:::i;6567:3::-;6401:178;;6532:24;;;;;;-1:-1:-1;6532:24:49;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;6474:37;;;;:::i;:::-;;;;6439:24;;;;;;;;;;;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;10252:5;736:10076;-1:-1:-1;;;;;736:10076:49;10242:16;;736:10076;;10242:16;:::i;:::-;736:10076;10264:46;;;;;736:10076;;-1:-1:-1;;;10264:46:49;;;736:10076;;10264:46;;736:10076;;;;;;;;;;;;;-1:-1:-1;736:10076:49;;;-1:-1:-1;736:10076:49;10264:46;;;;;;;;736:10076;;;10316:14;736:10076;;;10252:5;736:10076;;10316:26;;;;;736:10076;;;;;;;;;;;;;;;10316:26;;736:10076;10316:26;;736:10076;10316:26;;;;;;;;736:10076;10348:167;;;;;;736:10076;;10348:167;;;736:10076;10348:167;;;736:10076;10348:167;;;:::i;:::-;;;;;;;;;;;;;736:10076;;;10316:14;736:10076;;;;10252:5;736:10076;;10521:57;;;;;;736:10076;;;;;;;;;;;;;10521:57;;;;10546:24;736:10076;10521:57;;1671:64:25;736:10076:49;;;;10521:57;;;;;;;;736:10076;10584:167;;;;;;736:10076;;;;10584:167;;;;;;;;;736:10076;10584:167;;;:::i;:::-;;;;;;;;;;;736:10076;;;10316:14;736:10076;;;10252:5;736:10076;;10757:46;;;;;736:10076;;;;;;10757:46;;;;;;;;736:10076;10757:46;;1671:64:25;736:10076:49;;;;10757:46;;;;;;;;736:10076;10584:167;;;;:::i;:::-;;;;10521:57;;;;:::i;:::-;;;;10348:167;;;;:::i;:::-;;;;10316:26;;;;:::i;:::-;;;;10264:46;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;5950:5;736:10076;;-1:-1:-1;;;;;736:10076:49;5950:5;5940:16;;736:10076;;5940:16;:::i;:::-;736:10076;5982:320;5989:7;5993:3;5989:7;;;;736:10076;5982:320;6008:11;736:10076;;;;6008:37;;;;;736:10076;;;;;;6008:37;;736:10076;;;;;6008:37;;;;;;;;;;;;;5982:320;-1:-1:-1;6065:14:49;736:10076;;;;;;-1:-1:-1;;;6065:44:49;;736:10076;;;-1:-1:-1;;;;;736:10076:49;;6065:44;;736:10076;;;;1671:64:25;;;;6065:44:49;;736:10076;;6065:44;;736:10076;;;;;;;;;6065:44;;;;;;;;;;;;;736:10076;6065:44;;;5982:320;6130:7;;736:10076;;1671:64:25;;;;:::i;:::-;;;-1:-1:-1;;;736:10076:49;;;;3496:10:25;;3492:111;;5982:320:49;736:10076;;;;;;;;;;;;;;;;;;;;6187:31;;736:10076;6187:31;;736:10076;;6187:31;;;;;;;;;;736:10076;6187:31;;;5982:320;736:10076;;;;;;;;;6290:3;736:10076;;;;;;1671:64:25;;;:::i;:::-;736:10076:49;1671:64:25;;-1:-1:-1;;;736:10076:49;;;;5545:6:25;;;;5541:100;;;;5982:320:49;6290:3;;;;;;:::i;:::-;5982:320;;;;5541:100:25;5572:30;;736:10076:49;;;5572:30:25;;;;;:::i;:::-;;;;5255:203;;5541:100;;;;;5255:203;-1:-1:-1;;;;;;;;;;;736:10076:49;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;5286:41:25;736:10076:49;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;;;;;;;;;1671:64:25;5346:31;;;;;;;;736:10076:49;;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;;;;;;;;1671:64:25;5396:31;;;;;:::i;:::-;5255:203;;;;;736:10076:49;1671:64:25;;;;736:10076:49;;;;;;;6187:31;;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;6187:31;;;;;;;;;3492:111:25;3527:30;;3582:9;736:10076:49;;;3527:30:25;;;;;:::i;:::-;;;;3582:9;:::i;:::-;3492:111;;;;6065:44:49;;;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;;;;6065:44;;;;;;;;6008:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;900:32;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;1349:78;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;1433:70;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;5355:5;736:10076;;-1:-1:-1;;;;;736:10076:49;5355:5;5345:16;;736:10076;;5345:16;:::i;:::-;736:10076;5394:7;5398:3;5394:7;;;;736:10076;5387:501;736:10076;5488:11;736:10076;;5488:37;;;;;736:10076;;;;;;;;;;;;;5488:37;;;;;;;;;;5387:501;-1:-1:-1;5547:14:49;736:10076;;;;;;-1:-1:-1;;;5547:44:49;;736:10076;;;-1:-1:-1;;;;;736:10076:49;;5547:44;;736:10076;;;;1671:64:25;;;5547:14:49;;1671:64:25;5547:44:49;;;;736:10076;;;;;;;;;5547:44;;;;;;;;;;736:10076;5547:44;;;5387:501;5612:7;;;;;:::i;:::-;736:10076;;;;;;;;;;;;;;5655:29;;;;;736:10076;5655:29;;1671:64:25;736:10076:49;5655:29;;;;;;;;;;;736:10076;5655:29;;;5387:501;736:10076;;3678:6:25;3674:212;;5387:501:49;736:10076;;;;;5762:3;;736:10076;;;;;5739:30;;;;;;736:10076;;-1:-1:-1;;;5739:30:49;;-1:-1:-1;;;;;736:10076:49;;;;;5739:30;;736:10076;;;;1671:64:25;;;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;5739:30:49;;;;;;;;;;;;;5387:501;736:10076;;;;;;5801:29;;;;;;;736:10076;5801:29;;1671:64:25;5801:29:49;;;;;;;5876:3;5801:29;5840:26;5801:29;;;736:10076;5801:29;;;736:10076;;;;5840:26;:::i;5876:3::-;5387:501;;5801:29;;;;;;;-1:-1:-1;5801:29:49;;;;;;:::i;:::-;;;;;;5739:30;;;;:::i;:::-;;;;3674:212:25;-1:-1:-1;;;;;;;;;;;736:10076:49;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;3705:44:25;736:10076:49;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;;;;;;;;;;3768:34:25;;;;;;;;736:10076:49;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;;;;;;;;;;3821:34:25;;;;;:::i;:::-;3674:212;;;5655:29:49;;;;;;;;;;;;;;:::i;:::-;;;;5547:44;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;5612:7;736:10076;;5547:44;;;;;;;5488:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;988:30;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;;;2452:18;;;;;;;-1:-1:-1;;;;;2452:18:49;;;;;;;;;;;;736:10076;2452:18;;;;;2437:33;736:10076;;-1:-1:-1;;;;;;736:10076:49;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;;2543:60;;;736:10076;;;-1:-1:-1;;;736:10076:49;;;;2543:60;;;;;736:10076;;2543:60;736:10076;2543:60;:::i;:::-;1671:64:25;2533:71:49;;2606:18;736:10076;-1:-1:-1;;;;;736:10076:49;2509:116;;;;;736:10076;;-1:-1:-1;;;2509:116:49;;736:10076;2509:116;;1671:64:25;;;;-1:-1:-1;;;;;736:10076:49;;;;;;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;2509:116:49;;;;;;;;736:10076;;;;;;;2437:33;736:10076;;;;2543:60;2703:64;;736:10076;;;;-1:-1:-1;;;736:10076:49;;;;2703:64;;;;;;:::i;:::-;1671::25;2693:75:49;;2770:7;736:10076;-1:-1:-1;;;;;736:10076:49;2669:109;;;;;736:10076;;-1:-1:-1;;;2669:109:49;;736:10076;2669:109;;1671:64:25;;;;-1:-1:-1;;;;;736:10076:49;;;;;;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;2669:109:49;;;;;;;;736:10076;;;;;;;2437:33;736:10076;;;;;2543:60;2844:52;;736:10076;;;-1:-1:-1;;;736:10076:49;;;;2844:52;;;;;;:::i;:::-;1671:64:25;2834:63:49;;2899:10;736:10076;-1:-1:-1;;;;;736:10076:49;2810:100;;;;;736:10076;;-1:-1:-1;;;2810:100:49;;736:10076;2810:100;;1671:64:25;;;;-1:-1:-1;;;;;736:10076:49;;;;;;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;2810:100:49;;;;;;;;736:10076;-1:-1:-1;2437:33:49;736:10076;;;;-1:-1:-1;;;;;736:10076:49;2963:32;;;;-1:-1:-1;;;;;2963:32:49;;;;;;;;2543:60;2963:32;;;;;;736:10076;;2963:32;;;736:10076;2963:32;;;;;736:10076;;;-1:-1:-1;;;;;;736:10076:49;-1:-1:-1;;;;;736:10076:49;;;;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:49;3069:54;;736:10076;;;-1:-1:-1;;;736:10076:49;;;;3069:54;;;736:10076;;;;;3069:54;736:10076;3069:54;:::i;:::-;1671:64:25;3059:65:49;;3035:115;;;;;;736:10076;;-1:-1:-1;;;3035:115:49;;736:10076;3035:115;;1671:64:25;;;;-1:-1:-1;;;;;736:10076:49;;;;;;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;3035:115:49;;;;;;;;736:10076;-1:-1:-1;2437:33:49;736:10076;;;;-1:-1:-1;;;;;736:10076:49;3202:36;;;;-1:-1:-1;;;;;3202:36:49;;;;;;;;2543:60;3202:36;;;;;;736:10076;;3202:36;;;736:10076;3202:36;;;;;3181:57;736:10076;;-1:-1:-1;;;;;;736:10076:49;-1:-1:-1;;;;;736:10076:49;;;;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:49;3307:58;;736:10076;;;-1:-1:-1;;;736:10076:49;;;;3307:58;;;736:10076;;;;;3307:58;736:10076;3307:58;:::i;:::-;1671:64:25;3297:69:49;;3273:123;;;;;;736:10076;;-1:-1:-1;;;3273:123:49;;736:10076;3273:123;;1671:64:25;;;;-1:-1:-1;;;;;736:10076:49;;;;;;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;3273:123:49;;;;;;;;736:10076;-1:-1:-1;736:10076:49;;3181:57;736:10076;-1:-1:-1;;;;;736:10076:49;;;;;3404:69;;;;;736:10076;;;;;;;;;;;;;;;3404:69;;;736:10076;3404:69;;1671:64:25;736:10076:49;;;;3404:69;;;;;;;;736:10076;-1:-1:-1;2437:33:49;736:10076;;;;-1:-1:-1;;;;;736:10076:49;3522:29;;;;-1:-1:-1;;;;;3522:29:49;;;;;;;;2543:60;3522:29;;;;;;736:10076;;3522:29;;;736:10076;3522:29;;;;;736:10076;;;-1:-1:-1;;;;;;736:10076:49;-1:-1:-1;;;;;736:10076:49;;;;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:49;3624:51;;736:10076;;;-1:-1:-1;;;736:10076:49;;;;3624:51;;;736:10076;;;;;3624:51;736:10076;3624:51;:::i;:::-;1671:64:25;3614:62:49;;3590:109;;;;;;736:10076;;-1:-1:-1;;;3590:109:49;;736:10076;3590:109;;1671:64:25;;;;-1:-1:-1;;;;;736:10076:49;;;;;;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;3590:109:49;;;;;;;;736:10076;-1:-1:-1;2437:33:49;736:10076;;;;-1:-1:-1;;;;;736:10076:49;3751:33;;;;-1:-1:-1;;;;;3751:33:49;;;;;;;;2543:60;3751:33;;;;;;736:10076;;3751:33;;;736:10076;3751:33;;;;;3733:51;736:10076;;-1:-1:-1;;;;;;736:10076:49;-1:-1:-1;;;;;736:10076:49;;;;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:49;3856:55;;736:10076;;;-1:-1:-1;;;736:10076:49;;;;3856:55;;;736:10076;;;;;3856:55;736:10076;3856:55;:::i;:::-;1671:64:25;3846:66:49;;3822:117;;;;;;736:10076;;-1:-1:-1;;;3822:117:49;;736:10076;3822:117;;1671:64:25;;;;-1:-1:-1;;;;;736:10076:49;;;;;;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;3822:117:49;;;;;;;;736:10076;-1:-1:-1;2437:33:49;736:10076;;;;-1:-1:-1;;;;;736:10076:49;-1:-1:-1;;;;;3996:40:49;;;;;;;;-1:-1:-1;3996:40:49;;;;;;;;;;736:10076;2543:60;3996:40;;;;;;;736:10076;3996:40;;;;;3971:65;736:10076;;-1:-1:-1;;;;;;736:10076:49;-1:-1:-1;;;;;736:10076:49;;;;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:49;4106:62;;736:10076;;;-1:-1:-1;;;736:10076:49;;;;4106:62;;;736:10076;;;;;4106:62;736:10076;4106:62;:::i;:::-;1671:64:25;4096:73:49;;4072:131;;;;;;736:10076;;-1:-1:-1;;;4072:131:49;;736:10076;4072:131;;1671:64:25;;;;-1:-1:-1;;;;;736:10076:49;;;;;;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;4072:131:49;;;;;;;;736:10076;-1:-1:-1;2437:33:49;736:10076;;;;-1:-1:-1;;;;;736:10076:49;4240:26;;;;-1:-1:-1;;;;;4240:26:49;;;;;;;;2543:60;4240:26;;;;;;736:10076;;4240:26;;;736:10076;4240:26;;;;;4229:37;736:10076;;-1:-1:-1;;;;;;736:10076:49;-1:-1:-1;;;;;736:10076:49;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:49;4331:51;;736:10076;;;-1:-1:-1;;;736:10076:49;;;;3624:51;4331;;736:10076;;;;;4331:51;736:10076;4331:51;:::i;:::-;1671:64:25;4321:62:49;;736:10076;;-1:-1:-1;;;;;736:10076:49;4297:109;;;;;736:10076;;-1:-1:-1;;;4297:109:49;;736:10076;4297:109;;1671:64:25;;;;-1:-1:-1;;;;;736:10076:49;;;;;;-1:-1:-1;;736:10076:49;;;;;;-1:-1:-1;;4297:109:49;;;;;;;;736:10076;-1:-1:-1;3181:57:49;736:10076;4548:9;736:10076;;;-1:-1:-1;;;4522:79:49;;;-1:-1:-1;;;;;736:10076:49;;;;4522:79;;736:10076;;;;;;;;;;;;2543:60;;736:10076;;;;;;;;4522:79;;;;;;2543:60;4522:79;736:10076;4522:79;;;736:10076;-1:-1:-1;4641:40:49;736:10076;;-1:-1:-1;;;;;;736:10076:49;-1:-1:-1;;;;;736:10076:49;;;;;;3181:57;736:10076;4548:9;736:10076;;;4854:79;;;736:10076;;;4854:79;;736:10076;-1:-1:-1;736:10076:49;;;;;;;;;;;;;;-1:-1:-1;736:10076:49;4854:79;;;;;;;736:10076;4854:79;;;736:10076;-1:-1:-1;736:10076:49;;;-1:-1:-1;;;;;;736:10076:49;-1:-1:-1;;;;;736:10076:49;;;;;;;;;;;4854:79;;;;2543:60;4854:79;2543:60;4854:79;;;;;;;:::i;:::-;;;;4522;;;;;;;;;;;;;;:::i;:::-;;;;4297:109;;;;:::i;:::-;;;;4240:26;1671:64:25;;;;736:10076:49;1671:64:25;;736:10076:49;1671:64:25;736:10076:49;1671:64:25;4072:131:49;;;;:::i;:::-;;;;3996:40;1671:64:25;;;;736:10076:49;1671:64:25;;736:10076:49;1671:64:25;736:10076:49;1671:64:25;3822:117:49;;;;:::i;:::-;;;;3590:109;;;;:::i;:::-;;;;3404:69;;;;:::i;:::-;;;;3273:123;;;;:::i;:::-;;;;3035:115;;;;:::i;:::-;;;;2810:100;;;;:::i;:::-;;;;2669:109;;;;:::i;:::-;;;;2509:116;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:49;;;;7358:5;736:10076;-1:-1:-1;;;;;736:10076:49;7348:16;;736:10076;;7348:16;:::i;:::-;736:10076;7397:6;736:10076;7397:6;;;;-1:-1:-1;7493:14:49;736:10076;7358:5;736:10076;7532:3;736:10076;;;-1:-1:-1;;;7493:43:49;;;736:10076;;;-1:-1:-1;;;;;736:10076:49;;;;7493:43;;736:10076;;;;;;;;;;;7493:43;;736:10076;;7493:43;;736:10076;;;;;;;;7493:43;;;;;;7918:5:28;7493:43:49;736:10076;7493:43;;;7918:5:28;;;:::i;:::-;736:10076:49;7493:14;736:10076;;;;7532:3;736:10076;;7545:43;;;;;736:10076;;;;;;;;;;;;;;;7545:43;;736:10076;7545:43;;736:10076;;;;;;7545:43;;;;;;;7607;7545;;;;;7390:84;-1:-1:-1;7493:14:49;736:10076;7358:5;736:10076;7532:3;736:10076;;;7607:43;;;-1:-1:-1;;;;;736:10076:49;;;;;;7607:43;;736:10076;;;;;;;;;;;;;;;;;;;;;;;;;7607:43;;;;;;;;;;;;736:10076;7607:43;;;;;;:::i;:::-;;;;;;-1:-1:-1;7607:43:49;;;;;;:::i;:::-;;;;;7545;;;;:::i;:::-;;;;7493;;;;;;;;;;;;;;:::i;:::-;;;;7390:84;736:10076;7415:11;736:10076;;7415:37;;;;;;736:10076;;;;;;;;;;;;;7415:37;;;;;;;;;7462:3;7415:37;;;7390:84;7462:3;;:::i;:::-;7390:84;;7415:37;;;;:::i;:::-;;;;1671:64:25;-1:-1:-1;;;;;1671:64:25;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:25;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;736:10076:49;;;1671:64:25;;;;-1:-1:-1;;1671:64:25;;;736:10076:49;1671:64:25;:::i;:::-;;;;-1:-1:-1;1671:64:25;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;736:10076:49;;;1671:64:25;;;;;:::o;1819:584::-;1873:7;736:10076:49;;;;;;;;;;;;;;;1896:14:25:o;1869:528::-;1941:25;2939:104;;;1980:374;;2367:19;;;:::o;1980:374::-;736:10076:49;;;;;2196:43:25;;;;736:10076:49;;;1671:64:25;;;736:10076:49;1671:64:25;;;736:10076:49;2196:43:25;;;;;:::i;:::-;2086:175;1671:64;736:10076:49;;2086:175:25;;1671:64;2196:43;2086:175;;1671:64;;;;;;;;;;;;;;:::i;:::-;;;2086:175;1671:64;2086:175;;;;;;;:::i;:::-;2047:232;;;;;2312:27;2047:232;;:::i;:::-;2196:43;1671:64;;;2312:27;;;;;;:::i;:::-;2367:19;:::o;736:10076:49:-;;;;;;;;;;-1:-1:-1;;;;;736:10076:49;;;;;;;:::o;1449:98:28:-;736:10076:49;1495:22:28;;;;;736:10076:49;;-1:-1:-1;;;1495:22:28;;-1:-1:-1;;;;;736:10076:49;;;1495:22:28;;;736:10076:49;;;-1:-1:-1;;;736:10076:49;;;1671:64:25;1495:22:28;;;736:10076:49;;;1495:22:28;;;;;;;;;;1449:98;1527:13;;;;;;736:10076:49;;;;;;;;;;;;;;;1527:13:28;;1495:22;1527:13;;736:10076:49;1527:13:28;;;;;;;;1449:98;;:::o;1527:13::-;;;;;:::i;:::-;736:10076:49;;1449:98:28;:::o;736:10076:49:-;;;1527:13:28;736:10076:49;;;;;;;;;1527:13:28;736:10076:49;;;1495:22:28;;;;;;;:::i;:::-;;;;;;736:10076:49;;;;;;;;;;-1:-1:-1;;736:10076:49;;;;;;;:::o;:::-;1671:64:25;;;736:10076:49;;;;;;;;3255:157:25;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;736:10076:49;;;;;;;;;;;;;;;;3345:30:25;;;:::i;:::-;3255:157::o;2410:424::-;2939:104;;;2445:359;;2410:424;736:10076:49;;;;2928:1:25;736:10076:49;;;2928:1:25;736:10076:49;2410:424:25:o;2445:359::-;736:10076:49;;2645:67:25;;;;736:10076:49;;;;1671:64:25;;;736:10076:49;;;1671:64:25;2705:4;736:10076:49;;;1671:64:25;736:10076:49;2645:67:25;;736:10076:49;1671:64:25;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;-1:-1:-1;1671:64:25;2534:196;;1671:64;;;;736:10076:49;1671:64:25;2534:196;;;1671:64;;;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;3615:277;-1:-1:-1;;;;;736:10076:49;;;;;3678:6:25;;;3674:212;;3615:277;;:::o;3674:212::-;736:10076:49;;;;-1:-1:-1;;;;;;;;;;;736:10076:49;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;3705:44:25;736:10076:49;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;;;;;;;;;;3768:34:25;;;;;;;;736:10076:49;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;;;;;;;;;;3821:34:25;;;;;:::i;1998:108:28:-;736:10076:49;2049:22:28;;;;;736:10076:49;;-1:-1:-1;;;2049:22:28;;-1:-1:-1;;;;;736:10076:49;;;2049:22:28;;;736:10076:49;;;-1:-1:-1;;;736:10076:49;;;1671:64:25;2049:22:28;;;736:10076:49;;;2049:22:28;;;;;;;;;;1998:108;2081:18;;;;;;736:10076:49;;;;;;;;;;;;;;;2081:18:28;;2049:22;2081:18;;736:10076:49;2081:18:28;;;;;;;;1998:108;;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;736:10076:49;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;;;;;;;1671:64:25;;736:10076:49;;;;;;;;;;;;;;:::i;:::-;1671:64:25;;-1:-1:-1;;1671:64:25;736:10076:49;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:49;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "failed()": "ba414fa6",
    "frensArt()": "94cd95e3",
    "frensMetaHelper()": "bc48e947",
    "frensOracle()": "edc91a92",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "setUp()": "0a9254e4",
    "ssvRegistryAddress()": "25b5e62f",
    "stakingPool()": "0c56ae3b",
    "stakingPool2()": "5f583c1d",
    "stakingPoolFactory()": "a1b8adcb",
    "testApprove()": "1aeb10a6",
    "testBalanceOf()": "3df77c0e",
    "testGetPoolById()": "87496250",
    "testIsApprovedForAll()": "09d26b6c",
    "testMintingDirectly()": "796a773d",
    "testOwner()": "9e535c69",
    "testOwnerOf()": "71a29bb7",
    "testSafeTransferFrom()": "90ec5d96",
    "testTokenByIndex()": "6a7179c3",
    "testTransferFrom()": "70557298",
    "testUnauthorizedAccess()": "4fc1a73e",
    "testexists()": "524ad495",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensOracle\",\"outputs\":[{\"internalType\":\"contract FrensOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssvRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool2\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBalanceOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetPoolById\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIsApprovedForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMintingDirectly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwnerOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSafeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenByIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUnauthorizedAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testexists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/FrensPoolShareTest.t.sol\":\"MiscTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensArt.sol\":{\"keccak256\":\"0xa808513154b05af7e0f378fd5bbd3418339acf97f937c128397a2a60b461cbc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78aeb96e57ef2bdc802a9d610799d0dd8c995bfffc861ad5e9213071698aa0fd\",\"dweb:/ipfs/QmXGWNvxedwK3aoMojYNfTtYgyvnpoj57yue7Z5F5xiXF7\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0x00d38e55e6330f17f2350612fae510611277f848d461e7fc023309434b0a00eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://111f9ba4df42ed811f0b2da751c3fa93d3b52e2dd019e01f6f59124c59d49573\",\"dweb:/ipfs/QmPrEbsbWfUFFjL25Z4NF5qw3rukZyZ2b3ozFWnTMWp89c\"]},\"contracts/FrensOracle.sol\":{\"keccak256\":\"0x30740d6312c426f42cb777e76c7745f18a19b1808dae6330676789657225fabb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4bb947459b959e121ea109081f257da032450cac899bb87ee7181a2befbbea7\",\"dweb:/ipfs/QmUut1Yn1RYkaHsi158cPjGg6ebjhAUYR9fuuimATN6AAo\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0x607e3da32099c0cfa73026b16368d6337363ec09b7168cfe25ab85baea1784df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de93250bba3201e592ca8c1ccd2233ac3106cf90f33bcd4d108d1980e9af1cfe\",\"dweb:/ipfs/Qma6NQ7KCuNPkHXarT3Rumznu5GoTqPmbFM2KWNsswuAdF\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x32cc07b387bb80a2fcb95b62998abfd07620e449758887d34d1cea4294b7bb88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86f358153ab7f251d8b8ef25465b0317d1b0fba2907030be95c57d4eaa41e640\",\"dweb:/ipfs/Qmdec4rvArm44XgaHJXS89q2XptHCqQBya5ennMBgwmNW4\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0x5bbc0ed8ec087a81800892143e21b87351e66a7dd7fa652d5c24f922149f828e\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://065891303ad90e80a564acec76c205eeee0889fa17cbd0d970e9cccb52355759\",\"dweb:/ipfs/QmXuXPuSmwqeaqYkSqNbcb5ynT9UXhDbMZ7kLCjQwRJP5v\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0x52fdf67edc6655cfb688769851b54bd0a707472f4e915036e0446df2feea83fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06d279e7b94d20bf3beccb66b4bcb43bf223b78b921e4f7de411cdda854b4489\",\"dweb:/ipfs/QmaRPQQ6B88FEZ34USxERcAjExsD4n2K61VrXcxVX7xSYc\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x5ae22fc42743fbb22327d3005dabb7347d84180f2d9d7e800c9a06defe90b78b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0835d3f28302b53bbf5c64d5f78ffe323c3fce8326b9d8bc544c1d0aa0cc64f\",\"dweb:/ipfs/QmQLFMpVbESbRBZXgYBoauf9kUSA1KVpybz8EXpaDfcfrL\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168\",\"dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8\",\"dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensLogo.sol\":{\"keccak256\":\"0x212d3d6ce97efad3d5b2a2d245e86fe081bb2ac93c4578e4971d317ac06cb0c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c428e9c94d83b1484eded18c5d908f04c1fcc1937da8984313a79290858e1d84\",\"dweb:/ipfs/QmQ5CE2JXrfFx3U6pYxN7GfyBB3CaAyCXgcmke31MS4q6i\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0xc27e7f5b0d7d3759cb0d8fb16441a82a940257026947c963be6ca27a9deea886\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://518efe7e5ab2d70a314729048c79b30f8ca0c963ff71169193e79de5d8eabdb9\",\"dweb:/ipfs/QmbcXWtymVEVu81kKST5WP1opPovN3hGwoyueJ72HKrwHY\"]},\"contracts/interfaces/IFrensOracle.sol\":{\"keccak256\":\"0xdf2291434faca3e9976a42d2328a4347ced5978b29477e40eb75642185afdf67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f84266eaa6df4162f6a2be8dac55a8fd6ba4865a1dda48f4c1dd27c07c8c4316\",\"dweb:/ipfs/QmWbkZtvjrmJ61ZvnFn81UsLEoqzzah7oDkb66eEoSqJ1y\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0x39505e8b566da73b07b6f11e72e17e8fe4f195b371bc38e8d6aa7c83044a6456\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ce8f156ca2b9fef1b683581dd8f7d6ae1e54ad05613c0dbeedd56c2008f67b6\",\"dweb:/ipfs/QmeC2HKSJAGKCP1Uoir3ykuMFeSVQQLDfxQ9N87LBNNLrg\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x5be82a202873c792bcf47db774c09eac8b231d7039fa05cfe66d7bc308608eb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4e998b95a27a694fa84c46aac7b5a00ddddf9801f709b9e4507216d80fa8eca\",\"dweb:/ipfs/QmTdpt18NmPuFuUTqt1Ddpejhd4brRQ1MJT9WLwCB5kjTN\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x426ac9a703a13d4127b56886421d55a8380292dadfb2693d2e8373316075f220\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e8179a87c1e6fcb4762230888412cfaa2e7ba52d314cee3ffe8a17933f259ccf\",\"dweb:/ipfs/QmacSF3u61KjNyK982VwKAA1G86cLZBhYvpPJhdprTg2Rd\"]},\"contracts/interfaces/IPmFont.sol\":{\"keccak256\":\"0x84732ddb98b622bf1b3d535c35e902c342efdba881b33488e7425b31a7551f2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fec9edc00690bafd5f15deca835430f0fda3eac331aac9279a9284d4c835c19\",\"dweb:/ipfs/QmbPk3jq5NWCsxn5GEWaqNmMYU8m4uuUR54XKWayAsuJjc\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6\",\"dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x8448797e921559460625e4be65815d7ba0318aae1ecfdc3ea1d701008a391d13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90b383ecf3f89ca5f35182f64c053367f6e0bcb4463df42377d4eb023e43113f\",\"dweb:/ipfs/QmVoXzc1FQaGvfDLZZsMwfzUv1Kc9Y7Ds9QqTGhG1gvDMk\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0x51a9513e55ce45437c8e21d18d49506cfd08b86b8f4fd76350eafc141aaa203f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba89ad2584eb3c4ce2cf2b17abbaa3b459cae2758c8db26b11249387ab244da2\",\"dweb:/ipfs/QmfPBFQSXj7HkxJhfeFuY2ewR85RoisrqWrURw5jGSjY4r\"]},\"contracts/interfaces/IWaves.sol\":{\"keccak256\":\"0xe728208d23a5bc81fde1cadb770ee72d5a37565c736536770418eb0ab0d8cdeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6b093ef06a083c68c0ed2d04deb000ac26b565e00f26a9cca521ccc7cc034b2\",\"dweb:/ipfs/QmcXdbezAsuh1KqiXWKH8Vs6aVL8V6Ag2b4nwDX7qXUEAN\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/FrensPoolShareTest.t.sol\":{\"keccak256\":\"0x781e250cb47dac80e11fbac55ac68403542ddd1fa3acbf7d719bbb12f78db9ad\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e05c4813b2d15319ff176993cb68e4f32cc45fc708c2f2c3e9603c6784ae1e8a\",\"dweb:/ipfs/QmcPJhGUwDEihKE4Gr5BHmLE4WBqrFqRNLgSPLndPzHLGb\"]},\"test/foundry/TestHelper.sol\":{\"keccak256\":\"0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f\",\"dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensOracle",
          "outputs": [
            {
              "internalType": "contract FrensOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ssvRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool2",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testApprove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBalanceOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetPoolById"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIsApprovedForAll"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMintingDirectly"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwnerOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSafeTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenByIndex"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testUnauthorizedAccess"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testexists"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/FrensPoolShareTest.t.sol": "MiscTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensArt.sol": {
        "keccak256": "0xa808513154b05af7e0f378fd5bbd3418339acf97f937c128397a2a60b461cbc0",
        "urls": [
          "bzz-raw://78aeb96e57ef2bdc802a9d610799d0dd8c995bfffc861ad5e9213071698aa0fd",
          "dweb:/ipfs/QmXGWNvxedwK3aoMojYNfTtYgyvnpoj57yue7Z5F5xiXF7"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0x00d38e55e6330f17f2350612fae510611277f848d461e7fc023309434b0a00eb",
        "urls": [
          "bzz-raw://111f9ba4df42ed811f0b2da751c3fa93d3b52e2dd019e01f6f59124c59d49573",
          "dweb:/ipfs/QmPrEbsbWfUFFjL25Z4NF5qw3rukZyZ2b3ozFWnTMWp89c"
        ],
        "license": "MIT"
      },
      "contracts/FrensOracle.sol": {
        "keccak256": "0x30740d6312c426f42cb777e76c7745f18a19b1808dae6330676789657225fabb",
        "urls": [
          "bzz-raw://e4bb947459b959e121ea109081f257da032450cac899bb87ee7181a2befbbea7",
          "dweb:/ipfs/QmUut1Yn1RYkaHsi158cPjGg6ebjhAUYR9fuuimATN6AAo"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0x607e3da32099c0cfa73026b16368d6337363ec09b7168cfe25ab85baea1784df",
        "urls": [
          "bzz-raw://de93250bba3201e592ca8c1ccd2233ac3106cf90f33bcd4d108d1980e9af1cfe",
          "dweb:/ipfs/Qma6NQ7KCuNPkHXarT3Rumznu5GoTqPmbFM2KWNsswuAdF"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0x32cc07b387bb80a2fcb95b62998abfd07620e449758887d34d1cea4294b7bb88",
        "urls": [
          "bzz-raw://86f358153ab7f251d8b8ef25465b0317d1b0fba2907030be95c57d4eaa41e640",
          "dweb:/ipfs/Qmdec4rvArm44XgaHJXS89q2XptHCqQBya5ennMBgwmNW4"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0x5bbc0ed8ec087a81800892143e21b87351e66a7dd7fa652d5c24f922149f828e",
        "urls": [
          "bzz-raw://065891303ad90e80a564acec76c205eeee0889fa17cbd0d970e9cccb52355759",
          "dweb:/ipfs/QmXuXPuSmwqeaqYkSqNbcb5ynT9UXhDbMZ7kLCjQwRJP5v"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0x52fdf67edc6655cfb688769851b54bd0a707472f4e915036e0446df2feea83fa",
        "urls": [
          "bzz-raw://06d279e7b94d20bf3beccb66b4bcb43bf223b78b921e4f7de411cdda854b4489",
          "dweb:/ipfs/QmaRPQQ6B88FEZ34USxERcAjExsD4n2K61VrXcxVX7xSYc"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x5ae22fc42743fbb22327d3005dabb7347d84180f2d9d7e800c9a06defe90b78b",
        "urls": [
          "bzz-raw://d0835d3f28302b53bbf5c64d5f78ffe323c3fce8326b9d8bc544c1d0aa0cc64f",
          "dweb:/ipfs/QmQLFMpVbESbRBZXgYBoauf9kUSA1KVpybz8EXpaDfcfrL"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7",
        "urls": [
          "bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168",
          "dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c",
        "urls": [
          "bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8",
          "dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensLogo.sol": {
        "keccak256": "0x212d3d6ce97efad3d5b2a2d245e86fe081bb2ac93c4578e4971d317ac06cb0c1",
        "urls": [
          "bzz-raw://c428e9c94d83b1484eded18c5d908f04c1fcc1937da8984313a79290858e1d84",
          "dweb:/ipfs/QmQ5CE2JXrfFx3U6pYxN7GfyBB3CaAyCXgcmke31MS4q6i"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0xc27e7f5b0d7d3759cb0d8fb16441a82a940257026947c963be6ca27a9deea886",
        "urls": [
          "bzz-raw://518efe7e5ab2d70a314729048c79b30f8ca0c963ff71169193e79de5d8eabdb9",
          "dweb:/ipfs/QmbcXWtymVEVu81kKST5WP1opPovN3hGwoyueJ72HKrwHY"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensOracle.sol": {
        "keccak256": "0xdf2291434faca3e9976a42d2328a4347ced5978b29477e40eb75642185afdf67",
        "urls": [
          "bzz-raw://f84266eaa6df4162f6a2be8dac55a8fd6ba4865a1dda48f4c1dd27c07c8c4316",
          "dweb:/ipfs/QmWbkZtvjrmJ61ZvnFn81UsLEoqzzah7oDkb66eEoSqJ1y"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0x39505e8b566da73b07b6f11e72e17e8fe4f195b371bc38e8d6aa7c83044a6456",
        "urls": [
          "bzz-raw://5ce8f156ca2b9fef1b683581dd8f7d6ae1e54ad05613c0dbeedd56c2008f67b6",
          "dweb:/ipfs/QmeC2HKSJAGKCP1Uoir3ykuMFeSVQQLDfxQ9N87LBNNLrg"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0x5be82a202873c792bcf47db774c09eac8b231d7039fa05cfe66d7bc308608eb4",
        "urls": [
          "bzz-raw://b4e998b95a27a694fa84c46aac7b5a00ddddf9801f709b9e4507216d80fa8eca",
          "dweb:/ipfs/QmTdpt18NmPuFuUTqt1Ddpejhd4brRQ1MJT9WLwCB5kjTN"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x426ac9a703a13d4127b56886421d55a8380292dadfb2693d2e8373316075f220",
        "urls": [
          "bzz-raw://e8179a87c1e6fcb4762230888412cfaa2e7ba52d314cee3ffe8a17933f259ccf",
          "dweb:/ipfs/QmacSF3u61KjNyK982VwKAA1G86cLZBhYvpPJhdprTg2Rd"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPmFont.sol": {
        "keccak256": "0x84732ddb98b622bf1b3d535c35e902c342efdba881b33488e7425b31a7551f2c",
        "urls": [
          "bzz-raw://1fec9edc00690bafd5f15deca835430f0fda3eac331aac9279a9284d4c835c19",
          "dweb:/ipfs/QmbPk3jq5NWCsxn5GEWaqNmMYU8m4uuUR54XKWayAsuJjc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52",
        "urls": [
          "bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6",
          "dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x8448797e921559460625e4be65815d7ba0318aae1ecfdc3ea1d701008a391d13",
        "urls": [
          "bzz-raw://90b383ecf3f89ca5f35182f64c053367f6e0bcb4463df42377d4eb023e43113f",
          "dweb:/ipfs/QmVoXzc1FQaGvfDLZZsMwfzUv1Kc9Y7Ds9QqTGhG1gvDMk"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0x51a9513e55ce45437c8e21d18d49506cfd08b86b8f4fd76350eafc141aaa203f",
        "urls": [
          "bzz-raw://ba89ad2584eb3c4ce2cf2b17abbaa3b459cae2758c8db26b11249387ab244da2",
          "dweb:/ipfs/QmfPBFQSXj7HkxJhfeFuY2ewR85RoisrqWrURw5jGSjY4r"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IWaves.sol": {
        "keccak256": "0xe728208d23a5bc81fde1cadb770ee72d5a37565c736536770418eb0ab0d8cdeb",
        "urls": [
          "bzz-raw://c6b093ef06a083c68c0ed2d04deb000ac26b565e00f26a9cca521ccc7cc034b2",
          "dweb:/ipfs/QmcXdbezAsuh1KqiXWKH8Vs6aVL8V6Ag2b4nwDX7qXUEAN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a",
        "urls": [
          "bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe",
          "dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b",
        "urls": [
          "bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c",
          "dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/FrensPoolShareTest.t.sol": {
        "keccak256": "0x781e250cb47dac80e11fbac55ac68403542ddd1fa3acbf7d719bbb12f78db9ad",
        "urls": [
          "bzz-raw://e05c4813b2d15319ff176993cb68e4f32cc45fc708c2f2c3e9603c6784ae1e8a",
          "dweb:/ipfs/QmcPJhGUwDEihKE4Gr5BHmLE4WBqrFqRNLgSPLndPzHLGb"
        ],
        "license": "UNLICENSED"
      },
      "test/foundry/TestHelper.sol": {
        "keccak256": "0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4",
        "urls": [
          "bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f",
          "dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/FrensPoolShareTest.t.sol",
    "id": 31294,
    "exportedSymbols": {
      "AccessControl": [
        26985
      ],
      "Address": [
        28995
      ],
      "Base64": [
        30208
      ],
      "BoolGetter": [
        35117
      ],
      "Context": [
        29017
      ],
      "DSTest": [
        5229
      ],
      "ERC165": [
        29216
      ],
      "ERC721": [
        28119
      ],
      "ERC721Enumerable": [
        28607
      ],
      "FrensArt": [
        159
      ],
      "FrensMetaHelper": [
        585
      ],
      "FrensOracle": [
        672
      ],
      "FrensPoolShare": [
        990
      ],
      "FrensPoolShareTokenURI": [
        1250
      ],
      "FrensStorage": [
        1558
      ],
      "IAccessControl": [
        27058
      ],
      "IDepositContract": [
        2919
      ],
      "IENS": [
        3056
      ],
      "IERC165": [
        29228
      ],
      "IERC721": [
        28235
      ],
      "IERC721Enumerable": [
        28638
      ],
      "IERC721Metadata": [
        28665
      ],
      "IERC721Receiver": [
        28253
      ],
      "IFrensArt": [
        3066
      ],
      "IFrensLogo": [
        3074
      ],
      "IFrensMetaHelper": [
        3107
      ],
      "IFrensOracle": [
        3124
      ],
      "IFrensPoolShare": [
        3175
      ],
      "IFrensPoolShareTokenURI": [
        3185
      ],
      "IFrensStorage": [
        3275
      ],
      "IMaliciousProxyInterface": [
        35093
      ],
      "IPmFont": [
        3283
      ],
      "IReverseResolver": [
        3293
      ],
      "IStakingPool": [
        3421
      ],
      "IStakingPoolFactory": [
        3434
      ],
      "IWaves": [
        3442
      ],
      "Math": [
        30093
      ],
      "MiscTest": [
        31293
      ],
      "NftReceiver": [
        35166
      ],
      "Ownable": [
        27171
      ],
      "Script": [
        5492
      ],
      "StakingPool": [
        2643
      ],
      "StakingPoolFactory": [
        2751
      ],
      "StdStorage": [
        8520
      ],
      "Strings": [
        29192
      ],
      "Test": [
        8422
      ],
      "Vm": [
        10541
      ],
      "console": [
        18605
      ],
      "console2": [
        26669
      ],
      "stdError": [
        8492
      ],
      "stdJson": [
        5852
      ],
      "stdMath": [
        9761
      ],
      "stdStorage": [
        9622
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:10774:49",
    "nodes": [
      {
        "id": 30210,
        "nodeType": "PragmaDirective",
        "src": "39:24:49",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 30211,
        "nodeType": "ImportDirective",
        "src": "181:28:49",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 9762,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30212,
        "nodeType": "ImportDirective",
        "src": "229:38:49",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 160,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30213,
        "nodeType": "ImportDirective",
        "src": "268:45:49",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 586,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30214,
        "nodeType": "ImportDirective",
        "src": "314:52:49",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 1251,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30215,
        "nodeType": "ImportDirective",
        "src": "367:42:49",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 1559,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30216,
        "nodeType": "ImportDirective",
        "src": "410:41:49",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 2644,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30217,
        "nodeType": "ImportDirective",
        "src": "452:48:49",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 2752,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30218,
        "nodeType": "ImportDirective",
        "src": "501:44:49",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 991,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30219,
        "nodeType": "ImportDirective",
        "src": "546:60:49",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 3435,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30220,
        "nodeType": "ImportDirective",
        "src": "607:57:49",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 2920,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30221,
        "nodeType": "ImportDirective",
        "src": "665:26:49",
        "nodes": [],
        "absolutePath": "test/foundry/TestHelper.sol",
        "file": "./TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 35167,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30222,
        "nodeType": "ImportDirective",
        "src": "692:41:49",
        "nodes": [],
        "absolutePath": "contracts/FrensOracle.sol",
        "file": "../../contracts/FrensOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31294,
        "sourceUnit": 673,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31293,
        "nodeType": "ContractDefinition",
        "src": "736:10076:49",
        "nodes": [
          {
            "id": 30227,
            "nodeType": "VariableDeclaration",
            "src": "768:24:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "784:8:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$159",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 30226,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30225,
                "name": "FrensArt",
                "nameLocations": [
                  "768:8:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 159,
                "src": "768:8:49"
              },
              "referencedDeclaration": 159,
              "src": "768:8:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$159",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30230,
            "nodeType": "VariableDeclaration",
            "src": "798:38:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "821:15:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$585",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 30229,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30228,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "798:15:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 585,
                "src": "798:15:49"
              },
              "referencedDeclaration": 585,
              "src": "798:15:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$585",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30233,
            "nodeType": "VariableDeclaration",
            "src": "842:52:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "872:22:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1250",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 30232,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30231,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "842:22:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1250,
                "src": "842:22:49"
              },
              "referencedDeclaration": 1250,
              "src": "842:22:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1250",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30236,
            "nodeType": "VariableDeclaration",
            "src": "900:32:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "920:12:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$1558",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 30235,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30234,
                "name": "FrensStorage",
                "nameLocations": [
                  "900:12:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1558,
                "src": "900:12:49"
              },
              "referencedDeclaration": 1558,
              "src": "900:12:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$1558",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30239,
            "nodeType": "VariableDeclaration",
            "src": "938:44:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "964:18:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 30238,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30237,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "938:18:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2751,
                "src": "938:18:49"
              },
              "referencedDeclaration": 2751,
              "src": "938:18:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30242,
            "nodeType": "VariableDeclaration",
            "src": "988:30:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1007:11:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2643",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 30241,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30240,
                "name": "StakingPool",
                "nameLocations": [
                  "988:11:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2643,
                "src": "988:11:49"
              },
              "referencedDeclaration": 2643,
              "src": "988:11:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2643",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30245,
            "nodeType": "VariableDeclaration",
            "src": "1024:31:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "5f583c1d",
            "mutability": "mutable",
            "name": "stakingPool2",
            "nameLocation": "1043:12:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2643",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 30244,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30243,
                "name": "StakingPool",
                "nameLocations": [
                  "1024:11:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2643,
                "src": "1024:11:49"
              },
              "referencedDeclaration": 2643,
              "src": "1024:11:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2643",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30248,
            "nodeType": "VariableDeclaration",
            "src": "1061:36:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1083:14:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$990",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 30247,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30246,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1061:14:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 990,
                "src": "1061:14:49"
              },
              "referencedDeclaration": 990,
              "src": "1061:14:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30251,
            "nodeType": "VariableDeclaration",
            "src": "1103:30:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "edc91a92",
            "mutability": "mutable",
            "name": "frensOracle",
            "nameLocation": "1122:11:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensOracle_$672",
              "typeString": "contract FrensOracle"
            },
            "typeName": {
              "id": 30250,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30249,
                "name": "FrensOracle",
                "nameLocations": [
                  "1103:11:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 672,
                "src": "1103:11:49"
              },
              "referencedDeclaration": 672,
              "src": "1103:11:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensOracle_$672",
                "typeString": "contract FrensOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30257,
            "nodeType": "VariableDeclaration",
            "src": "1154:84:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1177:7:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30252,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1154:15:49",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 30255,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1195:42:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30254,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1187:8:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30253,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1187:8:49",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30256,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1187:51:49",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30260,
            "nodeType": "VariableDeclaration",
            "src": "1349:78:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "25b5e62f",
            "mutability": "mutable",
            "name": "ssvRegistryAddress",
            "nameLocation": "1364:18:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30258,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1349:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862396531353565363542356334443636646632384461384539613039353766303646313142633034",
              "id": 30259,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1385:42:49",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb9e155e65B5c4D66df28Da8E9a0957f06F11Bc04"
            },
            "visibility": "public"
          },
          {
            "id": 30263,
            "nodeType": "VariableDeclaration",
            "src": "1433:70:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "1448:10:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30261,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1433:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 30262,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1461:42:49",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 30269,
            "nodeType": "VariableDeclaration",
            "src": "1510:60:49",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "1527:15:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$2919",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 30265,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30264,
                "name": "IDepositContract",
                "nameLocations": [
                  "1510:16:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2919,
                "src": "1510:16:49"
              },
              "referencedDeclaration": 2919,
              "src": "1510:16:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$2919",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 30267,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30257,
                  "src": "1562:7:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 30266,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2919,
                "src": "1545:16:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$2919_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 30268,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1545:25:49",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$2919",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30272,
            "nodeType": "VariableDeclaration",
            "src": "1577:69:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "1592:9:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30270,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1577:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 30271,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1604:42:49",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 30278,
            "nodeType": "VariableDeclaration",
            "src": "1652:82:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1675:5:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30273,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1652:15:49",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 30276,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1691:42:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30275,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1683:8:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30274,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1683:8:49",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30277,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1683:51:49",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30284,
            "nodeType": "VariableDeclaration",
            "src": "1740:80:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1763:3:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30279,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1740:15:49",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 30282,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1777:42:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30281,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1769:8:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30280,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1769:8:49",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30283,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1769:51:49",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30287,
            "nodeType": "VariableDeclaration",
            "src": "1827:116:49",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "1833:6:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30285,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1827:5:49",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575",
              "id": 30286,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1842:101:49",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_21dcdee5842ff0f482197d6a15db2c021a867314be6d63d4bb4246bbaafd3909",
                "typeString": "literal_string hex\"ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30290,
            "nodeType": "VariableDeclaration",
            "src": "1949:100:49",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "1955:22:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30288,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1949:5:49",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2",
              "id": 30289,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1980:69:49",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_15e0678a74c943adbbbd50fdf9fc6ac3c93162a3c810614e1c98914f8980a59e",
                "typeString": "literal_string hex\"0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30293,
            "nodeType": "VariableDeclaration",
            "src": "2055:215:49",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2061:9:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30291,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2055:5:49",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9",
              "id": 30292,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2073:197:49",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d36984ec5b61d40bef1c5fbe334dfcbf8cb40ea4c1dee515b99a6e9ce042c56e",
                "typeString": "literal_string hex\"92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30296,
            "nodeType": "VariableDeclaration",
            "src": "2276:94:49",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2284:17:49",
            "scope": 31293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 30294,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2276:7:49",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834303933313830323032303633623065363663643861656635613933346266616263663332393139653439343036343534326235663161333838396266353136",
              "id": 30295,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2304:66:49",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_29207914523896875400091520570111070750124087433100064560086113879594058380566_by_1",
                "typeString": "int_const 2920...(69 digits omitted)...0566"
              },
              "value": "0x4093180202063b0e66cd8aef5a934bfabcf32919e494064542b5f1a3889bf516"
            },
            "visibility": "internal"
          },
          {
            "id": 30537,
            "nodeType": "FunctionDefinition",
            "src": "2382:2752:49",
            "nodes": [],
            "body": {
              "id": 30536,
              "nodeType": "Block",
              "src": "2406:2728:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30299,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30236,
                      "src": "2437:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1558",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 30302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2452:16:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$1558_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 30301,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30300,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "2456:12:49"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1558,
                            "src": "2456:12:49"
                          },
                          "referencedDeclaration": 1558,
                          "src": "2456:12:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 30303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2452:18:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1558",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "2437:33:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$1558",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 30305,
                  "nodeType": "ExpressionStatement",
                  "src": "2437:33:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 30312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2560:27:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "5353565265676973747279",
                                "id": 30313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2589:13:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                                  "typeString": "literal_string \"SSVRegistry\""
                                },
                                "value": "SSVRegistry"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                                  "typeString": "literal_string \"SSVRegistry\""
                                }
                              ],
                              "expression": {
                                "id": 30310,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2543:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2547:12:49",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2543:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2543:60:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30309,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2533:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2533:71:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 30316,
                        "name": "ssvRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30260,
                        "src": "2606:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30306,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30236,
                        "src": "2509:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1558",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2522:10:49",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "2509:23:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2509:116:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30318,
                  "nodeType": "ExpressionStatement",
                  "src": "2509:116:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 30325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2720:27:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "4465706f736974436f6e7472616374",
                                "id": 30326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2749:17:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                },
                                "value": "DepositContract"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                }
                              ],
                              "expression": {
                                "id": 30323,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2703:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2707:12:49",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2703:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2703:64:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30322,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2693:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2693:75:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 30329,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30257,
                        "src": "2770:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30319,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30236,
                        "src": "2669:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1558",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2682:10:49",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "2669:23:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:109:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30331,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:109:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 30338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2861:27:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "454e53",
                                "id": 30339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2890:5:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                },
                                "value": "ENS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                }
                              ],
                              "expression": {
                                "id": 30336,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2844:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2848:12:49",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2844:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2844:52:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30335,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2834:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2834:63:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 30342,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30263,
                        "src": "2899:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30332,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30236,
                        "src": "2810:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1558",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2823:10:49",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "2810:23:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2810:100:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30344,
                  "nodeType": "ExpressionStatement",
                  "src": "2810:100:49"
                },
                {
                  "expression": {
                    "id": 30351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30345,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30248,
                      "src": "2946:14:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30349,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30236,
                          "src": "2982:12:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2963:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3275_$returns$_t_contract$_FrensPoolShare_$990_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 30347,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30346,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "2967:14:49"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 990,
                            "src": "2967:14:49"
                          },
                          "referencedDeclaration": 990,
                          "src": "2967:14:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 30350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2963:32:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "2946:49:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 30352,
                  "nodeType": "ExpressionStatement",
                  "src": "2946:49:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3086:18:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265",
                                "id": 30360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3106:16:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                },
                                "value": "FrensPoolShare"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                }
                              ],
                              "expression": {
                                "id": 30357,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3069:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3073:12:49",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3069:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3069:54:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30356,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3059:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3059:65:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30365,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30248,
                            "src": "3134:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 30364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3126:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30363,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3126:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3126:23:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30353,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30236,
                        "src": "3035:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1558",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3048:10:49",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "3035:23:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:115:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30368,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:115:49"
                },
                {
                  "expression": {
                    "id": 30375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30369,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30239,
                      "src": "3181:18:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30373,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30236,
                          "src": "3225:12:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3202:22:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3275_$returns$_t_contract$_StakingPoolFactory_$2751_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 30371,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30370,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "3206:18:49"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2751,
                            "src": "3206:18:49"
                          },
                          "referencedDeclaration": 2751,
                          "src": "3206:18:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 30374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3202:36:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "3181:57:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 30376,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:57:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3324:18:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "5374616b696e67506f6f6c466163746f7279",
                                "id": 30384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3344:20:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                },
                                "value": "StakingPoolFactory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                }
                              ],
                              "expression": {
                                "id": 30381,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3307:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3311:12:49",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3307:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3307:58:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30380,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3297:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3297:69:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30389,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30239,
                            "src": "3376:18:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 30388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3368:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30387,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3368:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3368:27:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30377,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30236,
                        "src": "3273:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1558",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3286:10:49",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "3273:23:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3273:123:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30392,
                  "nodeType": "ExpressionStatement",
                  "src": "3273:123:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783030",
                            "id": 30398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3437:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 30397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3429:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 30396,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3429:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3429:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30402,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30239,
                            "src": "3453:18:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 30401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3445:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30400,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3445:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3445:27:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30393,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "3404:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3419:9:49",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26836,
                      "src": "3404:24:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3404:69:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30405,
                  "nodeType": "ExpressionStatement",
                  "src": "3404:69:49"
                },
                {
                  "expression": {
                    "id": 30412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30406,
                      "name": "frensOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30251,
                      "src": "3508:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$672",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30410,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30236,
                          "src": "3538:12:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3522:15:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3275_$returns$_t_contract$_FrensOracle_$672_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensOracle)"
                        },
                        "typeName": {
                          "id": 30408,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30407,
                            "name": "FrensOracle",
                            "nameLocations": [
                              "3526:11:49"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 672,
                            "src": "3526:11:49"
                          },
                          "referencedDeclaration": 672,
                          "src": "3526:11:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensOracle_$672",
                            "typeString": "contract FrensOracle"
                          }
                        }
                      },
                      "id": 30411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3522:29:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$672",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "src": "3508:43:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensOracle_$672",
                      "typeString": "contract FrensOracle"
                    }
                  },
                  "id": 30413,
                  "nodeType": "ExpressionStatement",
                  "src": "3508:43:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3641:18:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734f7261636c65",
                                "id": 30421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3661:13:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                },
                                "value": "FrensOracle"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                }
                              ],
                              "expression": {
                                "id": 30418,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3624:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3628:12:49",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3624:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3624:51:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30417,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3614:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3614:62:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30426,
                            "name": "frensOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30251,
                            "src": "3686:11:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensOracle_$672",
                              "typeString": "contract FrensOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensOracle_$672",
                              "typeString": "contract FrensOracle"
                            }
                          ],
                          "id": 30425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3678:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30424,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3678:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3678:20:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30414,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30236,
                        "src": "3590:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1558",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3603:10:49",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "3590:23:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3590:109:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30429,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:109:49"
                },
                {
                  "expression": {
                    "id": 30436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30430,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30230,
                      "src": "3733:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$585",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30434,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30236,
                          "src": "3771:12:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3751:19:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3275_$returns$_t_contract$_FrensMetaHelper_$585_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 30432,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30431,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "3755:15:49"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 585,
                            "src": "3755:15:49"
                          },
                          "referencedDeclaration": 585,
                          "src": "3755:15:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$585",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 30435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3751:33:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$585",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "3733:51:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$585",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 30437,
                  "nodeType": "ExpressionStatement",
                  "src": "3733:51:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3873:18:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734d65746148656c706572",
                                "id": 30445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3893:17:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                },
                                "value": "FrensMetaHelper"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                }
                              ],
                              "expression": {
                                "id": 30442,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3856:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3860:12:49",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3856:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3856:55:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30441,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3846:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3846:66:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30450,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30230,
                            "src": "3922:15:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$585",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$585",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 30449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3914:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30448,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3914:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3914:24:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30438,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30236,
                        "src": "3822:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1558",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3835:10:49",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "3822:23:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3822:117:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30453,
                  "nodeType": "ExpressionStatement",
                  "src": "3822:117:49"
                },
                {
                  "expression": {
                    "id": 30460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30454,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30233,
                      "src": "3971:22:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1250",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30458,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30236,
                          "src": "4023:12:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3996:26:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3275_$returns$_t_contract$_FrensPoolShareTokenURI_$1250_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 30456,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30455,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "4000:22:49"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1250,
                            "src": "4000:22:49"
                          },
                          "referencedDeclaration": 1250,
                          "src": "4000:22:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1250",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 30459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3996:40:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1250",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "3971:65:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1250",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 30461,
                  "nodeType": "ExpressionStatement",
                  "src": "3971:65:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4123:18:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                                "id": 30469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4143:24:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                },
                                "value": "FrensPoolShareTokenURI"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                }
                              ],
                              "expression": {
                                "id": 30466,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4106:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4110:12:49",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4106:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4106:62:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30465,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4096:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4096:73:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30474,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30233,
                            "src": "4179:22:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1250",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1250",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 30473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4171:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30472,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4171:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4171:31:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30462,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30236,
                        "src": "4072:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1558",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4085:10:49",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "4072:23:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:131:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30477,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:131:49"
                },
                {
                  "expression": {
                    "id": 30484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30478,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30227,
                      "src": "4229:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30482,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30236,
                          "src": "4253:12:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1558",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4240:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3275_$returns$_t_contract$_FrensArt_$159_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 30480,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30479,
                            "name": "FrensArt",
                            "nameLocations": [
                              "4244:8:49"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 159,
                            "src": "4244:8:49"
                          },
                          "referencedDeclaration": 159,
                          "src": "4244:8:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$159",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 30483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4240:26:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "4229:37:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$159",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 30485,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:37:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4348:18:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734f7261636c65",
                                "id": 30493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4368:13:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                },
                                "value": "FrensOracle"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                }
                              ],
                              "expression": {
                                "id": 30490,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4331:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4335:12:49",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4331:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4331:51:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30489,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4321:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4321:62:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30498,
                            "name": "frensOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30251,
                            "src": "4393:11:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensOracle_$672",
                              "typeString": "contract FrensOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensOracle_$672",
                              "typeString": "contract FrensOracle"
                            }
                          ],
                          "id": 30497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4385:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30496,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4385:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4385:20:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30486,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30236,
                        "src": "4297:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1558",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4310:10:49",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "4297:23:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4297:109:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30501,
                  "nodeType": "ExpressionStatement",
                  "src": "4297:109:49"
                },
                {
                  "assignments": [
                    30503
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30503,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "4514:4:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 30536,
                      "src": "4506:12:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30502,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4506:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30509,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30506,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30272,
                        "src": "4548:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4559:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30504,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30239,
                        "src": "4522:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 30505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4541:6:49",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2750,
                      "src": "4522:25:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4522:79:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4505:96:49"
                },
                {
                  "expression": {
                    "id": 30517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30510,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30242,
                      "src": "4641:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2643",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30514,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30503,
                              "src": "4675:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4667:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30512,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4667:8:49",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4667:13:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30511,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2643,
                        "src": "4655:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2643_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4655:26:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2643",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "4641:40:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2643",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30518,
                  "nodeType": "ExpressionStatement",
                  "src": "4641:40:49"
                },
                {
                  "assignments": [
                    30520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30520,
                      "mutability": "mutable",
                      "name": "pool2",
                      "nameLocation": "4845:5:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 30536,
                      "src": "4837:13:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30519,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4837:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30526,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30523,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30272,
                        "src": "4880:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4891:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30521,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30239,
                        "src": "4854:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2751",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 30522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4873:6:49",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2750,
                      "src": "4854:25:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4854:79:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4836:97:49"
                },
                {
                  "expression": {
                    "id": 30534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30527,
                      "name": "stakingPool2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30245,
                      "src": "4973:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2643",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30531,
                              "name": "pool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30520,
                              "src": "5008:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5000:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30529,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5000:8:49",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5000:14:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30528,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2643,
                        "src": "4988:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2643_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4988:27:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2643",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "4973:42:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2643",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30535,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:42:49"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2391:5:49",
            "parameters": {
              "id": 30297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2396:2:49"
            },
            "returnParameters": {
              "id": 30298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2406:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30560,
            "nodeType": "FunctionDefinition",
            "src": "5140:161:49",
            "nodes": [],
            "body": {
              "id": 30559,
              "nodeType": "Block",
              "src": "5178:123:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30541,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "5191:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30540,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5958,
                        5979,
                        6003,
                        6027
                      ],
                      "referencedDeclaration": 5958,
                      "src": "5186:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5186:11:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30543,
                  "nodeType": "ExpressionStatement",
                  "src": "5186:11:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "796f7520617265206e6f7420616c6c6f77656420746f206d696e74",
                        "id": 30547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5221:29:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        },
                        "value": "you are not allowed to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        }
                      ],
                      "expression": {
                        "id": 30544,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "5205:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10541",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5208:12:49",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10027,
                      "src": "5205:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5205:46:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30549,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:46:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30555,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30278,
                            "src": "5287:5:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 30554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5279:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30553,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5279:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5279:14:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30550,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "5259:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5274:4:49",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 760,
                      "src": "5259:19:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5259:35:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30558,
                  "nodeType": "ExpressionStatement",
                  "src": "5259:35:49"
                }
              ]
            },
            "functionSelector": "796a773d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintingDirectly",
            "nameLocation": "5149:19:49",
            "parameters": {
              "id": 30538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5168:2:49"
            },
            "returnParameters": {
              "id": 30539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5178:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30635,
            "nodeType": "FunctionDefinition",
            "src": "5307:587:49",
            "nodes": [],
            "body": {
              "id": 30634,
              "nodeType": "Block",
              "src": "5337:557:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30564,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "5355:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30563,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6048,
                        6069,
                        6093,
                        6117
                      ],
                      "referencedDeclaration": 6048,
                      "src": "5345:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5345:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30566,
                  "nodeType": "ExpressionStatement",
                  "src": "5345:16:49"
                },
                {
                  "assignments": [
                    30568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30568,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "5374:1:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 30634,
                      "src": "5369:6:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30567,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5369:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30570,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5378:1:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5369:10:49"
                },
                {
                  "body": {
                    "id": 30632,
                    "nodeType": "Block",
                    "src": "5403:485:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30574,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30242,
                                "src": "5488:11:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2643",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5500:13:49",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1857,
                              "src": "5488:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5521:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "5488:35:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5488:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30580,
                        "nodeType": "ExpressionStatement",
                        "src": "5488:37:49"
                      },
                      {
                        "assignments": [
                          30582
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30582,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "5542:2:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 30632,
                            "src": "5537:7:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30581,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5537:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30588,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30585,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30278,
                              "src": "5582:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30586,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30568,
                              "src": "5589:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30583,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30248,
                              "src": "5547:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5562:19:49",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28331,
                            "src": "5547:34:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5547:44:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5537:54:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30590,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30582,
                                "src": "5612:2:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30591,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30568,
                                "src": "5618:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5612:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30589,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3712,
                              3733
                            ],
                            "referencedDeclaration": 3712,
                            "src": "5601:10:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5601:20:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30594,
                        "nodeType": "ExpressionStatement",
                        "src": "5601:20:49"
                      },
                      {
                        "assignments": [
                          30596
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30596,
                            "mutability": "mutable",
                            "name": "shouldBeZero",
                            "nameLocation": "5640:12:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 30632,
                            "src": "5632:20:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30595,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5632:7:49",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30601,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30599,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30568,
                              "src": "5682:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30597,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30248,
                              "src": "5655:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5670:11:49",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 832,
                            "src": "5655:26:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5655:29:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5632:52:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 30605,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5711:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 30604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5703:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30603,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5703:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5703:10:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30607,
                              "name": "shouldBeZero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30596,
                              "src": "5715:12:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30602,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6610,
                              6635,
                              6648,
                              6664,
                              6706,
                              6748,
                              6790,
                              6827,
                              6864,
                              6901,
                              3763,
                              3788,
                              3818,
                              3843,
                              3902,
                              3927,
                              3957,
                              3982,
                              5082,
                              5117
                            ],
                            "referencedDeclaration": 3763,
                            "src": "5694:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5694:34:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30609,
                        "nodeType": "ExpressionStatement",
                        "src": "5694:34:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30613,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30284,
                              "src": "5762:3:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30614,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30568,
                              "src": "5767:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30610,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30248,
                              "src": "5739:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5754:7:49",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27431,
                            "src": "5739:22:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 30615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5739:30:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30616,
                        "nodeType": "ExpressionStatement",
                        "src": "5739:30:49"
                      },
                      {
                        "assignments": [
                          30618
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30618,
                            "mutability": "mutable",
                            "name": "shouldBeBob",
                            "nameLocation": "5787:11:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 30632,
                            "src": "5779:19:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30617,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5779:7:49",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30623,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30621,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30568,
                              "src": "5828:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30619,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30248,
                              "src": "5801:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5816:11:49",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 832,
                            "src": "5801:26:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5801:29:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5779:51:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30625,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30284,
                              "src": "5849:3:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30626,
                              "name": "shouldBeBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30618,
                              "src": "5854:11:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30624,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6610,
                              6635,
                              6648,
                              6664,
                              6706,
                              6748,
                              6790,
                              6827,
                              6864,
                              6901,
                              3763,
                              3788,
                              3818,
                              3843,
                              3902,
                              3927,
                              3957,
                              3982,
                              5082,
                              5117
                            ],
                            "referencedDeclaration": 3763,
                            "src": "5840:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5840:26:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30628,
                        "nodeType": "ExpressionStatement",
                        "src": "5840:26:49"
                      },
                      {
                        "expression": {
                          "id": 30630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "5876:3:49",
                          "subExpression": {
                            "id": 30629,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30568,
                            "src": "5876:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30631,
                        "nodeType": "ExpressionStatement",
                        "src": "5876:3:49"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30571,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30568,
                      "src": "5394:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5398:3:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "5394:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30633,
                  "nodeType": "WhileStatement",
                  "src": "5387:501:49"
                }
              ]
            },
            "functionSelector": "1aeb10a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testApprove",
            "nameLocation": "5316:11:49",
            "parameters": {
              "id": 30561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5327:2:49"
            },
            "returnParameters": {
              "id": 30562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5337:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30692,
            "nodeType": "FunctionDefinition",
            "src": "5900:408:49",
            "nodes": [],
            "body": {
              "id": 30691,
              "nodeType": "Block",
              "src": "5932:376:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30639,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "5950:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30638,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6048,
                        6069,
                        6093,
                        6117
                      ],
                      "referencedDeclaration": 6048,
                      "src": "5940:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5940:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30641,
                  "nodeType": "ExpressionStatement",
                  "src": "5940:16:49"
                },
                {
                  "assignments": [
                    30643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30643,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "5969:1:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 30691,
                      "src": "5964:6:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30642,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5964:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30645,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5973:1:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5964:10:49"
                },
                {
                  "body": {
                    "id": 30689,
                    "nodeType": "Block",
                    "src": "5998:304:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30649,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30242,
                                "src": "6008:11:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2643",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6020:13:49",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1857,
                              "src": "6008:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6041:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6008:35:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6008:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30655,
                        "nodeType": "ExpressionStatement",
                        "src": "6008:37:49"
                      },
                      {
                        "assignments": [
                          30657
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30657,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6060:2:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 30689,
                            "src": "6055:7:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30656,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6055:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30663,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30660,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30278,
                              "src": "6100:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30661,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30643,
                              "src": "6107:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30658,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30248,
                              "src": "6065:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6080:19:49",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28331,
                            "src": "6065:34:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6065:44:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6055:54:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30665,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30657,
                                "src": "6130:2:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30666,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30643,
                                "src": "6136:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6130:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "66697273742069732069732030",
                              "id": 30668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6139:15:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5383c90f43f3984cfbee9f1b49449ca89697befdf646488c4aed86b6fc774c91",
                                "typeString": "literal_string \"first is is 0\""
                              },
                              "value": "first is is 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5383c90f43f3984cfbee9f1b49449ca89697befdf646488c4aed86b6fc774c91",
                                "typeString": "literal_string \"first is is 0\""
                              }
                            ],
                            "id": 30664,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3712,
                              3733
                            ],
                            "referencedDeclaration": 3733,
                            "src": "6119:10:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 30669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6119:36:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30670,
                        "nodeType": "ExpressionStatement",
                        "src": "6119:36:49"
                      },
                      {
                        "assignments": [
                          30672
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30672,
                            "mutability": "mutable",
                            "name": "balanceOfAlice",
                            "nameLocation": "6170:14:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 30689,
                            "src": "6165:19:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30671,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6165:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30677,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30675,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30278,
                              "src": "6212:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 30673,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30248,
                              "src": "6187:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6202:9:49",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27292,
                            "src": "6187:24:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 30676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6187:31:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6165:53:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30679,
                              "name": "balanceOfAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30672,
                              "src": "6237:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30680,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30643,
                                "src": "6253:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 30681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6257:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6253:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "73686f756c6420686176652069202b2031",
                              "id": 30683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6260:19:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_978826511a0b0555103e7b26be874c5b266d55585b385712656ccee45fca8f35",
                                "typeString": "literal_string \"should have i + 1\""
                              },
                              "value": "should have i + 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_978826511a0b0555103e7b26be874c5b266d55585b385712656ccee45fca8f35",
                                "typeString": "literal_string \"should have i + 1\""
                              }
                            ],
                            "id": 30678,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6610,
                              6635,
                              6648,
                              6664,
                              6706,
                              6748,
                              6790,
                              6827,
                              6864,
                              6901,
                              3763,
                              3788,
                              3818,
                              3843,
                              3902,
                              3927,
                              3957,
                              3982,
                              5082,
                              5117
                            ],
                            "referencedDeclaration": 3982,
                            "src": "6228:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 30684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6228:52:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30685,
                        "nodeType": "ExpressionStatement",
                        "src": "6228:52:49"
                      },
                      {
                        "expression": {
                          "id": 30687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6290:3:49",
                          "subExpression": {
                            "id": 30686,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30643,
                            "src": "6290:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30688,
                        "nodeType": "ExpressionStatement",
                        "src": "6290:3:49"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30646,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30643,
                      "src": "5989:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5993:3:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "5989:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30690,
                  "nodeType": "WhileStatement",
                  "src": "5982:320:49"
                }
              ]
            },
            "functionSelector": "3df77c0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBalanceOf",
            "nameLocation": "5909:13:49",
            "parameters": {
              "id": 30636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5922:2:49"
            },
            "returnParameters": {
              "id": 30637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5932:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30733,
            "nodeType": "FunctionDefinition",
            "src": "6314:278:49",
            "nodes": [],
            "body": {
              "id": 30732,
              "nodeType": "Block",
              "src": "6343:249:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30696,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "6361:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30695,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6048,
                        6069,
                        6093,
                        6117
                      ],
                      "referencedDeclaration": 6048,
                      "src": "6351:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6351:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30698,
                  "nodeType": "ExpressionStatement",
                  "src": "6351:16:49"
                },
                {
                  "assignments": [
                    30700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30700,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6387:1:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 30732,
                      "src": "6382:6:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30699,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6382:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30702,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6391:1:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6382:10:49"
                },
                {
                  "body": {
                    "id": 30730,
                    "nodeType": "Block",
                    "src": "6417:162:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30709,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30700,
                                  "src": "6461:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30707,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30248,
                                  "src": "6439:14:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 30708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6454:6:49",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 772,
                                "src": "6439:21:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 30710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6439:24:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30706,
                            "name": "assertFalse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6560,
                              6574
                            ],
                            "referencedDeclaration": 6560,
                            "src": "6427:11:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6427:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30712,
                        "nodeType": "ExpressionStatement",
                        "src": "6427:37:49"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30713,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30242,
                                "src": "6474:11:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2643",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6486:13:49",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1857,
                              "src": "6474:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6507:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6474:35:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6474:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30719,
                        "nodeType": "ExpressionStatement",
                        "src": "6474:37:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30723,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30700,
                                  "src": "6554:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30721,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30248,
                                  "src": "6532:14:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 30722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6547:6:49",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 772,
                                "src": "6532:21:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 30724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6532:24:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30720,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3712,
                              3733
                            ],
                            "referencedDeclaration": 3712,
                            "src": "6521:10:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6521:36:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30726,
                        "nodeType": "ExpressionStatement",
                        "src": "6521:36:49"
                      },
                      {
                        "expression": {
                          "id": 30728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6567:3:49",
                          "subExpression": {
                            "id": 30727,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30700,
                            "src": "6567:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30729,
                        "nodeType": "ExpressionStatement",
                        "src": "6567:3:49"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30703,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30700,
                      "src": "6408:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6412:3:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6408:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30731,
                  "nodeType": "WhileStatement",
                  "src": "6401:178:49"
                }
              ]
            },
            "functionSelector": "524ad495",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testexists",
            "nameLocation": "6323:10:49",
            "parameters": {
              "id": 30693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6333:2:49"
            },
            "returnParameters": {
              "id": 30694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6343:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30825,
            "nodeType": "FunctionDefinition",
            "src": "6598:697:49",
            "nodes": [],
            "body": {
              "id": 30824,
              "nodeType": "Block",
              "src": "6632:663:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30737,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "6650:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30736,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6048,
                        6069,
                        6093,
                        6117
                      ],
                      "referencedDeclaration": 6048,
                      "src": "6640:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6640:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30739,
                  "nodeType": "ExpressionStatement",
                  "src": "6640:16:49"
                },
                {
                  "assignments": [
                    30741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30741,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6669:1:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 30824,
                      "src": "6664:6:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30740,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6664:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30743,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6673:1:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6664:10:49"
                },
                {
                  "body": {
                    "id": 30822,
                    "nodeType": "Block",
                    "src": "6698:591:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30747,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30242,
                                "src": "6708:11:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2643",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6720:13:49",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1857,
                              "src": "6708:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6741:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6708:35:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6708:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30753,
                        "nodeType": "ExpressionStatement",
                        "src": "6708:37:49"
                      },
                      {
                        "assignments": [
                          30755
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30755,
                            "mutability": "mutable",
                            "name": "sbStakingPool",
                            "nameLocation": "6763:13:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 30822,
                            "src": "6755:21:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30754,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6755:7:49",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30760,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30758,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30741,
                              "src": "6806:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30756,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30248,
                              "src": "6779:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6794:11:49",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 785,
                            "src": "6779:26:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6779:29:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6755:53:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30764,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30242,
                                  "src": "6835:11:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2643",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2643",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6827:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30762,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6827:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6827:20:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30766,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30755,
                              "src": "6849:13:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30761,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6610,
                              6635,
                              6648,
                              6664,
                              6706,
                              6748,
                              6790,
                              6827,
                              6864,
                              6901,
                              3763,
                              3788,
                              3818,
                              3843,
                              3902,
                              3927,
                              3957,
                              3982,
                              5082,
                              5117
                            ],
                            "referencedDeclaration": 3763,
                            "src": "6818:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6818:45:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30768,
                        "nodeType": "ExpressionStatement",
                        "src": "6818:45:49"
                      },
                      {
                        "expression": {
                          "id": 30770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6873:3:49",
                          "subExpression": {
                            "id": 30769,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30741,
                            "src": "6873:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30771,
                        "nodeType": "ExpressionStatement",
                        "src": "6873:3:49"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30772,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30245,
                                "src": "6886:12:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2643",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6899:13:49",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1857,
                              "src": "6886:26:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6920:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6886:36:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6886:38:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30778,
                        "nodeType": "ExpressionStatement",
                        "src": "6886:38:49"
                      },
                      {
                        "assignments": [
                          30780
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30780,
                            "mutability": "mutable",
                            "name": "sbStakingPool2",
                            "nameLocation": "6942:14:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 30822,
                            "src": "6934:22:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30779,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6934:7:49",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30785,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30783,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30741,
                              "src": "6986:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30781,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30248,
                              "src": "6959:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6974:11:49",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 785,
                            "src": "6959:26:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6959:29:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6934:54:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30789,
                                  "name": "stakingPool2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30245,
                                  "src": "7015:12:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2643",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2643",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7007:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30787,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7007:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7007:21:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30791,
                              "name": "sbStakingPool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30780,
                              "src": "7030:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30786,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6610,
                              6635,
                              6648,
                              6664,
                              6706,
                              6748,
                              6790,
                              6827,
                              6864,
                              6901,
                              3763,
                              3788,
                              3818,
                              3843,
                              3902,
                              3927,
                              3957,
                              3982,
                              5082,
                              5117
                            ],
                            "referencedDeclaration": 3763,
                            "src": "6998:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6998:47:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30793,
                        "nodeType": "ExpressionStatement",
                        "src": "6998:47:49"
                      },
                      {
                        "expression": {
                          "id": 30795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7055:3:49",
                          "subExpression": {
                            "id": 30794,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30741,
                            "src": "7055:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30796,
                        "nodeType": "ExpressionStatement",
                        "src": "7055:3:49"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30797,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30242,
                                "src": "7068:11:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2643",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7080:13:49",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1857,
                              "src": "7068:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7101:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7068:35:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7068:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30803,
                        "nodeType": "ExpressionStatement",
                        "src": "7068:37:49"
                      },
                      {
                        "expression": {
                          "id": 30809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 30804,
                            "name": "sbStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30755,
                            "src": "7166:13:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 30807,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30741,
                                "src": "7209:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30805,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30248,
                                "src": "7182:14:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 30806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7197:11:49",
                              "memberName": "getPoolById",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 785,
                              "src": "7182:26:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 30808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7182:29:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7166:45:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30810,
                        "nodeType": "ExpressionStatement",
                        "src": "7166:45:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30814,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30242,
                                  "src": "7238:11:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2643",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2643",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7230:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30812,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7230:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7230:20:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30816,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30755,
                              "src": "7252:13:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30811,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6610,
                              6635,
                              6648,
                              6664,
                              6706,
                              6748,
                              6790,
                              6827,
                              6864,
                              6901,
                              3763,
                              3788,
                              3818,
                              3843,
                              3902,
                              3927,
                              3957,
                              3982,
                              5082,
                              5117
                            ],
                            "referencedDeclaration": 3763,
                            "src": "7221:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7221:45:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30818,
                        "nodeType": "ExpressionStatement",
                        "src": "7221:45:49"
                      },
                      {
                        "expression": {
                          "id": 30820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7276:3:49",
                          "subExpression": {
                            "id": 30819,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30741,
                            "src": "7276:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30821,
                        "nodeType": "ExpressionStatement",
                        "src": "7276:3:49"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30744,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30741,
                      "src": "6689:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6693:3:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6689:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30823,
                  "nodeType": "WhileStatement",
                  "src": "6682:607:49"
                }
              ]
            },
            "functionSelector": "87496250",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetPoolById",
            "nameLocation": "6607:15:49",
            "parameters": {
              "id": 30734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6622:2:49"
            },
            "returnParameters": {
              "id": 30735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6632:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30875,
            "nodeType": "FunctionDefinition",
            "src": "7301:357:49",
            "nodes": [],
            "body": {
              "id": 30874,
              "nodeType": "Block",
              "src": "7340:318:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30829,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "7358:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30828,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6048,
                        6069,
                        6093,
                        6117
                      ],
                      "referencedDeclaration": 6048,
                      "src": "7348:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7348:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30831,
                  "nodeType": "ExpressionStatement",
                  "src": "7348:16:49"
                },
                {
                  "assignments": [
                    30833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30833,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "7377:1:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 30874,
                      "src": "7372:6:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30832,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7372:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30835,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7381:1:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7372:10:49"
                },
                {
                  "body": {
                    "id": 30849,
                    "nodeType": "Block",
                    "src": "7405:69:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30839,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30242,
                                "src": "7415:11:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2643",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7427:13:49",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1857,
                              "src": "7415:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7448:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7415:35:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7415:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30845,
                        "nodeType": "ExpressionStatement",
                        "src": "7415:37:49"
                      },
                      {
                        "expression": {
                          "id": 30847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7462:3:49",
                          "subExpression": {
                            "id": 30846,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30833,
                            "src": "7462:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30848,
                        "nodeType": "ExpressionStatement",
                        "src": "7462:3:49"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30836,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30833,
                      "src": "7397:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3634",
                      "id": 30837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7401:2:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_64_by_1",
                        "typeString": "int_const 64"
                      },
                      "value": "64"
                    },
                    "src": "7397:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30850,
                  "nodeType": "WhileStatement",
                  "src": "7390:84:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30854,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30278,
                            "src": "7525:5:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 30855,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30284,
                            "src": "7532:3:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 30852,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30248,
                            "src": "7493:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7508:16:49",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27484,
                          "src": "7493:31:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 30856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7493:43:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30851,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6560,
                        6574
                      ],
                      "referencedDeclaration": 6560,
                      "src": "7481:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 30857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7481:56:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30858,
                  "nodeType": "ExpressionStatement",
                  "src": "7481:56:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30862,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "7578:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 30863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7583:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30859,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "7545:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7560:17:49",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27466,
                      "src": "7545:32:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 30864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7545:43:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30865,
                  "nodeType": "ExpressionStatement",
                  "src": "7545:43:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30869,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30278,
                            "src": "7639:5:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 30870,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30284,
                            "src": "7646:3:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 30867,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30248,
                            "src": "7607:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7622:16:49",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27484,
                          "src": "7607:31:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 30871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7607:43:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30866,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3712,
                        3733
                      ],
                      "referencedDeclaration": 3712,
                      "src": "7596:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 30872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7596:55:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30873,
                  "nodeType": "ExpressionStatement",
                  "src": "7596:55:49"
                }
              ]
            },
            "functionSelector": "09d26b6c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIsApprovedForAll",
            "nameLocation": "7310:20:49",
            "parameters": {
              "id": 30826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7330:2:49"
            },
            "returnParameters": {
              "id": 30827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7340:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30925,
            "nodeType": "FunctionDefinition",
            "src": "7664:330:49",
            "nodes": [],
            "body": {
              "id": 30924,
              "nodeType": "Block",
              "src": "7692:302:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30881,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7717:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31293",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31293",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7709:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30879,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7709:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7709:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30883,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30248,
                            "src": "7724:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7739:5:49",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27099,
                          "src": "7724:20:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 30885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7724:22:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30878,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6610,
                        6635,
                        6648,
                        6664,
                        6706,
                        6748,
                        6790,
                        6827,
                        6864,
                        6901,
                        3763,
                        3788,
                        3818,
                        3843,
                        3902,
                        3927,
                        3957,
                        3982,
                        5082,
                        5117
                      ],
                      "referencedDeclaration": 3763,
                      "src": "7700:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7700:47:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30887,
                  "nodeType": "ExpressionStatement",
                  "src": "7700:47:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30889,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "7760:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30888,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5958,
                        5979,
                        6003,
                        6027
                      ],
                      "referencedDeclaration": 5958,
                      "src": "7755:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7755:11:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30891,
                  "nodeType": "ExpressionStatement",
                  "src": "7755:11:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 30895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7790:34:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 30892,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "7774:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10541",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7777:12:49",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10027,
                      "src": "7774:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7774:51:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30897,
                  "nodeType": "ExpressionStatement",
                  "src": "7774:51:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30901,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "7866:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30898,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "7833:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7848:17:49",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27150,
                      "src": "7833:32:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7833:37:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30903,
                  "nodeType": "ExpressionStatement",
                  "src": "7833:37:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30907,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7891:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31293",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31293",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7883:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30905,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7883:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7883:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30904,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5958,
                        5979,
                        6003,
                        6027
                      ],
                      "referencedDeclaration": 5958,
                      "src": "7878:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7878:19:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30910,
                  "nodeType": "ExpressionStatement",
                  "src": "7878:19:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30914,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "7938:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30911,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "7905:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7920:17:49",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27150,
                      "src": "7905:32:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7905:37:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30916,
                  "nodeType": "ExpressionStatement",
                  "src": "7905:37:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30918,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "7959:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30919,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30248,
                            "src": "7964:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7979:5:49",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27099,
                          "src": "7964:20:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 30921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7964:22:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30917,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6610,
                        6635,
                        6648,
                        6664,
                        6706,
                        6748,
                        6790,
                        6827,
                        6864,
                        6901,
                        3763,
                        3788,
                        3818,
                        3843,
                        3902,
                        3927,
                        3957,
                        3982,
                        5082,
                        5117
                      ],
                      "referencedDeclaration": 3763,
                      "src": "7950:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7950:37:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30923,
                  "nodeType": "ExpressionStatement",
                  "src": "7950:37:49"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "7673:9:49",
            "parameters": {
              "id": 30876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7682:2:49"
            },
            "returnParameters": {
              "id": 30877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7692:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31016,
            "nodeType": "FunctionDefinition",
            "src": "8000:620:49",
            "nodes": [],
            "body": {
              "id": 31015,
              "nodeType": "Block",
              "src": "8030:590:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30929,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "8043:1:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 31015,
                      "src": "8038:6:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30928,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8038:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30931,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8047:1:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8038:10:49"
                },
                {
                  "body": {
                    "id": 31013,
                    "nodeType": "Block",
                    "src": "8072:542:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30936,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30278,
                              "src": "8087:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30935,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5958,
                              5979,
                              6003,
                              6027
                            ],
                            "referencedDeclaration": 5958,
                            "src": "8082:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8082:11:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30938,
                        "nodeType": "ExpressionStatement",
                        "src": "8082:11:49"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30939,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30242,
                                "src": "8103:11:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2643",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8115:13:49",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1857,
                              "src": "8103:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8136:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8103:35:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8103:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30945,
                        "nodeType": "ExpressionStatement",
                        "src": "8103:37:49"
                      },
                      {
                        "assignments": [
                          30947
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30947,
                            "mutability": "mutable",
                            "name": "sbAlice",
                            "nameLocation": "8158:7:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 31013,
                            "src": "8150:15:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30946,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8150:7:49",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30952,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30950,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30929,
                              "src": "8191:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30948,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30248,
                              "src": "8168:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8183:7:49",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27320,
                            "src": "8168:22:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8168:25:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8150:43:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30954,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30278,
                              "src": "8212:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30955,
                              "name": "sbAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30947,
                              "src": "8219:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30953,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6610,
                              6635,
                              6648,
                              6664,
                              6706,
                              6748,
                              6790,
                              6827,
                              6864,
                              6901,
                              3763,
                              3788,
                              3818,
                              3843,
                              3902,
                              3927,
                              3957,
                              3982,
                              5082,
                              5117
                            ],
                            "referencedDeclaration": 3763,
                            "src": "8203:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8203:24:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30957,
                        "nodeType": "ExpressionStatement",
                        "src": "8203:24:49"
                      },
                      {
                        "expression": {
                          "id": 30959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8237:3:49",
                          "subExpression": {
                            "id": 30958,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30929,
                            "src": "8237:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30960,
                        "nodeType": "ExpressionStatement",
                        "src": "8237:3:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30962,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30284,
                              "src": "8255:3:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30961,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5958,
                              5979,
                              6003,
                              6027
                            ],
                            "referencedDeclaration": 5958,
                            "src": "8250:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8250:9:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30964,
                        "nodeType": "ExpressionStatement",
                        "src": "8250:9:49"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30965,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30245,
                                "src": "8269:12:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2643",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8282:13:49",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1857,
                              "src": "8269:26:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8303:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8269:36:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8269:38:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30971,
                        "nodeType": "ExpressionStatement",
                        "src": "8269:38:49"
                      },
                      {
                        "assignments": [
                          30973
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30973,
                            "mutability": "mutable",
                            "name": "sbBob",
                            "nameLocation": "8325:5:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 31013,
                            "src": "8317:13:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30972,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8317:7:49",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30978,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30976,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30929,
                              "src": "8356:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30974,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30248,
                              "src": "8333:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8348:7:49",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27320,
                            "src": "8333:22:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8333:25:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8317:41:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30980,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30284,
                              "src": "8377:3:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30981,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30973,
                              "src": "8382:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30979,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6610,
                              6635,
                              6648,
                              6664,
                              6706,
                              6748,
                              6790,
                              6827,
                              6864,
                              6901,
                              3763,
                              3788,
                              3818,
                              3843,
                              3902,
                              3927,
                              3957,
                              3982,
                              5082,
                              5117
                            ],
                            "referencedDeclaration": 3763,
                            "src": "8368:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8368:20:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30983,
                        "nodeType": "ExpressionStatement",
                        "src": "8368:20:49"
                      },
                      {
                        "expression": {
                          "id": 30985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8398:3:49",
                          "subExpression": {
                            "id": 30984,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30929,
                            "src": "8398:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30986,
                        "nodeType": "ExpressionStatement",
                        "src": "8398:3:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30988,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30284,
                              "src": "8416:3:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30987,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5958,
                              5979,
                              6003,
                              6027
                            ],
                            "referencedDeclaration": 5958,
                            "src": "8411:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8411:9:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30990,
                        "nodeType": "ExpressionStatement",
                        "src": "8411:9:49"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30991,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30242,
                                "src": "8430:11:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2643",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8442:13:49",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1857,
                              "src": "8430:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8463:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8430:35:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8430:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30997,
                        "nodeType": "ExpressionStatement",
                        "src": "8430:37:49"
                      },
                      {
                        "expression": {
                          "id": 31003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 30998,
                            "name": "sbBob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30973,
                            "src": "8528:5:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 31001,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30929,
                                "src": "8559:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30999,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30248,
                                "src": "8536:14:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 31000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8551:7:49",
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27320,
                              "src": "8536:22:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 31002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8536:25:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8528:33:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 31004,
                        "nodeType": "ExpressionStatement",
                        "src": "8528:33:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31006,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30284,
                              "src": "8580:3:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 31007,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30973,
                              "src": "8585:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31005,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6610,
                              6635,
                              6648,
                              6664,
                              6706,
                              6748,
                              6790,
                              6827,
                              6864,
                              6901,
                              3763,
                              3788,
                              3818,
                              3843,
                              3902,
                              3927,
                              3957,
                              3982,
                              5082,
                              5117
                            ],
                            "referencedDeclaration": 3763,
                            "src": "8571:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 31008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8571:20:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31009,
                        "nodeType": "ExpressionStatement",
                        "src": "8571:20:49"
                      },
                      {
                        "expression": {
                          "id": 31011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8601:3:49",
                          "subExpression": {
                            "id": 31010,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30929,
                            "src": "8601:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31012,
                        "nodeType": "ExpressionStatement",
                        "src": "8601:3:49"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30932,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30929,
                      "src": "8063:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8067:3:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "8063:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31014,
                  "nodeType": "WhileStatement",
                  "src": "8056:558:49"
                }
              ]
            },
            "functionSelector": "71a29bb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwnerOf",
            "nameLocation": "8009:11:49",
            "parameters": {
              "id": 30926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8020:2:49"
            },
            "returnParameters": {
              "id": 30927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8030:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31140,
            "nodeType": "FunctionDefinition",
            "src": "8626:861:49",
            "nodes": [],
            "body": {
              "id": 31139,
              "nodeType": "Block",
              "src": "8665:822:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31020,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "8678:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31019,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5958,
                        5979,
                        6003,
                        6027
                      ],
                      "referencedDeclaration": 5958,
                      "src": "8673:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8673:11:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31022,
                  "nodeType": "ExpressionStatement",
                  "src": "8673:11:49"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 31023,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30242,
                          "src": "8692:11:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2643",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 31025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8704:13:49",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1857,
                        "src": "8692:25:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 31027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 31026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8725:1:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "8692:35:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 31028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8692:37:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31029,
                  "nodeType": "ExpressionStatement",
                  "src": "8692:37:49"
                },
                {
                  "assignments": [
                    31031
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31031,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "8742:2:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 31139,
                      "src": "8737:7:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31030,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8737:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31037,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31034,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "8782:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8789:1:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 31032,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "8747:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8762:19:49",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28331,
                      "src": "8747:34:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 31036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8747:44:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8737:54:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31039,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "8808:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31042,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31031,
                            "src": "8838:2:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31040,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30248,
                            "src": "8815:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8830:7:49",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27320,
                          "src": "8815:22:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8815:26:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31038,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6610,
                        6635,
                        6648,
                        6664,
                        6706,
                        6748,
                        6790,
                        6827,
                        6864,
                        6901,
                        3763,
                        3788,
                        3818,
                        3843,
                        3902,
                        3927,
                        3957,
                        3982,
                        5082,
                        5117
                      ],
                      "referencedDeclaration": 3763,
                      "src": "8799:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8799:43:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31045,
                  "nodeType": "ExpressionStatement",
                  "src": "8799:43:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31047,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "8855:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31046,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5958,
                        5979,
                        6003,
                        6027
                      ],
                      "referencedDeclaration": 5958,
                      "src": "8850:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8850:9:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31049,
                  "nodeType": "ExpressionStatement",
                  "src": "8850:9:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 31053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8883:47:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "expression": {
                        "id": 31050,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "8867:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10541",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8870:12:49",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10027,
                      "src": "8867:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8867:64:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31055,
                  "nodeType": "ExpressionStatement",
                  "src": "8867:64:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31059,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "8971:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31060,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "8978:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31061,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31031,
                        "src": "8983:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31056,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "8939:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8954:16:49",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27530,
                      "src": "8939:31:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8939:47:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31063,
                  "nodeType": "ExpressionStatement",
                  "src": "8939:47:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31065,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "8999:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31064,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5958,
                        5979,
                        6003,
                        6027
                      ],
                      "referencedDeclaration": 5958,
                      "src": "8994:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8994:11:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31067,
                  "nodeType": "ExpressionStatement",
                  "src": "8994:11:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31071,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "9045:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31072,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "9052:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31073,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31031,
                        "src": "9057:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31068,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "9013:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9028:16:49",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27530,
                      "src": "9013:31:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9013:47:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31075,
                  "nodeType": "ExpressionStatement",
                  "src": "9013:47:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31077,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "9077:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31080,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31031,
                            "src": "9105:2:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31078,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30248,
                            "src": "9082:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9097:7:49",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27320,
                          "src": "9082:22:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9082:26:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31076,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6610,
                        6635,
                        6648,
                        6664,
                        6706,
                        6748,
                        6790,
                        6827,
                        6864,
                        6901,
                        3763,
                        3788,
                        3818,
                        3843,
                        3902,
                        3927,
                        3957,
                        3982,
                        5082,
                        5117
                      ],
                      "referencedDeclaration": 3763,
                      "src": "9068:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9068:41:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31083,
                  "nodeType": "ExpressionStatement",
                  "src": "9068:41:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31085,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "9122:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31084,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5958,
                        5979,
                        6003,
                        6027
                      ],
                      "referencedDeclaration": 5958,
                      "src": "9117:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9117:9:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31087,
                  "nodeType": "ExpressionStatement",
                  "src": "9117:9:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 31091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9150:52:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "expression": {
                        "id": 31088,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "9134:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10541",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9137:12:49",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10027,
                      "src": "9134:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9134:69:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31093,
                  "nodeType": "ExpressionStatement",
                  "src": "9134:69:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31097,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "9243:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31100,
                            "name": "frensStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30236,
                            "src": "9256:12:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensStorage_$1558",
                              "typeString": "contract FrensStorage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensStorage_$1558",
                              "typeString": "contract FrensStorage"
                            }
                          ],
                          "id": 31099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9248:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31098,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9248:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9248:21:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31102,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31031,
                        "src": "9271:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31094,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "9211:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9226:16:49",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27530,
                      "src": "9211:31:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9211:63:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31104,
                  "nodeType": "ExpressionStatement",
                  "src": "9211:63:49"
                },
                {
                  "assignments": [
                    31107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31107,
                      "mutability": "mutable",
                      "name": "nftReceiver",
                      "nameLocation": "9295:11:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 31139,
                      "src": "9283:23:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftReceiver_$35166",
                        "typeString": "contract NftReceiver"
                      },
                      "typeName": {
                        "id": 31106,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 31105,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "9283:11:49"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35166,
                          "src": "9283:11:49"
                        },
                        "referencedDeclaration": 35166,
                        "src": "9283:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$35166",
                          "typeString": "contract NftReceiver"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31112,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9309:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NftReceiver_$35166_$",
                        "typeString": "function () returns (contract NftReceiver)"
                      },
                      "typeName": {
                        "id": 31109,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 31108,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "9313:11:49"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35166,
                          "src": "9313:11:49"
                        },
                        "referencedDeclaration": 35166,
                        "src": "9313:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$35166",
                          "typeString": "contract NftReceiver"
                        }
                      }
                    },
                    "id": 31111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9309:17:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftReceiver_$35166",
                      "typeString": "contract NftReceiver"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9283:43:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31114,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "9339:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31113,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5958,
                        5979,
                        6003,
                        6027
                      ],
                      "referencedDeclaration": 5958,
                      "src": "9334:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9334:9:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31116,
                  "nodeType": "ExpressionStatement",
                  "src": "9334:9:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31120,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "9383:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31123,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31107,
                            "src": "9396:11:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$35166",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$35166",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 31122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9388:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31121,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9388:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9388:20:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31125,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31031,
                        "src": "9410:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31117,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "9351:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9366:16:49",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27530,
                      "src": "9351:31:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9351:62:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31127,
                  "nodeType": "ExpressionStatement",
                  "src": "9351:62:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31131,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31107,
                            "src": "9438:11:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$35166",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$35166",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 31130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9430:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31129,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9430:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9430:20:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31135,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31031,
                            "src": "9475:2:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31133,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30248,
                            "src": "9452:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9467:7:49",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27320,
                          "src": "9452:22:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9452:26:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31128,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6610,
                        6635,
                        6648,
                        6664,
                        6706,
                        6748,
                        6790,
                        6827,
                        6864,
                        6901,
                        3763,
                        3788,
                        3818,
                        3843,
                        3902,
                        3927,
                        3957,
                        3982,
                        5082,
                        5117
                      ],
                      "referencedDeclaration": 3763,
                      "src": "9421:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9421:58:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31138,
                  "nodeType": "ExpressionStatement",
                  "src": "9421:58:49"
                }
              ]
            },
            "functionSelector": "90ec5d96",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSafeTransferFrom",
            "nameLocation": "8635:20:49",
            "parameters": {
              "id": 31017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8655:2:49"
            },
            "returnParameters": {
              "id": 31018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8665:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31180,
            "nodeType": "FunctionDefinition",
            "src": "9493:256:49",
            "nodes": [],
            "body": {
              "id": 31179,
              "nodeType": "Block",
              "src": "9528:221:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31144,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "9546:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31143,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6048,
                        6069,
                        6093,
                        6117
                      ],
                      "referencedDeclaration": 6048,
                      "src": "9536:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9536:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31146,
                  "nodeType": "ExpressionStatement",
                  "src": "9536:16:49"
                },
                {
                  "assignments": [
                    31148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31148,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "9565:1:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 31179,
                      "src": "9560:6:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31147,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9560:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31150,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 31149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9569:1:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9560:10:49"
                },
                {
                  "body": {
                    "id": 31177,
                    "nodeType": "Block",
                    "src": "9594:149:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31154,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30242,
                                "src": "9604:11:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2643",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9616:13:49",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1857,
                              "src": "9604:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 31157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9637:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "9604:35:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 31159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9604:37:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31160,
                        "nodeType": "ExpressionStatement",
                        "src": "9604:37:49"
                      },
                      {
                        "assignments": [
                          31162
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31162,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "9656:2:49",
                            "nodeType": "VariableDeclaration",
                            "scope": 31177,
                            "src": "9651:7:49",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31161,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9651:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31167,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 31165,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31148,
                              "src": "9689:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 31163,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30248,
                              "src": "9661:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 31164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9676:12:49",
                            "memberName": "tokenByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28365,
                            "src": "9661:27:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 31166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9661:30:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9651:40:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 31171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 31169,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31162,
                                "src": "9712:2:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 31170,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31148,
                                "src": "9718:1:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9712:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 31168,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3712,
                              3733
                            ],
                            "referencedDeclaration": 3712,
                            "src": "9701:10:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 31172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9701:20:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31173,
                        "nodeType": "ExpressionStatement",
                        "src": "9701:20:49"
                      },
                      {
                        "expression": {
                          "id": 31175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9731:3:49",
                          "subExpression": {
                            "id": 31174,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31148,
                            "src": "9731:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31176,
                        "nodeType": "ExpressionStatement",
                        "src": "9731:3:49"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31151,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31148,
                      "src": "9585:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 31152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9589:3:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "9585:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31178,
                  "nodeType": "WhileStatement",
                  "src": "9578:165:49"
                }
              ]
            },
            "functionSelector": "6a7179c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenByIndex",
            "nameLocation": "9502:16:49",
            "parameters": {
              "id": 31141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9518:2:49"
            },
            "returnParameters": {
              "id": 31142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9528:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31241,
            "nodeType": "FunctionDefinition",
            "src": "9755:436:49",
            "nodes": [],
            "body": {
              "id": 31240,
              "nodeType": "Block",
              "src": "9790:401:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31184,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "9803:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31183,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5958,
                        5979,
                        6003,
                        6027
                      ],
                      "referencedDeclaration": 5958,
                      "src": "9798:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9798:11:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31186,
                  "nodeType": "ExpressionStatement",
                  "src": "9798:11:49"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 31187,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30242,
                          "src": "9817:11:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2643",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 31189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9829:13:49",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1857,
                        "src": "9817:25:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 31191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 31190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9850:1:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "9817:35:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 31192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9817:37:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31193,
                  "nodeType": "ExpressionStatement",
                  "src": "9817:37:49"
                },
                {
                  "assignments": [
                    31195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31195,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "9867:2:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 31240,
                      "src": "9862:7:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31194,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9862:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31201,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31198,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "9907:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9914:1:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 31196,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "9872:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9887:19:49",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28331,
                      "src": "9872:34:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 31200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9872:44:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9862:54:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31203,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "9933:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31206,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31195,
                            "src": "9963:2:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31204,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30248,
                            "src": "9940:14:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9955:7:49",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27320,
                          "src": "9940:22:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9940:26:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31202,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6610,
                        6635,
                        6648,
                        6664,
                        6706,
                        6748,
                        6790,
                        6827,
                        6864,
                        6901,
                        3763,
                        3788,
                        3818,
                        3843,
                        3902,
                        3927,
                        3957,
                        3982,
                        5082,
                        5117
                      ],
                      "referencedDeclaration": 3763,
                      "src": "9924:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9924:43:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31209,
                  "nodeType": "ExpressionStatement",
                  "src": "9924:43:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31211,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "9980:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31210,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5958,
                        5979,
                        6003,
                        6027
                      ],
                      "referencedDeclaration": 5958,
                      "src": "9975:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9975:9:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31213,
                  "nodeType": "ExpressionStatement",
                  "src": "9975:9:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 31217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10008:47:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "expression": {
                        "id": 31214,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "9992:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10541",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9995:12:49",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10027,
                      "src": "9992:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9992:64:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31219,
                  "nodeType": "ExpressionStatement",
                  "src": "9992:64:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31223,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "10092:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31224,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "10099:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31225,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31195,
                        "src": "10104:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31220,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "10064:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10079:12:49",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27511,
                      "src": "10064:27:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10064:43:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31227,
                  "nodeType": "ExpressionStatement",
                  "src": "10064:43:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31229,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "10120:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31228,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5958,
                        5979,
                        6003,
                        6027
                      ],
                      "referencedDeclaration": 5958,
                      "src": "10115:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10115:11:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31231,
                  "nodeType": "ExpressionStatement",
                  "src": "10115:11:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31235,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "10162:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31236,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "10169:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31237,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31195,
                        "src": "10174:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31232,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "10134:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10149:12:49",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27511,
                      "src": "10134:27:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10134:43:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31239,
                  "nodeType": "ExpressionStatement",
                  "src": "10134:43:49"
                }
              ]
            },
            "functionSelector": "70557298",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferFrom",
            "nameLocation": "9764:16:49",
            "parameters": {
              "id": 31181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9780:2:49"
            },
            "returnParameters": {
              "id": 31182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9790:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31292,
            "nodeType": "FunctionDefinition",
            "src": "10195:613:49",
            "nodes": [],
            "body": {
              "id": 31291,
              "nodeType": "Block",
              "src": "10236:572:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31245,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "10252:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31244,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6048,
                        6069,
                        6093,
                        6117
                      ],
                      "referencedDeclaration": 6048,
                      "src": "10242:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10242:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31247,
                  "nodeType": "ExpressionStatement",
                  "src": "10242:16:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "796f7520617265206e6f7420616c6c6f77656420746f206d696e74",
                        "id": 31251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10280:29:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        },
                        "value": "you are not allowed to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        }
                      ],
                      "expression": {
                        "id": 31248,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "10264:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10541",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10267:12:49",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10027,
                      "src": "10264:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10264:46:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31253,
                  "nodeType": "ExpressionStatement",
                  "src": "10264:46:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31257,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "10336:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 31254,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "10316:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10331:4:49",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 760,
                      "src": "10316:19:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10316:26:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31259,
                  "nodeType": "ExpressionStatement",
                  "src": "10316:26:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420307830303030303030303030303030303030303030303030303030303030303030303030306131316365206973206d697373696e6720726f6c6520307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                        "id": 31263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10364:150:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        },
                        "value": "AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        }
                      ],
                      "expression": {
                        "id": 31260,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "10348:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10541",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10351:12:49",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10027,
                      "src": "10348:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10348:167:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31265,
                  "nodeType": "ExpressionStatement",
                  "src": "10348:167:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 31270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10556:13:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 31269,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10546:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 31271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10546:24:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 31272,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "10572:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 31266,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "10521:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10536:9:49",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26836,
                      "src": "10521:24:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 31273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10521:57:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31274,
                  "nodeType": "ExpressionStatement",
                  "src": "10521:57:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420307830303030303030303030303030303030303030303030303030303030303030303030306131316365206973206d697373696e6720726f6c6520307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                        "id": 31278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10600:150:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        },
                        "value": "AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        }
                      ],
                      "expression": {
                        "id": 31275,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "10584:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10541",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10587:12:49",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10027,
                      "src": "10584:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10584:167:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31280,
                  "nodeType": "ExpressionStatement",
                  "src": "10584:167:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783030",
                            "id": 31286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10790:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 31285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10782:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 31284,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10782:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10782:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 31288,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "10797:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 31281,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30248,
                        "src": "10757:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$990",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10772:9:49",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26836,
                      "src": "10757:24:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 31289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10757:46:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31290,
                  "nodeType": "ExpressionStatement",
                  "src": "10757:46:49"
                }
              ]
            },
            "functionSelector": "4fc1a73e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUnauthorizedAccess",
            "nameLocation": "10204:22:49",
            "parameters": {
              "id": 31242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10226:2:49"
            },
            "returnParameters": {
              "id": 31243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10236:0:49"
            },
            "scope": 31293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30223,
              "name": "Test",
              "nameLocations": [
                "757:4:49"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8422,
              "src": "757:4:49"
            },
            "id": 30224,
            "nodeType": "InheritanceSpecifier",
            "src": "757:4:49"
          }
        ],
        "canonicalName": "MiscTest",
        "contractDependencies": [
          159,
          585,
          672,
          990,
          1250,
          1558,
          2751,
          35166
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31293,
          8422,
          5492,
          5229
        ],
        "name": "MiscTest",
        "nameLocation": "745:8:49",
        "scope": 31294,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 49
}