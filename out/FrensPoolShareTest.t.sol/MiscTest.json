{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensOracle",
      "outputs": [
        {
          "internalType": "contract FrensOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool2",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBalanceOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetPoolById",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIsApprovedForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintingDirectly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwnerOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSafeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenByIndex",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUnauthorizedAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testexists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234620003835760006201000162ff00ff19825416178155610b0b6f219ab540356cbb839cbe05303d7705fa60018060a01b0319908082601154161760115573b9e155e65b5c4d66df28da8e9a0957f06f11bc048260125416176012556e0c2e074ec69a0dfb2997ba6c7d2e1e8260135416176013558160145416176014556301111738816015541617601555620a11ce8160165416176016556017541617601755620000b260185462000388565b90601f918281116200031b575b506061601890815581527fac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f4987fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e556f99b7103c35b26289035de4227e1cc57560801b7fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2f5560195460019290620001549062000388565b818111620002cc575b506041601955601982527f0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e260208320556200019a601a5462000388565b908082116200027d575b60c1601a90815583527f92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b6000805160206200bfbc8339815191529081557f0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f908501557f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae97f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff640557f4093180202063b0e66cd8aef5a934bfabcf32919e494064542b5f1a3889bf516601b5560405161bbf69081620003c68239f35b601a83520160051c6000805160206200bfbc833981519152017f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff6415b81811015620001a4578281558301620002b8565b60198352810160051c7f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c969590810190849081015b8281106200030f5750506200015d565b848155018490620002ff565b60188252820160051c7fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e017fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d305b818110620003775750620000bf565b82815560010162000368565b600080fd5b90600182811c92168015620003ba575b6020831014620003a457565b634e487b7160e01b600052602260045260246000fd5b91607f16916200039856fe608060405260043610156200001357600080fd5b60003560e01c806309d26b6c1462002a685780630a9254e414620020105780630c56ae3b1462001fe55780631aeb10a61462001ca0578063223e6be41462001c7557806325b5e62f1462001c4a57806330dbf8871462001c1f5780633a7684631462001bee5780633df77c0e14620018465780634fc1a73e14620015f8578063524ad4951462001496578063591167c7146200146b5780635f583c1d146200144057806363c72d6014620014155780636a7179c3146200130c57806370557298146200106a57806371a29bb71462000e11578063796a773d1462000d0d578063874962501462000ac157806390ec5d9614620005a857806394cd95e3146200057d5780639e535c691462000345578063a1b8adcb146200031a578063ba414fa614620002f1578063bc073b1814620002c6578063bc48e947146200029b578063c09cec771462000270578063cc91c4361462000245578063edc91a92146200021a578063f8ccbf4714620001f2578063fa7626d414620001cd5763fb47e3a2146200019d57600080fd5b34620001c8576000366003190112620001c8576016546040516001600160a01b039091168152602090f35b600080fd5b34620001c8576000366003190112620001c857602060ff600054166040519015158152f35b34620001c8576000366003190112620001c857602060ff60005460101c166040519015158152f35b34620001c8576000366003190112620001c8576010546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576011546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576017546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576009546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c857600a546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c85760206200031062002d51565b6040519015158152f35b34620001c8576000366003190112620001c857600c546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c857600f54604051638da5cb5b60e01b80825260209290916001600160a01b039184908290600490829086165afa80156200051957620003a1916000916200055b575b503062003051565b620003b0816016541662002e3c565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c8576000809160646040518094819363f28dceb360e01b83528960048401528960248401527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448401525af18015620005195762000549575b5080600f5416816017541690803b15620001c8576000809160246040518094819363f2fde38b60e01b9788845260048401525af18015620005195762000537575b50620004723062002e3c565b81600f5416908260175416823b15620001c8576024600092836040519586948593845260048401525af18015620005195762000525575b5082816017541691600f54169260046040518095819382525afa9182156200051957620004e193600093620004e3575b505062003051565b005b62000508929350803d1062000511575b620004ff818362002cad565b81019062002e1b565b908380620004d9565b503d620004f3565b6040513d6000823e3d90fd5b620005309062002c61565b83620004a9565b620005429062002c61565b8462000466565b620005549062002c61565b8362000425565b620005769150853d87116200051157620004ff818362002cad565b8562000399565b34620001c8576000366003190112620001c8576008546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576016546001600160a01b0390620005d490821662002e3c565b80600d5416803b15620001c8576000600191600460405180948193633e7ea84160e21b83525af18015620005195762000aaf575b5080600f541681601654169160405190632f745c5960e01b8252836004830152600060248301526020938483604481875afa9283156200051957859060009462000a77575b506024929394604051938480926331a9108f60e11b82528860048301525afa9081156200051957620006899260009262000a53575b5062003051565b6017620006998282541662002e3c565b737109709ecfa91a80626ff3989d68f67f5b1dd12d91823b15620001c85760405163f28dceb360e01b815260008180620006d66004820162003250565b038183885af18015620005195762000a41575b5080600f5416928160165416938284541690803b15620001c857604051632142170760e11b8082526001600160a01b0397881660048301529690921660248301526044820187905260009082908183816064810103925af18015620005195762000a2f575b506200075e826016541662002e3c565b81600f5416826016541683855416823b15620001c8576040518781526001600160a01b0392831660048201529116602482015260448101879052906000908290606490829084905af18015620005195762000a1d575b506024828454168784600f5416604051938480926331a9108f60e11b82528b60048301525afa9081156200051957620007f692600092620009f9575062003051565b620008048284541662002e3c565b803b15620001c8576000809160846040518094819363f28dceb360e01b83528b6004840152603260248401527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448401527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648401525af180156200051957620009e7575b5080600f54168183541682600b541690823b15620001c8576040518681526001600160a01b0391821660048201529116602482015260448101869052906000908290606490829084905af180156200051957620009d5575b506040516101f38082018281106001600160401b03821117620009bf5782916200b9ae833903906000f080156200051957620009178284541662002e3c565b818080600f5416945416911693833b15620001c8576040519081526001600160a01b039182166004820152908416602482015260448101859052916000908390606490829084905af191821562000519578592620009ad575b50600f5416926024604051809581936331a9108f60e11b835260048301525afa9182156200051957620004e193600093620004e357505062003051565b620009b89062002c61565b8562000970565b634e487b7160e01b600052604160045260246000fd5b620009e09062002c61565b85620008d8565b620009f29062002c61565b8562000880565b62000a15919250893d8b116200051157620004ff818362002cad565b908962000682565b62000a289062002c61565b86620007b4565b62000a3a9062002c61565b866200074e565b62000a4c9062002c61565b85620006e9565b62000a6f919250863d88116200051157620004ff818362002cad565b908662000682565b80939450813d831162000aa7575b62000a91818362002cad565b81010312620001c857846024925193926200064d565b503d62000a85565b62000aba9062002c61565b8162000608565b34620001c8576000366003190112620001c8576016546001600160a01b039062000aed90821662003159565b60005b60ff811062000afb57005b600d9082825416803b15620001c85760405191633e7ea84160e21b92838152600081600481600180975af18015620005195762000cfb575b50600f918583541660405193848094630178b36760e31b9384835281600484015260209687916024998a915afa918215620005195762000b8c9262000b869160009162000cd9575b508b8b541662003051565b62002f1a565b600e908982541691823b15620001c8576000869360048b604051968793849283525af19283156200051957889362000cc7575b50868b855416604051948580928982528660048301525afa801562000519578b62000b869262000bfb9560009362000ca3575b50541662003051565b9588885416803b15620001c8576004600092604051968793849283525af190811562000519578493899262000c91575b505416936040518095819382528760048301525afa908115620005195762000c679462000b8693879260009462000c6d575b5050541662003051565b62000af0565b62000c88929450803d106200051157620004ff818362002cad565b91878062000c5d565b62000c9c9062002c61565b8962000c2b565b62000cbf9193508a3d8c116200051157620004ff818362002cad565b918e62000bf2565b62000cd29062002c61565b8b62000bbf565b62000cf49150883d8a116200051157620004ff818362002cad565b8c62000b7b565b62000d069062002c61565b8562000b33565b34620001c8576000366003190112620001c8576016546001600160a01b039062000d3990821662002e3c565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c85760405163f28dceb360e01b815260206004820152601b60248201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044820152906000908290606490829084905af18015620005195762000dff575b5080600f54169060165416813b15620001c8576000916024839260405194859384926335313c2160e11b845260048401525af18015620005195762000df457005b620004e19062002c61565b62000e0a9062002c61565b8162000db3565b34620001c8576000366003190112620001c85760005b60ff811062000e3257005b601680546001600160a01b03919062000e4d90831662002e3c565b600d918083541690813b15620001c85760405191633e7ea84160e21b92838152600081600481600180965af18015620005195762001058575b50600f8281541690604051809881976331a9108f60e11b948584528260048501526020998a9160249d8e915afa801562000519578762000b869262000ed6956000936200103c5750541662003051565b9460179562000ee88688541662002e3c565b85600e541690813b15620001c857600086926004604051809581938883525af191821562000519578b926200102a575b508887855416604051938480928982528560048301525afa908115620005195762000b8662000f5792899460009162001008575b50848b541662003051565b9862000f668289541662002e3c565b5416803b15620001c8576004600092604051968793849283525af190811562000519578693859262000ff6575b505416966040518098819382528860048301525afa918215620005195762000fcc9562000b869460009462000fd2575050541662003051565b62000e27565b62000fed929450803d106200051157620004ff818362002cad565b91868062000c5d565b620010019062002c61565b8962000f93565b6200102391508c8d3d106200051157620004ff818362002cad565b8e62000f4c565b620010359062002c61565b8b62000f18565b62000cbf9193508c8d3d106200051157620004ff818362002cad565b620010639062002c61565b8662000e86565b34620001c8576000366003190112620001c8576016546001600160a01b03906200109690821662002e3c565b80600d5416803b15620001c8576000600191600460405180948193633e7ea84160e21b83525af180156200051957620012fa575b5080600f54169080601654169160405192632f745c5960e01b8452806004850152600060248501526020918285604481845afa9485156200051957600095620012c3575b509082602492604051938480926331a9108f60e11b82528960048301525afa91821562000519576200114a936000936200129f57505062003051565b62001159816017541662002e3c565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c8576000604051809263f28dceb360e01b8252818381620011986004820162003250565b03925af1801562000519576200128d575b5080600f541690806016541691816017541690803b15620001c8576040516323b872dd60e01b8082526001600160a01b0395861660048301529490921660248301526044820185905260009082908183816064810103925af1801562000519576200127b575b506200121f816016541662002e3c565b80600f54168160165416916017541691813b15620001c8576040519384526001600160a01b0390811660048501529190911660248301526044820192909252906000908290606490829084905af18015620005195762000df457005b620012869062002c61565b836200120f565b620012989062002c61565b82620011a9565b620012ba929350803d106200051157620004ff818362002cad565b908580620004d9565b919094508282813d8311620012f2575b620012df818362002cad565b81010312620001c857905193826200110e565b503d620012d3565b620013059062002c61565b81620010ca565b34620001c8576000366003190112620001c8576016546001600160a01b03906200133890821662003159565b60005b60ff81106200134657005b81600d5416803b15620001c8576000600191600460405180948193633e7ea84160e21b83525af18015620005195762001403575b5081600f5416906040518092634f6ccce760e01b825282600483015281602460209586935afa9283156200051957600093620013ca575b505062000b8681620013c4931462002f40565b6200133b565b90809350813d8311620013fb575b620013e4818362002cad565b81010312620001c85790519062000b8681620013b1565b503d620013d8565b6200140e9062002c61565b826200137a565b34620001c8576000366003190112620001c8576015546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c857600e546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c857600f546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576016546001600160a01b0390620014c290821662003159565b60005b60ff8110620014d057005b600f908282541660405192839182634f558e7960e01b91828252856004830152602094859160249889915afa801562000519576200151991600091620015d6575b501562002f40565b85600d541691823b15620001c8576000600193600460405180968193633e7ea84160e21b83525af1908115620005195784938892620015c4575b505416946040518096819382528660048301525afa801562000519576200158a9362000b869260009262001590575b505062002f40565b620014c5565b620015b49250803d10620015bc575b620015ab818362002cad565b81019062002d37565b858062001582565b503d6200159f565b620015cf9062002c61565b8862001553565b620015f19150853d8711620015bc57620015ab818362002cad565b8862001511565b34620001c8576000366003190112620001c8576016546001600160a01b03906200162490821662003159565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c85760405163f28dceb360e01b80825260206004830152601b60248301527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044830152919060008160648183865af18015620005195762001834575b5082600f54168360165416813b15620001c8576000916024839260405194859384926335313c2160e11b845260048401525af18015620005195762001822575b50803b15620001c85760405182815260008180620016fd600482016200329e565b038183865af18015620005195762001810575b5082600f541691836016541692803b15620001c85760008091604460405180948193632f2ff15d60e01b998a84527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6600485015260248401525af180156200051957620017fe575b50813b15620001c85760009060405192839182528183816200179d600482016200329e565b03925af180156200051957620017ec575b5081600f54169160165416823b15620001c8576044600092836040519586948593845282600485015260248401525af18015620005195762000df457005b620017f79062002c61565b82620017ae565b620018099062002c61565b8462001778565b6200181b9062002c61565b8362001710565b6200182d9062002c61565b83620016dc565b6200183f9062002c61565b836200169c565b34620001c8576000366003190112620001c857601680546001600160a01b0391906200187490831662003159565b6000915b60ff83106200188357005b600d81815416803b15620001c85760405191633e7ea84160e21b8352600083600481600180965af19283156200051957869362001bdc575b50600f80548654604051632f745c5960e01b81529087166001600160a01b031660048201526024810198909852602097929088908490881681806044810103915afa92831562000519578693869160009162001ba4575b501460405191620019238362002c91565b82526c06669727374206973206973203609c1b89830152801562001b5c575b5050541694838554169181604051809881956370a0823160e01b835260048301526024998a915afa928315620005195760009362001b27575b5083019182841162001b1257620019d1949596506040516200199d8162002c91565b601181527073686f756c6420686176652069202b203160781b83820152838214159081620019d9575b505050505062002f1a565b919062001878565b62001a0c7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583916040519182918262003206565b0390a162001a1d575b8080620019c6565b6000805160206200bba183398151915260806040518481526022858201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b6060820152a1604051926040845262001a9b60408501604090600a8152690808115e1c1958dd195960b21b60208201520190565b9083850152837fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89485920390a16040519182916040835262001af860408401604090600a815269080808081058dd1d585b60b21b60208201520190565b918301520390a162001b0962002f9b565b84808062001a15565b86634e487b7160e01b60005260116004526000fd5b9092508181813d831162001b54575b62001b42818362002cad565b81010312620001c8575191876200197b565b503d62001b36565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358362001b9362001b9c936040519182918262003206565b0390a162002f40565b878062001942565b945050508783813d831162001bd4575b62001bc0818362002cad565b81010312620001c857848693518a62001912565b503d62001bb4565b62001be79062002c61565b86620018bb565b34620001c8576000366003190112620001c8576020604051737109709ecfa91a80626ff3989d68f67f5b1dd12d8152f35b34620001c8576000366003190112620001c857600b546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576012546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576013546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c857601680546001600160a01b03919062001cce90831662003159565b60005b60ff811062001cdc57005b82600d5416803b15620001c8576000600191600460405180948193633e7ea84160e21b83525af18015620005195762001fd3575b50600f80548354604051632f745c5960e01b81529086166001600160a01b031660048201526024810184905291929160209182908290881681806044810103915afa80156200051957839060009062001f9b575b62001d7192501462002f40565b84835416906040519182828163020604bf60e21b9384825287600483015260249687915afa80156200051957889160009162001f79575b50168062001e83575b5086855416906017958887541692803b15620001c85760405163095ea7b360e01b81526001600160a01b03949094166004850152602484018790526000908490604490829084905af1908115620005195784938a9262001e71575b505416936040518095819382528760048301525afa908115620005195762001e479462000b8693889260009462001e4d575050541662003051565b62001cd1565b62001e68929450803d106200051157620004ff818362002cad565b91888062000c5d565b62001e7c9062002c61565b8a62001e0c565b6000805160206200bba183398151915260806040518581526025868201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b6060820152a1604051906040825262001f0460408301604090600a8152690808115e1c1958dd195960b21b60208201520190565b9084830152817f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9283920390a1604051604081528062001f5f60408201604090600a815269080808081058dd1d585b60b21b60208201520190565b6000868301520390a162001f7262002f9b565b8762001db1565b62001f949150843d86116200051157620004ff818362002cad565b8962001da8565b50508181813d831162001fcb575b62001fb5818362002cad565b81010312620001c8578262001d71915162001d64565b503d62001fa9565b62001fde9062002c61565b8362001d10565b34620001c8576000366003190112620001c857600d546040516001600160a01b039091168152602090f35b34620001c8576000366003190112620001c8576040516106528082018281106001600160401b03821117620009bf57829162008801833903906000f080156200051957600b80546001600160a01b0319166001600160a01b039290921691821790556040517f65787465726e616c2e636f6e74726163742e6164647265737300000000000000602082018181526a535356526567697374727960a81b60398401526024808452939192620020c48162002c75565b5190206012546001600160a01b0316823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af18015620005195762002a56575b5060018060a01b03600b541660405160208101908382526e11195c1bdcda5d10dbdb9d1c9858dd608a1b603982015260288152620021588162002c75565b5190206011546001600160a01b0316823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af18015620005195762002a44575b5060018060a01b03600b5416906040516020810191825262454e5360e81b6039820152601c8152620021e08162002c91565b5190206013546001600160a01b0316823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af18015620005195762002a32575b50600b54604051906001600160a01b03166128258083016001600160401b038111848210176200299c57602092849262004ed7843981520301906000f080156200051957600f80546001600160a01b0319166001600160a01b03928316908117909155600b546040516f636f6e74726163742e6164647265737360801b602082019081526d4672656e73506f6f6c536861726560901b6030830152601e82529190931692620022e58162002c91565b51902090823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af18015620005195762002a20575b50600b54604051906001600160a01b0316612b5b8083016001600160401b038111848210176200299c57602092849262008e53843981520301906000f080156200051957600c80546001600160a01b0319166001600160a01b03928316908117909155600b546040516f636f6e74726163742e6164647265737360801b60208201908152715374616b696e67506f6f6c466163746f727960701b6030830152602282529190931692620023e38162002c75565b51902090823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af18015620005195762002a0e575b50600f54600c546001600160a01b039182169116813b15620001c857600091604483926040519485938492632f2ff15d60e01b8452826004850152888401525af180156200051957620029fc575b50600b54604051906001600160a01b03166104578083016001600160401b038111848210176200299c57602092849262004a80843981520301906000f080156200051957601080546001600160a01b0319166001600160a01b03928316908117909155600b546040516f636f6e74726163742e6164647265737360801b602082019081526a4672656e734f7261636c6560a81b6030830152601b82529190931692620025288162002c91565b51902090823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af180156200051957620029ea575b50600b54604051906001600160a01b0316610c4b8083016001600160401b038111848210176200299c57602092849262003e35843981520301906000f080156200051957600980546001600160a01b0319166001600160a01b03928316908117909155600b546040516f636f6e74726163742e6164647265737360801b602082019081526e233932b739a6b2ba30a432b63832b960891b6030830152601f82529190931692620026238162002c91565b51902090823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af180156200051957620029d8575b50600b54604051906001600160a01b03166001600160401b03611105830190811190831117620029c357611105620076fc833961110582015260208161110581010301906000f080156200051957600a80546001600160a01b0319166001600160a01b03928316908117909155600b546040516f636f6e74726163742e6164647265737360801b60208201908152754672656e73506f6f6c5368617265546f6b656e55524960501b60308301526026825291909316926200272f8162002c75565b51902090823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af180156200051957620029b1575b50600b54604051906001600160a01b0316610acf8083016001600160401b038111848210176200299c57602092849262003366843981520301906000f080156200051957600880546001600160a01b0319166001600160a01b03928316179055600b546040516f636f6e74726163742e6164647265737360801b602082019081526a4672656e734f7261636c6560a81b6030830152601b82529190921691620028238162002c91565b5190206010546001600160a01b0316823b15620001c85760405163ca446dd960e01b815260048101929092526001600160a01b03166024820152906000908290604490829084905af1801562000519576200298a575b50600c54601554604051630319e90960e41b8082526001600160a01b0392831660048301526000858301819052919390926020928592604492849291165af18015620005195760209260009162002968575b50600d80546001600160a01b0319166001600160a01b03928316179055600c5460155460405193845282166004840152600094830185905291938492604492849291165af1908115620005195760009162002944575b50600e80546001600160a01b0319166001600160a01b0392909216919091179055005b62002961915060203d6020116200051157620004ff818362002cad565b8162002921565b620029839150833d85116200051157620004ff818362002cad565b84620028cb565b620029959062002c61565b8162002879565b84634e487b7160e01b60005260416004526000fd5b620029bc9062002c61565b816200277a565b82634e487b7160e01b60005260416004526000fd5b620029e39062002c61565b816200266e565b620029f59062002c61565b8162002573565b62002a079062002c61565b816200247c565b62002a199062002c61565b816200242e565b62002a2b9062002c61565b8162002330565b62002a3d9062002c61565b8162002236565b62002a4f9062002c61565b82620021ae565b62002a619062002c61565b826200211a565b34620001c8576000366003190112620001c8576016546001600160a01b039062002a9490821662003159565b60005b6040811062002c075750600f5460165460175460405163e985e9c560e01b8082529285166001600160a01b0390811660048301529185169091166024820152602093919284908290604490829086165afa8015620005195762002b049160009162002be557501562002f40565b80600f5416918160175416833b15620001c85760009360448592604051968793849263a22cb46560e01b84526004840152600160248401525af1918215620005195762002b9093859362002bd3575b50600f546016546017546040519485526001600160a01b039184168216600486015283161660248401529193849290911690829081906044820190565b03915afa9081156200051957620004e19260009262002bb157505062002f40565b62002bcb9250803d10620015bc57620015ab818362002cad565b828062001582565b62002bde9062002c61565b8562002b53565b62002c009150853d8711620015bc57620015ab818362002cad565b8562001511565b81600d541690813b15620001c8576000600192600460405180958193633e7ea84160e21b83525af1918215620005195762002c499262002c4f575b5062002f1a565b62002a97565b62002c5a9062002c61565b8362002c42565b6001600160401b038111620009bf57604052565b606081019081106001600160401b03821117620009bf57604052565b604081019081106001600160401b03821117620009bf57604052565b90601f801991011681019081106001600160401b03821117620009bf57604052565b60005b83811062002ce35750506000910152565b818101518382015260200162002cd2565b3d1562002d32573d906001600160401b038211620009bf576040519162002d26601f8201601f19166020018462002cad565b82523d6000602084013e565b606090565b90816020910312620001c857518015158103620001c85790565b6000805460081c60ff161562002d6b575460081c60ff1690565b80737109709ecfa91a80626ff3989d68f67f5b1dd12d803b62002d8d57505090565b81925060405182602082018381526519985a5b195960d21b60408401526040835262002db98362002c75565b62002df56024604051809362002de46020830197630667f9d760e41b89525180928585019062002ccf565b810103600481018452018262002cad565b51925af15062002e1862002e0862002cf4565b6020808251830101910162002d37565b90565b90816020910312620001c857516001600160a01b0381168103620001c85790565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c85760405163c88a5e6d60e01b81526001600160a01b0390921660048301819052600160801b6024840152600092838160448183875af1801562002f0f5762002ef9575b50813b1562002ef557829160248392604051948593849263ca669fa760e01b845260048401525af1801562002eea5762002ed3575050565b62002edf829162002c61565b62002ee75750565b80fd5b6040513d84823e3d90fd5b8280fd5b62002f079093919362002c61565b913862002e9b565b6040513d86823e3d90fd5b600019811462002f2a5760010190565b634e487b7160e01b600052601160045260246000fd5b1562002f4857565b6000805160206200bba1833981519152606060405160208152601760208201527f4572726f723a20417373657274696f6e204661696c65640000000000000000006040820152a162002f9962002f9b565b565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b62002fca575b5061010061ff00196000541617600055565b6040519060208201908082526519985a5b195960d21b6040840152600160608401526060835260808301918383106001600160401b03841117620009bf576000836200303a60248397849760405260a08101956370ca10bb60e01b875262002de48251809260a485019062002ccf565b51925af1506200304962002cf4565b503862002fb8565b6001600160a01b0391821691168181036200306a575050565b62003146906040906000805160206200bba18339815191526080835160208152602560208201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b6164648582015264726573735d60d81b6060820152a1815193828552620030f0838601604090600a8152690808115e1c1958dd195960b21b60208201520190565b906020860152847f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9586920390a181519282849384528301604090600a815269080808081058dd1d585b60b21b60208201520190565b9060208301520390a162002f9962002f9b565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001c85760405163c88a5e6d60e01b81526001600160a01b0390921660048301819052600160801b6024840152600092838160448183875af1801562002f0f57620031f0575b50813b1562002ef55782916024839260405194859384926303223eab60e11b845260048401525af1801562002eea5762002ed3575050565b620031fe9093919362002c61565b9138620031b8565b60a09160408252600560408301526422b93937b960d91b60608301526080602083015262003244815180928160808601526020868601910162002ccf565b601f01601f1916010190565b60809060208152602d60208201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b60608201520190565b60e09060208152609460208201527f416363657373436f6e74726f6c3a206163636f756e742030783030303030303060408201527f303030303030303030303030303030303030303030303030303030306131316360608201527f65206973206d697373696e6720726f6c6520307830303030303030303030303060808201527f303030303030303030303030303030303030303030303030303030303030303060a082015273030303030303030303030303030303030303030360641b60c0820152019056fe60803461007457601f610acf38819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b031916919091179055604051610a3f90816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b6000803560e01c63a2d6c6da1461002c57600080fd5b346108ff57602093846003193601126108fb5781546f636f6e74726163742e6164647265737360801b8685018181526e233932b739a6b2ba30a432b63832b960891b6030870152601f86526001600160a01b039584359493871693919061009281610925565b519020928751936321f8a72160e01b90818652838601526024948a818781865afa90811561088c5790899189916108de575b50169589518b81019086825265141b519bdb9d60d21b6030820152601681526100ec81610925565b519020918a5192818452858401528b838881875afa9283156108535789936108bf575b508a518c81019087825264576176657360d81b60308201526015815261013481610925565b519020958b5196828852868801528c878981885afa9687156108b5578d929189918c99610896575b508d51848101918252684672656e734c6f676f60b81b60308201526019815261018481610925565b519020918d5196879384928352898301525afa92831561088c57889361085d575b50895163ef21184f60e01b815284810182905295888782818b5afa96871561085357908992918398610837575b508b51809981936324a8b96b60e21b8352888301525afa9586156107ed578895949392918891829861081b575b50838b51809b81936378bf42b960e11b8352165afa9788156107ed5787986107f7575b509086859392828b51809881936305b3806b60e11b8352165afa9485156107ed579087929183966107d1575b5089516354ea17bf60e11b81529384928391165afa9485156107c65792887f3c7465787420666f6e742d73697a653d2231352e352220783d2232303022207997969361076c9693866103829796610796575b50506401022aa24160dd1b908a51998a968488019a651e3232b3399f60d11b8c527f3c6c696e6561724772616469656e742069643d226772616431222078313d223060268a01527f25222079313d223025222078323d2231303025222079323d2231303025223e0060468a01527f3c73746f70206f66667365743d22302522207374796c653d2273746f702d636f60658a01527f6c6f723a233366313965653b73746f702d6f7061636974793a3122202f3e000060858a01527f3c73746f70206f66667365743d223130302522207374796c653d2273746f702d60a38a01527f636f6c6f723a233534646165303b73746f702d6f7061636974793a3122202f3e60c38a0152701e17b634b732b0b923b930b234b2b73a1f60791b60e38a01526103d2815180928860f48d019101610902565b88017f3c72656374206865696768743d22343030222077696474683d2234303022206660f48201527334b6361e913ab9361411b3b930b218949110179f60611b61011482015286519061042e8261012899898b85019101610902565b0161044182518093888a85019101610902565b01948501527f3d223136332220746578742d616e63686f723d226d6964646c652220666f6e746101488501527f2d66616d696c793d2253616e732c417269616c22206c65747465722d737061636101688501527434b7339e911b11103334b6361e913bb434ba32911f60591b6101888501526611115413d4d25560ca1b61019d850152661e17ba32bc3a1f60c91b93846101a48201527f3c7465787420666f6e742d73697a653d2234352220783d223230302220793d226101ab8201527f3231322220746578742d616e63686f723d226d6964646c65222020666f6e742d6101cb8201527f7765696768743d223931302220666f6e742d66616d696c793d2253616e732c416101eb8201527f7269616c22206c65747465722d73706163696e673d222d31222066696c6c3d2261020b820152663bb434ba32911f60c91b61022b82015261059982518093610232968785019101610902565b0191820152816102378201527f3c7465787420666f6e742d73697a653d2231382e372220783d2232303022207961023e8201527f3d223234332220746578742d616e63686f723d226d6964646c652220666f6e7461025e8201527f2d66616d696c793d225065726d616e656e74204d61726b6572222066696c6c3d61027e82015267113bb434ba32911f60c11b61029e8201526f4652454e5320504f4f4c205354414b4560801b6102a6820152816102b68201527f3c7265637420783d2232372220793d2233343522206865696768743d223330226102bd8201527f2077696474683d22333436222066696c6c3d222334353534454122206f7061636102dd8201526a34ba3c9e91171a1110179f60a91b6102fd8201527f3c7465787420666f6e742d73697a653d2231302220783d223230302220793d226103088201527f3336352220746578742d616e63686f723d226d6964646c652220666f6e742d776103288201527f65696768743d22626f6c642220666f6e742d66616d696c793d2253616e732c41610348820152723934b0b611103334b6361e913bb434ba32911f60691b6103688201528251906107588261037b958d8785019101610902565b019182015203610362810185520183610957565b6107888351948593818552519283809286015285850190610902565b601f01601f19168101030190f35b6401022aa24160dd1b929650906107be913d8091833e6107b68183610957565b81019061099d565b9490386102a0565b8751903d90823e3d90fd5b6107e69196503d8085833e6107b68183610957565b943861024e565b89513d89823e3d90fd5b85939291985061081188913d8084833e6107b68183610957565b9891929350610222565b6108309198503d8084833e6107b68183610957565b96386101ff565b61084c9198503d8085833e6107b68183610957565b96386101d2565b8b513d8b823e3d90fd5b61087e9193508b3d8d11610885575b6108768183610957565b810190610979565b91386101a5565b503d61086c565b8a513d8a823e3d90fd5b6108ae919950843d8611610885576108768183610957565b973861015c565b8c513d8c823e3d90fd5b6108d79193508c8d3d10610885576108768183610957565b913861010f565b6108f591508c8d3d10610885576108768183610957565b386100c4565b5080fd5b80fd5b60005b8381106109155750506000910152565b8181015183820152602001610905565b6040810190811067ffffffffffffffff82111761094157604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761094157604052565b9081602091031261099857516001600160a01b03811681036109985790565b600080fd5b60208183031261099857805167ffffffffffffffff9182821161099857019082601f8301121561099857815190811161094157604051926109e8601f8301601f191660200185610957565b8184526020828401011161099857610a069160208085019101610902565b9056fea26469706673582212208413c06be32fa35c687270b1005069533526ca7165c0dcfa3bf29206d0d8ca3364736f6c634300081400336080604090808252346101535780610c4b803803809161001f8285610158565b833960209283918101031261015357516001600160a01b0380821692909183900361015357600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b0384118585101761013d5760248484938193828c52885190206321f8a72160e01b835260448901525afa928315610132576000936100f5575b5050501690600054161760005551610acf908161017c8239f35b813d831161012b575b6101088185610158565b81010312610127575190828216820361012457503880806100db565b80fd5b5080fd5b503d6100fe565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761013d5760405256fe6080604052600436101561001257600080fd5b60003560e01c806392a2e5ac14610057578063de1c7f7014610052578063edd148a21461004d5763ef21184f1461004857600080fd5b6101db565b6101ae565b61016a565b346100e657610065366100eb565b6020608060248160018060a01b0394856000541690630178b36760e31b83526084525afa80156100e1576100b1916100a5916000906100b5575b16610a13565b60405191829182610145565b0390f35b5060203d81116100da575b806100cd6100d5926102f8565b608001610342565b61009f565b503d6100c0565b61036f565b600080fd5b60209060031901126100e65760043590565b60005b8381106101105750506000910152565b8181015183820152602001610100565b90602091610139815180928185528580860191016100fd565b601f01601f1916010190565b906020610156928181520190610120565b90565b6001600160a01b038116036100e657565b346100e65760203660031901126100e65761018f60043561018a81610159565b61052f565b906100b160405192839215158352604060208401526040830190610120565b346100e6576100b16101c76101c2366100eb565b6103c4565b604051918291602083526020830190610120565b346100e6576101e9366100eb565b600054610206906001600160a01b03165b6001600160a01b031690565b604051630178b36760e31b8152600481018390526020918290829060249082905afa9283156100e15761025e9383926000916102b5575b506040518080968194632daad61d60e01b8352600483019190602083019252565b03916001600160a01b03165afa80156100e1576100b1926100a592600092610288575b50506103c4565b6102a79250803d106102ae575b61029f8183610320565b81019061037b565b3880610281565b503d610295565b6102d59150833d85116102db575b6102cd8183610320565b81019061035a565b3861023d565b503d6102c3565b634e487b7160e01b600052604160045260246000fd5b601f80199101166080016080811067ffffffffffffffff82111761031b57604052565b6102e2565b90601f8019910116810190811067ffffffffffffffff82111761031b57604052565b602090607f1901126100e65760805161015681610159565b908160209103126100e6575161015681610159565b6040513d6000823e3d90fd5b908160209103126100e6575190565b906103c260216040518094600360fc1b60208301526103b281518092602086860191016100fd565b8101036001810185520183610320565b565b66038d7ea4c68000670de0b6b3a76400006103e0818404610836565b920604906103ed82610836565b9160648110610464575b600a1161044c575b602161015691604051938161041e8693518092602080870191016100fd565b8201601760f91b602082015261043d82518093602087850191016100fd565b01036001810184520182610320565b90602161045b6101569261038a565b929150506103ff565b91610470600a9161038a565b9290506103f7565b67ffffffffffffffff811161031b57601f01601f191660200190565b604051906020820182811067ffffffffffffffff82111761031b5760405260008252565b908160209103126100e6575180151581036100e65790565b6020818303126100e65780519067ffffffffffffffff82116100e6570181601f820112156100e657805161050381610478565b926105116040519485610320565b818452602082840101116100e65761015691602080850191016100fd565b6001549091906105ce9061054b906001600160a01b03166101fa565b926040516020948186809301906105aa8161059c61058d856019907f65787465726e616c2e636f6e74726163742e616464726573730000000000000081520190565b62454e5360e81b815260030190565b03601f198101835282610320565b5190209060405180809681946321f8a72160e01b8352600483019190602083019252565b03915afa9182156100e157600092610719575b506001600160a01b03918216906105f790610738565b604051630178b8bf60e01b8152600481018290529092908581602481865afa9081156100e1576000916106fc575b50169182156106ec57604051631ef3fca760e31b815260048101829052918590839060249082905afa9182156100e157610687956000936106ba575b505060009192604051808097819463691f343160e01b8352600483019190602083019252565b03915afa9283156100e15760009361069e57509190565b61015691933d8091833e6106b28183610320565b8101906104d0565b6000935090816106de92903d106106e5575b6106d68183610320565b8101906104b8565b9138610661565b503d6106cc565b5050509050600090610156610494565b6107139150863d88116102db576102cd8183610320565b38610625565b610731919250843d86116102db576102cd8183610320565b90386105e1565b6028805b61079b575050602860002060405160208101917f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e283526040820152604081526060810181811067ffffffffffffffff82111761031b5760405251902090565b6f181899199a1a9b1b9c1cb0b131b232b360811b91600f9182821684901a600019820153600119019283928260041c161a825360081c9161073c565b604051906060820182811067ffffffffffffffff82111761031b57604052602a8252604082602036910137565b9061080e82610478565b61081b6040519182610320565b828152809261082c601f1991610478565b0190602036910137565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008082101561096b575b506d04ee2d6d415b85acef81000000008083101561095c575b50662386f26fc100008083101561094d575b506305f5e1008083101561093e575b506127108083101561092f575b50606482101561091f575b600a80921015610915575b6001908160216108cd828701610804565b95860101905b6108df575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215610910579190826108d3565b6108d8565b91600101916108bc565b91906064600291049101916108b1565b600491939204910191386108a6565b60089193920491019138610899565b6010919392049101913861088a565b60209193920491019138610878565b60409350810491503861085f565b634e487b7160e01b600052603260045260246000fd5b9081518110156109a0570160200190565b610979565b80156109b2576000190190565b634e487b7160e01b600052601160045260246000fd5b156109cf57565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b610a1b6107d7565b908151156109a0576030602083015381516001908110156109a05790607860218401536029915b808311610a5557506101569150156109c8565b90600f81169060108210156109a057610a92916f181899199a1a9b1b9c1cb0b131b232b360811b901a610a88858761098f565b5360041c926109a5565b9190610a4256fea2646970667358221220cd8caf4aff57409f1242fb3ffcc28fd4c61144f12b2f88aa7f9b4263fa3c3c9264736f6c6343000814003360803461007457601f61045738819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600180546001600160a01b0319169190911790556040516103c790816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163809bef62146101d457508063d3b150e6146100ab5763d6e65cb91461004457600080fd5b346100a75760203660031901126100a757803567ffffffffffffffff81116100a3576020809461007c60ff9461008f94369101610322565b908286519483868095519384920161036e565b820190815203019020541690519015158152f35b8380fd5b8280fd5b50346100a757816003193601126100a757803567ffffffffffffffff81116100a3576100da9036908301610322565b602435928315158094036101d05760015481516353adc3e960e11b8152602094916001600160a01b039190869082908590829086165afa9081156101c657889161018c575b501633036101585750908261013f9392519382858094519384920161036e565b8101858152030190209060ff8019835416911617905580f35b83606492519162461bcd60e51b8352820152601060248201526f36bab9ba1031329033bab0b93234b0b760811b6044820152fd5b90508581813d83116101bf575b6101a381836102ce565b810103126101bb575181811681036101bb573861011f565b8780fd5b503d610199565b84513d8a823e3d90fd5b8480fd5b83858492346102ca57602093846003193601126100a75780356001600160a01b038116908190036100a35763ac2a5dfd60e01b83528391839182905afa9081156102c057908491839161023d575b509061008f9160ff938286519483868095519384920161036e565b9150503d8083833e61024f81836102ce565b81019084818303126100a75780519067ffffffffffffffff82116100a3570181601f820112156100a75780519061028582610306565b92610292865194856102ce565b8284528683830101116100a35792826102b7879360ff96858061008f9801910161036e565b91925092610222565b83513d84823e3d90fd5b5080fd5b90601f8019910116810190811067ffffffffffffffff8211176102f057604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116102f057601f01601f191660200190565b81601f820112156103695780359061033982610306565b9261034760405194856102ce565b8284526020838301011161036957816000926020809301838601378301015290565b600080fd5b60005b8381106103815750506000910152565b818101518382015260200161037156fea264697066735822122090ef831f3401cb6cc533c1102c88d5e59eaed00dcea01332e01e12065c97954f64736f6c6343000814003360803462000404576200282590813803601f1991601f91838382011682019460018060401b039183871083881117620003ee57808492604098895283396020938491810103126200040457516001600160a01b0380821692909183900362000404576200006b62000409565b94600b86526a4652454e5320536861726560a81b858701526200008d62000409565b60058152644652454e5360d81b86820152865197838911620003ee576000988954986001998a81811c91168015620003e3575b8a821014620003cf579081868493116200037c575b5089908683116001146200031b578c926200030f575b5050600019600383901b1c191690891b1789555b8151938411620002fb5787548881811c91168015620002f0575b88821014620002dc57908184869594931162000285575b5087928411600114620002245750889262000218575b5050600019600383901b1c191690851b1784555b600b80546001600160a01b03198082163390811790935592167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a3600c541617600c55828052600a8152838320338452815260ff848420541615620001cb575b83516123fb90816200042a8239f35b828052600a815283832090338452528282209060ff19825416179055339033907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4388080620001bc565b01519050388062000146565b888a52878a20899590939291168a5b898282106200026e575050841162000254575b505050811b0184556200015a565b015160001960f88460031b161c1916905538808062000246565b8385015186558b9790950194938401930162000233565b9091929350888a52878a208480870160051c8201928a8810620002d2575b9187968c92969594930160051c01915b828110620002c357505062000130565b8c81558796508b9101620002b3565b92508192620002a3565b634e487b7160e01b8a52602260045260248afd5b90607f169062000119565b634e487b7160e01b89526041600452602489fd5b015190503880620000eb565b908c91858d95168380528c8420935b8d8282106200036557505084116200034b575b505050811b018955620000ff565b015160001960f88460031b161c191690553880806200033d565b8385015186558f979095019493840193016200032a565b9091508b8052898c208680850160051c8201928c8610620003c5575b918d91869594930160051c01915b828110620003b6575050620000d5565b8e81558594508d9101620003a6565b9250819262000398565b634e487b7160e01b8c52602260045260248cfd5b90607f1690620000c0565b634e487b7160e01b600052604160045260246000fd5b600080fd5b60408051919082016001600160401b03811183821017620003ee5760405256fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146114bb5750806306fdde03146113f0578063081812fc146113d0578063095ea7b3146112635780630bc59b381461121257806318160ddd146112445780631dc82a751461121257806323b872dd146111ed578063248a9ca3146111c35780632f2ff15d146111175780632f745c591461106b57806336568abe14610fd957806342842e0e14610fa557806342966c6814610c605780634f558e7914610c215780634f6ccce714610b8e5780636352211e14610b5d5780636a6278421461091357806370a08231146108e6578063715018a6146108895780638da5cb5b1461086057806391d148541461081a57806395d89b4114610704578063a217fddf146106e9578063a22cb4651461061a578063a2d6c6da14610553578063b88d4fde146104a0578063c87b56dd14610317578063d5391393146102dc578063d547741f1461029e578063e985e9c51461024c5763f2fde38b1461018357600080fd5b346102485760203660031901126102485761019c6115a3565b906101a5611b84565b6001600160a01b039182169283156101f6575050600b54826001600160601b0360a01b821617600b55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461029a578060031936011261029a5760ff8160209361026c6115a3565b6102746115be565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b5090346102485780600319360112610248576102d991356102d460016102c26115be565b93838752600a602052862001546117d8565b611b0e565b80f35b50503461029a578160031936011261029a57602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b509034610248576020918260031936011261049c57600c5482516f636f6e74726163742e6164647265737360801b858201908152754672656e73506f6f6c5368617265546f6b656e55524960501b6030830152602682526001600160a01b0393919260608401919085169067ffffffffffffffff831185841017610489578260248180948b948d9998978c52885190206321f8a72160e01b835260648901525afa92831561047f5787908594610444575b5050506024908551948593849263c87b56dd60e01b8452803590840152165afa93841561043957809461040f575b505061040b905192828493845283019061157e565b0390f35b61040b92945090610431913d8091833e610429818361163b565b810190611776565b9290386103f6565b8251903d90823e3d90fd5b9080929394503d8311610478575b61045c818561163b565b81010312610248575183811681036102485790602486386103c8565b503d610452565b86513d86823e3d90fd5b634e487b7160e01b895260418452602489fd5b8380fd5b509034610248576080366003190112610248576104bb6115a3565b906104c46115be565b604435906064359467ffffffffffffffff861161054f573660238701121561054f57850135936104ff6104f68661165d565b9451948561163b565b84845286366024878901011161054c576020866105479760246102d99a0183890137860101526105376105328433611d97565b611cc2565b610542838383611eab565b6122e0565b611d77565b80fd5b8680fd5b509034610248576020918260031936011261049c57838135808252600d85528260018060a01b0386818786205416875196878092638ae578fd60e01b82525afa94851561047f5784956105df575b50906024918651958694859363516b636d60e11b8552840152165afa93841561043957809461040f57505061040b905192828493845283019061157e565b9094508681813d8311610613575b6105f7818361163b565b8101031261049c575190848216820361049c57909360246105a1565b503d6105ed565b5090346102485780600319360112610248576106346115a3565b90602435918215158093036106e5576001600160a01b0316923384146106a35750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b50503461029a578160031936011261029a5751908152602090f35b50913461054c578060031936011261054c578151918160019283549384811c91818616958615610810575b60209687851081146107fd578899509688969785829a5291826000146107d657505060011461077b575b50505061040b929161076c91038561163b565b5192828493845283019061157e565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106107be575050508201018161076c61040b610759565b8054848a0186015288955087949093019281016107a5565b60ff19168782015293151560051b8601909301935084925061076c915061040b9050610759565b634e487b7160e01b835260228a52602483fd5b92607f169261072f565b50346102485781600319360112610248578160209360ff9261083a6115be565b90358252600a86528282206001600160a01b039091168252855220549151911615158152f35b50503461029a578160031936011261029a57600b5490516001600160a01b039091168152602090f35b833461054c578060031936011261054c576108a2611b84565b600b80546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461029a57602036600319011261029a5760209061090c6109076115a3565b611bdc565b9051908152f35b5082903461029a5760209081600319360112610248576109316115a3565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68452600a8352848420338552835260ff858520541615610b1b5760085491828552600d84528585206001600160601b0360a01b90338282541617905586519461099a86611609565b8686526001600160a01b038416928315610adb576000868152600260205260409020546109d3906001600160a01b031615155b15611e05565b6008549086895260098352818a8a2055600160401b821015610ac8575091836102d99899600288979694610a2f89610a168960016105479f9e9b01600855612367565b90919082549060031b91821b91600019901b1916179055565b8c83610a3a8a611bdc565b8683526006845281832081845284528183208a905589835260078452912055600d8152600087815260026020526040902054610a80906001600160a01b031615156109cd565b838d5260038152828d2060018154019055868d52528a2091825416179055877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46121c6565b634e487b7160e01b895260419052602488fd5b816064928a519262461bcd60e51b845283015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b5060649184519162461bcd60e51b8352820152601b60248201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044820152fd5b50913461054c57602036600319011261054c5750610b7d60209235611c9f565b90516001600160a01b039091168152f35b50823461054c57602036600319011261054c5750803590600854821015610bc957602083610bbb84612367565b91905490519160031b1c8152f35b608490602084519162461bcd60e51b8352820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152fd5b50913461054c57602036600319011261054c5750610c5760209235600052600260205260018060a01b0360406000205416151590565b90519015158152f35b5082903461029a5760209283600319360112610248578135808452600d85528184205490926001600160a01b0392909183163303610f5757610ca184611c9f565b838116801597918815610ed6575050600854858752600982528083882055600160401b811015610ec35785610a16826001610cdf9401600855612367565b6008546000199490858101908111610eb05786885260098352610d058489205491612367565b90549060031b1c610d1981610a1684612367565b885260098352838820558587528683812055600854978815610e9d5785889998979801610d4581612367565b8882549160031b1b19169055600855878752600d8352818488205416901580610e96575b610ddd575b5090600291610d7c88611c9f565b948888528252838720946001600160601b0360a01b958681541690551694858752600382528387209081540190558686525283209081541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a480f35b8394959650916024919281945192838092635a2d1e0760e11b82528b8a8301525afa908115610e8c578891610e53575b50610e1e5790869493929188610d6e565b50905162461bcd60e51b815291820152601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508281813d8311610e85575b610e6a818361163b565b81010312610e8157610e7b90611679565b88610e0d565b8780fd5b503d610e60565b84513d8a823e3d90fd5b5086610d69565b634e487b7160e01b885260318552602488fd5b634e487b7160e01b885260118552602488fd5b634e487b7160e01b875260418452602487fd5b610edf90611bdc565b600019810191908211610eb0578688526007835283882054828103610f20575b50868852878481205587526006825282872090875281528582812055610cdf565b81895260068452848920838a52845284892054828a5260068552858a20828b52855280868b20558952600784528489205589610eff565b5162461bcd60e51b8152908101859052602360248201527f63616e6e6f74206275726e207368617265732066726f6d206f7468657220706f6044820152626f6c7360e81b6064820152608490fd5b50503461029a576105476102d991610fbc366115d4565b91925192610fc984611609565b8684526105376105328433611d97565b5082903461029a578260031936011261029a57610ff46115be565b90336001600160a01b0383160361101057906102d99135611b0e565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b50913461054c578160031936011261054c576110856115a3565b6024359061109281611bdc565b8210156110c0576001600160a01b031682526006602090815283832091835290815290829020548251908152f35b835162461bcd60e51b8152602081870152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b503461024857816003193601126102485735906111326115be565b90828452600a60205261114a600182862001546117d8565b828452600a60209081528185206001600160a01b039093168086529290528084205460ff1615611178578380f35b828452600a6020528084208285526020528320600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a43880808380f35b50346102485760203660031901126102485781602093600192358152600a85522001549051908152f35b833461054c576102d96111ff366115d4565b9161120d6105328433611d97565b611eab565b503461024857602036600319011261024857358252600d6020908152918190205490516001600160a01b039091168152f35b50503461029a578160031936011261029a576020906008549051908152f35b503461024857816003193601126102485761127c6115a3565b6024359290916001600160a01b039190828061129787611c9f565b1694169380851461138357803314908115611364575b50156112fc57848652602052842080546001600160a01b031916831790556112d483611c9f565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff8287205416386112ad565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b50913461054c57602036600319011261054c5750610b7d60209235611686565b50913461054c578060031936011261054c5781519181825492600184811c918186169586156114b1575b60209687851081146107fd578899509688969785829a5291826000146107d65750506001146114565750505061040b929161076c91038561163b565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410611499575050508201018161076c61040b610759565b8054848a018601528895508794909301928101611480565b92607f169261141a565b92505034610248576020366003190112610248573563ffffffff60e01b81168091036102485760209250637965db0b60e01b81149081156114fe575b5015158152f35b63780e9d6360e01b811491508115611518575b50386114f7565b6380ac58cd60e01b81149150811561154a575b8115611539575b5038611511565b6301ffc9a760e01b14905038611532565b635b5e139f60e01b8114915061152b565b60005b83811061156e5750506000910152565b818101518382015260200161155e565b906020916115978151809281855285808601910161155b565b601f01601f1916010190565b600435906001600160a01b03821682036115b957565b600080fd5b602435906001600160a01b03821682036115b957565b60609060031901126115b9576001600160a01b039060043582811681036115b9579160243590811681036115b9579060443590565b6020810190811067ffffffffffffffff82111761162557604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761162557604052565b67ffffffffffffffff811161162557601f01601f191660200190565b519081151582036115b957565b6000818152600260205260409020546116a9906001600160a01b03161515611c53565b6000818152600d60205260018060a01b03908160408220541692604051637e01dd6960e11b8152816004820152606081602481885afa90811561176b57839161172f575b50156116f95750505090565b600081815260026020526040908190205493945092611722906001600160a01b03161515611c53565b8152600460205220541690565b90506060813d8211611763575b816117496060938361163b565b8101031261024857604061175d9101611679565b386116ed565b3d915061173c565b6040513d85823e3d90fd5b6020818303126115b95780519067ffffffffffffffff82116115b9570181601f820112156115b95780516117a98161165d565b926117b7604051948561163b565b818452602082840101116115b9576117d5916020808501910161155b565b90565b600090808252602090600a8252604092838120338252835260ff8482205416156118025750505050565b83519167ffffffffffffffff90336060850183811186821017611afa578752602a85528585019187368437855115611ae65760308353855191600192831015611ad2576078602188015360295b838111611a685750611a265790875193608085019085821090821117611a12578852604284528684019460603687378451156119fe576030865384518210156119fe5790607860218601536041915b8183116119905750505061194e5761194a93869361192e9361191f6048946118f69a519a8b957f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008c880152518092603788019061155b565b8401917001034b99036b4b9b9b4b733903937b6329607d1b60378401525180938684019061155b565b0103602881018752018561163b565b5192839262461bcd60e51b84526004840152602483019061157e565b0390fd5b60648587519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f811660108110156119ea576f181899199a1a9b1b9c1cb0b131b232b360811b901a6119c085886123b4565b5360041c9280156119d65760001901919061189e565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b86526041600452602486fd5b60648789519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b90600f81166010811015611abe576f181899199a1a9b1b9c1cb0b131b232b360811b901a611a96838a6123b4565b5360041c908015611aaa576000190161184f565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b90600091808352600a602052604083209160018060a01b03169182845260205260ff604084205416611b3f57505050565b808352600a602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b600b546001600160a01b03163303611b9857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b03168015611bfc57600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b15611c5a57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152600260205260409020546001600160a01b03166117d5811515611c53565b15611cc957565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15611d7e57565b60405162461bcd60e51b81528061194a60048201611d24565b906001600160a01b038080611dab84611c9f565b16931691838314938415611dde575b508315611dc8575b50505090565b611dd491929350611686565b1614388080611dc2565b909350600052600560205260406000208260005260205260ff604060002054169238611dba565b15611e0c57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b15611e5857565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b611ecf91611eb884611c9f565b6001600160a01b0393848416939185168414611e51565b8382169384156121755783801592836000146120c25750506008549286600052600960205283604060002055600160401b84101561162557611f1c87610a16866001899801600855612367565b83860361208f575b5084600092878452602092600d8452604091818387205416901580612087575b611fcf575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95611f8091611f798b611c9f565b1614611e51565b878452600483526002818520936001600160601b0360a01b94858154169055878652600381528286206000198154019055838652828620600181540190558986525283209182541617905580a4565b8495965082602493959294505192838092635a2d1e0760e11b82528c60048301525afa90811561207d578591612048575b506120115784939291869138611f49565b815162461bcd60e51b815260048101849052601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508381813d8311612076575b61205f818361163b565b810103126106e55761207090611679565b38612000565b503d612055565b83513d87823e3d90fd5b506001611f44565b61209890611bdc565b60406000878152600660205281812083825260205288828220558881526007602052205538611f24565b86829592036120d2575b50611f1c565b6120dd919450611bdc565b60001981019390841161215f5784936000908882526020906007825260409182842054828103612128575b508a845283838120558784526006815282842091845252812055386120cc565b8885526006825283852083865282528385205489865260068352848620828752835280858720558552600782528385205538612108565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b91929091803b156122d757612213936040519081630a85bd0160e11b9384825233600483015260009687602484015260448301526080606483015281878160209a8b96608483019061157e565b03926001600160a01b03165af1849181612297575b50612286575050503d60001461227e573d6122428161165d565b90612250604051928361163b565b81528091833d92013e5b8051918261227b5760405162461bcd60e51b81528061194a60048201611d24565b01fd5b50606061225a565b6001600160e01b0319161492509050565b9091508581813d83116122d0575b6122af818361163b565b810103126106e557516001600160e01b0319811681036106e5579038612228565b503d6122a5565b50915050600190565b92939190803b1561235d57612332946040518092630a85bd0160e11b9485835233600484015260018060a01b03809816602484015260448301526080606483015281806020998a95608483019061157e565b03916000988991165af18491816122975750612286575050503d60001461227e573d6122428161165d565b5050915050600190565b60085481101561239e5760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b90815181101561239e57016020019056fea264697066735822122070139beba341a4bd449d54e8461ae464e502cc5fda26235f580984007be5cb7164736f6c6343000814003360806040908082523462000164578062001105803803809162000023828562000169565b83396020928391810103126200016457516001600160a01b038082169290918390036200016457600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b038411858510176200014e5760248484938193828c52885190206321f8a72160e01b835260448901525afa9283156200014357600093620000ff575b5050501690600054161760005551610f7790816200018e8239f35b813d83116200013b575b62000115818562000169565b81010312620001375751908282168203620001345750388080620000e4565b80fd5b5080fd5b503d62000109565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200014e5760405256fe6040608081526004908136101561001557600080fd5b600091823560e01c63c87b56dd1461002c57600080fd5b3461077657602092836003193601126107735780548235929061005f906001600160a01b03165b6001600160a01b031690565b91634f558e7960e01b608052856080607f1961007e879060a491608452565b0181865afa8015610677578190610743575b61009990610855565b600154610131906100b2906001600160a01b0316610053565b9487875196818801886100fa6100df836010906f636f6e74726163742e6164647265737360801b81520190565b6e233932b739a6b2ba30a432b63832b960891b8152600f0190565b039861010e601f199a8b8101835282610807565b51902089516321f8a72160e01b8152878101918252948592918391829160200190565b03915afa918215610677578392610724575b508651630178b36760e31b81528481018281526001600160a01b03938416968a918391908290819060200103915afa80156106775783918591610707575b501691875191631865c57d60e01b835284838781875afa9283156106775785936106eb575b5088519063ef21184f60e01b82528582806101c8848b83019190602083019252565b03818b5afa9182156106775786926106cf575b5089516333c7180560e11b81528781018281528c90829081906020010381895afa8015610677576102319988928e84936106a0575b50508c516376e8a45160e11b81528a81019283529a8b928391829160200190565b03915afa928315610677578b98879461067c575b5061024f86610d62565b9661025983610b4c565b988c51809a8c820161028390601190706672656e20706f6f6c207368617265202360781b81520190565b61028c91610941565b038c81018b5261029c908b610807565b8c51809b81016102d090601b907f74686973206672656e206861732061206465706f736974206f6620000000000081520190565b6102da9087610941565b6c01022ba341034b7103837b7b61609d1b8152600d016102fa908b610941565b7f2c207769746820636c61696d61626c652062616c616e6365206f6620000000008152601c0161032a9088610941565b630408ae8d60e31b8152600401038c81018c52610347908c610807565b8d8d518092638da5cb5b60e01b8252818b5afa918215610677579161064a575b501661037290610d62565b9461037c91610958565b61038590610e58565b9489519788978c89016103a890600990683d913730b6b2911d1160b91b81520190565b6103b191610941565b71111610113232b9b1b934b83a34b7b7111d1160711b81526012016103d591610941565b7f222c202265787465726e616c5f75726c223a2268747470733a2f2f6170702e6681526d72656e732e66756e2f706f6f6c2f60901b6020820152602e0161041c9082610941565b7f222c202261747472696275746573223a205b7b2274726169745f74797065223a81527110113837b7b6111610113b30b63ab2911d1160711b602082015260320161046691610941565b7f227d2c7b2274726169745f74797065223a20226465706f736974222c20227661815266363ab2911d101160c91b60208201526027016104a591610941565b630408ae8d60e31b81526004017f227d2c7b2274726169745f74797065223a2022636c61696d61626c65222c20228152683b30b63ab2911d101160b91b60208201526029016104f391610941565b630408ae8d60e31b81526004017f227d2c7b2274726169745f74797065223a2022706f6f6c207374617465222c20815269113b30b63ab2911d101160b11b6020820152602a0161054291610941565b7f227d2c7b2274726169745f74797065223a2022706f6f6c2063726561746f722281526b1610113b30b63ab2911d101160a11b6020820152602c0161058691610941565b6e113eae96101134b6b0b3b2911d101160891b8152600f017f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000008152601a016105cd91610941565b61227d60f01b81526002010382810182526105e89082610807565b6105f190610e58565b82517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000094810194855293849190601d0161062a91610941565b03908101835261063a9083610807565b5161064681928261079d565b0390f35b61066a91508d803d10610670575b6106628183610807565b810190610895565b38610367565b503d610658565b610849565b6106999194503d8089833e6106918183610807565b8101906108d0565b9238610245565b6106c0929350803d106106c8575b6106b88183610807565b810190610932565b90388e610210565b503d6106ae565b6106e49192503d8088833e6106918183610807565b90386101db565b6107009193503d8087833e6106918183610807565b91386101a6565b61071e91508a3d8c11610670576106628183610807565b38610181565b61073c919250883d8a11610670576106628183610807565b9038610143565b50853d871161076c575b6107658161075d610099936107df565b608001610829565b9050610090565b503d61074d565b80fd5b8280fd5b60005b83811061078d5750506000910152565b818101518382015260200161077d565b604091602082526107bd815180928160208601526020868601910161077a565b601f01601f1916010190565b634e487b7160e01b600052604160045260246000fd5b601f80199101166080016080811067ffffffffffffffff82111761080257604052565b6107c9565b90601f8019910116810190811067ffffffffffffffff82111761080257604052565b602090607f1901126108445760805180151581036108445790565b600080fd5b6040513d6000823e3d90fd5b1561085c57565b60405162461bcd60e51b81526020600482015260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b9081602091031261084457516001600160a01b03811681036108445790565b67ffffffffffffffff811161080257601f01601f191660200190565b6020818303126108445780519067ffffffffffffffff8211610844570181601f82011215610844578051610903816108b4565b926109116040519485610807565b818452602082840101116108445761092f916020808501910161077a565b90565b90816020910312610844575190565b906109546020928281519485920161077a565b0190565b604051638ae578fd60e01b81526001600160a01b03926020908290600490829087165afa8015610677576000926109b2928492610aa9575b5060405194858094819363516b636d60e11b8352600483019190602083019252565b0392165afa90811561067757610a709161092f91600091610a90575b50610a82604051938492610a6a60208501606c907f3c7376672077696474683d2234303022206865696768743d223430302220786d81527f6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f7376672260208201527f20786d6c6e733a786c696e6b3d22687474703a2f2f7777772e77332e6f72672f60408201526b189c9c9c97bc3634b735911f60a11b60608201520190565b90610941565b651e17b9bb339f60d11b815260060190565b03601f198101835282610807565b610aa3913d8091833e6106918183610807565b386109ce565b610ac291925060203d8111610670576106628183610807565b9038610990565b604051906020820182811067ffffffffffffffff8211176108025760405260008252565b604051906060820182811067ffffffffffffffff82111761080257604052602a8252604082602036910137565b90610b24826108b4565b610b316040519182610807565b8281528092610b42601f19916108b4565b0190602036910137565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015610c81575b506d04ee2d6d415b85acef810000000080831015610c72575b50662386f26fc1000080831015610c63575b506305f5e10080831015610c54575b5061271080831015610c45575b506064821015610c35575b600a80921015610c2b575b600190816021610be3828701610b1a565b95860101905b610bf5575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215610c2657919082610be9565b610bee565b9160010191610bd2565b9190606460029104910191610bc7565b60049193920491019138610bbc565b60089193920491019138610baf565b60109193920491019138610ba0565b60209193920491019138610b8e565b604093508104915038610b75565b634e487b7160e01b600052601160045260246000fd5b600281901b91906001600160fe1b03811603610cbd57565b610c8f565b9060028201809211610cbd57565b9060208201809211610cbd57565b634e487b7160e01b600052603260045260246000fd5b908151811015610d05570160200190565b610cde565b8015610cbd576000190190565b15610d1e57565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b610d6a610aed565b90815115610d0557603060208301538151600190811015610d055790607860218401536029915b808311610da4575061092f915015610d17565b90600f8116906010821015610d0557610de1916f181899199a1a9b1b9c1cb0b131b232b360811b901a610dd78587610cf4565b5360041c92610d0a565b9190610d91565b604051906060820182811067ffffffffffffffff82111761080257604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b805115610f3857610e67610de8565b610e83610e7e610e778451610cc2565b6003900490565b610ca5565b91610e95610e9084610cd0565b610b1a565b92835280815182019060208501935b828210610ee657505050600390510680600114610ed557600214610ec6575090565b603d60f81b6000199091015290565b50613d3d60f01b6001199091015290565b9091936004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301939190610ea4565b5061092f610ac956fea2646970667358221220d7ac7eba35a39945ac758bf97b9e72a251671b0f5f001a93d4e5a32c00360eb564736f6c634300081400336080806040523461002857600380546001600160a01b03191633179055610624908161002e8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80630e14a376146105455780631e0ea61e1461046e57806321f8a7211461043c5780632c62ff2d1461040057806367a6a917146103405780637ae1cfca146103145780638a0dac4a146102cb578063a75b87d2146102a2578063abfdcced1461024f578063adb353dc1461020f578063bd02d0f5146101e9578063ca446dd91461018f578063e2a4853a1461015857838163e2b202bf1461011e575063ebb9d8c9146100c857600080fd5b3461011a576100d636610587565b92906100ed60018060a01b036003541633146105a2565b845283602052832090815492830392831161010757505580f35b634e487b7160e01b845260119052602483fd5b8280fd5b808484346101545760203660031901126101545761014760018060a01b036003541633146105a2565b3582528160205281205580f35b5050fd5b50503461018b5761016836610587565b919061017f60018060a01b036003541633146105a2565b83528260205282205580f35b5080fd5b50903461011a578060031936011261011a576024356001600160a01b0381811693918490036101e5576101c7906003541633146105a2565b3583526001602052822080546001600160a01b031916909117905580f35b8480fd5b503461011a57602036600319011261011a57602092829135815280845220549051908152f35b503461011a5761021e36610587565b929061023560018060a01b036003541633146105a2565b845283602052832090815492830180931161010757505580f35b50903461011a578060031936011261011a576024359182151580930361029e5761028460018060a01b036003541633146105a2565b358352600260205282209060ff8019835416911617905580f35b8380fd5b50503461018b578160031936011261018b5760035490516001600160a01b039091168152602090f35b83823461018b57602036600319011261018b5780356001600160a01b038181169182900361029e57610302906003541633146105a2565b81546001600160a01b03191617905580f35b503461011a57602036600319011261011a578160209360ff923581526002855220541690519015158152f35b5091903461018b578160031936011261018b57600354926001600160a01b03808516919061036f3384146105a2565b8154166103bd57507fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e96792936bffffffffffffffffffffffff60a01b166003558151908152836020820152a180f35b606490602084519162461bcd60e51b8352820152601f60248201527f6d7573742073657420677561726469616e20746f2030783030206669727374006044820152fd5b503461011a57602036600319011261011a5761042760018060a01b036003541633146105a2565b35825260026020528120805460ff1916905580f35b503461011a57602036600319011261011a5735825260016020908152918190205490516001600160a01b039091168152f35b5091903461018b578160031936011261018b5782546001600160a01b0380821690338290036104e9577fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e9679495600354936bffffffffffffffffffffffff60a01b9084828716176003551690558351921682526020820152a180f35b835162461bcd60e51b8152602081880152603060248201527f436f6e6669726d6174696f6e206d75737420636f6d652066726f6d206e65772060448201526f677561726469616e206164647265737360801b6064820152608490fd5b503461011a57602036600319011261011a5761056c60018060a01b036003541633146105a2565b3582526001602052812080546001600160a01b031916905580f35b604090600319011261059d576004359060243590565b600080fd5b156105a957565b60405162461bcd60e51b815260206004820152601960248201527f4163636f756e74206973206e6f74206120677561726469616e000000000000006044820152606490fdfea264697066735822122057b73efffb12a522c4e08ecd95bc0fbfd455582875bb420fc94dccd7762d499664736f6c634300081400336080604090808252346101535780612b5b803803809161001f8285610158565b833960209283918101031261015357516001600160a01b0380821692909183900361015357600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b0384118585101761013d5760248484938193828c52885190206321f8a72160e01b835260448901525afa928315610132576000936100f5575b50505016906000541617600055516129df908161017c8239f35b813d831161012b575b6101088185610158565b81010312610127575190828216820361012457503880806100db565b80fd5b5080fd5b503d6100fe565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761013d5760405256fe6080604090808252600436101561001557600080fd5b600091823560e01c63319e90901461002c57600080fd5b346101705780600319360112610170576001600160a01b03916004358381169190829003610196576024359182151580930361019257846001541661280f938484019267ffffffffffffffff958585108786111761017e5792859491928a97969360609561019b8639835260208301528782015203019083f09384156101745780835416941693803b156101705782906044855180958193632f2ff15d60e01b83527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660048401528960248401525af180156101665761013f575b60208484817fb224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e8280513381523087820152a251908152f35b8111610152576020935081523880610107565b634e487b7160e01b84526041600452602484fd5b83513d87823e3d90fd5b8280fd5b83513d84823e3d90fd5b634e487b7160e01b8a52604160045260248afd5b8580fd5b8480fdfe608060408181523462000346576060826200280f803803809162000024828562000367565b83398101031262000346576200003a826200038b565b602092838101519081151580920362000346578301516001600160a01b038082169182900362000346576200006f33620003a0565b60018060a01b0319918083600f541617600f558551968088016f636f6e74726163742e6164647265737360801b9889825267119c995b9cd05c9d60c21b603082015260188152620000c0816200034b565b5190209787516321f8a72160e01b998a825260048201528281602481875afa9081156200033b57908591600091620002fc575b501685600e541617600e5587518281019182526d4672656e73506f6f6c536861726560901b6030820152601e81526200012c816200034b565b51902087519089825260048201528181602481865afa908115620002f157908491600091620002b2575b501684600d541617600d55865191818301907f65787465726e616c2e636f6e74726163742e616464726573730000000000000082526e11195c1bdcda5d10dbdb9d1c9858dd608a1b6039850152602884526060840199848b1060018060401b038c11176200029c578a80926024928695838e528851902090835260648801525afa91821562000291576000926200024d575b5050620002269596501690601054161760105560ff801960085416911680911760085560001462000234576000805460ff60a01b19169055620003a0565b516124279081620003e88239f35b6000805460ff60a01b1916600160a01b179055620003a0565b813d831162000289575b62000263818b62000367565b810103126200028657506200027d6200022695966200038b565b869538620001e8565b80fd5b503d62000257565b87513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b91508282813d8311620002e9575b620002cc818362000367565b81010312620002865750620002e284916200038b565b3862000156565b503d620002c0565b88513d6000823e3d90fd5b91508382813d831162000333575b62000316818362000367565b810103126200028657506200032c85916200038b565b38620000f3565b503d6200030a565b89513d6000823e3d90fd5b600080fd5b604081019081106001600160401b038211176200029c57604052565b601f909101601f19168101906001600160401b038211908210176200029c57604052565b51906001600160a01b03821682036200034657565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604081815260048036101561001e575b505050361561001c57005b005b600092833560e01c90816312686aae146113f6575080631865c57d146113c55780632cf2cd481461139e5780632daad61d1461137757806330dbf8871461134e578063379607f514610e995780633a4b66f114610e8057806341c6138314610e61578063441a3e7014610c9b57806345b58fe414610be85780634b2b4e3614610b2b57806351ff484714610b06578063591167c714610add578063678e300a14610abd578063715018a614610a635780637d88209714610a445780638620891c146108be578063888e9cf8146108865780638ae578fd1461085d5780638da5cb5b146108355780639426e2261461080e578063ac2a5dfd146107e9578063b45a3c0e146107bd578063cfb5a5f814610714578063e2d9ae3e146106f5578063e3f05d83146106d1578063e4a502761461068f578063e6b1a3ae1461054f578063e920eec014610523578063e94ad65b146104f6578063f2fde38b1461042c578063f9faa104146101d85763fc03bad20361001157346101d45760203660031901126101d457606092818392358252602052209081549160ff60026001830154920154169082519384526020840152151590820152f35b8280fd5b50826003193601126101d45734156103f55760ff835460a01c16818110156103e257600161020691146117a0565b6102266801bc16d674ec80000061021f600554346117e5565b1115611808565b600d5482516318160ddd60e01b8152602093909290916001600160a01b0390859085908490829085165afa9384156103d85786946103a5575b50838652600185523483872055610278346005546117e5565b6005556007546801000000000000000081101561039257906102a282600189959401600755611753565b81549060031b9087821b91600019901b19161790558483526002865260018484205560ff60085460081c16600387528484209060ff801983541691151516179055600d5416803b156101d45760248392855194859384926335313c2160e11b845233908401525af180156103885761034e575b5091606091837fd91527a40417d48f76ba016aaa9157e2ddaca6cb5b660432901659cb075058fc9451923484523390840152820152a180f35b917fd91527a40417d48f76ba016aaa9157e2ddaca6cb5b660432901659cb075058fc93919461037e6060946116eb565b9491935091610315565b82513d87823e3d90fd5b634e487b7160e01b875260418352602487fd5b9093508481813d83116103d1575b6103bd8183611731565b810103126103cd5751923861025f565b8580fd5b503d6103b3565b83513d88823e3d90fd5b634e487b7160e01b845260218252602484fd5b6020606492519162461bcd60e51b8352820152601260248201527136bab9ba103232b837b9b4ba1032ba3432b960711b6044820152fd5b5090346101d45760203660031901126101d4576001600160a01b038235818116939192908490036104f25761045f612399565b83156104a057505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b50503461051f578160031936011261051f5760105490516001600160a01b039091168152602090f35b5080fd5b833461054c5761054961053536611495565b95610544959195949294612399565b611b7d565b80f35b80fd5b50346101d45760208060031936011261068b5781356001600160a01b03811693908490036104f25761057f612399565b805163516b636d60e11b81526001848201528581602481885afa908115610681578691610604575b5051156105cc575050506bffffffffffffffffffffffff60a01b600e541617600e5580f35b5162461bcd60e51b81529182015260146024820152731a5b9d985b1a5908185c9d0818dbdb9d1c9858dd60621b604482015260649150fd5b90503d8087833e6106158183611731565b810190838183031261067d5780519067ffffffffffffffff8211610679570181601f8201121561067d57805161064a816118e9565b9261065785519485611731565b818452858284010111610679576106739185808501910161141a565b386105a7565b8780fd5b8680fd5b82513d88823e3d90fd5b8380fd5b50503461051f578160031936011261051f5780516106cd916106bb826106b481611664565b0383611731565b5191829160208352602083019061143d565b0390f35b50503461051f578160031936011261051f5760209060ff6008541690519015158152f35b50503461051f578160031936011261051f57602090600c549051908152f35b50346101d45760203660031901126101d457600d548251631dc82a7560e01b81528235928101839052906001600160a01b03906020908390602490829085165afa9182156107b357916107789161077d949360209792610784575b50163014611885565b61210c565b9051908152f35b6107a5919250873d81116107ac575b61079d8183611731565b810190611866565b903861076f565b503d610793565b84513d87823e3d90fd5b50346101d45760203660031901126101d4578160209360ff923581526003855220541690519015158152f35b50503461051f578160031936011261051f5780516106cd916106bb826106b481611539565b50503461051f578160031936011261051f5760209060ff60085460101c1690519015158152f35b50503461051f578160031936011261051f57905490516001600160a01b039091168152602090f35b50503461051f578160031936011261051f57600e5490516001600160a01b039091168152602090f35b50346101d45760203660031901126101d457359160075483101561054c57506108b0602092611753565b91905490519160031b1c8152f35b506020908160031936011261068b5780359060ff855460a01c1681811015610a315760016108ec91146117a0565b6109056801bc16d674ec80000061021f600554346117e5565b600d548451631dc82a7560e01b8152828101849052906001600160a01b039081168583602481845afa928315610a2757602493879361094d928b92610a0f5750163014611885565b865192838092634f558e7960e01b825287878301525afa908115610a055786916109d8575b50156109a1575090600191845252812061098d3482546117e5565b905561099b346005546117e5565b60055580f35b835162461bcd60e51b815290810183905260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b6109f89150843d86116109fe575b6109f08183611731565b8101906118d1565b38610972565b503d6109e6565b85513d88823e3d90fd5b6107a5919250853d87116107ac5761079d8183611731565b87513d8a823e3d90fd5b634e487b7160e01b865260218252602486fd5b50503461051f578160031936011261051f576020906005549051908152f35b833461054c578060031936011261054c57610a7c612399565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50913461054c57602036600319011261054c575061077d6020923561217f565b50503461051f578160031936011261051f57600d5490516001600160a01b039091168152602090f35b50503461051f578160031936011261051f5780516106cd916106bb826106b4816115dd565b50346101d457610b3a36611495565b93610b49989698939193612399565b60085460101c60ff1615610bd357505050505092610b6a9192933691611905565b602081519101208151610b8781610b8081611539565b0382611731565b6020815191012003610b9e5750505b610549611976565b906020606492519162461bcd60e51b8352820152600f60248201526e0e0eac496caf240dad2e6dac2e8c6d608b1b6044820152fd5b92955092955092610be396611b7d565b610b96565b82843461054c578060031936011261054c579080519182906007549182855260208095018093600784527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890845b818110610c875750505081610c4c910382611731565b83519485948186019282875251809352850193925b828110610c7057505050500390f35b835185528695509381019392810192600101610c61565b825484529288019260019283019201610c36565b5090346101d457806003193601126101d4578135602480359360ff865460a01c1681811015610e4f576001610cd091146117a0565b600d5484516331a9108f60e11b8082528382018690526020949290916001600160a01b0391869082908690829086165afa908115610e45579082918b91610e28575b50163303610df6578589526001855287878a205410610dbd57918493918695938a9897895260018552878920610d498b82546120bc565b9055610d578a6005546120bc565b600555600d54168751968794859384528301525afa928315610db45750610549948493849384938492610d97575b50505af1610d916120c9565b50611b60565b610dad9250803d106107ac5761079d8183611731565b3880610d85565b513d85823e3d90fd5b865162461bcd60e51b8152808501869052601481850152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b6044820152606490fd5b865162461bcd60e51b8152808501869052600d818501526c3737ba103a34329037bbb732b960991b6044820152606490fd5b610e3f9150873d89116107ac5761079d8183611731565b38610d12565b88513d8c823e3d90fd5b50634e487b7160e01b86526021905284fd5b50503461051f578160031936011261051f576020906006549051908152f35b833461054c578060031936011261054c57610b96612399565b50913461054c576020918260031936011261051f578335938360018060a01b039586600d5416845196878092631dc82a7560e01b825284878301526024998a915afa908115610a055790610ef8918791611331575b5088163014611885565b60ff855460a01c168381101561131f57600181146112dd57606447111561128d576003146112815786600f541696828551818101906f636f6e74726163742e6164647265737360801b82526a4672656e734f7261636c6560a81b6030820152601b8152610f6481611715565b519020888751809b81936321f8a72160e01b8352898301525afa978815610a0557818888999a86938a91611264575b50885163404df7b160e11b81523089820152998a938492165af195861561125a57879661123b575b508580611210575b6111fa575b610fd18261210c565b9582885260028452858820610fe78882546117e5565b9055610ff5876006546117e5565b60065581600f541690865185810190731c1c9bdd1bd8dbdb0b9999594b9c195c98d95b9d60621b82526014815261102b81611715565b5190209087519163bd02d0f560e01b83528783015285828c81865afa918215610e45578a926111c7575b5081151590816111be575b506110af575b50509086978392600d989798541694865195869384926331a9108f60e11b84528301525afa928315610db45750610549948493849384938492610d975750505af1610d916120c9565b8487989293985181810190751c1c9bdd1bd8dbdb0b9999594b9c9958da5c1a595b9d60521b8252601681526110e381611715565b5190208b8951809681936321f8a72160e01b83528b8301525afa9283156111b457899361118c575b50611118826064926120f9565b049160018311611141575b5097611135849392899a9998996120bc565b96979192819950611066565b60001983019083821161117a5792899a9261116c8b8080809d9e611135978c9b9a5af1610d916120c9565b929a50929350979697611123565b634e487b7160e01b8a52601187528a8afd5b6064919350826111ab61111892883d8a116107ac5761079d8183611731565b9492505061110b565b87513d8b823e3d90fd5b90501538611060565b9091508581813d83116111f3575b6111df8183611731565b810103126111ef57519038611055565b8980fd5b503d6111d5565b865460ff60a01b1916600360a01b178755610fc8565b5060ff875460a01c168481101561122957600214610fc3565b634e487b7160e01b8852602185528888fd5b611253919650833d85116109fe576109f08183611731565b9438610fbb565b85513d89823e3d90fd5b61127b9150843d86116107ac5761079d8183611731565b38610f93565b60019694959694610fc8565b845162461bcd60e51b81528085018490526025818901527f6d7573742062652067726561746572207468616e203130302077656920746f20604482015264636c61696d60d81b6064820152608490fd5b845162461bcd60e51b8152808501849052601c818901527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152606490fd5b634e487b7160e01b8652602184528686fd5b6113489150843d86116107ac5761079d8183611731565b38610eee565b50503461051f578160031936011261051f57600f5490516001600160a01b039091168152602090f35b50346101d45760203660031901126101d45760209282913581526001845220549051908152f35b50346101d45760203660031901126101d45760209282913581526002845220549051908152f35b50503461051f578160031936011261051f576106cd906113e3612293565b905191829160208352602083019061143d565b84903461051f578160031936011261051f5760209060ff60085460081c1615158152f35b60005b83811061142d5750506000910152565b818101518382015260200161141d565b906020916114568151809281855285808601910161141a565b601f01601f1916010190565b9181601f840112156114905782359167ffffffffffffffff8311611490576020838186019501011161149057565b600080fd5b9060806003198301126114905767ffffffffffffffff60043581811161149057836114c291600401611462565b9390939260243583811161149057826114dd91600401611462565b93909392604435918211611490576114f791600401611462565b909160643590565b90600182811c9216801561152f575b602083101461151957565b634e487b7160e01b600052602260045260246000fd5b91607f169161150e565b60095460009291611549826114ff565b808252916001908181169081156115c0575060011461156757505050565b9192935060096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af916000925b8484106115a857505060209250010190565b80546020858501810191909152909301928101611596565b915050602093945060ff929192191683830152151560051b010190565b600b54600092916115ed826114ff565b808252916001908181169081156115c0575060011461160b57505050565b91929350600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9916000925b84841061164c57505060209250010190565b8054602085850181019190915290930192810161163a565b600a5460009291611674826114ff565b808252916001908181169081156115c0575060011461169257505050565b91929350600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8916000925b8484106116d357505060209250010190565b805460208585018101919091529093019281016116c1565b67ffffffffffffffff81116116ff57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176116ff57604052565b90601f8019910116810190811067ffffffffffffffff8211176116ff57604052565b60075481101561178a5760076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880190600090565b634e487b7160e01b600052603260045260246000fd5b156117a757565b60405162461bcd60e51b81526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b6044820152606490fd5b919082018092116117f257565b634e487b7160e01b600052601160045260246000fd5b1561180f57565b60405162461bcd60e51b815260206004820152602960248201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686044820152680c2dc406664408ae8d60bb1b6064820152608490fd5b9081602091031261149057516001600160a01b03811681036114905790565b1561188c57565b60405162461bcd60e51b815260206004820152601960248201527f77726f6e67207374616b696e6720706f6f6c20666f72206964000000000000006044820152606490fd5b90816020910312611490575180151581036114905790565b67ffffffffffffffff81116116ff57601f01601f191660200190565b929192611911826118e9565b9161191f6040519384611731565b829481845281830111611490578281602093846000960137010152565b1561194357565b60405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720737461746560a81b6044820152606490fd5b6801bc16d674ec800000804710611b2a578060055403611aef57600090815460ff8160a01c166004811015611adb5760016119b1911461193c565b60ff60085460101c1615611aa25760ff60a01b1916600160a11b178255601054600c546001600160a01b0393918416803b156101d45790829160405180958180946304512a2360e31b825260806004830152611a37611a1260848401611539565b611a286003199182868203016024870152611664565b908482030160448501526115dd565b90606483015203925af1908115611a965750916040917f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce19293611a87575b50601054168151908152336020820152a1565b611a90906116eb565b38611a74565b604051903d90823e3d90fd5b60405162461bcd60e51b81526020600482015260116024820152701d985b1a59185d1bdc881b9bdd081cd95d607a1b6044820152606490fd5b634e487b7160e01b84526021600452602484fd5b60405162461bcd60e51b81526020600482015260136024820152726e6f7420656e6f756768206465706f7369747360681b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d0dcdee840cadcdeeaced040cae8d60931b6044820152606490fd5b15611b6757565b634e487b7160e01b600052600160045260246000fd5b929094939194600160f81b3001908130116117f257604051602092838201908152838252611baa82611715565b611bb536868b611905565b84815191012091519020036120775760085460ff811661201d575b5060009260ff845460a01c1697600489101561200957611bf36001809a1461193c565b67ffffffffffffffff92838111611ff55780611c106009546114ff565b98601f998a8111611f88575b5087908a8311600114611f00578892611ef5575b5050600019600383901b1c1916908a1b176009555b828211611ee1578190611c59600a546114ff565b888111611e74575b508590888311600114611df5578692611dea575b5050600019600383901b1c191690881b17600a555b8511611dd657611c9b600b546114ff565b848111611d74575b5081938511600114611cf0575091839491849394611ce5575b50501b916000199060031b1c191617600b555b600c556201000062ff0000196008541617600855565b013592503880611cbc565b600b82527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db993918591601f19831691905b88838310611d5a5750505010611d40575b505050811b01600b55611ccf565b0135600019600384901b60f8161c19169055388080611d32565b868601358855909601959384019387935090810190611d21565b600b83527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db98580880160051c820192848910611dcd575b0160051c019087905b828110611dc2575050611ca3565b848155018790611db4565b92508192611dab565b634e487b7160e01b82526041600452602482fd5b013590503880611c75565b600a87528a93507fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a891601f198416885b88828210611e5e5750508411611e44575b505050811b01600a55611c8a565b0135600019600384901b60f8161c19169055388080611e36565b8385013586558e97909501949283019201611e25565b909150600a86527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a88880850160051c820192878610611ed8575b918c91869594930160051c01915b828110611eca575050611c61565b8881558594508c9101611ebc565b92508192611eae565b634e487b7160e01b85526041600452602485fd5b013590503880611c30565b600989528c93507f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af91601f1984168a5b8a828210611f695750508411611f4f575b505050811b01600955611c45565b0135600019600384901b60f8161c19169055388080611f41565b91929596849587849396013581550195019201908e9594939291611f30565b909150600988527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af8a80850160051c820192898610611fec575b918e91869594930160051c01915b828110611fde575050611c1c565b8a81558594508e9101611fd0565b92508192611fc2565b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b85526021600452602485fd5b6000549060ff8260a01c1660048110156120615761204b9161204160ff921561193c565b60101c1615611b60565b60ff60a01b1916600160a01b1760005538611bd0565b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260048101839052601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d6174636800006044820152606490fd5b919082039182116117f257565b3d156120f4573d906120da826118e9565b916120e86040519384611731565b82523d6000602084013e565b606090565b818102929181159184041417156117f257565b471561217957600090815260016020526040812054600260205261214260408320549161213c47600654906117e5565b906120f9565b600554908115612165570480156121605761215d92506120bc565b90565b505090565b634e487b7160e01b84526012600452602484fd5b50600090565b600060ff815460a01c1691600483101561227f57600183036121a15750905090565b6121aa9061210c565b9160018060a01b03600f5416602060405181810190731c1c9bdd1bd8dbdb0b9999594b9c195c98d95b9d60621b8252601481526121e681611715565b51902060246040518094819363bd02d0f560e01b835260048301525afa928315611a96578093612249575b5050811515908161223d575b50612226575090565b9060646122368261215d946120f9565b04906120bc565b6003915014153861221d565b909192506020823d8211612277575b8161226560209383611731565b8101031261054c575051903880612211565b3d9150612258565b634e487b7160e01b82526021600452602482fd5b60ff60005460a01c16600481101561206157801561235f576002811461233c576001811461230d576003146122eb576040516122ce81611715565b600d81526c7374617465206661696c75726560981b602082015290565b6040516122f781611715565b6006815265195e1a5d195960d21b602082015290565b5060405161231a81611715565b6012815271616363657074696e67206465706f7369747360701b602082015290565b5060405161234981611715565b60068152651cdd185ad95960d21b602082015290565b5060405161236c81611715565b601781527f6177616974696e672076616c696461746f7220696e666f000000000000000000602082015290565b6000546001600160a01b031633036123ad57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea264697066735822122079ed7def227b6d9b665713a39679e4243ce8a936157c2d77a50c66047bbe867464736f6c63430008140033a2646970667358221220006fa297095d62167445fabd05e0a734e03e74ce6e1eb020293f78316eba1bcc64736f6c6343000814003360808060405234610016576101d7908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63150b7a021461002857600080fd5b346100b75760803660031901126100b7576001600160a01b0360043581811681036100ba5760243591821682036100ba5760643567ffffffffffffffff938482116100b757366023830112156100b75781600401359485116100b75736602486840101116100b75760206100a4866024850160443588886100be565b6040516001600160e01b03199091168152f35b80fd5b8280fd5b9293926001600160a01b03908116911614610192576001146101845767ffffffffffffffff80821161016e5760405190601f8301601f19908116603f011682019081118282101761016e5760405281815260208101913681850111610169576020816000927f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d968637830101525190201461015e57630a85bd0160e11b90565b630a85bd0160e11b90565b600080fd5b634e487b7160e01b600052604160045260246000fd5b50630a85bd0160e11b919050565b50630a85bd0160e11b9291505056fea264697066735822122066efe2ddc2731a2442b0aa3ccf5da3ac87f205363468dac7b0f454b80c40660d64736f6c6343000814003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50a264697066735822122031bb32c039feb9a6a997a3fd087f2e40e84de359d6a9622b016e723d5ceceb0264736f6c63430008140033057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e",
    "sourceMap": "736:10076:46:-:0;;;;;;1594:4:22;736:10076:46;;;;;;;;;1777:42;1195;736:10076;;;;;;;;;1187:51;736:10076;;;1187:51;736:10076;1385:42;736:10076;1385:42;736:10076;;;1385:42;736:10076;1461:42;736:10076;1461:42;736:10076;;;1461:42;736:10076;;1545:25;736:10076;;;1545:25;736:10076;1604:42;736:10076;1604:42;736:10076;;;1604:42;736:10076;1691:42;736:10076;1683:51;736:10076;;;1683:51;736:10076;1769:51;736:10076;;;1769:51;736:10076;;1842:101;736:10076;;:::i;:::-;;;;;;;;;-1:-1:-1;;736:10076:46;1842:101;736:10076;;;;;;;;-1:-1:-1;;;736:10076:46;;1980:69;736:10076;;;;;;;:::i;:::-;;;;;;-1:-1:-1;736:10076:46;;1980:69;736:10076;1980:69;736:10076;;;;;;;;2073:197;736:10076;;:::i;:::-;;;;;;;-1:-1:-1;736:10076:46;2073:197;736:10076;;;;;;-1:-1:-1;;;;;;;;;;;736:10076:46;;;;;;;;;;;2304:66;;736:10076;;;;;;;;;;;2073:197;736:10076;;;;;-1:-1:-1;;;;;;;;;;;736:10076:46;;;;;;;;;;;;;;;;;1980:69;736:10076;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1842:101;736:10076;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "736:10076:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;1652:82;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;1103:30;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;1154:84;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;1740:80;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;798:38;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;842:52;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;938:44;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;7724:14;736:10076;;;-1:-1:-1;;;7724:22:46;;;;;736:10076;;-1:-1:-1;;;;;736:10076:46;7724:22;;736:10076;;;;;;;;7724:22;;;;;;;;736:10076;7724:22;;;736:10076;7717:4;;7724:22;:::i;:::-;7755:11;736:10076;7760:5;736:10076;;7755:11;:::i;:::-;736:10076;7774:51;;;;;736:10076;;;;;;;;;;;;;7774:51;;;736:10076;7774:51;;736:10076;;;;;;;;;;;7774:51;;;;;;;;736:10076;;;7724:14;736:10076;;;7866:3;736:10076;;7833:37;;;;;;736:10076;;;;;;;;;;;;;7833:37;;;;736:10076;7833:37;;736:10076;7833:37;;;;;;;;736:10076;7717:4;7883:13;7717:4;7883:13;:::i;:::-;736:10076;7724:14;736:10076;;;;7866:3;736:10076;;7905:37;;;;;736:10076;;;;;;7905:37;;;;;;;736:10076;7905:37;;736:10076;7905:37;;;;;;;;736:10076;;;;7866:3;736:10076;;;7724:14;736:10076;;;;;;7964:22;;;;;;;;;;;;;7950:37;7964:22;736:10076;7964:22;;;736:10076;7950:37;;;:::i;:::-;736:10076;7964:22;;;;;;;-1:-1:-1;7964:22:46;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;736:10076;;;;;;;;;7905:37;;;;:::i;:::-;;;;7833;;;;:::i;:::-;;;;7774:51;;;;:::i;:::-;;;;7724:22;;;;;;;;;;;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;768:24;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;8678:5;736:10076;-1:-1:-1;;;;;736:10076:46;8673:11;;736:10076;;8673:11;:::i;:::-;736:10076;8692:11;736:10076;;8692:37;;;;;736:10076;;;;;;;;;;;;;8692:37;;;;;;;;;;736:10076;;;8747:14;736:10076;;;8678:5;736:10076;;;;;;;;;8747:44;;;736:10076;8747:44;;736:10076;;;;;1671:64:22;8747:44:46;;;;736:10076;8747:44;;;;;;;;;;;736:10076;8747:44;;;736:10076;;;;;;;;;;;;;;;8815:26;;;736:10076;8815:26;;1671:64:22;8815:26:46;;;;;;;8799:43;8815:26;736:10076;8815:26;;;736:10076;8799:43;;:::i;:::-;8855:3;8850:9;736:10076;;;;8850:9;:::i;:::-;736:10076;8867:64;;;;;;736:10076;;-1:-1:-1;;;8867:64:46;;736:10076;;;8867:64;736:10076;8867:64;;;:::i;:::-;;;;;;;;;;;;;736:10076;;;8747:14;736:10076;;;;8678:5;736:10076;;;;;;;8939:47;;;;;;736:10076;;-1:-1:-1;;;8939:47:46;;;-1:-1:-1;;;;;736:10076:46;;;;8939:47;;736:10076;;;;;;;;;;;;1671:64:22;;;736:10076:46;;;;;;;;;;8939:47;;;;;;;;;;736:10076;;8994:11;736:10076;8678:5;736:10076;;8994:11;:::i;:::-;736:10076;8747:14;736:10076;;;8678:5;736:10076;;;;;;9013:47;;;;;736:10076;;9013:47;;;-1:-1:-1;;;;;736:10076:46;;;;9013:47;;736:10076;;;;;;;;;;1671:64:22;;;736:10076:46;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;9013:47:46;;;;;;;;736:10076;;;;;;;;;8747:14;736:10076;;;;;;;;;;;9082:26;;;736:10076;9082:26;;1671:64:22;9082:26:46;;;;;;;9068:41;9082:26;736:10076;9082:26;;;9068:41;;:::i;:::-;9117:9;736:10076;;;;9117:9;:::i;:::-;9134:69;;;;;736:10076;;;;;;;;;;;;;9134:69;;;736:10076;9134:69;;736:10076;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;9134:69;;;;;;;;736:10076;;;8747:14;736:10076;;;;;;;9256:12;736:10076;;9211:63;;;;;;736:10076;;9211:63;;;-1:-1:-1;;;;;736:10076:46;;;;9211:63;;736:10076;;;;;;;;;;1671:64:22;;;736:10076:46;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;9211:63:46;;;;;;;;736:10076;;;;9309:17;;;;;;;-1:-1:-1;;;;;9309:17:46;;;;;;;;;;;;736:10076;9309:17;;;;;9334:9;736:10076;;;;9334:9;:::i;:::-;736:10076;;;8747:14;736:10076;;;;;;;9351:62;;;;;;736:10076;;9351:62;;;-1:-1:-1;;;;;736:10076:46;;;;9351:62;;736:10076;;;;;;;;;;;1671:64:22;;;736:10076:46;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;9351:62:46;;;;;;;;;;;736:10076;;8747:14;736:10076;;;;;;;;;;;;;9452:26;;736:10076;9452:26;;1671:64:22;9452:26:46;;;;;;;;;736:10076;9452:26;;;;;;:::i;9351:62::-;;;;:::i;:::-;;;;9309:17;1671:64:22;;;736:10076:46;1671:64:22;;736:10076:46;1671:64:22;736:10076:46;;1671:64:22;9211:63:46;;;;:::i;:::-;;;;9134:69;;;;:::i;:::-;;;;9082:26;;;;;;;;;;;;;;;:::i;:::-;;;;;9013:47;;;;:::i;:::-;;;;8939;;;;:::i;:::-;;;;8867:64;;;;:::i;:::-;;;;8815:26;;;;;;;;;;;;;;;:::i;:::-;;;;;8747:44;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;;;;8747:44;;;;;;;;;8692:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;6650:5;736:10076;-1:-1:-1;;;;;736:10076:46;6640:16;;736:10076;;6640:16;:::i;:::-;736:10076;6689:7;6693:3;6689:7;;;;736:10076;6682:607;6708:11;736:10076;;;;;6708:37;;;;;736:10076;;;;;;6708:37;;;;736:10076;;;;;6708:37;;;;;;;;;;6682:607;6779:14;;736:10076;;;;;;;;;;;;;;6779:29;;;;;736:10076;6779:29;;1671:64:22;6779:29:46;736:10076;;;;6779:29;;;;;;;;;;6873:3;6779:29;6849:13;6779:29;736:10076;6779:29;;;6682:607;736:10076;;;;;6849:13;:::i;:::-;6873:3;:::i;:::-;6886:12;736:10076;;;;;6886:38;;;;;;736:10076;;;;;;;6886:38;;;;;;;;;;;;;;;;;;6682:607;736:10076;;;;;;;;6959:29;;;;;;;;736:10076;6959:29;;1671:64:22;6959:29:46;;;;;;;7030:14;6959:29;7055:3;6959:29;736:10076;6959:29;;;6682:607;736:10076;;;7030:14;:::i;7055:3::-;736:10076;;;;;7068:37;;;;;736:10076;;;;;7068:37;;;;;;;;;;;;;;;;;;;;6682:607;736:10076;;;;;;7182:29;;;;;;;736:10076;7182:29;;1671:64:22;7182:29:46;;;;;;;7276:3;7182:29;7252:13;7182:29;;;736:10076;7182:29;;;6682:607;736:10076;;;;7252:13;:::i;7276:3::-;6682:607;;7182:29;;;;;;;-1:-1:-1;7182:29:46;;;;;;:::i;:::-;;;;;;7068:37;;;;:::i;:::-;;;;6959:29;;;;;;;;;;;;;;;:::i;:::-;;;;;6886:38;;;;:::i;:::-;;;;6779:29;;;;;;;;;;;;;;:::i;:::-;;;;6708:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;5191:5;736:10076;-1:-1:-1;;;;;736:10076:46;5186:11;;736:10076;;5186:11;:::i;:::-;736:10076;5205:46;;;;;736:10076;;-1:-1:-1;;;5205:46:46;;736:10076;;5205:46;;736:10076;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;5205:46:46;;;;;;;;736:10076;;;5259:14;736:10076;;;5191:5;736:10076;;5259:35;;;;;736:10076;;;;;;;;;;;;;;;5259:35;;736:10076;5259:35;;736:10076;5259:35;;;;;;;;736:10076;5259:35;;;;:::i;5205:46::-;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;;8063:7;8067:3;8063:7;;;;736:10076;8056:558;8087:5;736:10076;;-1:-1:-1;;;;;736:10076:46;8087:5;8082:11;;736:10076;;8082:11;:::i;:::-;8103;736:10076;;;;;8103:37;;;;;;736:10076;;;;;;8103:37;;;;736:10076;;;;;8103:37;;;;;;;;;;8056:558;8168:14;;736:10076;;;;;;;;;;;;;;8168:25;;;;;736:10076;8168:25;;1671:64:22;8168:25:46;736:10076;;;;8168:25;;;;;;;;;;8203:24;8168:25;8237:3;8168:25;736:10076;8168:25;;;736:10076;;;8203:24;:::i;8237:3::-;8255;;736:10076;8250:9;736:10076;;;;8250:9;:::i;:::-;736:10076;8269:12;736:10076;;8269:38;;;;;;736:10076;;;;;;8269:38;;;;;;;;;;;;;;;;;;8056:558;736:10076;;;;;;;;8333:25;;;;;;;;736:10076;8333:25;;1671:64:22;8333:25:46;;;;;;;8368:20;8398:3;8333:25;;;736:10076;8333:25;;;8056:558;736:10076;;;;;8368:20;:::i;8398:3::-;736:10076;8411:9;736:10076;;;;8411:9;:::i;:::-;736:10076;;8430:37;;;;;736:10076;;;;;8430:37;;;;;;;;;;;;;;;;;;;;8056:558;736:10076;;;;;;8536:25;;;;;;;736:10076;8536:25;;1671:64:22;8536:25:46;;;;;;;8601:3;8536:25;8571:20;8536:25;736:10076;8536:25;;;736:10076;;;;8571:20;:::i;8601:3::-;8056:558;;8536:25;;;;;;;-1:-1:-1;8536:25:46;;;;;;:::i;:::-;;;;;;8430:37;;;;:::i;:::-;;;;8333:25;;;;;;;-1:-1:-1;8333:25:46;;;;;;:::i;:::-;;;;8269:38;;;;:::i;:::-;;;;8168:25;;;;;;;;-1:-1:-1;8168:25:46;;;;;;:::i;8103:37::-;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;9803:5;736:10076;-1:-1:-1;;;;;736:10076:46;9798:11;;736:10076;;9798:11;:::i;:::-;736:10076;9817:11;736:10076;;9817:37;;;;;736:10076;;;;;;;;;;;;;9817:37;;;;;;;;;;736:10076;;;9872:14;736:10076;;;;9803:5;736:10076;;;;;;;;;9872:44;;;736:10076;9872:44;;736:10076;;;;;1671:64:22;9872:44:46;;;;736:10076;9872:44;;;;;;;;;736:10076;9872:44;;;736:10076;;;;;;;;;;;;;;;9940:26;;;736:10076;9940:26;;1671:64:22;9940:26:46;;;;;;;9924:43;9940:26;736:10076;9940:26;;;9924:43;;;:::i;:::-;9975:9;736:10076;9980:3;736:10076;;9975:9;:::i;:::-;736:10076;9992:64;;;;;736:10076;;;;;;;;9992:64;;;;;;736:10076;9992:64;;;:::i;:::-;;;;;;;;;;;736:10076;;;9872:14;736:10076;;;;9803:5;736:10076;;;;9980:3;736:10076;;10064:43;;;;;;736:10076;;-1:-1:-1;;;10064:43:46;;;-1:-1:-1;;;;;736:10076:46;;;;10064:43;;736:10076;;;;;;;;;;;;1671:64:22;;;736:10076:46;;;;;;;;;;10064:43;;;;;;;;;;736:10076;;10115:11;736:10076;9803:5;736:10076;;10115:11;:::i;:::-;736:10076;9872:14;736:10076;;;9803:5;736:10076;;;9980:3;736:10076;;10134:43;;;;;;736:10076;;10134:43;;;-1:-1:-1;;;;;736:10076:46;;;;10134:43;;736:10076;;;;;;;;;;;;1671:64:22;;;;736:10076:46;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;10134:43:46;;;;;;;;736:10076;10064:43;;;;:::i;:::-;;;;9992:64;;;;:::i;:::-;;;;9940:26;;;;;;;-1:-1:-1;9940:26:46;;;;;;:::i;:::-;;;;;;9872:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;;;;9872:44;;;;;;;9817:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;9546:5;736:10076;-1:-1:-1;;;;;736:10076:46;9536:16;;736:10076;;9536:16;:::i;:::-;736:10076;9585:7;9589:3;9585:7;;;;736:10076;9578:165;736:10076;9604:11;736:10076;;9604:37;;;;;736:10076;;;;;;;;;;;;;9604:37;;;;;;;;;;9578:165;736:10076;;9661:14;736:10076;;;;;;;;;;9661:30;;;736:10076;9661:30;;1671:64:22;9661:30:46;736:10076;9661:30;;;;;;;;;;;736:10076;9661:30;;;9578:165;9712:7;;;;9731:3;9712:7;;;:::i;9731:3::-;9578:165;;9661:30;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;;;9712:7;736:10076;9661:30;;;;;;;9604:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;1577:69;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;1024:31;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;1061:36;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;6361:5;736:10076;-1:-1:-1;;;;;736:10076:46;6351:16;;736:10076;;6351:16;:::i;:::-;736:10076;6408:7;6412:3;6408:7;;;;736:10076;6401:178;6439:14;736:10076;;;;;;;;;;;;;;6439:24;;;;;736:10076;6439:24;;1671:64:22;6439:24:46;736:10076;;;;6439:24;;;;;;;;;7918:5:25;6439:24:46;736:10076;6439:24;;;6401:178;7918:5:25;;;:::i;:::-;736:10076:46;6474:11;736:10076;;6474:37;;;;;;736:10076;;;;;;;;;;;;;6474:37;;;;;;;;;;;;;;;6401:178;736:10076;;;;;;6532:24;;;;;;;736:10076;6532:24;;1671:64:22;6532:24:46;;;;;;6567:3;6532:24;;;736:10076;6532:24;;;6401:178;6532:24;;;:::i;6567:3::-;6401:178;;6532:24;;;;;;-1:-1:-1;6532:24:46;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;6474:37;;;;:::i;:::-;;;;6439:24;;;;;;;;;;;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;10252:5;736:10076;-1:-1:-1;;;;;736:10076:46;10242:16;;736:10076;;10242:16;:::i;:::-;736:10076;10264:46;;;;;736:10076;;-1:-1:-1;;;10264:46:46;;;736:10076;;10264:46;;736:10076;;;;;;;;;;;;;-1:-1:-1;736:10076:46;;;-1:-1:-1;736:10076:46;10264:46;;;;;;;;736:10076;;;10316:14;736:10076;;;10252:5;736:10076;;10316:26;;;;;736:10076;;;;;;;;;;;;;;;10316:26;;736:10076;10316:26;;736:10076;10316:26;;;;;;;;736:10076;10348:167;;;;;;736:10076;;10348:167;;;736:10076;10348:167;;;736:10076;10348:167;;;:::i;:::-;;;;;;;;;;;;;736:10076;;;10316:14;736:10076;;;;10252:5;736:10076;;10521:57;;;;;;736:10076;;;;;;;;;;;;;10521:57;;;;10546:24;736:10076;10521:57;;1671:64:22;736:10076:46;;;;10521:57;;;;;;;;736:10076;10584:167;;;;;;736:10076;;;;10584:167;;;;;;;;;736:10076;10584:167;;;:::i;:::-;;;;;;;;;;;736:10076;;;10316:14;736:10076;;;10252:5;736:10076;;10757:46;;;;;736:10076;;;;;;10757:46;;;;;;;;736:10076;10757:46;;1671:64:22;736:10076:46;;;;10757:46;;;;;;;;736:10076;10584:167;;;;:::i;:::-;;;;10521:57;;;;:::i;:::-;;;;10348:167;;;;:::i;:::-;;;;10316:26;;;;:::i;:::-;;;;10264:46;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;5950:5;736:10076;;-1:-1:-1;;;;;736:10076:46;5950:5;5940:16;;736:10076;;5940:16;:::i;:::-;736:10076;5982:320;5989:7;5993:3;5989:7;;;;736:10076;5982:320;6008:11;736:10076;;;;6008:37;;;;;736:10076;;;;;;6008:37;;736:10076;;;;;6008:37;;;;;;;;;;;;;5982:320;-1:-1:-1;6065:14:46;736:10076;;;;;;-1:-1:-1;;;6065:44:46;;736:10076;;;-1:-1:-1;;;;;736:10076:46;;6065:44;;736:10076;;;;1671:64:22;;;;6065:44:46;;736:10076;;6065:44;;736:10076;;;;;;;;;6065:44;;;;;;;;;;;;;736:10076;6065:44;;;5982:320;6130:7;;736:10076;;1671:64:22;;;;:::i;:::-;;;-1:-1:-1;;;736:10076:46;;;;3496:10:22;;3492:111;;5982:320:46;736:10076;;;;;;;;;;;;;;;;;;;;6187:31;;736:10076;6187:31;;736:10076;;6187:31;;;;;;;;;;736:10076;6187:31;;;5982:320;736:10076;;;;;;;;;6290:3;736:10076;;;;;;1671:64:22;;;:::i;:::-;736:10076:46;1671:64:22;;-1:-1:-1;;;736:10076:46;;;;5545:6:22;;;;5541:100;;;;5982:320:46;6290:3;;;;;;:::i;:::-;5982:320;;;;5541:100:22;5572:30;;736:10076:46;;;5572:30:22;;;;;:::i;:::-;;;;5255:203;;5541:100;;;;;5255:203;-1:-1:-1;;;;;;;;;;;736:10076:46;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;5286:41:22;736:10076:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;;;;;;;;;1671:64:22;5346:31;;;;;;;;736:10076:46;;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;;;;;;;;1671:64:22;5396:31;;;;;:::i;:::-;5255:203;;;;;736:10076:46;1671:64:22;;;;736:10076:46;;;;;;;6187:31;;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;6187:31;;;;;;;;;3492:111:22;3527:30;;3582:9;736:10076:46;;;3527:30:22;;;;;:::i;:::-;;;;3582:9;:::i;:::-;3492:111;;;;6065:44:46;;;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;;;;6065:44;;;;;;;;6008:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;900:32;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;1349:78;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;1433:70;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;5355:5;736:10076;;-1:-1:-1;;;;;736:10076:46;5355:5;5345:16;;736:10076;;5345:16;:::i;:::-;736:10076;5394:7;5398:3;5394:7;;;;736:10076;5387:501;736:10076;5488:11;736:10076;;5488:37;;;;;736:10076;;;;;;;;;;;;;5488:37;;;;;;;;;;5387:501;-1:-1:-1;5547:14:46;736:10076;;;;;;-1:-1:-1;;;5547:44:46;;736:10076;;;-1:-1:-1;;;;;736:10076:46;;5547:44;;736:10076;;;;1671:64:22;;;5547:14:46;;1671:64:22;5547:44:46;;;;736:10076;;;;;;;;;5547:44;;;;;;;;;;736:10076;5547:44;;;5387:501;5612:7;;;;;:::i;:::-;736:10076;;;;;;;;;;;;;;5655:29;;;;;736:10076;5655:29;;1671:64:22;736:10076:46;5655:29;;;;;;;;;;;736:10076;5655:29;;;5387:501;736:10076;;3678:6:22;3674:212;;5387:501:46;736:10076;;;;;5762:3;;736:10076;;;;;5739:30;;;;;;736:10076;;-1:-1:-1;;;5739:30:46;;-1:-1:-1;;;;;736:10076:46;;;;;5739:30;;736:10076;;;;1671:64:22;;;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;5739:30:46;;;;;;;;;;;;;5387:501;736:10076;;;;;;5801:29;;;;;;;736:10076;5801:29;;1671:64:22;5801:29:46;;;;;;;5876:3;5801:29;5840:26;5801:29;;;736:10076;5801:29;;;736:10076;;;;5840:26;:::i;5876:3::-;5387:501;;5801:29;;;;;;;-1:-1:-1;5801:29:46;;;;;;:::i;:::-;;;;;;5739:30;;;;:::i;:::-;;;;3674:212:22;-1:-1:-1;;;;;;;;;;;736:10076:46;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;3705:44:22;736:10076:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;;;;;;;;;;3768:34:22;;;;;;;;736:10076:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;;;;;;;;;;3821:34:22;;;;;:::i;:::-;3674:212;;;5655:29:46;;;;;;;;;;;;;;:::i;:::-;;;;5547:44;;;;;;;;;;;;;;;;:::i;:::-;;;736:10076;;;;;5612:7;736:10076;;5547:44;;;;;;;5488:37;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;988:30;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;;;2452:18;;;;;;;-1:-1:-1;;;;;2452:18:46;;;;;;;;;;;;736:10076;2452:18;;;;;2437:33;736:10076;;-1:-1:-1;;;;;;736:10076:46;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;;2543:60;;;736:10076;;;-1:-1:-1;;;736:10076:46;;;;2543:60;;;;;736:10076;;2543:60;736:10076;2543:60;:::i;:::-;1671:64:22;2533:71:46;;2606:18;736:10076;-1:-1:-1;;;;;736:10076:46;2509:116;;;;;736:10076;;-1:-1:-1;;;2509:116:46;;736:10076;2509:116;;1671:64:22;;;;-1:-1:-1;;;;;736:10076:46;;;;;;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;2509:116:46;;;;;;;;736:10076;;;;;;;2437:33;736:10076;;;;2543:60;2703:64;;736:10076;;;;-1:-1:-1;;;736:10076:46;;;;2703:64;;;;;;:::i;:::-;1671::22;2693:75:46;;2770:7;736:10076;-1:-1:-1;;;;;736:10076:46;2669:109;;;;;736:10076;;-1:-1:-1;;;2669:109:46;;736:10076;2669:109;;1671:64:22;;;;-1:-1:-1;;;;;736:10076:46;;;;;;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;2669:109:46;;;;;;;;736:10076;;;;;;;2437:33;736:10076;;;;;2543:60;2844:52;;736:10076;;;-1:-1:-1;;;736:10076:46;;;;2844:52;;;;;;:::i;:::-;1671:64:22;2834:63:46;;2899:10;736:10076;-1:-1:-1;;;;;736:10076:46;2810:100;;;;;736:10076;;-1:-1:-1;;;2810:100:46;;736:10076;2810:100;;1671:64:22;;;;-1:-1:-1;;;;;736:10076:46;;;;;;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;2810:100:46;;;;;;;;736:10076;-1:-1:-1;2437:33:46;736:10076;;;;-1:-1:-1;;;;;736:10076:46;2963:32;;;;-1:-1:-1;;;;;2963:32:46;;;;;;;;2543:60;2963:32;;;;;;736:10076;;2963:32;;;736:10076;2963:32;;;;;736:10076;;;-1:-1:-1;;;;;;736:10076:46;-1:-1:-1;;;;;736:10076:46;;;;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:46;3069:54;;736:10076;;;-1:-1:-1;;;736:10076:46;;;;3069:54;;;736:10076;;;;;3069:54;736:10076;3069:54;:::i;:::-;1671:64:22;3059:65:46;;3035:115;;;;;;736:10076;;-1:-1:-1;;;3035:115:46;;736:10076;3035:115;;1671:64:22;;;;-1:-1:-1;;;;;736:10076:46;;;;;;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;3035:115:46;;;;;;;;736:10076;-1:-1:-1;2437:33:46;736:10076;;;;-1:-1:-1;;;;;736:10076:46;3202:36;;;;-1:-1:-1;;;;;3202:36:46;;;;;;;;2543:60;3202:36;;;;;;736:10076;;3202:36;;;736:10076;3202:36;;;;;3181:57;736:10076;;-1:-1:-1;;;;;;736:10076:46;-1:-1:-1;;;;;736:10076:46;;;;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:46;3307:58;;736:10076;;;-1:-1:-1;;;736:10076:46;;;;3307:58;;;736:10076;;;;;3307:58;736:10076;3307:58;:::i;:::-;1671:64:22;3297:69:46;;3273:123;;;;;;736:10076;;-1:-1:-1;;;3273:123:46;;736:10076;3273:123;;1671:64:22;;;;-1:-1:-1;;;;;736:10076:46;;;;;;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;3273:123:46;;;;;;;;736:10076;-1:-1:-1;736:10076:46;;3181:57;736:10076;-1:-1:-1;;;;;736:10076:46;;;;;3404:69;;;;;736:10076;;;;;;;;;;;;;;;3404:69;;;736:10076;3404:69;;1671:64:22;736:10076:46;;;;3404:69;;;;;;;;736:10076;-1:-1:-1;2437:33:46;736:10076;;;;-1:-1:-1;;;;;736:10076:46;3522:29;;;;-1:-1:-1;;;;;3522:29:46;;;;;;;;2543:60;3522:29;;;;;;736:10076;;3522:29;;;736:10076;3522:29;;;;;736:10076;;;-1:-1:-1;;;;;;736:10076:46;-1:-1:-1;;;;;736:10076:46;;;;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:46;3624:51;;736:10076;;;-1:-1:-1;;;736:10076:46;;;;3624:51;;;736:10076;;;;;3624:51;736:10076;3624:51;:::i;:::-;1671:64:22;3614:62:46;;3590:109;;;;;;736:10076;;-1:-1:-1;;;3590:109:46;;736:10076;3590:109;;1671:64:22;;;;-1:-1:-1;;;;;736:10076:46;;;;;;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;3590:109:46;;;;;;;;736:10076;-1:-1:-1;2437:33:46;736:10076;;;;-1:-1:-1;;;;;736:10076:46;3751:33;;;;-1:-1:-1;;;;;3751:33:46;;;;;;;;2543:60;3751:33;;;;;;736:10076;;3751:33;;;736:10076;3751:33;;;;;3733:51;736:10076;;-1:-1:-1;;;;;;736:10076:46;-1:-1:-1;;;;;736:10076:46;;;;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:46;3856:55;;736:10076;;;-1:-1:-1;;;736:10076:46;;;;3856:55;;;736:10076;;;;;3856:55;736:10076;3856:55;:::i;:::-;1671:64:22;3846:66:46;;3822:117;;;;;;736:10076;;-1:-1:-1;;;3822:117:46;;736:10076;3822:117;;1671:64:22;;;;-1:-1:-1;;;;;736:10076:46;;;;;;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;3822:117:46;;;;;;;;736:10076;-1:-1:-1;2437:33:46;736:10076;;;;-1:-1:-1;;;;;736:10076:46;-1:-1:-1;;;;;3996:40:46;;;;;;;;-1:-1:-1;3996:40:46;;;;;;;;;;736:10076;2543:60;3996:40;;;;;;;736:10076;3996:40;;;;;3971:65;736:10076;;-1:-1:-1;;;;;;736:10076:46;-1:-1:-1;;;;;736:10076:46;;;;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:46;4106:62;;736:10076;;;-1:-1:-1;;;736:10076:46;;;;4106:62;;;736:10076;;;;;4106:62;736:10076;4106:62;:::i;:::-;1671:64:22;4096:73:46;;4072:131;;;;;;736:10076;;-1:-1:-1;;;4072:131:46;;736:10076;4072:131;;1671:64:22;;;;-1:-1:-1;;;;;736:10076:46;;;;;;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;4072:131:46;;;;;;;;736:10076;-1:-1:-1;2437:33:46;736:10076;;;;-1:-1:-1;;;;;736:10076:46;4240:26;;;;-1:-1:-1;;;;;4240:26:46;;;;;;;;2543:60;4240:26;;;;;;736:10076;;4240:26;;;736:10076;4240:26;;;;;4229:37;736:10076;;-1:-1:-1;;;;;;736:10076:46;-1:-1:-1;;;;;736:10076:46;;;;;;2437:33;736:10076;;;-1:-1:-1;;;2543:60:46;4331:51;;736:10076;;;-1:-1:-1;;;736:10076:46;;;;3624:51;4331;;736:10076;;;;;4331:51;736:10076;4331:51;:::i;:::-;1671:64:22;4321:62:46;;736:10076;;-1:-1:-1;;;;;736:10076:46;4297:109;;;;;736:10076;;-1:-1:-1;;;4297:109:46;;736:10076;4297:109;;1671:64:22;;;;-1:-1:-1;;;;;736:10076:46;;;;;;-1:-1:-1;;736:10076:46;;;;;;-1:-1:-1;;4297:109:46;;;;;;;;736:10076;-1:-1:-1;3181:57:46;736:10076;4548:9;736:10076;;;-1:-1:-1;;;4522:79:46;;;-1:-1:-1;;;;;736:10076:46;;;;4522:79;;736:10076;;;;;;;;;;;;2543:60;;736:10076;;;;;;;;4522:79;;;;;;2543:60;4522:79;736:10076;4522:79;;;736:10076;-1:-1:-1;4641:40:46;736:10076;;-1:-1:-1;;;;;;736:10076:46;-1:-1:-1;;;;;736:10076:46;;;;;;3181:57;736:10076;4548:9;736:10076;;;4854:79;;;736:10076;;;4854:79;;736:10076;-1:-1:-1;736:10076:46;;;;;;;;;;;;;;-1:-1:-1;736:10076:46;4854:79;;;;;;;736:10076;4854:79;;;736:10076;-1:-1:-1;736:10076:46;;;-1:-1:-1;;;;;;736:10076:46;-1:-1:-1;;;;;736:10076:46;;;;;;;;;;;4854:79;;;;2543:60;4854:79;2543:60;4854:79;;;;;;;:::i;:::-;;;;4522;;;;;;;;;;;;;;:::i;:::-;;;;4297:109;;;;:::i;:::-;;;;4240:26;1671:64:22;;;;736:10076:46;1671:64:22;;736:10076:46;1671:64:22;736:10076:46;1671:64:22;4072:131:46;;;;:::i;:::-;;;;3996:40;1671:64:22;;;;736:10076:46;1671:64:22;;736:10076:46;1671:64:22;736:10076:46;1671:64:22;3822:117:46;;;;:::i;:::-;;;;3590:109;;;;:::i;:::-;;;;3404:69;;;;:::i;:::-;;;;3273:123;;;;:::i;:::-;;;;3035:115;;;;:::i;:::-;;;;2810:100;;;;:::i;:::-;;;;2669:109;;;;:::i;:::-;;;;2509:116;;;;:::i;:::-;;;;736:10076;;;;;;-1:-1:-1;;736:10076:46;;;;7358:5;736:10076;-1:-1:-1;;;;;736:10076:46;7348:16;;736:10076;;7348:16;:::i;:::-;736:10076;7397:6;736:10076;7397:6;;;;-1:-1:-1;7493:14:46;736:10076;7358:5;736:10076;7532:3;736:10076;;;-1:-1:-1;;;7493:43:46;;;736:10076;;;-1:-1:-1;;;;;736:10076:46;;;;7493:43;;736:10076;;;;;;;;;;;7493:43;;736:10076;;7493:43;;736:10076;;;;;;;;7493:43;;;;;;7918:5:25;7493:43:46;736:10076;7493:43;;;7918:5:25;;;:::i;:::-;736:10076:46;7493:14;736:10076;;;;7532:3;736:10076;;7545:43;;;;;736:10076;;;;;;;;;;;;;;;7545:43;;736:10076;7545:43;;736:10076;;;;;;7545:43;;;;;;;7607;7545;;;;;7390:84;-1:-1:-1;7493:14:46;736:10076;7358:5;736:10076;7532:3;736:10076;;;7607:43;;;-1:-1:-1;;;;;736:10076:46;;;;;;7607:43;;736:10076;;;;;;;;;;;;;;;;;;;;;;;;;7607:43;;;;;;;;;;;;736:10076;7607:43;;;;;;:::i;:::-;;;;;;-1:-1:-1;7607:43:46;;;;;;:::i;:::-;;;;;7545;;;;:::i;:::-;;;;7493;;;;;;;;;;;;;;:::i;:::-;;;;7390:84;736:10076;7415:11;736:10076;;7415:37;;;;;;736:10076;;;;;;;;;;;;;7415:37;;;;;;;;;7462:3;7415:37;;;7390:84;7462:3;;:::i;:::-;7390:84;;7415:37;;;;:::i;:::-;;;;1671:64:22;-1:-1:-1;;;;;1671:64:22;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:22;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:22;;;;736:10076:46;;;1671:64:22;;;;-1:-1:-1;;1671:64:22;;;736:10076:46;1671:64:22;:::i;:::-;;;;-1:-1:-1;1671:64:22;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;736:10076:46;;;1671:64:22;;;;;:::o;1819:584::-;1873:7;736:10076:46;;;;;;;;;;;;;;;1896:14:22:o;1869:528::-;1941:25;2939:104;;;1980:374;;2367:19;;;:::o;1980:374::-;736:10076:46;;;;;2196:43:22;;;;736:10076:46;;;1671:64:22;;;736:10076:46;1671:64:22;;;736:10076:46;2196:43:22;;;;;:::i;:::-;2086:175;1671:64;736:10076:46;;2086:175:22;;1671:64;2196:43;2086:175;;1671:64;;;;;;;;;;;;;;:::i;:::-;;;2086:175;1671:64;2086:175;;;;;;;:::i;:::-;2047:232;;;;;2312:27;2047:232;;:::i;:::-;2196:43;1671:64;;;2312:27;;;;;;:::i;:::-;2367:19;:::o;736:10076:46:-;;;;;;;;;;-1:-1:-1;;;;;736:10076:46;;;;;;;:::o;1449:98:25:-;736:10076:46;1495:22:25;;;;;736:10076:46;;-1:-1:-1;;;1495:22:25;;-1:-1:-1;;;;;736:10076:46;;;1495:22:25;;;736:10076:46;;;-1:-1:-1;;;736:10076:46;;;1671:64:22;1495:22:25;;;736:10076:46;;;1495:22:25;;;;;;;;;;1449:98;1527:13;;;;;;736:10076:46;;;;;;;;;;;;;;;1527:13:25;;1495:22;1527:13;;736:10076:46;1527:13:25;;;;;;;;1449:98;;:::o;1527:13::-;;;;;:::i;:::-;736:10076:46;;1449:98:25;:::o;736:10076:46:-;;;1527:13:25;736:10076:46;;;;;;;;;1527:13:25;736:10076:46;;;1495:22:25;;;;;;;:::i;:::-;;;;;;736:10076:46;;;;;;;;;;-1:-1:-1;;736:10076:46;;;;;;;:::o;:::-;1671:64:22;;;736:10076:46;;;;;;;;3255:157:22;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;736:10076:46;;;;;;;;;;;;;;;;3345:30:22;;;:::i;:::-;3255:157::o;2410:424::-;2939:104;;;2445:359;;2410:424;736:10076:46;;;;2928:1:22;736:10076:46;;;2928:1:22;736:10076:46;2410:424:22:o;2445:359::-;736:10076:46;;2645:67:22;;;;736:10076:46;;;;1671:64:22;;;736:10076:46;;;1671:64:22;2705:4;736:10076:46;;;1671:64:22;736:10076:46;2645:67:22;;736:10076:46;1671:64:22;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;-1:-1:-1;1671:64:22;2534:196;;1671:64;;;;736:10076:46;1671:64:22;2534:196;;;1671:64;;;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;3615:277;-1:-1:-1;;;;;736:10076:46;;;;;3678:6:22;;;3674:212;;3615:277;;:::o;3674:212::-;736:10076:46;;;;-1:-1:-1;;;;;;;;;;;736:10076:46;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;3705:44:22;736:10076:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;;;;;;;;;;3768:34:22;;;;;;;;736:10076:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;;;;;;;;;;3821:34:22;;;;;:::i;1998:108:25:-;736:10076:46;2049:22:25;;;;;736:10076:46;;-1:-1:-1;;;2049:22:25;;-1:-1:-1;;;;;736:10076:46;;;2049:22:25;;;736:10076:46;;;-1:-1:-1;;;736:10076:46;;;1671:64:22;2049:22:25;;;736:10076:46;;;2049:22:25;;;;;;;;;;1998:108;2081:18;;;;;;736:10076:46;;;;;;;;;;;;;;;2081:18:25;;2049:22;2081:18;;736:10076:46;2081:18:25;;;;;;;;1998:108;;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;736:10076:46;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;;;;;;;1671:64:22;;736:10076:46;;;;;;;;;;;;;;:::i;:::-;1671:64:22;;-1:-1:-1;;1671:64:22;736:10076:46;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10076:46;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "failed()": "ba414fa6",
    "frensArt()": "94cd95e3",
    "frensMetaHelper()": "bc48e947",
    "frensOracle()": "edc91a92",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "setUp()": "0a9254e4",
    "ssvRegistryAddress()": "25b5e62f",
    "stakingPool()": "0c56ae3b",
    "stakingPool2()": "5f583c1d",
    "stakingPoolFactory()": "a1b8adcb",
    "testApprove()": "1aeb10a6",
    "testBalanceOf()": "3df77c0e",
    "testGetPoolById()": "87496250",
    "testIsApprovedForAll()": "09d26b6c",
    "testMintingDirectly()": "796a773d",
    "testOwner()": "9e535c69",
    "testOwnerOf()": "71a29bb7",
    "testSafeTransferFrom()": "90ec5d96",
    "testTokenByIndex()": "6a7179c3",
    "testTransferFrom()": "70557298",
    "testUnauthorizedAccess()": "4fc1a73e",
    "testexists()": "524ad495",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensOracle\",\"outputs\":[{\"internalType\":\"contract FrensOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssvRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool2\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBalanceOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetPoolById\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIsApprovedForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMintingDirectly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwnerOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSafeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenByIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUnauthorizedAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testexists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/FrensPoolShareTest.t.sol\":\"MiscTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensArt.sol\":{\"keccak256\":\"0x4d4e86a043ed3ddb4c807c390dc06584d03a91fa48022d951e9e60cc441147fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8255e91e410605c634b42d7d951746502c9b3b91084b1201b7ea350b5486a6d\",\"dweb:/ipfs/QmQeez7K4Zyq7bHpWZxSrFnf35bn831uwcbBBbHL1YnHLe\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0xdcefe236e7f6ced98c2a505b10f30d4b1341cc4776f94d40393cba6e2a1c67b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e5f65ea49a6af09223dcc55c670e7b8e0a32416cf8b1a17bb09bb5e83434f5\",\"dweb:/ipfs/QmT4MKAP1f4edVuaXUKTSWXfos1MuNb7EtehfC4hcx4hW5\"]},\"contracts/FrensOracle.sol\":{\"keccak256\":\"0x47b53ff148dbc4cbde609fd92f77dd024d8bbea9100a86d251ba19007f86e7f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b76b61a142e05f91751d9f92833bb871f2e64c0f9eff063c80493ac02b22d7d2\",\"dweb:/ipfs/QmcL1gRKGt6oWBk7tE8RqPMkFbQpEiXA7zuWatruLmM2NL\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0x5ce2993858376e9ffe5eb15b047a7d82d426ab088bc1d5a9e215e0b27229f92b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca822d066c53c7b2d3874f2ac9b1db57fa44ed41fbbc4ba1870b608e009f02bb\",\"dweb:/ipfs/QmWD2raDz6W47vpoHrg1JDBSjwUw3N9nH1vxCjA6izwpYk\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x4d03ddbe46199b6f86c0173fcd2ef9e8f852613292629cd1747679b49ab22466\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fffe27c53b45238778331e25402704489bea80543992569fc1cdd1116b343\",\"dweb:/ipfs/QmNmMgSgftGrVWZ6u2h5nHNXLD7vaNF2kGZZTGsfPj9aaf\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0xc6f96d09d0c1f3349bc216170fdc6d58961b5a69b9a65fa825afeeb47b9eaac9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2f900c4c9343c2274e0839d5b3dace55bea9ba115efdfa7de002bac1ac2550ee\",\"dweb:/ipfs/QmRAoCgRFznFk8RtFf5FtRUWCZzLSRwNpe3UNpjXnvQ3XR\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0x2e1e2473a143c036145728beecdb4be3a8a46c99110062ce891d9cda0749272e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cee21c05708d1b59cc4f2ac3538500956faf93b94daa548ee703c06edcd94e7b\",\"dweb:/ipfs/Qmc5iUSnVubWtLMvhVeppvgyb2M8ThRp8Eze1wTUgUKAm9\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x5a90cb90f8bdf62acaf8d1c76c29c4168581fdff55130d6d28c09e223d7bc2c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c218722a566fb38f0f5f4c2a149ae461887c7764b85ecbc540cb7ce9e458237\",\"dweb:/ipfs/QmdUWJZChjUrEJUEciQ3vBG5SLsbgGcBiixmmjq17ufy3i\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x839f7e3c08d72fc538e0889fb75065435242ae3b9d81c839176a8309326775db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://869748145485481385c88e27b24e2952017bb11a150739dcdb1d50915830d4b9\",\"dweb:/ipfs/QmTQ9jy87d8qxpPLg3g3tqE63GJenfD1cz16x5iZnkuJao\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x71ec8963cc6af99db89417e259f4987b2503e31585db6450e7140e192d868e32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e5727b5f0f1d911d827f3b97bb00c4a6a21aa3b235ff2dcf9c70122c9485bc\",\"dweb:/ipfs/QmNTf6qo7kCzhuzyuV7q5rpmaT4Juepfgkc6eXYc93HYLT\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0x9ca4f7eb7011a8f1ed7a6d9a0f88ab68b29d49b63aa8864a694b63d5551a0bad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://691442367708458da9827c029828f74ddea99a4b327a2e31f2efdfd759b97f88\",\"dweb:/ipfs/Qmbd6EADu2GntQhPobDgdRg9c6vzwutzgn7fZfa5gTC8Jr\"]},\"contracts/interfaces/IFrensLogo.sol\":{\"keccak256\":\"0x71b64fda21ce2b1daa8f795394c34335837044734eaeaf1e73bd7d3a836365bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dd1adc76ac6ccbf64393fc480bedba681b01b1b33e68459149b879caa0fcc1a\",\"dweb:/ipfs/QmaLbTp7sztsYHKQ1D4vyGzvdRWwNGF3KqExWzCSiCdinM\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0xc08609d3c44bdaf6d77150129ed72337dfaee1a560e305bd2f435bb8ac0d1f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a56b465c201630f128ce60fddd6c9fd341193ce759b7a854996bf33bab5b042c\",\"dweb:/ipfs/QmYdSsAYumebM5BypK4tPxGoNKmezFv5VAHQotEDLQKjFb\"]},\"contracts/interfaces/IFrensOracle.sol\":{\"keccak256\":\"0xb8fb907cadbdd9dd146bd3179d385be91b039955df1eb85731afbbed01894e57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af779ef4e0f538f2ca4a397f0b8f757d33c7f3d2b64baf29d39045ae7b41bdce\",\"dweb:/ipfs/QmQytMCQNJCF5PoSB3EMSYNWaZqbHYjfSppHAZ3sUCCRYS\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0xef1985c0b95767f7b96d1f21aed9e48142c021d25d574f0615323ec2b83ad996\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074079edb1b5b586e73914cd4203e49eb5fd813baa6fc85038de0f23bd5a25e7\",\"dweb:/ipfs/QmQXtreUs6eJyuoLEGb79a1nWwdiziQeoL2kbjTPnYk1G3\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0xb5ee629c513705bc3c46fbe4ce81f6a9edac2c0d1f7030da14b3859a2e8aa39e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://970db7758aa9fa468922dae70b2c85c3094506dfb59293520d4fd83769b3bee1\",\"dweb:/ipfs/QmVjiqtVZYCxXVKtxsFZhMJvFcTYhKFuiBa6eP3UtpnVeW\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0xfd293708621d8eb26c25db108d90583d36ab7f4a7f1f71a75e0b6f54c9a0a451\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c10da0cd1b7cccb05340a2505803ca0ff8fe1821c5107059c95d09eff6e7a1a4\",\"dweb:/ipfs/QmfSzqmRf2sYBMfXzav6jdkuNc6N4xoN3NUJ1o5624vUkt\"]},\"contracts/interfaces/IPmFont.sol\":{\"keccak256\":\"0x505d6001f751cbbe1261b1a87160d99c438ff76d198f316b5fc8a9066f629e24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f00e50f07ffca6b806ec9afa4cd5e0325c6c80f691014fab4732782eedb18eef\",\"dweb:/ipfs/QmV5o8JGPuAhUXUzeUt97oo7gTCFSjNicXhBiKpsxGuzvs\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0xc4849e951336ce62ba55f6b4a6158a8c1bc8716e41b83a4afa98b23c1d97442c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3beb90e7b61ecd038b18fccda4384f60b0e5c486d1392d35ad3e9be5c3d012ae\",\"dweb:/ipfs/QmP5VAe3ZFFyTjWsyyTm5VN8U2d5u6U3cfcMHJHticD9w6\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0xfcce7e4e1de632af6ab1d89918ff97980a3b0e282eab86875e86128c41260574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://caa6604f6c96202509d52c75a78ceecee9bf95fa4dfc040c47a7d05c1d1cc250\",\"dweb:/ipfs/QmbjsaNxKJP9HAyk6HmSVE83XgNtFLRMAtTWp87uszQ8ab\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0x004e7a6a1ea7ac2dd49f26e4b423da2e87b4c9014867ec81f9572a15e0fba4a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ad4480a298be6ea7421524b1b185a634566cea4f989ceb7dac8094b17f807a2\",\"dweb:/ipfs/QmeNsCgQQif5w4Yuz3L7oddxsMXSzmECFgesdEHQ5Nca9P\"]},\"contracts/interfaces/IWaves.sol\":{\"keccak256\":\"0x5a318f5ff6701f3371425a37f40db5dfc5a960a197602bb561ca084b305d12b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f23abde1abc61d913d90bef65a3c421f2c037151304f61ac27585ad02d310c34\",\"dweb:/ipfs/QmeK8VZ9LR2JhXSNBotFjoEsXdjBfgrt6QfdMDuPnTL1rq\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/FrensPoolShareTest.t.sol\":{\"keccak256\":\"0x781e250cb47dac80e11fbac55ac68403542ddd1fa3acbf7d719bbb12f78db9ad\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e05c4813b2d15319ff176993cb68e4f32cc45fc708c2f2c3e9603c6784ae1e8a\",\"dweb:/ipfs/QmcPJhGUwDEihKE4Gr5BHmLE4WBqrFqRNLgSPLndPzHLGb\"]},\"test/foundry/TestHelper.sol\":{\"keccak256\":\"0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f\",\"dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensOracle",
          "outputs": [
            {
              "internalType": "contract FrensOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ssvRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool2",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testApprove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBalanceOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetPoolById"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIsApprovedForAll"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMintingDirectly"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwnerOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSafeTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenByIndex"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testUnauthorizedAccess"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testexists"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/FrensPoolShareTest.t.sol": "MiscTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensArt.sol": {
        "keccak256": "0x4d4e86a043ed3ddb4c807c390dc06584d03a91fa48022d951e9e60cc441147fd",
        "urls": [
          "bzz-raw://b8255e91e410605c634b42d7d951746502c9b3b91084b1201b7ea350b5486a6d",
          "dweb:/ipfs/QmQeez7K4Zyq7bHpWZxSrFnf35bn831uwcbBBbHL1YnHLe"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0xdcefe236e7f6ced98c2a505b10f30d4b1341cc4776f94d40393cba6e2a1c67b2",
        "urls": [
          "bzz-raw://a1e5f65ea49a6af09223dcc55c670e7b8e0a32416cf8b1a17bb09bb5e83434f5",
          "dweb:/ipfs/QmT4MKAP1f4edVuaXUKTSWXfos1MuNb7EtehfC4hcx4hW5"
        ],
        "license": "MIT"
      },
      "contracts/FrensOracle.sol": {
        "keccak256": "0x47b53ff148dbc4cbde609fd92f77dd024d8bbea9100a86d251ba19007f86e7f9",
        "urls": [
          "bzz-raw://b76b61a142e05f91751d9f92833bb871f2e64c0f9eff063c80493ac02b22d7d2",
          "dweb:/ipfs/QmcL1gRKGt6oWBk7tE8RqPMkFbQpEiXA7zuWatruLmM2NL"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0x5ce2993858376e9ffe5eb15b047a7d82d426ab088bc1d5a9e215e0b27229f92b",
        "urls": [
          "bzz-raw://ca822d066c53c7b2d3874f2ac9b1db57fa44ed41fbbc4ba1870b608e009f02bb",
          "dweb:/ipfs/QmWD2raDz6W47vpoHrg1JDBSjwUw3N9nH1vxCjA6izwpYk"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0x4d03ddbe46199b6f86c0173fcd2ef9e8f852613292629cd1747679b49ab22466",
        "urls": [
          "bzz-raw://383fffe27c53b45238778331e25402704489bea80543992569fc1cdd1116b343",
          "dweb:/ipfs/QmNmMgSgftGrVWZ6u2h5nHNXLD7vaNF2kGZZTGsfPj9aaf"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0xc6f96d09d0c1f3349bc216170fdc6d58961b5a69b9a65fa825afeeb47b9eaac9",
        "urls": [
          "bzz-raw://2f900c4c9343c2274e0839d5b3dace55bea9ba115efdfa7de002bac1ac2550ee",
          "dweb:/ipfs/QmRAoCgRFznFk8RtFf5FtRUWCZzLSRwNpe3UNpjXnvQ3XR"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0x2e1e2473a143c036145728beecdb4be3a8a46c99110062ce891d9cda0749272e",
        "urls": [
          "bzz-raw://cee21c05708d1b59cc4f2ac3538500956faf93b94daa548ee703c06edcd94e7b",
          "dweb:/ipfs/Qmc5iUSnVubWtLMvhVeppvgyb2M8ThRp8Eze1wTUgUKAm9"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x5a90cb90f8bdf62acaf8d1c76c29c4168581fdff55130d6d28c09e223d7bc2c3",
        "urls": [
          "bzz-raw://7c218722a566fb38f0f5f4c2a149ae461887c7764b85ecbc540cb7ce9e458237",
          "dweb:/ipfs/QmdUWJZChjUrEJUEciQ3vBG5SLsbgGcBiixmmjq17ufy3i"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x839f7e3c08d72fc538e0889fb75065435242ae3b9d81c839176a8309326775db",
        "urls": [
          "bzz-raw://869748145485481385c88e27b24e2952017bb11a150739dcdb1d50915830d4b9",
          "dweb:/ipfs/QmTQ9jy87d8qxpPLg3g3tqE63GJenfD1cz16x5iZnkuJao"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x71ec8963cc6af99db89417e259f4987b2503e31585db6450e7140e192d868e32",
        "urls": [
          "bzz-raw://81e5727b5f0f1d911d827f3b97bb00c4a6a21aa3b235ff2dcf9c70122c9485bc",
          "dweb:/ipfs/QmNTf6qo7kCzhuzyuV7q5rpmaT4Juepfgkc6eXYc93HYLT"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0x9ca4f7eb7011a8f1ed7a6d9a0f88ab68b29d49b63aa8864a694b63d5551a0bad",
        "urls": [
          "bzz-raw://691442367708458da9827c029828f74ddea99a4b327a2e31f2efdfd759b97f88",
          "dweb:/ipfs/Qmbd6EADu2GntQhPobDgdRg9c6vzwutzgn7fZfa5gTC8Jr"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensLogo.sol": {
        "keccak256": "0x71b64fda21ce2b1daa8f795394c34335837044734eaeaf1e73bd7d3a836365bf",
        "urls": [
          "bzz-raw://7dd1adc76ac6ccbf64393fc480bedba681b01b1b33e68459149b879caa0fcc1a",
          "dweb:/ipfs/QmaLbTp7sztsYHKQ1D4vyGzvdRWwNGF3KqExWzCSiCdinM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0xc08609d3c44bdaf6d77150129ed72337dfaee1a560e305bd2f435bb8ac0d1f46",
        "urls": [
          "bzz-raw://a56b465c201630f128ce60fddd6c9fd341193ce759b7a854996bf33bab5b042c",
          "dweb:/ipfs/QmYdSsAYumebM5BypK4tPxGoNKmezFv5VAHQotEDLQKjFb"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensOracle.sol": {
        "keccak256": "0xb8fb907cadbdd9dd146bd3179d385be91b039955df1eb85731afbbed01894e57",
        "urls": [
          "bzz-raw://af779ef4e0f538f2ca4a397f0b8f757d33c7f3d2b64baf29d39045ae7b41bdce",
          "dweb:/ipfs/QmQytMCQNJCF5PoSB3EMSYNWaZqbHYjfSppHAZ3sUCCRYS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0xef1985c0b95767f7b96d1f21aed9e48142c021d25d574f0615323ec2b83ad996",
        "urls": [
          "bzz-raw://074079edb1b5b586e73914cd4203e49eb5fd813baa6fc85038de0f23bd5a25e7",
          "dweb:/ipfs/QmQXtreUs6eJyuoLEGb79a1nWwdiziQeoL2kbjTPnYk1G3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0xb5ee629c513705bc3c46fbe4ce81f6a9edac2c0d1f7030da14b3859a2e8aa39e",
        "urls": [
          "bzz-raw://970db7758aa9fa468922dae70b2c85c3094506dfb59293520d4fd83769b3bee1",
          "dweb:/ipfs/QmVjiqtVZYCxXVKtxsFZhMJvFcTYhKFuiBa6eP3UtpnVeW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0xfd293708621d8eb26c25db108d90583d36ab7f4a7f1f71a75e0b6f54c9a0a451",
        "urls": [
          "bzz-raw://c10da0cd1b7cccb05340a2505803ca0ff8fe1821c5107059c95d09eff6e7a1a4",
          "dweb:/ipfs/QmfSzqmRf2sYBMfXzav6jdkuNc6N4xoN3NUJ1o5624vUkt"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPmFont.sol": {
        "keccak256": "0x505d6001f751cbbe1261b1a87160d99c438ff76d198f316b5fc8a9066f629e24",
        "urls": [
          "bzz-raw://f00e50f07ffca6b806ec9afa4cd5e0325c6c80f691014fab4732782eedb18eef",
          "dweb:/ipfs/QmV5o8JGPuAhUXUzeUt97oo7gTCFSjNicXhBiKpsxGuzvs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0xc4849e951336ce62ba55f6b4a6158a8c1bc8716e41b83a4afa98b23c1d97442c",
        "urls": [
          "bzz-raw://3beb90e7b61ecd038b18fccda4384f60b0e5c486d1392d35ad3e9be5c3d012ae",
          "dweb:/ipfs/QmP5VAe3ZFFyTjWsyyTm5VN8U2d5u6U3cfcMHJHticD9w6"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0xfcce7e4e1de632af6ab1d89918ff97980a3b0e282eab86875e86128c41260574",
        "urls": [
          "bzz-raw://caa6604f6c96202509d52c75a78ceecee9bf95fa4dfc040c47a7d05c1d1cc250",
          "dweb:/ipfs/QmbjsaNxKJP9HAyk6HmSVE83XgNtFLRMAtTWp87uszQ8ab"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0x004e7a6a1ea7ac2dd49f26e4b423da2e87b4c9014867ec81f9572a15e0fba4a1",
        "urls": [
          "bzz-raw://8ad4480a298be6ea7421524b1b185a634566cea4f989ceb7dac8094b17f807a2",
          "dweb:/ipfs/QmeNsCgQQif5w4Yuz3L7oddxsMXSzmECFgesdEHQ5Nca9P"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IWaves.sol": {
        "keccak256": "0x5a318f5ff6701f3371425a37f40db5dfc5a960a197602bb561ca084b305d12b5",
        "urls": [
          "bzz-raw://f23abde1abc61d913d90bef65a3c421f2c037151304f61ac27585ad02d310c34",
          "dweb:/ipfs/QmeK8VZ9LR2JhXSNBotFjoEsXdjBfgrt6QfdMDuPnTL1rq"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a",
        "urls": [
          "bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe",
          "dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b",
        "urls": [
          "bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c",
          "dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/FrensPoolShareTest.t.sol": {
        "keccak256": "0x781e250cb47dac80e11fbac55ac68403542ddd1fa3acbf7d719bbb12f78db9ad",
        "urls": [
          "bzz-raw://e05c4813b2d15319ff176993cb68e4f32cc45fc708c2f2c3e9603c6784ae1e8a",
          "dweb:/ipfs/QmcPJhGUwDEihKE4Gr5BHmLE4WBqrFqRNLgSPLndPzHLGb"
        ],
        "license": "UNLICENSED"
      },
      "test/foundry/TestHelper.sol": {
        "keccak256": "0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4",
        "urls": [
          "bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f",
          "dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/FrensPoolShareTest.t.sol",
    "id": 31038,
    "exportedSymbols": {
      "AccessControl": [
        26729
      ],
      "Address": [
        28739
      ],
      "Base64": [
        29952
      ],
      "BoolGetter": [
        34855
      ],
      "Context": [
        28761
      ],
      "DSTest": [
        4973
      ],
      "ERC165": [
        28960
      ],
      "ERC721": [
        27863
      ],
      "ERC721Enumerable": [
        28351
      ],
      "FrensArt": [
        159
      ],
      "FrensMetaHelper": [
        520
      ],
      "FrensOracle": [
        597
      ],
      "FrensPoolShare": [
        915
      ],
      "FrensPoolShareTokenURI": [
        1175
      ],
      "FrensStorage": [
        1483
      ],
      "IAccessControl": [
        26802
      ],
      "IDepositContract": [
        2666
      ],
      "IENS": [
        2803
      ],
      "IERC165": [
        28972
      ],
      "IERC721": [
        27979
      ],
      "IERC721Enumerable": [
        28382
      ],
      "IERC721Metadata": [
        28409
      ],
      "IERC721Receiver": [
        27997
      ],
      "IFrensArt": [
        2813
      ],
      "IFrensLogo": [
        2821
      ],
      "IFrensMetaHelper": [
        2854
      ],
      "IFrensOracle": [
        2871
      ],
      "IFrensPoolShare": [
        2922
      ],
      "IFrensPoolShareTokenURI": [
        2932
      ],
      "IFrensStorage": [
        3022
      ],
      "IMaliciousProxyInterface": [
        34831
      ],
      "IPmFont": [
        3030
      ],
      "IReverseResolver": [
        3040
      ],
      "IStakingPool": [
        3165
      ],
      "IStakingPoolFactory": [
        3178
      ],
      "IWaves": [
        3186
      ],
      "Math": [
        29837
      ],
      "MiscTest": [
        31037
      ],
      "NftReceiver": [
        34904
      ],
      "Ownable": [
        26915
      ],
      "Script": [
        5236
      ],
      "StakingPool": [
        2539
      ],
      "StakingPoolFactory": [
        2647
      ],
      "StdStorage": [
        8264
      ],
      "Strings": [
        28936
      ],
      "Test": [
        8166
      ],
      "Vm": [
        10285
      ],
      "console": [
        18349
      ],
      "console2": [
        26413
      ],
      "stdError": [
        8236
      ],
      "stdJson": [
        5596
      ],
      "stdMath": [
        9505
      ],
      "stdStorage": [
        9366
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:10774:46",
    "nodes": [
      {
        "id": 29954,
        "nodeType": "PragmaDirective",
        "src": "39:24:46",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 29955,
        "nodeType": "ImportDirective",
        "src": "181:28:46",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 9506,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29956,
        "nodeType": "ImportDirective",
        "src": "229:38:46",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 160,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29957,
        "nodeType": "ImportDirective",
        "src": "268:45:46",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 521,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29958,
        "nodeType": "ImportDirective",
        "src": "314:52:46",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 1176,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29959,
        "nodeType": "ImportDirective",
        "src": "367:42:46",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 1484,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29960,
        "nodeType": "ImportDirective",
        "src": "410:41:46",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 2540,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29961,
        "nodeType": "ImportDirective",
        "src": "452:48:46",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 2648,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29962,
        "nodeType": "ImportDirective",
        "src": "501:44:46",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 916,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29963,
        "nodeType": "ImportDirective",
        "src": "546:60:46",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 3179,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29964,
        "nodeType": "ImportDirective",
        "src": "607:57:46",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 2667,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29965,
        "nodeType": "ImportDirective",
        "src": "665:26:46",
        "nodes": [],
        "absolutePath": "test/foundry/TestHelper.sol",
        "file": "./TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 34905,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29966,
        "nodeType": "ImportDirective",
        "src": "692:41:46",
        "nodes": [],
        "absolutePath": "contracts/FrensOracle.sol",
        "file": "../../contracts/FrensOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31038,
        "sourceUnit": 598,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31037,
        "nodeType": "ContractDefinition",
        "src": "736:10076:46",
        "nodes": [
          {
            "id": 29971,
            "nodeType": "VariableDeclaration",
            "src": "768:24:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "784:8:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$159",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 29970,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29969,
                "name": "FrensArt",
                "nameLocations": [
                  "768:8:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 159,
                "src": "768:8:46"
              },
              "referencedDeclaration": 159,
              "src": "768:8:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$159",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29974,
            "nodeType": "VariableDeclaration",
            "src": "798:38:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "821:15:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 29973,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29972,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "798:15:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 520,
                "src": "798:15:46"
              },
              "referencedDeclaration": 520,
              "src": "798:15:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29977,
            "nodeType": "VariableDeclaration",
            "src": "842:52:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "872:22:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 29976,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29975,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "842:22:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1175,
                "src": "842:22:46"
              },
              "referencedDeclaration": 1175,
              "src": "842:22:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29980,
            "nodeType": "VariableDeclaration",
            "src": "900:32:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "920:12:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$1483",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 29979,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29978,
                "name": "FrensStorage",
                "nameLocations": [
                  "900:12:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1483,
                "src": "900:12:46"
              },
              "referencedDeclaration": 1483,
              "src": "900:12:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$1483",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29983,
            "nodeType": "VariableDeclaration",
            "src": "938:44:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "964:18:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 29982,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29981,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "938:18:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2647,
                "src": "938:18:46"
              },
              "referencedDeclaration": 2647,
              "src": "938:18:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29986,
            "nodeType": "VariableDeclaration",
            "src": "988:30:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1007:11:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2539",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 29985,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29984,
                "name": "StakingPool",
                "nameLocations": [
                  "988:11:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2539,
                "src": "988:11:46"
              },
              "referencedDeclaration": 2539,
              "src": "988:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2539",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29989,
            "nodeType": "VariableDeclaration",
            "src": "1024:31:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "5f583c1d",
            "mutability": "mutable",
            "name": "stakingPool2",
            "nameLocation": "1043:12:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2539",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 29988,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29987,
                "name": "StakingPool",
                "nameLocations": [
                  "1024:11:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2539,
                "src": "1024:11:46"
              },
              "referencedDeclaration": 2539,
              "src": "1024:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2539",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29992,
            "nodeType": "VariableDeclaration",
            "src": "1061:36:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1083:14:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 29991,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29990,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1061:14:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 915,
                "src": "1061:14:46"
              },
              "referencedDeclaration": 915,
              "src": "1061:14:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29995,
            "nodeType": "VariableDeclaration",
            "src": "1103:30:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "edc91a92",
            "mutability": "mutable",
            "name": "frensOracle",
            "nameLocation": "1122:11:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensOracle_$597",
              "typeString": "contract FrensOracle"
            },
            "typeName": {
              "id": 29994,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29993,
                "name": "FrensOracle",
                "nameLocations": [
                  "1103:11:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 597,
                "src": "1103:11:46"
              },
              "referencedDeclaration": 597,
              "src": "1103:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensOracle_$597",
                "typeString": "contract FrensOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30001,
            "nodeType": "VariableDeclaration",
            "src": "1154:84:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1177:7:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 29996,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1154:15:46",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 29999,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1195:42:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 29998,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1187:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 29997,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1187:8:46",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30000,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1187:51:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30004,
            "nodeType": "VariableDeclaration",
            "src": "1349:78:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "25b5e62f",
            "mutability": "mutable",
            "name": "ssvRegistryAddress",
            "nameLocation": "1364:18:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30002,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1349:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862396531353565363542356334443636646632384461384539613039353766303646313142633034",
              "id": 30003,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1385:42:46",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb9e155e65B5c4D66df28Da8E9a0957f06F11Bc04"
            },
            "visibility": "public"
          },
          {
            "id": 30007,
            "nodeType": "VariableDeclaration",
            "src": "1433:70:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "1448:10:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30005,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1433:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 30006,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1461:42:46",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 30013,
            "nodeType": "VariableDeclaration",
            "src": "1510:60:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "1527:15:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$2666",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 30009,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30008,
                "name": "IDepositContract",
                "nameLocations": [
                  "1510:16:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2666,
                "src": "1510:16:46"
              },
              "referencedDeclaration": 2666,
              "src": "1510:16:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$2666",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 30011,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30001,
                  "src": "1562:7:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 30010,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2666,
                "src": "1545:16:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$2666_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 30012,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1545:25:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$2666",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30016,
            "nodeType": "VariableDeclaration",
            "src": "1577:69:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "1592:9:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30014,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1577:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 30015,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1604:42:46",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 30022,
            "nodeType": "VariableDeclaration",
            "src": "1652:82:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1675:5:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30017,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1652:15:46",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 30020,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1691:42:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30019,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1683:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30018,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1683:8:46",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30021,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1683:51:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30028,
            "nodeType": "VariableDeclaration",
            "src": "1740:80:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1763:3:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30023,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1740:15:46",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 30026,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1777:42:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30025,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1769:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30024,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1769:8:46",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30027,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1769:51:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30031,
            "nodeType": "VariableDeclaration",
            "src": "1827:116:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "1833:6:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30029,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1827:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575",
              "id": 30030,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1842:101:46",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_21dcdee5842ff0f482197d6a15db2c021a867314be6d63d4bb4246bbaafd3909",
                "typeString": "literal_string hex\"ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30034,
            "nodeType": "VariableDeclaration",
            "src": "1949:100:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "1955:22:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30032,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1949:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2",
              "id": 30033,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1980:69:46",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_15e0678a74c943adbbbd50fdf9fc6ac3c93162a3c810614e1c98914f8980a59e",
                "typeString": "literal_string hex\"0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30037,
            "nodeType": "VariableDeclaration",
            "src": "2055:215:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2061:9:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30035,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2055:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9",
              "id": 30036,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2073:197:46",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d36984ec5b61d40bef1c5fbe334dfcbf8cb40ea4c1dee515b99a6e9ce042c56e",
                "typeString": "literal_string hex\"92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30040,
            "nodeType": "VariableDeclaration",
            "src": "2276:94:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2284:17:46",
            "scope": 31037,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 30038,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2276:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834303933313830323032303633623065363663643861656635613933346266616263663332393139653439343036343534326235663161333838396266353136",
              "id": 30039,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2304:66:46",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_29207914523896875400091520570111070750124087433100064560086113879594058380566_by_1",
                "typeString": "int_const 2920...(69 digits omitted)...0566"
              },
              "value": "0x4093180202063b0e66cd8aef5a934bfabcf32919e494064542b5f1a3889bf516"
            },
            "visibility": "internal"
          },
          {
            "id": 30281,
            "nodeType": "FunctionDefinition",
            "src": "2382:2752:46",
            "nodes": [],
            "body": {
              "id": 30280,
              "nodeType": "Block",
              "src": "2406:2728:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30043,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29980,
                      "src": "2437:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1483",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 30046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2452:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$1483_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 30045,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30044,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "2456:12:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1483,
                            "src": "2456:12:46"
                          },
                          "referencedDeclaration": 1483,
                          "src": "2456:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 30047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2452:18:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1483",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "2437:33:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$1483",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 30049,
                  "nodeType": "ExpressionStatement",
                  "src": "2437:33:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 30056,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2560:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "5353565265676973747279",
                                "id": 30057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2589:13:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                                  "typeString": "literal_string \"SSVRegistry\""
                                },
                                "value": "SSVRegistry"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                                  "typeString": "literal_string \"SSVRegistry\""
                                }
                              ],
                              "expression": {
                                "id": 30054,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2543:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2547:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2543:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2543:60:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30053,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2533:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2533:71:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 30060,
                        "name": "ssvRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30004,
                        "src": "2606:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30050,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29980,
                        "src": "2509:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2522:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "2509:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2509:116:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30062,
                  "nodeType": "ExpressionStatement",
                  "src": "2509:116:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 30069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2720:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "4465706f736974436f6e7472616374",
                                "id": 30070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2749:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                },
                                "value": "DepositContract"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                }
                              ],
                              "expression": {
                                "id": 30067,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2703:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2707:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2703:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2703:64:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30066,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2693:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2693:75:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 30073,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30001,
                        "src": "2770:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30063,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29980,
                        "src": "2669:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2682:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "2669:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:109:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30075,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:109:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 30082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2861:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "454e53",
                                "id": 30083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2890:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                },
                                "value": "ENS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                }
                              ],
                              "expression": {
                                "id": 30080,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2844:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2848:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2844:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2844:52:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30079,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2834:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2834:63:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 30086,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30007,
                        "src": "2899:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30076,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29980,
                        "src": "2810:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2823:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "2810:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2810:100:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30088,
                  "nodeType": "ExpressionStatement",
                  "src": "2810:100:46"
                },
                {
                  "expression": {
                    "id": 30095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30089,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29992,
                      "src": "2946:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30093,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29980,
                          "src": "2982:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2963:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3022_$returns$_t_contract$_FrensPoolShare_$915_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 30091,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30090,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "2967:14:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 915,
                            "src": "2967:14:46"
                          },
                          "referencedDeclaration": 915,
                          "src": "2967:14:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 30094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2963:32:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "2946:49:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 30096,
                  "nodeType": "ExpressionStatement",
                  "src": "2946:49:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3086:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265",
                                "id": 30104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3106:16:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                },
                                "value": "FrensPoolShare"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                }
                              ],
                              "expression": {
                                "id": 30101,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3069:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3073:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3069:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3069:54:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30100,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3059:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3059:65:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30109,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29992,
                            "src": "3134:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 30108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3126:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3126:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3126:23:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30097,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29980,
                        "src": "3035:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3048:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "3035:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:115:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30112,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:115:46"
                },
                {
                  "expression": {
                    "id": 30119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30113,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29983,
                      "src": "3181:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30117,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29980,
                          "src": "3225:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3202:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3022_$returns$_t_contract$_StakingPoolFactory_$2647_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 30115,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30114,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "3206:18:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2647,
                            "src": "3206:18:46"
                          },
                          "referencedDeclaration": 2647,
                          "src": "3206:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 30118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3202:36:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "3181:57:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 30120,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:57:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3324:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "5374616b696e67506f6f6c466163746f7279",
                                "id": 30128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3344:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                },
                                "value": "StakingPoolFactory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                }
                              ],
                              "expression": {
                                "id": 30125,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3307:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3311:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3307:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3307:58:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30124,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3297:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3297:69:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30133,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29983,
                            "src": "3376:18:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 30132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3368:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30131,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3368:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3368:27:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30121,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29980,
                        "src": "3273:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3286:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "3273:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3273:123:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30136,
                  "nodeType": "ExpressionStatement",
                  "src": "3273:123:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783030",
                            "id": 30142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3437:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 30141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3429:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 30140,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3429:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3429:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30146,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29983,
                            "src": "3453:18:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 30145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3445:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30144,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3445:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3445:27:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30137,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "3404:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3419:9:46",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26580,
                      "src": "3404:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3404:69:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30149,
                  "nodeType": "ExpressionStatement",
                  "src": "3404:69:46"
                },
                {
                  "expression": {
                    "id": 30156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30150,
                      "name": "frensOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29995,
                      "src": "3508:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$597",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30154,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29980,
                          "src": "3538:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3522:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3022_$returns$_t_contract$_FrensOracle_$597_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensOracle)"
                        },
                        "typeName": {
                          "id": 30152,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30151,
                            "name": "FrensOracle",
                            "nameLocations": [
                              "3526:11:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 597,
                            "src": "3526:11:46"
                          },
                          "referencedDeclaration": 597,
                          "src": "3526:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensOracle_$597",
                            "typeString": "contract FrensOracle"
                          }
                        }
                      },
                      "id": 30155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3522:29:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$597",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "src": "3508:43:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensOracle_$597",
                      "typeString": "contract FrensOracle"
                    }
                  },
                  "id": 30157,
                  "nodeType": "ExpressionStatement",
                  "src": "3508:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3641:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734f7261636c65",
                                "id": 30165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3661:13:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                },
                                "value": "FrensOracle"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                }
                              ],
                              "expression": {
                                "id": 30162,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3624:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3628:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3624:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3624:51:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30161,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3614:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3614:62:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30170,
                            "name": "frensOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29995,
                            "src": "3686:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensOracle_$597",
                              "typeString": "contract FrensOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensOracle_$597",
                              "typeString": "contract FrensOracle"
                            }
                          ],
                          "id": 30169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3678:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3678:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3678:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30158,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29980,
                        "src": "3590:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3603:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "3590:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3590:109:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30173,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:109:46"
                },
                {
                  "expression": {
                    "id": 30180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30174,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29974,
                      "src": "3733:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30178,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29980,
                          "src": "3771:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3751:19:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3022_$returns$_t_contract$_FrensMetaHelper_$520_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 30176,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30175,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "3755:15:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 520,
                            "src": "3755:15:46"
                          },
                          "referencedDeclaration": 520,
                          "src": "3755:15:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 30179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3751:33:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "3733:51:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 30181,
                  "nodeType": "ExpressionStatement",
                  "src": "3733:51:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3873:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734d65746148656c706572",
                                "id": 30189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3893:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                },
                                "value": "FrensMetaHelper"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                }
                              ],
                              "expression": {
                                "id": 30186,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3856:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3860:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3856:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3856:55:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30185,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3846:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3846:66:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30194,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29974,
                            "src": "3922:15:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 30193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3914:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30192,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3914:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3914:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30182,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29980,
                        "src": "3822:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3835:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "3822:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3822:117:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30197,
                  "nodeType": "ExpressionStatement",
                  "src": "3822:117:46"
                },
                {
                  "expression": {
                    "id": 30204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30198,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29977,
                      "src": "3971:22:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30202,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29980,
                          "src": "4023:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3996:26:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3022_$returns$_t_contract$_FrensPoolShareTokenURI_$1175_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 30200,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30199,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "4000:22:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1175,
                            "src": "4000:22:46"
                          },
                          "referencedDeclaration": 1175,
                          "src": "4000:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 30203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3996:40:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "3971:65:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 30205,
                  "nodeType": "ExpressionStatement",
                  "src": "3971:65:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4123:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                                "id": 30213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4143:24:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                },
                                "value": "FrensPoolShareTokenURI"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                }
                              ],
                              "expression": {
                                "id": 30210,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4106:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4110:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4106:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4106:62:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30209,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4096:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4096:73:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30218,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29977,
                            "src": "4179:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 30217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4171:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30216,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4171:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4171:31:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30206,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29980,
                        "src": "4072:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4085:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "4072:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:131:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30221,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:131:46"
                },
                {
                  "expression": {
                    "id": 30228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30222,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29971,
                      "src": "4229:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30226,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29980,
                          "src": "4253:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4240:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3022_$returns$_t_contract$_FrensArt_$159_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 30224,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30223,
                            "name": "FrensArt",
                            "nameLocations": [
                              "4244:8:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 159,
                            "src": "4244:8:46"
                          },
                          "referencedDeclaration": 159,
                          "src": "4244:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$159",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 30227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4240:26:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "4229:37:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$159",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 30229,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:37:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4348:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734f7261636c65",
                                "id": 30237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4368:13:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                },
                                "value": "FrensOracle"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                }
                              ],
                              "expression": {
                                "id": 30234,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4331:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4335:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4331:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4331:51:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30233,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4321:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4321:62:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30242,
                            "name": "frensOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29995,
                            "src": "4393:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensOracle_$597",
                              "typeString": "contract FrensOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensOracle_$597",
                              "typeString": "contract FrensOracle"
                            }
                          ],
                          "id": 30241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4385:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30240,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4385:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4385:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30230,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29980,
                        "src": "4297:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4310:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "4297:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4297:109:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30245,
                  "nodeType": "ExpressionStatement",
                  "src": "4297:109:46"
                },
                {
                  "assignments": [
                    30247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30247,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "4514:4:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30280,
                      "src": "4506:12:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30246,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4506:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30253,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30250,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30016,
                        "src": "4548:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4559:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30248,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29983,
                        "src": "4522:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 30249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4541:6:46",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2646,
                      "src": "4522:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4522:79:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4505:96:46"
                },
                {
                  "expression": {
                    "id": 30261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30254,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29986,
                      "src": "4641:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2539",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30258,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30247,
                              "src": "4675:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4667:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30256,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4667:8:46",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4667:13:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30255,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2539,
                        "src": "4655:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2539_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4655:26:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2539",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "4641:40:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2539",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30262,
                  "nodeType": "ExpressionStatement",
                  "src": "4641:40:46"
                },
                {
                  "assignments": [
                    30264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30264,
                      "mutability": "mutable",
                      "name": "pool2",
                      "nameLocation": "4845:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30280,
                      "src": "4837:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30263,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4837:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30270,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30267,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30016,
                        "src": "4880:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4891:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30265,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29983,
                        "src": "4854:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2647",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 30266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4873:6:46",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2646,
                      "src": "4854:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4854:79:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4836:97:46"
                },
                {
                  "expression": {
                    "id": 30278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30271,
                      "name": "stakingPool2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29989,
                      "src": "4973:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2539",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30275,
                              "name": "pool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30264,
                              "src": "5008:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5000:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30273,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5000:8:46",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5000:14:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30272,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2539,
                        "src": "4988:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2539_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4988:27:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2539",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "4973:42:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2539",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30279,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:42:46"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2391:5:46",
            "parameters": {
              "id": 30041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2396:2:46"
            },
            "returnParameters": {
              "id": 30042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2406:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30304,
            "nodeType": "FunctionDefinition",
            "src": "5140:161:46",
            "nodes": [],
            "body": {
              "id": 30303,
              "nodeType": "Block",
              "src": "5178:123:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30285,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "5191:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30284,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5702,
                        5723,
                        5747,
                        5771
                      ],
                      "referencedDeclaration": 5702,
                      "src": "5186:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5186:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30287,
                  "nodeType": "ExpressionStatement",
                  "src": "5186:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "796f7520617265206e6f7420616c6c6f77656420746f206d696e74",
                        "id": 30291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5221:29:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        },
                        "value": "you are not allowed to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        }
                      ],
                      "expression": {
                        "id": 30288,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "5205:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10285",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5208:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9771,
                      "src": "5205:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5205:46:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30293,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:46:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30299,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30022,
                            "src": "5287:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 30298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5279:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30297,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5279:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5279:14:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30294,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "5259:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5274:4:46",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 685,
                      "src": "5259:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5259:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30302,
                  "nodeType": "ExpressionStatement",
                  "src": "5259:35:46"
                }
              ]
            },
            "functionSelector": "796a773d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintingDirectly",
            "nameLocation": "5149:19:46",
            "parameters": {
              "id": 30282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5168:2:46"
            },
            "returnParameters": {
              "id": 30283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5178:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30379,
            "nodeType": "FunctionDefinition",
            "src": "5307:587:46",
            "nodes": [],
            "body": {
              "id": 30378,
              "nodeType": "Block",
              "src": "5337:557:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30308,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "5355:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30307,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5792,
                        5813,
                        5837,
                        5861
                      ],
                      "referencedDeclaration": 5792,
                      "src": "5345:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5345:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30310,
                  "nodeType": "ExpressionStatement",
                  "src": "5345:16:46"
                },
                {
                  "assignments": [
                    30312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30312,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "5374:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30378,
                      "src": "5369:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30311,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5369:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30314,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5378:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5369:10:46"
                },
                {
                  "body": {
                    "id": 30376,
                    "nodeType": "Block",
                    "src": "5403:485:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30318,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29986,
                                "src": "5488:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2539",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5500:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "5488:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5521:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "5488:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5488:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30324,
                        "nodeType": "ExpressionStatement",
                        "src": "5488:37:46"
                      },
                      {
                        "assignments": [
                          30326
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30326,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "5542:2:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30376,
                            "src": "5537:7:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30325,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5537:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30332,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30329,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30022,
                              "src": "5582:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30330,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30312,
                              "src": "5589:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30327,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29992,
                              "src": "5547:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5562:19:46",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28075,
                            "src": "5547:34:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5547:44:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5537:54:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30334,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30326,
                                "src": "5612:2:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30335,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30312,
                                "src": "5618:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5612:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30333,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3456,
                              3477
                            ],
                            "referencedDeclaration": 3456,
                            "src": "5601:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5601:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30338,
                        "nodeType": "ExpressionStatement",
                        "src": "5601:20:46"
                      },
                      {
                        "assignments": [
                          30340
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30340,
                            "mutability": "mutable",
                            "name": "shouldBeZero",
                            "nameLocation": "5640:12:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30376,
                            "src": "5632:20:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30339,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5632:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30345,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30343,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30312,
                              "src": "5682:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30341,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29992,
                              "src": "5655:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5670:11:46",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 757,
                            "src": "5655:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5655:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5632:52:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 30349,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5711:1:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 30348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5703:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30347,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5703:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5703:10:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30351,
                              "name": "shouldBeZero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30340,
                              "src": "5715:12:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30346,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6354,
                              6379,
                              6392,
                              6408,
                              6450,
                              6492,
                              6534,
                              6571,
                              6608,
                              6645,
                              3507,
                              3532,
                              3562,
                              3587,
                              3646,
                              3671,
                              3701,
                              3726,
                              4826,
                              4861
                            ],
                            "referencedDeclaration": 3507,
                            "src": "5694:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5694:34:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30353,
                        "nodeType": "ExpressionStatement",
                        "src": "5694:34:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30357,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30028,
                              "src": "5762:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30358,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30312,
                              "src": "5767:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30354,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29992,
                              "src": "5739:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5754:7:46",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27175,
                            "src": "5739:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 30359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5739:30:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30360,
                        "nodeType": "ExpressionStatement",
                        "src": "5739:30:46"
                      },
                      {
                        "assignments": [
                          30362
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30362,
                            "mutability": "mutable",
                            "name": "shouldBeBob",
                            "nameLocation": "5787:11:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30376,
                            "src": "5779:19:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30361,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5779:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30367,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30365,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30312,
                              "src": "5828:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30363,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29992,
                              "src": "5801:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5816:11:46",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 757,
                            "src": "5801:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5801:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5779:51:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30369,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30028,
                              "src": "5849:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30370,
                              "name": "shouldBeBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30362,
                              "src": "5854:11:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30368,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6354,
                              6379,
                              6392,
                              6408,
                              6450,
                              6492,
                              6534,
                              6571,
                              6608,
                              6645,
                              3507,
                              3532,
                              3562,
                              3587,
                              3646,
                              3671,
                              3701,
                              3726,
                              4826,
                              4861
                            ],
                            "referencedDeclaration": 3507,
                            "src": "5840:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5840:26:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30372,
                        "nodeType": "ExpressionStatement",
                        "src": "5840:26:46"
                      },
                      {
                        "expression": {
                          "id": 30374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "5876:3:46",
                          "subExpression": {
                            "id": 30373,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30312,
                            "src": "5876:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30375,
                        "nodeType": "ExpressionStatement",
                        "src": "5876:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30315,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30312,
                      "src": "5394:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5398:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "5394:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30377,
                  "nodeType": "WhileStatement",
                  "src": "5387:501:46"
                }
              ]
            },
            "functionSelector": "1aeb10a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testApprove",
            "nameLocation": "5316:11:46",
            "parameters": {
              "id": 30305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5327:2:46"
            },
            "returnParameters": {
              "id": 30306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5337:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30436,
            "nodeType": "FunctionDefinition",
            "src": "5900:408:46",
            "nodes": [],
            "body": {
              "id": 30435,
              "nodeType": "Block",
              "src": "5932:376:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30383,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "5950:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30382,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5792,
                        5813,
                        5837,
                        5861
                      ],
                      "referencedDeclaration": 5792,
                      "src": "5940:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5940:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30385,
                  "nodeType": "ExpressionStatement",
                  "src": "5940:16:46"
                },
                {
                  "assignments": [
                    30387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30387,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "5969:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30435,
                      "src": "5964:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30386,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5964:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30389,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5973:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5964:10:46"
                },
                {
                  "body": {
                    "id": 30433,
                    "nodeType": "Block",
                    "src": "5998:304:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30393,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29986,
                                "src": "6008:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2539",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6020:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "6008:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6041:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6008:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6008:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30399,
                        "nodeType": "ExpressionStatement",
                        "src": "6008:37:46"
                      },
                      {
                        "assignments": [
                          30401
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30401,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6060:2:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30433,
                            "src": "6055:7:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30400,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6055:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30407,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30404,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30022,
                              "src": "6100:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30405,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30387,
                              "src": "6107:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30402,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29992,
                              "src": "6065:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6080:19:46",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28075,
                            "src": "6065:34:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6065:44:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6055:54:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30409,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30401,
                                "src": "6130:2:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30410,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30387,
                                "src": "6136:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6130:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "66697273742069732069732030",
                              "id": 30412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6139:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5383c90f43f3984cfbee9f1b49449ca89697befdf646488c4aed86b6fc774c91",
                                "typeString": "literal_string \"first is is 0\""
                              },
                              "value": "first is is 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5383c90f43f3984cfbee9f1b49449ca89697befdf646488c4aed86b6fc774c91",
                                "typeString": "literal_string \"first is is 0\""
                              }
                            ],
                            "id": 30408,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3456,
                              3477
                            ],
                            "referencedDeclaration": 3477,
                            "src": "6119:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 30413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6119:36:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30414,
                        "nodeType": "ExpressionStatement",
                        "src": "6119:36:46"
                      },
                      {
                        "assignments": [
                          30416
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30416,
                            "mutability": "mutable",
                            "name": "balanceOfAlice",
                            "nameLocation": "6170:14:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30433,
                            "src": "6165:19:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30415,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6165:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30421,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30419,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30022,
                              "src": "6212:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 30417,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29992,
                              "src": "6187:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6202:9:46",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27036,
                            "src": "6187:24:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 30420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6187:31:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6165:53:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30423,
                              "name": "balanceOfAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30416,
                              "src": "6237:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30424,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30387,
                                "src": "6253:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 30425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6257:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6253:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "73686f756c6420686176652069202b2031",
                              "id": 30427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6260:19:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_978826511a0b0555103e7b26be874c5b266d55585b385712656ccee45fca8f35",
                                "typeString": "literal_string \"should have i + 1\""
                              },
                              "value": "should have i + 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_978826511a0b0555103e7b26be874c5b266d55585b385712656ccee45fca8f35",
                                "typeString": "literal_string \"should have i + 1\""
                              }
                            ],
                            "id": 30422,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6354,
                              6379,
                              6392,
                              6408,
                              6450,
                              6492,
                              6534,
                              6571,
                              6608,
                              6645,
                              3507,
                              3532,
                              3562,
                              3587,
                              3646,
                              3671,
                              3701,
                              3726,
                              4826,
                              4861
                            ],
                            "referencedDeclaration": 3726,
                            "src": "6228:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 30428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6228:52:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30429,
                        "nodeType": "ExpressionStatement",
                        "src": "6228:52:46"
                      },
                      {
                        "expression": {
                          "id": 30431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6290:3:46",
                          "subExpression": {
                            "id": 30430,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30387,
                            "src": "6290:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30432,
                        "nodeType": "ExpressionStatement",
                        "src": "6290:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30390,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30387,
                      "src": "5989:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5993:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "5989:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30434,
                  "nodeType": "WhileStatement",
                  "src": "5982:320:46"
                }
              ]
            },
            "functionSelector": "3df77c0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBalanceOf",
            "nameLocation": "5909:13:46",
            "parameters": {
              "id": 30380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5922:2:46"
            },
            "returnParameters": {
              "id": 30381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5932:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30477,
            "nodeType": "FunctionDefinition",
            "src": "6314:278:46",
            "nodes": [],
            "body": {
              "id": 30476,
              "nodeType": "Block",
              "src": "6343:249:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30440,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "6361:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30439,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5792,
                        5813,
                        5837,
                        5861
                      ],
                      "referencedDeclaration": 5792,
                      "src": "6351:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6351:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30442,
                  "nodeType": "ExpressionStatement",
                  "src": "6351:16:46"
                },
                {
                  "assignments": [
                    30444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30444,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6387:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30476,
                      "src": "6382:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30443,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6382:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30446,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6391:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6382:10:46"
                },
                {
                  "body": {
                    "id": 30474,
                    "nodeType": "Block",
                    "src": "6417:162:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30453,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30444,
                                  "src": "6461:1:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30451,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29992,
                                  "src": "6439:14:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 30452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6454:6:46",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 697,
                                "src": "6439:21:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 30454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6439:24:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30450,
                            "name": "assertFalse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6304,
                              6318
                            ],
                            "referencedDeclaration": 6304,
                            "src": "6427:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6427:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30456,
                        "nodeType": "ExpressionStatement",
                        "src": "6427:37:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30457,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29986,
                                "src": "6474:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2539",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6486:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "6474:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6507:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6474:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6474:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30463,
                        "nodeType": "ExpressionStatement",
                        "src": "6474:37:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30467,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30444,
                                  "src": "6554:1:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30465,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29992,
                                  "src": "6532:14:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 30466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6547:6:46",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 697,
                                "src": "6532:21:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 30468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6532:24:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30464,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3456,
                              3477
                            ],
                            "referencedDeclaration": 3456,
                            "src": "6521:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6521:36:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30470,
                        "nodeType": "ExpressionStatement",
                        "src": "6521:36:46"
                      },
                      {
                        "expression": {
                          "id": 30472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6567:3:46",
                          "subExpression": {
                            "id": 30471,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30444,
                            "src": "6567:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30473,
                        "nodeType": "ExpressionStatement",
                        "src": "6567:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30447,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30444,
                      "src": "6408:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6412:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6408:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30475,
                  "nodeType": "WhileStatement",
                  "src": "6401:178:46"
                }
              ]
            },
            "functionSelector": "524ad495",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testexists",
            "nameLocation": "6323:10:46",
            "parameters": {
              "id": 30437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6333:2:46"
            },
            "returnParameters": {
              "id": 30438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6343:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30569,
            "nodeType": "FunctionDefinition",
            "src": "6598:697:46",
            "nodes": [],
            "body": {
              "id": 30568,
              "nodeType": "Block",
              "src": "6632:663:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30481,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "6650:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30480,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5792,
                        5813,
                        5837,
                        5861
                      ],
                      "referencedDeclaration": 5792,
                      "src": "6640:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6640:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30483,
                  "nodeType": "ExpressionStatement",
                  "src": "6640:16:46"
                },
                {
                  "assignments": [
                    30485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30485,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6669:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30568,
                      "src": "6664:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30484,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6664:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30487,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6673:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6664:10:46"
                },
                {
                  "body": {
                    "id": 30566,
                    "nodeType": "Block",
                    "src": "6698:591:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30491,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29986,
                                "src": "6708:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2539",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6720:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "6708:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6741:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6708:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6708:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30497,
                        "nodeType": "ExpressionStatement",
                        "src": "6708:37:46"
                      },
                      {
                        "assignments": [
                          30499
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30499,
                            "mutability": "mutable",
                            "name": "sbStakingPool",
                            "nameLocation": "6763:13:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30566,
                            "src": "6755:21:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30498,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6755:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30504,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30502,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30485,
                              "src": "6806:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30500,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29992,
                              "src": "6779:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6794:11:46",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 710,
                            "src": "6779:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6779:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6755:53:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30508,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29986,
                                  "src": "6835:11:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2539",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2539",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6827:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30506,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6827:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6827:20:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30510,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30499,
                              "src": "6849:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30505,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6354,
                              6379,
                              6392,
                              6408,
                              6450,
                              6492,
                              6534,
                              6571,
                              6608,
                              6645,
                              3507,
                              3532,
                              3562,
                              3587,
                              3646,
                              3671,
                              3701,
                              3726,
                              4826,
                              4861
                            ],
                            "referencedDeclaration": 3507,
                            "src": "6818:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6818:45:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30512,
                        "nodeType": "ExpressionStatement",
                        "src": "6818:45:46"
                      },
                      {
                        "expression": {
                          "id": 30514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6873:3:46",
                          "subExpression": {
                            "id": 30513,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30485,
                            "src": "6873:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30515,
                        "nodeType": "ExpressionStatement",
                        "src": "6873:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30516,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29989,
                                "src": "6886:12:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2539",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6899:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "6886:26:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6920:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6886:36:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6886:38:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30522,
                        "nodeType": "ExpressionStatement",
                        "src": "6886:38:46"
                      },
                      {
                        "assignments": [
                          30524
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30524,
                            "mutability": "mutable",
                            "name": "sbStakingPool2",
                            "nameLocation": "6942:14:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30566,
                            "src": "6934:22:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30523,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6934:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30529,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30527,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30485,
                              "src": "6986:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30525,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29992,
                              "src": "6959:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6974:11:46",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 710,
                            "src": "6959:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6959:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6934:54:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30533,
                                  "name": "stakingPool2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29989,
                                  "src": "7015:12:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2539",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2539",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7007:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30531,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7007:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7007:21:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30535,
                              "name": "sbStakingPool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30524,
                              "src": "7030:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30530,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6354,
                              6379,
                              6392,
                              6408,
                              6450,
                              6492,
                              6534,
                              6571,
                              6608,
                              6645,
                              3507,
                              3532,
                              3562,
                              3587,
                              3646,
                              3671,
                              3701,
                              3726,
                              4826,
                              4861
                            ],
                            "referencedDeclaration": 3507,
                            "src": "6998:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6998:47:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30537,
                        "nodeType": "ExpressionStatement",
                        "src": "6998:47:46"
                      },
                      {
                        "expression": {
                          "id": 30539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7055:3:46",
                          "subExpression": {
                            "id": 30538,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30485,
                            "src": "7055:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30540,
                        "nodeType": "ExpressionStatement",
                        "src": "7055:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30541,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29986,
                                "src": "7068:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2539",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7080:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "7068:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7101:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7068:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7068:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30547,
                        "nodeType": "ExpressionStatement",
                        "src": "7068:37:46"
                      },
                      {
                        "expression": {
                          "id": 30553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 30548,
                            "name": "sbStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30499,
                            "src": "7166:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 30551,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30485,
                                "src": "7209:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30549,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29992,
                                "src": "7182:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 30550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7197:11:46",
                              "memberName": "getPoolById",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 710,
                              "src": "7182:26:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 30552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7182:29:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7166:45:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30554,
                        "nodeType": "ExpressionStatement",
                        "src": "7166:45:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30558,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29986,
                                  "src": "7238:11:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2539",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2539",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7230:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30556,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7230:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7230:20:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30560,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30499,
                              "src": "7252:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30555,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6354,
                              6379,
                              6392,
                              6408,
                              6450,
                              6492,
                              6534,
                              6571,
                              6608,
                              6645,
                              3507,
                              3532,
                              3562,
                              3587,
                              3646,
                              3671,
                              3701,
                              3726,
                              4826,
                              4861
                            ],
                            "referencedDeclaration": 3507,
                            "src": "7221:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7221:45:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30562,
                        "nodeType": "ExpressionStatement",
                        "src": "7221:45:46"
                      },
                      {
                        "expression": {
                          "id": 30564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7276:3:46",
                          "subExpression": {
                            "id": 30563,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30485,
                            "src": "7276:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30565,
                        "nodeType": "ExpressionStatement",
                        "src": "7276:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30488,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30485,
                      "src": "6689:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6693:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6689:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30567,
                  "nodeType": "WhileStatement",
                  "src": "6682:607:46"
                }
              ]
            },
            "functionSelector": "87496250",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetPoolById",
            "nameLocation": "6607:15:46",
            "parameters": {
              "id": 30478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6622:2:46"
            },
            "returnParameters": {
              "id": 30479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6632:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30619,
            "nodeType": "FunctionDefinition",
            "src": "7301:357:46",
            "nodes": [],
            "body": {
              "id": 30618,
              "nodeType": "Block",
              "src": "7340:318:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30573,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "7358:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30572,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5792,
                        5813,
                        5837,
                        5861
                      ],
                      "referencedDeclaration": 5792,
                      "src": "7348:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7348:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30575,
                  "nodeType": "ExpressionStatement",
                  "src": "7348:16:46"
                },
                {
                  "assignments": [
                    30577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30577,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "7377:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30618,
                      "src": "7372:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30576,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7372:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30579,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7381:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7372:10:46"
                },
                {
                  "body": {
                    "id": 30593,
                    "nodeType": "Block",
                    "src": "7405:69:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30583,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29986,
                                "src": "7415:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2539",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7427:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "7415:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7448:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7415:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7415:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30589,
                        "nodeType": "ExpressionStatement",
                        "src": "7415:37:46"
                      },
                      {
                        "expression": {
                          "id": 30591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7462:3:46",
                          "subExpression": {
                            "id": 30590,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30577,
                            "src": "7462:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30592,
                        "nodeType": "ExpressionStatement",
                        "src": "7462:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30580,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30577,
                      "src": "7397:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3634",
                      "id": 30581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7401:2:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_64_by_1",
                        "typeString": "int_const 64"
                      },
                      "value": "64"
                    },
                    "src": "7397:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30594,
                  "nodeType": "WhileStatement",
                  "src": "7390:84:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30598,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30022,
                            "src": "7525:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 30599,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30028,
                            "src": "7532:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 30596,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29992,
                            "src": "7493:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7508:16:46",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27228,
                          "src": "7493:31:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 30600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7493:43:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30595,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6304,
                        6318
                      ],
                      "referencedDeclaration": 6304,
                      "src": "7481:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 30601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7481:56:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30602,
                  "nodeType": "ExpressionStatement",
                  "src": "7481:56:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30606,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "7578:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 30607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7583:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30603,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "7545:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7560:17:46",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27210,
                      "src": "7545:32:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 30608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7545:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30609,
                  "nodeType": "ExpressionStatement",
                  "src": "7545:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30613,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30022,
                            "src": "7639:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 30614,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30028,
                            "src": "7646:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 30611,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29992,
                            "src": "7607:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7622:16:46",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27228,
                          "src": "7607:31:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 30615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7607:43:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30610,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3456,
                        3477
                      ],
                      "referencedDeclaration": 3456,
                      "src": "7596:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 30616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7596:55:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30617,
                  "nodeType": "ExpressionStatement",
                  "src": "7596:55:46"
                }
              ]
            },
            "functionSelector": "09d26b6c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIsApprovedForAll",
            "nameLocation": "7310:20:46",
            "parameters": {
              "id": 30570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7330:2:46"
            },
            "returnParameters": {
              "id": 30571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7340:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30669,
            "nodeType": "FunctionDefinition",
            "src": "7664:330:46",
            "nodes": [],
            "body": {
              "id": 30668,
              "nodeType": "Block",
              "src": "7692:302:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30625,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7717:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31037",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31037",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7709:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30623,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7709:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7709:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30627,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29992,
                            "src": "7724:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7739:5:46",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26843,
                          "src": "7724:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 30629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7724:22:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30622,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6354,
                        6379,
                        6392,
                        6408,
                        6450,
                        6492,
                        6534,
                        6571,
                        6608,
                        6645,
                        3507,
                        3532,
                        3562,
                        3587,
                        3646,
                        3671,
                        3701,
                        3726,
                        4826,
                        4861
                      ],
                      "referencedDeclaration": 3507,
                      "src": "7700:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7700:47:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30631,
                  "nodeType": "ExpressionStatement",
                  "src": "7700:47:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30633,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "7760:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30632,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5702,
                        5723,
                        5747,
                        5771
                      ],
                      "referencedDeclaration": 5702,
                      "src": "7755:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7755:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30635,
                  "nodeType": "ExpressionStatement",
                  "src": "7755:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 30639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7790:34:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 30636,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "7774:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10285",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7777:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9771,
                      "src": "7774:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7774:51:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30641,
                  "nodeType": "ExpressionStatement",
                  "src": "7774:51:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30645,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "7866:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30642,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "7833:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7848:17:46",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26894,
                      "src": "7833:32:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7833:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30647,
                  "nodeType": "ExpressionStatement",
                  "src": "7833:37:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30651,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7891:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31037",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31037",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7883:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30649,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7883:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7883:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30648,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5702,
                        5723,
                        5747,
                        5771
                      ],
                      "referencedDeclaration": 5702,
                      "src": "7878:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7878:19:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30654,
                  "nodeType": "ExpressionStatement",
                  "src": "7878:19:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30658,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "7938:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30655,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "7905:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7920:17:46",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26894,
                      "src": "7905:32:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7905:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30660,
                  "nodeType": "ExpressionStatement",
                  "src": "7905:37:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30662,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "7959:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30663,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29992,
                            "src": "7964:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7979:5:46",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26843,
                          "src": "7964:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 30665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7964:22:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30661,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6354,
                        6379,
                        6392,
                        6408,
                        6450,
                        6492,
                        6534,
                        6571,
                        6608,
                        6645,
                        3507,
                        3532,
                        3562,
                        3587,
                        3646,
                        3671,
                        3701,
                        3726,
                        4826,
                        4861
                      ],
                      "referencedDeclaration": 3507,
                      "src": "7950:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7950:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30667,
                  "nodeType": "ExpressionStatement",
                  "src": "7950:37:46"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "7673:9:46",
            "parameters": {
              "id": 30620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7682:2:46"
            },
            "returnParameters": {
              "id": 30621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7692:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30760,
            "nodeType": "FunctionDefinition",
            "src": "8000:620:46",
            "nodes": [],
            "body": {
              "id": 30759,
              "nodeType": "Block",
              "src": "8030:590:46",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30673,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "8043:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30759,
                      "src": "8038:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30672,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8038:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30675,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8047:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8038:10:46"
                },
                {
                  "body": {
                    "id": 30757,
                    "nodeType": "Block",
                    "src": "8072:542:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30680,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30022,
                              "src": "8087:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30679,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5702,
                              5723,
                              5747,
                              5771
                            ],
                            "referencedDeclaration": 5702,
                            "src": "8082:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8082:11:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30682,
                        "nodeType": "ExpressionStatement",
                        "src": "8082:11:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30683,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29986,
                                "src": "8103:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2539",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8115:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "8103:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8136:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8103:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8103:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30689,
                        "nodeType": "ExpressionStatement",
                        "src": "8103:37:46"
                      },
                      {
                        "assignments": [
                          30691
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30691,
                            "mutability": "mutable",
                            "name": "sbAlice",
                            "nameLocation": "8158:7:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30757,
                            "src": "8150:15:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30690,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8150:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30696,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30694,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30673,
                              "src": "8191:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30692,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29992,
                              "src": "8168:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8183:7:46",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27064,
                            "src": "8168:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8168:25:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8150:43:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30698,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30022,
                              "src": "8212:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30699,
                              "name": "sbAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30691,
                              "src": "8219:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30697,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6354,
                              6379,
                              6392,
                              6408,
                              6450,
                              6492,
                              6534,
                              6571,
                              6608,
                              6645,
                              3507,
                              3532,
                              3562,
                              3587,
                              3646,
                              3671,
                              3701,
                              3726,
                              4826,
                              4861
                            ],
                            "referencedDeclaration": 3507,
                            "src": "8203:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8203:24:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30701,
                        "nodeType": "ExpressionStatement",
                        "src": "8203:24:46"
                      },
                      {
                        "expression": {
                          "id": 30703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8237:3:46",
                          "subExpression": {
                            "id": 30702,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30673,
                            "src": "8237:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30704,
                        "nodeType": "ExpressionStatement",
                        "src": "8237:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30706,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30028,
                              "src": "8255:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30705,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5702,
                              5723,
                              5747,
                              5771
                            ],
                            "referencedDeclaration": 5702,
                            "src": "8250:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8250:9:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30708,
                        "nodeType": "ExpressionStatement",
                        "src": "8250:9:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30709,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29989,
                                "src": "8269:12:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2539",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8282:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "8269:26:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8303:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8269:36:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8269:38:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30715,
                        "nodeType": "ExpressionStatement",
                        "src": "8269:38:46"
                      },
                      {
                        "assignments": [
                          30717
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30717,
                            "mutability": "mutable",
                            "name": "sbBob",
                            "nameLocation": "8325:5:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30757,
                            "src": "8317:13:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30716,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8317:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30722,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30720,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30673,
                              "src": "8356:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30718,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29992,
                              "src": "8333:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8348:7:46",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27064,
                            "src": "8333:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8333:25:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8317:41:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30724,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30028,
                              "src": "8377:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30725,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30717,
                              "src": "8382:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30723,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6354,
                              6379,
                              6392,
                              6408,
                              6450,
                              6492,
                              6534,
                              6571,
                              6608,
                              6645,
                              3507,
                              3532,
                              3562,
                              3587,
                              3646,
                              3671,
                              3701,
                              3726,
                              4826,
                              4861
                            ],
                            "referencedDeclaration": 3507,
                            "src": "8368:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8368:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30727,
                        "nodeType": "ExpressionStatement",
                        "src": "8368:20:46"
                      },
                      {
                        "expression": {
                          "id": 30729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8398:3:46",
                          "subExpression": {
                            "id": 30728,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30673,
                            "src": "8398:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30730,
                        "nodeType": "ExpressionStatement",
                        "src": "8398:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30732,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30028,
                              "src": "8416:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30731,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5702,
                              5723,
                              5747,
                              5771
                            ],
                            "referencedDeclaration": 5702,
                            "src": "8411:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8411:9:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30734,
                        "nodeType": "ExpressionStatement",
                        "src": "8411:9:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30735,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29986,
                                "src": "8430:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2539",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8442:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "8430:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8463:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8430:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8430:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30741,
                        "nodeType": "ExpressionStatement",
                        "src": "8430:37:46"
                      },
                      {
                        "expression": {
                          "id": 30747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 30742,
                            "name": "sbBob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30717,
                            "src": "8528:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 30745,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30673,
                                "src": "8559:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30743,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29992,
                                "src": "8536:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 30744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8551:7:46",
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27064,
                              "src": "8536:22:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 30746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8536:25:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8528:33:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30748,
                        "nodeType": "ExpressionStatement",
                        "src": "8528:33:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30750,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30028,
                              "src": "8580:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30751,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30717,
                              "src": "8585:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30749,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6354,
                              6379,
                              6392,
                              6408,
                              6450,
                              6492,
                              6534,
                              6571,
                              6608,
                              6645,
                              3507,
                              3532,
                              3562,
                              3587,
                              3646,
                              3671,
                              3701,
                              3726,
                              4826,
                              4861
                            ],
                            "referencedDeclaration": 3507,
                            "src": "8571:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8571:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30753,
                        "nodeType": "ExpressionStatement",
                        "src": "8571:20:46"
                      },
                      {
                        "expression": {
                          "id": 30755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8601:3:46",
                          "subExpression": {
                            "id": 30754,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30673,
                            "src": "8601:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30756,
                        "nodeType": "ExpressionStatement",
                        "src": "8601:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30676,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30673,
                      "src": "8063:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8067:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "8063:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30758,
                  "nodeType": "WhileStatement",
                  "src": "8056:558:46"
                }
              ]
            },
            "functionSelector": "71a29bb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwnerOf",
            "nameLocation": "8009:11:46",
            "parameters": {
              "id": 30670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8020:2:46"
            },
            "returnParameters": {
              "id": 30671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8030:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30884,
            "nodeType": "FunctionDefinition",
            "src": "8626:861:46",
            "nodes": [],
            "body": {
              "id": 30883,
              "nodeType": "Block",
              "src": "8665:822:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30764,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "8678:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30763,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5702,
                        5723,
                        5747,
                        5771
                      ],
                      "referencedDeclaration": 5702,
                      "src": "8673:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8673:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30766,
                  "nodeType": "ExpressionStatement",
                  "src": "8673:11:46"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 30767,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29986,
                          "src": "8692:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2539",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 30769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8704:13:46",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1781,
                        "src": "8692:25:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 30771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 30770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8725:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "8692:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 30772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8692:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30773,
                  "nodeType": "ExpressionStatement",
                  "src": "8692:37:46"
                },
                {
                  "assignments": [
                    30775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30775,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "8742:2:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30883,
                      "src": "8737:7:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30774,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8737:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30781,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30778,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "8782:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8789:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 30776,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "8747:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8762:19:46",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28075,
                      "src": "8747:34:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 30780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8747:44:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8737:54:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30783,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "8808:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30786,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30775,
                            "src": "8838:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30784,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29992,
                            "src": "8815:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8830:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27064,
                          "src": "8815:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 30787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8815:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30782,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6354,
                        6379,
                        6392,
                        6408,
                        6450,
                        6492,
                        6534,
                        6571,
                        6608,
                        6645,
                        3507,
                        3532,
                        3562,
                        3587,
                        3646,
                        3671,
                        3701,
                        3726,
                        4826,
                        4861
                      ],
                      "referencedDeclaration": 3507,
                      "src": "8799:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8799:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30789,
                  "nodeType": "ExpressionStatement",
                  "src": "8799:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30791,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "8855:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30790,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5702,
                        5723,
                        5747,
                        5771
                      ],
                      "referencedDeclaration": 5702,
                      "src": "8850:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8850:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30793,
                  "nodeType": "ExpressionStatement",
                  "src": "8850:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 30797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8883:47:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "expression": {
                        "id": 30794,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "8867:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10285",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8870:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9771,
                      "src": "8867:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8867:64:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30799,
                  "nodeType": "ExpressionStatement",
                  "src": "8867:64:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30803,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "8971:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30804,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "8978:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30805,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30775,
                        "src": "8983:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30800,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "8939:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8954:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27274,
                      "src": "8939:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8939:47:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30807,
                  "nodeType": "ExpressionStatement",
                  "src": "8939:47:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30809,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "8999:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30808,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5702,
                        5723,
                        5747,
                        5771
                      ],
                      "referencedDeclaration": 5702,
                      "src": "8994:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8994:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30811,
                  "nodeType": "ExpressionStatement",
                  "src": "8994:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30815,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "9045:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30816,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "9052:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30817,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30775,
                        "src": "9057:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30812,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "9013:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9028:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27274,
                      "src": "9013:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9013:47:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30819,
                  "nodeType": "ExpressionStatement",
                  "src": "9013:47:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30821,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "9077:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30824,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30775,
                            "src": "9105:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30822,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29992,
                            "src": "9082:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9097:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27064,
                          "src": "9082:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 30825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9082:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30820,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6354,
                        6379,
                        6392,
                        6408,
                        6450,
                        6492,
                        6534,
                        6571,
                        6608,
                        6645,
                        3507,
                        3532,
                        3562,
                        3587,
                        3646,
                        3671,
                        3701,
                        3726,
                        4826,
                        4861
                      ],
                      "referencedDeclaration": 3507,
                      "src": "9068:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9068:41:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30827,
                  "nodeType": "ExpressionStatement",
                  "src": "9068:41:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30829,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "9122:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30828,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5702,
                        5723,
                        5747,
                        5771
                      ],
                      "referencedDeclaration": 5702,
                      "src": "9117:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9117:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30831,
                  "nodeType": "ExpressionStatement",
                  "src": "9117:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 30835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9150:52:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "expression": {
                        "id": 30832,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "9134:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10285",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9137:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9771,
                      "src": "9134:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9134:69:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30837,
                  "nodeType": "ExpressionStatement",
                  "src": "9134:69:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30841,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "9243:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30844,
                            "name": "frensStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29980,
                            "src": "9256:12:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensStorage_$1483",
                              "typeString": "contract FrensStorage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensStorage_$1483",
                              "typeString": "contract FrensStorage"
                            }
                          ],
                          "id": 30843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9248:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30842,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9248:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9248:21:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30846,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30775,
                        "src": "9271:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30838,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "9211:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9226:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27274,
                      "src": "9211:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9211:63:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30848,
                  "nodeType": "ExpressionStatement",
                  "src": "9211:63:46"
                },
                {
                  "assignments": [
                    30851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30851,
                      "mutability": "mutable",
                      "name": "nftReceiver",
                      "nameLocation": "9295:11:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30883,
                      "src": "9283:23:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftReceiver_$34904",
                        "typeString": "contract NftReceiver"
                      },
                      "typeName": {
                        "id": 30850,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30849,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "9283:11:46"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34904,
                          "src": "9283:11:46"
                        },
                        "referencedDeclaration": 34904,
                        "src": "9283:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$34904",
                          "typeString": "contract NftReceiver"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30856,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9309:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NftReceiver_$34904_$",
                        "typeString": "function () returns (contract NftReceiver)"
                      },
                      "typeName": {
                        "id": 30853,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30852,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "9313:11:46"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34904,
                          "src": "9313:11:46"
                        },
                        "referencedDeclaration": 34904,
                        "src": "9313:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$34904",
                          "typeString": "contract NftReceiver"
                        }
                      }
                    },
                    "id": 30855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9309:17:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftReceiver_$34904",
                      "typeString": "contract NftReceiver"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9283:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30858,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "9339:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30857,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5702,
                        5723,
                        5747,
                        5771
                      ],
                      "referencedDeclaration": 5702,
                      "src": "9334:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9334:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30860,
                  "nodeType": "ExpressionStatement",
                  "src": "9334:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30864,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "9383:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30867,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30851,
                            "src": "9396:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$34904",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$34904",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 30866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9388:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30865,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9388:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9388:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30869,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30775,
                        "src": "9410:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30861,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "9351:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9366:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27274,
                      "src": "9351:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9351:62:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30871,
                  "nodeType": "ExpressionStatement",
                  "src": "9351:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30875,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30851,
                            "src": "9438:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$34904",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$34904",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 30874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9430:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30873,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9430:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9430:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30879,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30775,
                            "src": "9475:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30877,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29992,
                            "src": "9452:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9467:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27064,
                          "src": "9452:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 30880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9452:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30872,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6354,
                        6379,
                        6392,
                        6408,
                        6450,
                        6492,
                        6534,
                        6571,
                        6608,
                        6645,
                        3507,
                        3532,
                        3562,
                        3587,
                        3646,
                        3671,
                        3701,
                        3726,
                        4826,
                        4861
                      ],
                      "referencedDeclaration": 3507,
                      "src": "9421:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9421:58:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30882,
                  "nodeType": "ExpressionStatement",
                  "src": "9421:58:46"
                }
              ]
            },
            "functionSelector": "90ec5d96",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSafeTransferFrom",
            "nameLocation": "8635:20:46",
            "parameters": {
              "id": 30761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8655:2:46"
            },
            "returnParameters": {
              "id": 30762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8665:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30924,
            "nodeType": "FunctionDefinition",
            "src": "9493:256:46",
            "nodes": [],
            "body": {
              "id": 30923,
              "nodeType": "Block",
              "src": "9528:221:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30888,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "9546:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30887,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5792,
                        5813,
                        5837,
                        5861
                      ],
                      "referencedDeclaration": 5792,
                      "src": "9536:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9536:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30890,
                  "nodeType": "ExpressionStatement",
                  "src": "9536:16:46"
                },
                {
                  "assignments": [
                    30892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30892,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "9565:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30923,
                      "src": "9560:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30891,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9560:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30894,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9569:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9560:10:46"
                },
                {
                  "body": {
                    "id": 30921,
                    "nodeType": "Block",
                    "src": "9594:149:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30898,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29986,
                                "src": "9604:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2539",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9616:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "9604:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9637:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "9604:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9604:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30904,
                        "nodeType": "ExpressionStatement",
                        "src": "9604:37:46"
                      },
                      {
                        "assignments": [
                          30906
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30906,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "9656:2:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30921,
                            "src": "9651:7:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30905,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9651:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30911,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30909,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30892,
                              "src": "9689:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30907,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29992,
                              "src": "9661:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9676:12:46",
                            "memberName": "tokenByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28109,
                            "src": "9661:27:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9661:30:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9651:40:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30913,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30906,
                                "src": "9712:2:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30914,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30892,
                                "src": "9718:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9712:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30912,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3456,
                              3477
                            ],
                            "referencedDeclaration": 3456,
                            "src": "9701:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9701:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30917,
                        "nodeType": "ExpressionStatement",
                        "src": "9701:20:46"
                      },
                      {
                        "expression": {
                          "id": 30919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9731:3:46",
                          "subExpression": {
                            "id": 30918,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30892,
                            "src": "9731:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30920,
                        "nodeType": "ExpressionStatement",
                        "src": "9731:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30895,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30892,
                      "src": "9585:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9589:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "9585:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30922,
                  "nodeType": "WhileStatement",
                  "src": "9578:165:46"
                }
              ]
            },
            "functionSelector": "6a7179c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenByIndex",
            "nameLocation": "9502:16:46",
            "parameters": {
              "id": 30885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9518:2:46"
            },
            "returnParameters": {
              "id": 30886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9528:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30985,
            "nodeType": "FunctionDefinition",
            "src": "9755:436:46",
            "nodes": [],
            "body": {
              "id": 30984,
              "nodeType": "Block",
              "src": "9790:401:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30928,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "9803:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30927,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5702,
                        5723,
                        5747,
                        5771
                      ],
                      "referencedDeclaration": 5702,
                      "src": "9798:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9798:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30930,
                  "nodeType": "ExpressionStatement",
                  "src": "9798:11:46"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 30931,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29986,
                          "src": "9817:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2539",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 30933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9829:13:46",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1781,
                        "src": "9817:25:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 30935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 30934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9850:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "9817:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 30936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9817:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30937,
                  "nodeType": "ExpressionStatement",
                  "src": "9817:37:46"
                },
                {
                  "assignments": [
                    30939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30939,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "9867:2:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30984,
                      "src": "9862:7:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30938,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9862:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30945,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30942,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "9907:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9914:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 30940,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "9872:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9887:19:46",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28075,
                      "src": "9872:34:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 30944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9872:44:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9862:54:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30947,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "9933:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30950,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30939,
                            "src": "9963:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30948,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29992,
                            "src": "9940:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9955:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27064,
                          "src": "9940:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 30951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9940:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30946,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6354,
                        6379,
                        6392,
                        6408,
                        6450,
                        6492,
                        6534,
                        6571,
                        6608,
                        6645,
                        3507,
                        3532,
                        3562,
                        3587,
                        3646,
                        3671,
                        3701,
                        3726,
                        4826,
                        4861
                      ],
                      "referencedDeclaration": 3507,
                      "src": "9924:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9924:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30953,
                  "nodeType": "ExpressionStatement",
                  "src": "9924:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30955,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "9980:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30954,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5702,
                        5723,
                        5747,
                        5771
                      ],
                      "referencedDeclaration": 5702,
                      "src": "9975:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9975:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30957,
                  "nodeType": "ExpressionStatement",
                  "src": "9975:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 30961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10008:47:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "expression": {
                        "id": 30958,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "9992:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10285",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9995:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9771,
                      "src": "9992:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9992:64:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30963,
                  "nodeType": "ExpressionStatement",
                  "src": "9992:64:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30967,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "10092:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30968,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "10099:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30969,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30939,
                        "src": "10104:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30964,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "10064:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10079:12:46",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27255,
                      "src": "10064:27:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10064:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30971,
                  "nodeType": "ExpressionStatement",
                  "src": "10064:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30973,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "10120:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30972,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5702,
                        5723,
                        5747,
                        5771
                      ],
                      "referencedDeclaration": 5702,
                      "src": "10115:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10115:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30975,
                  "nodeType": "ExpressionStatement",
                  "src": "10115:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30979,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "10162:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30980,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30028,
                        "src": "10169:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30981,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30939,
                        "src": "10174:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30976,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "10134:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10149:12:46",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27255,
                      "src": "10134:27:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10134:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30983,
                  "nodeType": "ExpressionStatement",
                  "src": "10134:43:46"
                }
              ]
            },
            "functionSelector": "70557298",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferFrom",
            "nameLocation": "9764:16:46",
            "parameters": {
              "id": 30925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9780:2:46"
            },
            "returnParameters": {
              "id": 30926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9790:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31036,
            "nodeType": "FunctionDefinition",
            "src": "10195:613:46",
            "nodes": [],
            "body": {
              "id": 31035,
              "nodeType": "Block",
              "src": "10236:572:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30989,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "10252:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30988,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5792,
                        5813,
                        5837,
                        5861
                      ],
                      "referencedDeclaration": 5792,
                      "src": "10242:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10242:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30991,
                  "nodeType": "ExpressionStatement",
                  "src": "10242:16:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "796f7520617265206e6f7420616c6c6f77656420746f206d696e74",
                        "id": 30995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10280:29:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        },
                        "value": "you are not allowed to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        }
                      ],
                      "expression": {
                        "id": 30992,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "10264:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10285",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10267:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9771,
                      "src": "10264:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10264:46:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30997,
                  "nodeType": "ExpressionStatement",
                  "src": "10264:46:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31001,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "10336:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30998,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "10316:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10331:4:46",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 685,
                      "src": "10316:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10316:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31003,
                  "nodeType": "ExpressionStatement",
                  "src": "10316:26:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420307830303030303030303030303030303030303030303030303030303030303030303030306131316365206973206d697373696e6720726f6c6520307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                        "id": 31007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10364:150:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        },
                        "value": "AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        }
                      ],
                      "expression": {
                        "id": 31004,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "10348:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10285",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10351:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9771,
                      "src": "10348:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10348:167:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31009,
                  "nodeType": "ExpressionStatement",
                  "src": "10348:167:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 31014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10556:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 31013,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10546:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 31015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10546:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 31016,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "10572:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 31010,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "10521:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10536:9:46",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26580,
                      "src": "10521:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 31017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10521:57:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31018,
                  "nodeType": "ExpressionStatement",
                  "src": "10521:57:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420307830303030303030303030303030303030303030303030303030303030303030303030306131316365206973206d697373696e6720726f6c6520307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                        "id": 31022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10600:150:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        },
                        "value": "AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        }
                      ],
                      "expression": {
                        "id": 31019,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "10584:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10285",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10587:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9771,
                      "src": "10584:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10584:167:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31024,
                  "nodeType": "ExpressionStatement",
                  "src": "10584:167:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783030",
                            "id": 31030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10790:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 31029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10782:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 31028,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10782:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10782:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 31032,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30022,
                        "src": "10797:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 31025,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29992,
                        "src": "10757:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10772:9:46",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26580,
                      "src": "10757:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 31033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10757:46:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31034,
                  "nodeType": "ExpressionStatement",
                  "src": "10757:46:46"
                }
              ]
            },
            "functionSelector": "4fc1a73e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUnauthorizedAccess",
            "nameLocation": "10204:22:46",
            "parameters": {
              "id": 30986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10226:2:46"
            },
            "returnParameters": {
              "id": 30987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10236:0:46"
            },
            "scope": 31037,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29967,
              "name": "Test",
              "nameLocations": [
                "757:4:46"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8166,
              "src": "757:4:46"
            },
            "id": 29968,
            "nodeType": "InheritanceSpecifier",
            "src": "757:4:46"
          }
        ],
        "canonicalName": "MiscTest",
        "contractDependencies": [
          159,
          520,
          597,
          915,
          1175,
          1483,
          2647,
          34904
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31037,
          8166,
          5236,
          4973
        ],
        "name": "MiscTest",
        "nameLocation": "745:8:46",
        "scope": 31038,
        "usedErrors": [],
        "usedEvents": [
          3192,
          3196,
          3200,
          3204,
          3208,
          3212,
          3216,
          3220,
          3226,
          3232,
          3240,
          3248,
          3254,
          3260,
          3266,
          3272,
          5620,
          5625,
          5630,
          5637,
          5644,
          5651
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 46
}