{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRecipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensOracle",
      "outputs": [
        {
          "internalType": "contract FrensOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool2",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBalanceOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetPoolById",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIsApprovedForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintingDirectly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwnerOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSafeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenByIndex",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUnauthorizedAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testexists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234620003955760006201000162ff00ff198254161781556706942000000013376f219ab540356cbb839cbe05303d7705fa60018060a01b0319908082601154161760115573b9e155e65b5c4d66df28da8e9a0957f06f11bc048260125416176012556e0c2e074ec69a0dfb2997ba6c7d2e1e8260135416176013558160145416176014556301111738816015541617601555620a11ce816016541617601655610b0b8160175416176017556018541617601855620000c46019546200039a565b90601f918281116200032d575b506061601990815581527fac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f4987f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c9695556f99b7103c35b26289035de4227e1cc57560801b7f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c969655601a546001929062000166906200039a565b818111620002de575b506041601a55601a82527f0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e26020832055620001ac601b546200039a565b908082116200028f575b60c1601b90815583527f92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b6000805160206200c2238339815191529081557f0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f908501557f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae97f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc3557f4093180202063b0e66cd8aef5a934bfabcf32919e494064542b5f1a3889bf516601c5560405161be4b9081620003d88239f35b601b83520160051c6000805160206200c223833981519152017f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc45b81811015620001b6578281558301620002ca565b601a8352810160051c7f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e90810190849081015b828110620003215750506200016f565b84815501849062000311565b60198252820160051c7f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c9695017f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c96975b818110620003895750620000d1565b8281556001016200037a565b600080fd5b90600182811c92168015620003cc575b6020831014620003b657565b634e487b7160e01b600052602260045260246000fd5b91607f1691620003aa56fe604060808152600490813610156200001657600080fd5b600091823560e01c90816309d26b6c1462002a285781630a9254e414620020af5781630c56ae3b14620020845781631aeb10a61462001d60578163223e6be41462001d3557816325b5e62f1462001d0a57816330dbf8871462001cdf5781633a7684631462001cae5781633df77c0e14620019145781634690484014620018e9578382634fc1a73e146200168b57508163524ad495146200152a578163591167c714620014ff5781635f583c1d14620014d457816363c72d6014620014a95781636a7179c3146200138e5781637055729814620010ef57816371a29bb71462000ea3578163796a773d1462000d84578163874962501462000b0457816390ec5d9614620005be57816394cd95e314620005935781639e535c69146200034d57508063a1b8adcb1462000323578063ba414fa614620002fa578063bc073b1814620002d0578063bc48e94714620002a6578063c09cec77146200027c578063cc91c4361462000252578063edc91a921462000228578063f8ccbf471462000202578063fa7626d414620001df5763fb47e3a214620001b257600080fd5b34620001db5781600319360112620001db5760165490516001600160a01b039091168152602090f35b5080fd5b5034620001db5781600319360112620001db5760ff602092541690519015158152f35b5034620001db5781600319360112620001db5760ff6020925460101c1690519015158152f35b5034620001db5781600319360112620001db5760105490516001600160a01b039091168152602090f35b5034620001db5781600319360112620001db5760115490516001600160a01b039091168152602090f35b5034620001db5781600319360112620001db5760175490516001600160a01b039091168152602090f35b5034620001db5781600319360112620001db5760095490516001600160a01b039091168152602090f35b5034620001db5781600319360112620001db57600a5490516001600160a01b039091168152602090f35b5034620001db5781600319360112620001db576020906200031a62002d14565b90519015158152f35b5034620001db5781600319360112620001db57600c5490516001600160a01b039091168152602090f35b9050346200053f57826003193601126200053f57600f548251638da5cb5b60e01b8082526020936001600160a01b0393909290859082908590829088165afa80156200053557620003a891889162000571575b50306200300e565b620003b7836016541662002dff565b85737109709ecfa91a80626ff3989d68f67f5b1dd12d803b15620001db578190606488518094819363f28dceb360e01b83528a898401528a60248401527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448401525af1801562000535576200055f575b5082600f54169086846017541692803b15620001db578190602489518094819363f2fde38b60e01b988984528a8401525af18015620005555762000543575b50620004743062002dff565b8684600f541692856017541690843b156200053f57602490838a5196879485938452898401525af19182156200053557859262000523575b50836017541693600f54169286518094819382525afa9283156200051957620004e094508593620004e3575b50506200300e565b80f35b62000508929350803d1062000511575b620004ff818362002c69565b81019062002dde565b903880620004d8565b503d620004f3565b84513d87823e3d90fd5b6200052e9062002c04565b38620004ac565b86513d89823e3d90fd5b8280fd5b6200054e9062002c04565b3862000468565b87513d8a823e3d90fd5b6200056a9062002c04565b3862000429565b6200058c9150863d88116200051157620004ff818362002c69565b38620003a0565b505034620001db5781600319360112620001db5760085490516001600160a01b039091168152602090f35b9050346200053f57826003193601126200053f576016546001600160a01b0390620005eb90821662002dff565b80600d541684813b1562000b015760019184865180948193633e7ea84160e21b83525af18015620005195762000aef575b5080600f5416918160165416928451632f745c5960e01b815284838201528660248201526020948582604481865afa91821562000555578690899362000ab9575b50602492938851938480926331a9108f60e11b825287898301525afa90811562000555576200069592899262000a9d575b506200300e565b601792620006a68185541662002dff565b737109709ecfa91a80626ff3989d68f67f5b1dd12d90813b1562000a9957865163f28dceb360e01b8152888180620006e08882016200320d565b038183875af1801562000a075762000a87575b508781600f54169282601654169383885416813b1562000a83578a51632142170760e11b8082526001600160a01b039788168a83019081529290971660208301526040820188905291849183919082908490829060600103925af1801562000a635762000a71575b506200076b836016541662002dff565b82600f54168360165416908489541691813b1562000a6d578b518781526001600160a01b03918216818b01908152919093166020820152604081018890528491839182908490829060600103925af1801562000a635762000a51575b506024838854168985600f54168c51938480926331a9108f60e11b82528b8d8301525afa90811562000a47576200080692859262000a2357506200300e565b620008148388541662002dff565b803b15620001db57819060848a518094819363f28dceb360e01b83528c8b840152603260248401527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448401527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648401525af1801562000a075762000a11575b5080600f541688828754169183600b541690803b156200053f578a518681526001600160a01b0394851689820190815292909416602083015260408201879052839182908490829060600103925af1801562000a0757620009f5575b5086516101f38082019082821067ffffffffffffffff831117620009e2579180918b936200bc038339039082f0928315620009d6576200092b8388541662002dff565b828080600f5416985416941696803b156200053f5789519182526001600160a01b0394851687830190815294881660208601526040850186905290949385919082908490829060600103925af190811562000555578693602492620009c4575b50600f541693875194859384926331a9108f60e11b84528301525afa9283156200051957620004e094508593620004e35750506200300e565b620009cf9062002c04565b386200098b565b508751903d90823e3d90fd5b634e487b7160e01b8b526041875260248bfd5b62000a009062002c04565b38620008e8565b88513d8b823e3d90fd5b62000a1c9062002c04565b386200088c565b62000a3f9192508b3d8d116200051157620004ff818362002c69565b90386200068e565b8b513d86823e3d90fd5b62000a5c9062002c04565b38620007c7565b8a513d85823e3d90fd5b8480fd5b62000a7c9062002c04565b386200075b565b8380fd5b62000a929062002c04565b38620006f3565b8780fd5b62000a3f919250873d89116200051157620004ff818362002c69565b809350813d831162000ae7575b62000ad2818362002c69565b8101031262000a99578560249251926200065d565b503d62000ac6565b62000afa9062002c04565b386200061c565b80fd5b919050346200053f57826003193601126200053f576016546001600160a01b039062000b3290821662003116565b835b60ff811062000b41578480f35b600d908282541691823b1562000d8057845192633e7ea84160e21b9384815288818981600180965af1801562000d765762000d64575b5086600f86815416928a89519687809682630178b36760e31b978884528301526020998a916024998a915afa90811562000d5a5762000bcf929162000bc991859162000d38575b508c8a54166200300e565b62002ed6565b600e8a815416803b1562000a83578385918f8f8e9051948593849283525af1801562000d1c57838f8f9493908f8c928f9562000d26575b508a5416955195869384928d84528301525afa91821562000d1c57918c62000bc99262000c3f9594879362000cf8575b5054166200300e565b978987541690813b156200053f578c908c51948593849283525af1801562000cee5791889187949362000cdc575b505416928851809481938252888c8301525afa92831562000cd25762000bc99262000ca895949287928b9462000cae575b505054166200300e565b62000b34565b62000cc9929450803d106200051157620004ff818362002c69565b91388062000c9e565b86513d8a823e3d90fd5b62000ce79062002c04565b3862000c6d565b89513d8d823e3d90fd5b62000d149193508d803d106200051157620004ff818362002c69565b913862000c36565b8d513d86823e3d90fd5b62000d319062002c04565b3862000c06565b62000d5391508b3d8d116200051157620004ff818362002c69565b3862000bbe565b8c513d85823e3d90fd5b62000d6f9062002c04565b3862000b77565b87513d8b823e3d90fd5b8680fd5b919050346200053f57826003193601126200053f576016546001600160a01b0392849162000db490851662002dff565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b156200053f57828451809263f28dceb360e01b825281838162000e2288820160609060208152601b60208201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e74000000000060408201520190565b03925af1801562000e995762000e87575b5083600f5416936016541690843b156200053f5760249083855196879485936335313c2160e11b85528401525af190811562000e7e575062000e73575080f35b620004e09062002c04565b513d84823e3d90fd5b62000e929062002c04565b3862000e33565b84513d85823e3d90fd5b919050346200053f57826003193601126200053f57825b60ff811062000ec7578380f35b601680546001600160a01b039062000ee190821662002dff565b600d928184541690813b1562000a9957855191633e7ea84160e21b9283815289818a81600180965af18015620010e55790899291620010d3575b50600f908a86835416948a5180998197836331a9108f60e11b9889855284015260209b8c9160249a8b915afa91821562000d1c57918a62000bc99262000f6e95948e8894620010af57505054166200300e565b9560179662000f808989541662002dff565b88600e5416803b1562000a83578385918f8f51809481938883525af1801562000d1c57828f8f93908b918f946200109d575b508d8a5416945194859384928d84528301525afa90811562000d1c579162000bc962000fef928c948e88926200107b575b5050848c54166200300e565b9a62000ffe828a541662002dff565b541690813b156200053f578c908c51948593849283525af1801562000cee5791869188949362001069575b505416928851809481938252898c8301525afa93841562000cd2579162000bc99391620010639695938a9462000cae57505054166200300e565b62000eba565b620010749062002c04565b3862001029565b620010959250803d106200051157620004ff818362002c69565b388e62000fe3565b620010a89062002c04565b3862000fb2565b620010ca929450803d106200051157620004ff818362002c69565b91388e62000c9e565b620010de9062002c04565b3862000f1b565b88513d8c823e3d90fd5b919050346200053f57826003193601126200053f5760165483906001600160a01b03906200111f90821662002dff565b80600d5416803b156200053f578260019186865180948193633e7ea84160e21b83525af1801562000e99576200137c575b5080600f5416816016541690845191632f745c5960e01b835280878401528460248401526020918284604481845afa9384156200133d57869462001347575b50826024918851928380926331a9108f60e11b8252888d8301525afa9283156200133d5790620011ca9392918793620004e35750506200300e565b620011d9826017541662002dff565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b1562000a8357838551809263f28dceb360e01b8252818381620012158c82016200320d565b03925af18015620013335762001321575b5081600f5416948260165416836017541696803b15620013015786516323b872dd60e01b8082526001600160a01b0393841685830190815293909916602084015260408301859052918691839182908490829060600103925af18015620013175762001305575b506200129d836016541662002dff565b82600f5416918360165416936017541696833b156200130157620012eb86928851998a97889687958652850160409194939294606082019560018060a01b0380921683521660208201520152565b03925af190811562000e7e575062000e73575080f35b8580fd5b620013109062002c04565b386200128d565b86513d87823e3d90fd5b6200132c9062002c04565b3862001226565b85513d86823e3d90fd5b87513d88823e3d90fd5b9093508281813d831162001374575b62001362818362002c69565b8101031262001301575192826200118f565b503d62001356565b620013879062002c04565b3862001150565b919050346200053f57826003193601126200053f576016546001600160a01b039290620013bd90841662003116565b835b60ff8110620013cc578480f35b83600d541685813b1562000b015760019184865180948193633e7ea84160e21b83525af180156200149f576200148d575b5083600f54169083518092634f6ccce760e01b8252828583015281602460209586935afa928315620014835787936200144a575b505062000bc98162001444931462002efc565b620013bf565b90809350813d83116200147b575b62001464818362002c69565b81010312620013015790519062000bc98162001431565b503d62001458565b85513d89823e3d90fd5b620014989062002c04565b38620013fd565b84513d88823e3d90fd5b505034620001db5781600319360112620001db5760155490516001600160a01b039091168152602090f35b505034620001db5781600319360112620001db57600e5490516001600160a01b039091168152602090f35b505034620001db5781600319360112620001db57600f5490516001600160a01b039091168152602090f35b919050346200053f57826003193601126200053f576016546001600160a01b03906200155890821662003116565b835b60ff811062001567578480f35b600f8281541690845191829182634f558e7960e01b92838252868a830152602095869160249687915afa908115620010e55790620015af918b9162001669575b501562002efc565b85600d541689813b1562000b01576001918a8a5180948193633e7ea84160e21b83525af18015620010e55791879186949362001657575b505416928751809481938252878b8301525afa91821562001483579162000bc9916200161d9493899262001623575b505062002efc565b6200155a565b620016479250803d106200164f575b6200163e818362002c69565b81019062002cf5565b388062001615565b503d62001632565b620016629062002c04565b38620015e6565b620016849150863d88116200164f576200163e818362002c69565b38620015a7565b92915034620018e55782600319360112620018e5576016546001600160a01b039190620016ba90831662003116565b737109709ecfa91a80626ff3989d68f67f5b1dd12d91823b1562000a6d5783519263f28dceb360e01b938481528681806200172987820160609060208152601b60208201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e74000000000060408201520190565b038183865af180156200053557620018d3575b5081600f54168260165416813b1562000a9957879160248392895194859384926335313c2160e11b84528a8401525af180156200053557620018c1575b50803b1562001301578451848152868180620017978782016200325b565b038183865af180156200053557620018af575b5081600f541693826016541694803b1562000a99578780916044895180948193632f2ff15d60e01b9b8c84527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68c85015260248401525af1801562000555576200189d575b50813b1562000d8057869086519283918252818381620018318982016200325b565b03925af18015620018935762001881575b5080600f5416906016541692813b15620013015785604492819587519889968795865285015260248401525af190811562000e7e575062000e73575080f35b6200188c9062002c04565b3862001842565b85513d88823e3d90fd5b620018a89062002c04565b386200180f565b620018ba9062002c04565b38620017aa565b620018cc9062002c04565b3862001779565b620018de9062002c04565b386200173c565b5050fd5b505034620001db5781600319360112620001db5760185490516001600160a01b039091168152602090f35b919050346200053f57826003193601126200053f57601680549092906001600160a01b03906200194690821662003116565b845b60ff811062001955578580f35b600d8281541690813b1562000a99578551633e7ea84160e21b815288818781600180975af1801562000d765762001c9c575b50600f805488548851632f745c5960e01b81529087166001600160a01b031688820190815260208082018890529492859183918a16908290819060400103915afa90811562000cee578793929187918d9162001c60575b5014895191620019ee8362002c4c565b82526c06669727374206973206973203609c1b85830152801562001c19575b50505416918488541690828851809581946370a0823160e01b83528a83015260249687915afa918215620010e5578a9262001be0575b5084019283851162001bcf57509062001a99939291875162001a658162002c4c565b601181527073686f756c6420686176652069202b203160781b8382015283821415908162001a9f575b505050505062002ed6565b62001948565b62001ad17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583918b5191829182620031c3565b0390a162001ae2575b808062001a8e565b6000805160206200bdf6833981519152608089518481526022858201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e8b82015261745d60f01b6060820152a187519288845262001b5b898501604090600a8152690808115e1c1958dd195960b21b60208201520190565b9083850152837fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89485920390a1875191829189835262001bb58a8401604090600a815269080808081058dd1d585b60b21b60208201520190565b918301520390a162001bc662002f57565b38808062001ada565b634e487b7160e01b8a526011875289fd5b9091508281813d831162001c11575b62001bfb818362002c69565b8101031262001c0d5751903862001a43565b8980fd5b503d62001bef565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358362001c4f62001c58938c5191829182620031c3565b0390a162002efc565b388062001a0d565b945050508383813d831162001c94575b62001c7c818362002c69565b8101031262001c90578587935138620019de565b8a80fd5b503d62001c70565b62001ca79062002c04565b3862001987565b505034620001db5781600319360112620001db5760209051737109709ecfa91a80626ff3989d68f67f5b1dd12d8152f35b505034620001db5781600319360112620001db57600b5490516001600160a01b039091168152602090f35b505034620001db5781600319360112620001db5760125490516001600160a01b039091168152602090f35b505034620001db5781600319360112620001db5760135490516001600160a01b039091168152602090f35b919050346200053f57826003193601126200053f57601680546001600160a01b03919062001d9090831662003116565b845b60ff811062001d9f578580f35b82600d541686813b1562000b015760019187875180948193633e7ea84160e21b83525af18015620014835762002072575b50600f805483548651632f745c5960e01b81529086166001600160a01b031688820190815260208082018690529392849183918916908290819060400103915afa801562000d765784908a9062002036575b62001e2f92501462002efc565b8481541686519081848163020604bf60e21b93848252888d83015260249586915afa90811562000cee579088918c9162002014575b50168062001f27575b5086835416926017938b89865416823b15620001db578b5163095ea7b360e01b81526001600160a01b03909116818e01908152602081018a90529092839182908490829060400103925af1801562001f1d5791899187949362001f0b575b505416928951809481938252888d8301525afa92831562000d765762000bc99262001f0595949288928c9462000cae57505054166200300e565b62001d92565b62001f169062002c04565b3862001ecb565b8a513d8e823e3d90fd5b6000805160206200bdf683398151915260808a518781526025888201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b6164648c82015264726573735d60d81b6060820152a188519089825262001fa38a8301604090600a8152690808115e1c1958dd195960b21b60208201520190565b9086830152817f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9283920390a188518981528062001ffb8b8201604090600a815269080808081058dd1d585b60b21b60208201520190565b8d888301520390a16200200d62002f57565b3862001e6d565b6200202f9150863d88116200051157620004ff818362002c69565b3862001e64565b50508281813d83116200206a575b62002050818362002c69565b8101031262002066578362001e2f915162001e22565b8880fd5b503d62002044565b6200207d9062002c04565b3862001dd0565b505034620001db5781600319360112620001db57600d5490516001600160a01b039091168152602090f35b919050346200053f57826003193601126200053f578051906106529182810167ffffffffffffffff938282108583111762002a1557908291620087f28339039085f091821562002a0b57600b80546001600160a01b039485166001600160a01b03199182168117835584517f65787465726e616c2e636f6e74726163742e616464726573730000000000000060208083018281526a535356526567697374727960a81b60398501526024808552959a9597919693919291620021718162002c2f565b5190208b8a60125416863b15620001db578a5163ca446dd960e01b808252818a019485526001600160a01b0390921660208501529096909283919082908490829060400103925af180156200292657620029f9575b50888354168b8951888101908482526e11195c1bdcda5d10dbdb9d1c9858dd608a1b603982015260288152620021fc8162002c2f565b5190208b6011541692803b156200053f578b51888152808a019283526001600160a01b039094166020830152839182908490829060400103925af180156200292657620029e7575b508a8984541691895188810191825262454e5360e81b6039820152601c81526200226e8162002c4c565b519020918a6013541690803b156200053f578a518781528881019485526001600160a01b039092166020850152909283919082908490829060400103925af18015620029cb57620029d5575b50878254168a885187810190751c1c9bdd1bd8dbdb0b9999594b9c9958da5c1a595b9d60521b825260168152620022f18162002c4c565b519020918a6018541690803b156200053f578a518781528881019485526001600160a01b039092166020850152909283919082908490829060400103925af18015620029cb57620029b9575b5087825416875190612859908183019183831085841117620029a757918391899362004e94843981520301908bf080156200299d57881690818a600f541617600f5588835416908851928c888501936f636f6e74726163742e6164647265737360801b948581526030966d4672656e73506f6f6c536861726560901b88820152601e8152620023cc8162002c4c565b51902090803b156200053f578c51898152808b019283526001600160a01b039094166020830152839182908490829060400103925af180156200291c576200298b575b5089845416895190612dbf90818301918383108584111762002930579183918b9362008e44843981520301908df0801562002926578a16808c600c541617600c558c8b8654168b518a810190868252715374616b696e67506f6f6c466163746f727960701b8882015260228152620024878162002c2f565b51902090803b156200053f578c51898152808b019283526001600160a01b039094166020830152839182908490829060400103925af180156200291c5762002979575b5089600f54168c8b600c541691803b15620001db576044898380938f968f97519788968795632f2ff15d60e01b87528601528401525af180156200291c5762002967575b508984541689519061045790818301918383108584111762002930579183918b9362004a3d843981520301908df0801562002926578a16808c60105416176010558c8b8654168b518a8101908682526a4672656e734f7261636c6560a81b88820152601b81526200257f8162002c4c565b51902090803b156200053f578c51898152808b019283526001600160a01b039094166020830152839182908490829060400103925af180156200291c5762002955575b5089845416895190610c4b90818301918383108584111762002930579183918b9362003df2843981520301908df0801562002926578a16808c60095416176009558c8b8654168b518a8101908682526e233932b739a6b2ba30a432b63832b960891b88820152601f8152620026378162002c4c565b51902090803b156200053f578c51898152808b019283526001600160a01b039094166020830152839182908490829060400103925af180156200291c5762002943575b508984541689519061110590818301918383108584111762002930579183918b93620076ed843981520301908df0801562002926578a16808c600a541617600a558c8b8654168b518a810190868252754672656e73506f6f6c5368617265546f6b656e55524960501b8882015260268152620026f68162002c2f565b51902090803b156200053f578c51898152808b019283526001600160a01b039094166020830152839182908490829060400103925af180156200291c576200290a575b508354895191610acf808401928d1691831184841017620028f8578e96959493928a928492620033238439815203019085f08015620028ee578a80911693848d600854161760085554169167119c995b9cd05c9d60c21b8a519189830193845282015260188152620027ab8162002c4c565b519020813b1562000a835788519485528585019081526001600160a01b039092166020830152839182908490829060400103925af18015620028e457620028d2575b5084600c541687838760155416926044885180948193630319e90960e41b9788845289840152818b8401525af1908115620028c85791876044928695948c91620028a6575b501689600d541617600d558988600c5416818a60155416988a51998a97889687528601528401525af19283156200289d575085926200287b575b50501690600e541617600e5580f35b620028959250803d106200051157620004ff818362002c69565b38806200286c565b513d87823e3d90fd5b620028c19150863d88116200051157620004ff818362002c69565b3862002832565b86513d8b823e3d90fd5b620028dd9062002c04565b38620027ed565b85513d8a823e3d90fd5b89513d86823e3d90fd5b634e487b7160e01b8f52604189528a8ffd5b620029159062002c04565b3862002739565b8a513d8f823e3d90fd5b89513d8e823e3d90fd5b50634e487b7160e01b8f52604189528a8ffd5b6200294e9062002c04565b386200267a565b620029609062002c04565b38620025c2565b620029729062002c04565b386200250e565b620029849062002c04565b38620024ca565b620029969062002c04565b386200240f565b87513d8c823e3d90fd5b634e487b7160e01b8e5260418852898efd5b620029c49062002c04565b386200233d565b88513d8d823e3d90fd5b620029e09062002c04565b38620022ba565b620029f29062002c04565b3862002244565b62002a049062002c04565b38620021c6565b81513d86823e3d90fd5b634e487b7160e01b875260418652602487fd5b9050346200053f57826003193601126200053f576016546001600160a01b039062002a5590821662003116565b835b83811062002bad57508381600f5416918060165416938160175416948651908163e985e9c560e01b96878252818062002aaf60209b8c9689840190602090939293604083019460018060a01b03809216845216910152565b03915afa801562002ba35762002ace91859162002b8857501562002efc565b81600f5416826017541690803b1562000a6d57604485928951968793849263a22cb46560e01b845287840152600160248401525af19283156200053557859362002b76575b50600f5460165460175488519687526001600160a01b0391851682169387019384528416166020830152849216908290819060400103915afa91821562002b6957620004e0935084926200162357505062002efc565b50505051903d90823e3d90fd5b62002b819062002c04565b3862002b13565b620016849150873d89116200164f576200163e818362002c69565b87513d86823e3d90fd5b81600d54169085823b1562000b015760019285875180958193633e7ea84160e21b83525af1918215620018935762002bec9262002bf2575b5062002ed6565b62002a57565b62002bfd9062002c04565b3862002be5565b67ffffffffffffffff811162002c1957604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111762002c1957604052565b6040810190811067ffffffffffffffff82111762002c1957604052565b90601f8019910116810190811067ffffffffffffffff82111762002c1957604052565b60005b83811062002ca05750506000910152565b818101518382015260200162002c8f565b3d1562002cf0573d9067ffffffffffffffff821162002c19576040519162002ce4601f8201601f19166020018462002c69565b82523d6000602084013e565b606090565b9081602091031262002d0f5751801515810362002d0f5790565b600080fd5b6000805460081c60ff161562002d2e575460081c60ff1690565b80737109709ecfa91a80626ff3989d68f67f5b1dd12d803b62002d5057505090565b81925060405182602082018381526519985a5b195960d21b60408401526040835262002d7c8362002c2f565b62002db86024604051809362002da76020830197630667f9d760e41b89525180928585019062002c8c565b810103600481018452018262002c69565b51925af15062002ddb62002dcb62002cb1565b6020808251830101910162002cf5565b90565b9081602091031262002d0f57516001600160a01b038116810362002d0f5790565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b1562002d0f5760405163c88a5e6d60e01b81526001600160a01b0390921660048301819052600160801b6024840152600092838160448183875af1801562002ecb5762002eb5575b50813b156200053f57829160248392604051948593849263ca669fa760e01b845260048401525af1801562002eaa5762002e96575050565b62002ea2829162002c04565b62000b015750565b6040513d84823e3d90fd5b62002ec39093919362002c04565b913862002e5e565b6040513d86823e3d90fd5b600019811462002ee65760010190565b634e487b7160e01b600052601160045260246000fd5b1562002f0457565b6000805160206200bdf6833981519152606060405160208152601760208201527f4572726f723a20417373657274696f6e204661696c65640000000000000000006040820152a162002f5562002f57565b565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b62002f86575b5061010061ff00196000541617600055565b6040519060208201908082526519985a5b195960d21b60408401526001606084015260608352608083019183831067ffffffffffffffff84111762002c195760008362002ff760248397849760405260a08101956370ca10bb60e01b875262002da78251809260a485019062002c8c565b51925af1506200300662002cb1565b503862002f74565b6001600160a01b03918216911681810362003027575050565b62003103906040906000805160206200bdf68339815191526080835160208152602560208201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b6164648582015264726573735d60d81b6060820152a1815193828552620030ad838601604090600a8152690808115e1c1958dd195960b21b60208201520190565b906020860152847f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9586920390a181519282849384528301604090600a815269080808081058dd1d585b60b21b60208201520190565b9060208301520390a162002f5562002f57565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b1562002d0f5760405163c88a5e6d60e01b81526001600160a01b0390921660048301819052600160801b6024840152600092838160448183875af1801562002ecb57620031ad575b50813b156200053f5782916024839260405194859384926303223eab60e11b845260048401525af1801562002eaa5762002e96575050565b620031bb9093919362002c04565b913862003175565b60a09160408252600560408301526422b93937b960d91b60608301526080602083015262003201815180928160808601526020868601910162002c8c565b601f01601f1916010190565b60809060208152602d60208201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b60608201520190565b60e09060208152609460208201527f416363657373436f6e74726f6c3a206163636f756e742030783030303030303060408201527f303030303030303030303030303030303030303030303030303030306131316360608201527f65206973206d697373696e6720726f6c6520307830303030303030303030303060808201527f303030303030303030303030303030303030303030303030303030303030303060a082015273030303030303030303030303030303030303030360641b60c0820152019056fe60803461007457601f610acf38819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b031916919091179055604051610a3f90816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b6000803560e01c63a2d6c6da1461002c57600080fd5b346108ff57602093846003193601126108fb5781546f636f6e74726163742e6164647265737360801b8685018181526e233932b739a6b2ba30a432b63832b960891b6030870152601f86526001600160a01b039584359493871693919061009281610925565b519020928751936321f8a72160e01b90818652838601526024948a818781865afa90811561088c5790899189916108de575b50169589518b81019086825265141b519bdb9d60d21b6030820152601681526100ec81610925565b519020918a5192818452858401528b838881875afa9283156108535789936108bf575b508a518c81019087825264576176657360d81b60308201526015815261013481610925565b519020958b5196828852868801528c878981885afa9687156108b5578d929189918c99610896575b508d51848101918252684672656e734c6f676f60b81b60308201526019815261018481610925565b519020918d5196879384928352898301525afa92831561088c57889361085d575b50895163ef21184f60e01b815284810182905295888782818b5afa96871561085357908992918398610837575b508b51809981936324a8b96b60e21b8352888301525afa9586156107ed578895949392918891829861081b575b50838b51809b81936378bf42b960e11b8352165afa9788156107ed5787986107f7575b509086859392828b51809881936305b3806b60e11b8352165afa9485156107ed579087929183966107d1575b5089516354ea17bf60e11b81529384928391165afa9485156107c65792887f3c7465787420666f6e742d73697a653d2231352e352220783d2232303022207997969361076c9693866103829796610796575b50506401022aa24160dd1b908a51998a968488019a651e3232b3399f60d11b8c527f3c6c696e6561724772616469656e742069643d226772616431222078313d223060268a01527f25222079313d223025222078323d2231303025222079323d2231303025223e0060468a01527f3c73746f70206f66667365743d22302522207374796c653d2273746f702d636f60658a01527f6c6f723a233366313965653b73746f702d6f7061636974793a3122202f3e000060858a01527f3c73746f70206f66667365743d223130302522207374796c653d2273746f702d60a38a01527f636f6c6f723a233534646165303b73746f702d6f7061636974793a3122202f3e60c38a0152701e17b634b732b0b923b930b234b2b73a1f60791b60e38a01526103d2815180928860f48d019101610902565b88017f3c72656374206865696768743d22343030222077696474683d2234303022206660f48201527334b6361e913ab9361411b3b930b218949110179f60611b61011482015286519061042e8261012899898b85019101610902565b0161044182518093888a85019101610902565b01948501527f3d223136332220746578742d616e63686f723d226d6964646c652220666f6e746101488501527f2d66616d696c793d2253616e732c417269616c22206c65747465722d737061636101688501527434b7339e911b11103334b6361e913bb434ba32911f60591b6101888501526611115413d4d25560ca1b61019d850152661e17ba32bc3a1f60c91b93846101a48201527f3c7465787420666f6e742d73697a653d2234352220783d223230302220793d226101ab8201527f3231322220746578742d616e63686f723d226d6964646c65222020666f6e742d6101cb8201527f7765696768743d223931302220666f6e742d66616d696c793d2253616e732c416101eb8201527f7269616c22206c65747465722d73706163696e673d222d31222066696c6c3d2261020b820152663bb434ba32911f60c91b61022b82015261059982518093610232968785019101610902565b0191820152816102378201527f3c7465787420666f6e742d73697a653d2231382e372220783d2232303022207961023e8201527f3d223234332220746578742d616e63686f723d226d6964646c652220666f6e7461025e8201527f2d66616d696c793d225065726d616e656e74204d61726b6572222066696c6c3d61027e82015267113bb434ba32911f60c11b61029e8201526f4652454e5320504f4f4c205354414b4560801b6102a6820152816102b68201527f3c7265637420783d2232372220793d2233343522206865696768743d223330226102bd8201527f2077696474683d22333436222066696c6c3d222334353534454122206f7061636102dd8201526a34ba3c9e91171a1110179f60a91b6102fd8201527f3c7465787420666f6e742d73697a653d2231302220783d223230302220793d226103088201527f3336352220746578742d616e63686f723d226d6964646c652220666f6e742d776103288201527f65696768743d22626f6c642220666f6e742d66616d696c793d2253616e732c41610348820152723934b0b611103334b6361e913bb434ba32911f60691b6103688201528251906107588261037b958d8785019101610902565b019182015203610362810185520183610957565b6107888351948593818552519283809286015285850190610902565b601f01601f19168101030190f35b6401022aa24160dd1b929650906107be913d8091833e6107b68183610957565b81019061099d565b9490386102a0565b8751903d90823e3d90fd5b6107e69196503d8085833e6107b68183610957565b943861024e565b89513d89823e3d90fd5b85939291985061081188913d8084833e6107b68183610957565b9891929350610222565b6108309198503d8084833e6107b68183610957565b96386101ff565b61084c9198503d8085833e6107b68183610957565b96386101d2565b8b513d8b823e3d90fd5b61087e9193508b3d8d11610885575b6108768183610957565b810190610979565b91386101a5565b503d61086c565b8a513d8a823e3d90fd5b6108ae919950843d8611610885576108768183610957565b973861015c565b8c513d8c823e3d90fd5b6108d79193508c8d3d10610885576108768183610957565b913861010f565b6108f591508c8d3d10610885576108768183610957565b386100c4565b5080fd5b80fd5b60005b8381106109155750506000910152565b8181015183820152602001610905565b6040810190811067ffffffffffffffff82111761094157604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761094157604052565b9081602091031261099857516001600160a01b03811681036109985790565b600080fd5b60208183031261099857805167ffffffffffffffff9182821161099857019082601f8301121561099857815190811161094157604051926109e8601f8301601f191660200185610957565b8184526020828401011161099857610a069160208085019101610902565b9056fea26469706673582212208413c06be32fa35c687270b1005069533526ca7165c0dcfa3bf29206d0d8ca3364736f6c634300081400336080604090808252346101535780610c4b803803809161001f8285610158565b833960209283918101031261015357516001600160a01b0380821692909183900361015357600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b0384118585101761013d5760248484938193828c52885190206321f8a72160e01b835260448901525afa928315610132576000936100f5575b5050501690600054161760005551610acf908161017c8239f35b813d831161012b575b6101088185610158565b81010312610127575190828216820361012457503880806100db565b80fd5b5080fd5b503d6100fe565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761013d5760405256fe6080604052600436101561001257600080fd5b60003560e01c806392a2e5ac14610057578063de1c7f7014610052578063edd148a21461004d5763ef21184f1461004857600080fd5b6101db565b6101ae565b61016a565b346100e657610065366100eb565b6020608060248160018060a01b0394856000541690630178b36760e31b83526084525afa80156100e1576100b1916100a5916000906100b5575b16610a13565b60405191829182610145565b0390f35b5060203d81116100da575b806100cd6100d5926102f8565b608001610342565b61009f565b503d6100c0565b61036f565b600080fd5b60209060031901126100e65760043590565b60005b8381106101105750506000910152565b8181015183820152602001610100565b90602091610139815180928185528580860191016100fd565b601f01601f1916010190565b906020610156928181520190610120565b90565b6001600160a01b038116036100e657565b346100e65760203660031901126100e65761018f60043561018a81610159565b61052f565b906100b160405192839215158352604060208401526040830190610120565b346100e6576100b16101c76101c2366100eb565b6103c4565b604051918291602083526020830190610120565b346100e6576101e9366100eb565b600054610206906001600160a01b03165b6001600160a01b031690565b604051630178b36760e31b8152600481018390526020918290829060249082905afa9283156100e15761025e9383926000916102b5575b506040518080968194632daad61d60e01b8352600483019190602083019252565b03916001600160a01b03165afa80156100e1576100b1926100a592600092610288575b50506103c4565b6102a79250803d106102ae575b61029f8183610320565b81019061037b565b3880610281565b503d610295565b6102d59150833d85116102db575b6102cd8183610320565b81019061035a565b3861023d565b503d6102c3565b634e487b7160e01b600052604160045260246000fd5b601f80199101166080016080811067ffffffffffffffff82111761031b57604052565b6102e2565b90601f8019910116810190811067ffffffffffffffff82111761031b57604052565b602090607f1901126100e65760805161015681610159565b908160209103126100e6575161015681610159565b6040513d6000823e3d90fd5b908160209103126100e6575190565b906103c260216040518094600360fc1b60208301526103b281518092602086860191016100fd565b8101036001810185520183610320565b565b66038d7ea4c68000670de0b6b3a76400006103e0818404610836565b920604906103ed82610836565b9160648110610464575b600a1161044c575b602161015691604051938161041e8693518092602080870191016100fd565b8201601760f91b602082015261043d82518093602087850191016100fd565b01036001810184520182610320565b90602161045b6101569261038a565b929150506103ff565b91610470600a9161038a565b9290506103f7565b67ffffffffffffffff811161031b57601f01601f191660200190565b604051906020820182811067ffffffffffffffff82111761031b5760405260008252565b908160209103126100e6575180151581036100e65790565b6020818303126100e65780519067ffffffffffffffff82116100e6570181601f820112156100e657805161050381610478565b926105116040519485610320565b818452602082840101116100e65761015691602080850191016100fd565b6001549091906105ce9061054b906001600160a01b03166101fa565b926040516020948186809301906105aa8161059c61058d856019907f65787465726e616c2e636f6e74726163742e616464726573730000000000000081520190565b62454e5360e81b815260030190565b03601f198101835282610320565b5190209060405180809681946321f8a72160e01b8352600483019190602083019252565b03915afa9182156100e157600092610719575b506001600160a01b03918216906105f790610738565b604051630178b8bf60e01b8152600481018290529092908581602481865afa9081156100e1576000916106fc575b50169182156106ec57604051631ef3fca760e31b815260048101829052918590839060249082905afa9182156100e157610687956000936106ba575b505060009192604051808097819463691f343160e01b8352600483019190602083019252565b03915afa9283156100e15760009361069e57509190565b61015691933d8091833e6106b28183610320565b8101906104d0565b6000935090816106de92903d106106e5575b6106d68183610320565b8101906104b8565b9138610661565b503d6106cc565b5050509050600090610156610494565b6107139150863d88116102db576102cd8183610320565b38610625565b610731919250843d86116102db576102cd8183610320565b90386105e1565b6028805b61079b575050602860002060405160208101917f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e283526040820152604081526060810181811067ffffffffffffffff82111761031b5760405251902090565b6f181899199a1a9b1b9c1cb0b131b232b360811b91600f9182821684901a600019820153600119019283928260041c161a825360081c9161073c565b604051906060820182811067ffffffffffffffff82111761031b57604052602a8252604082602036910137565b9061080e82610478565b61081b6040519182610320565b828152809261082c601f1991610478565b0190602036910137565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008082101561096b575b506d04ee2d6d415b85acef81000000008083101561095c575b50662386f26fc100008083101561094d575b506305f5e1008083101561093e575b506127108083101561092f575b50606482101561091f575b600a80921015610915575b6001908160216108cd828701610804565b95860101905b6108df575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215610910579190826108d3565b6108d8565b91600101916108bc565b91906064600291049101916108b1565b600491939204910191386108a6565b60089193920491019138610899565b6010919392049101913861088a565b60209193920491019138610878565b60409350810491503861085f565b634e487b7160e01b600052603260045260246000fd5b9081518110156109a0570160200190565b610979565b80156109b2576000190190565b634e487b7160e01b600052601160045260246000fd5b156109cf57565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b610a1b6107d7565b908151156109a0576030602083015381516001908110156109a05790607860218401536029915b808311610a5557506101569150156109c8565b90600f81169060108210156109a057610a92916f181899199a1a9b1b9c1cb0b131b232b360811b901a610a88858761098f565b5360041c926109a5565b9190610a4256fea2646970667358221220cd8caf4aff57409f1242fb3ffcc28fd4c61144f12b2f88aa7f9b4263fa3c3c9264736f6c6343000814003360803461007457601f61045738819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600180546001600160a01b0319169190911790556040516103c790816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163809bef62146101d457508063d3b150e6146100ab5763d6e65cb91461004457600080fd5b346100a75760203660031901126100a757803567ffffffffffffffff81116100a3576020809461007c60ff9461008f94369101610322565b908286519483868095519384920161036e565b820190815203019020541690519015158152f35b8380fd5b8280fd5b50346100a757816003193601126100a757803567ffffffffffffffff81116100a3576100da9036908301610322565b602435928315158094036101d05760015481516353adc3e960e11b8152602094916001600160a01b039190869082908590829086165afa9081156101c657889161018c575b501633036101585750908261013f9392519382858094519384920161036e565b8101858152030190209060ff8019835416911617905580f35b83606492519162461bcd60e51b8352820152601060248201526f36bab9ba1031329033bab0b93234b0b760811b6044820152fd5b90508581813d83116101bf575b6101a381836102ce565b810103126101bb575181811681036101bb573861011f565b8780fd5b503d610199565b84513d8a823e3d90fd5b8480fd5b83858492346102ca57602093846003193601126100a75780356001600160a01b038116908190036100a35763ac2a5dfd60e01b83528391839182905afa9081156102c057908491839161023d575b509061008f9160ff938286519483868095519384920161036e565b9150503d8083833e61024f81836102ce565b81019084818303126100a75780519067ffffffffffffffff82116100a3570181601f820112156100a75780519061028582610306565b92610292865194856102ce565b8284528683830101116100a35792826102b7879360ff96858061008f9801910161036e565b91925092610222565b83513d84823e3d90fd5b5080fd5b90601f8019910116810190811067ffffffffffffffff8211176102f057604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116102f057601f01601f191660200190565b81601f820112156103695780359061033982610306565b9261034760405194856102ce565b8284526020838301011161036957816000926020809301838601378301015290565b600080fd5b60005b8381106103815750506000910152565b818101518382015260200161037156fea264697066735822122090ef831f3401cb6cc533c1102c88d5e59eaed00dcea01332e01e12065c97954f64736f6c6343000814003360803462000404576200285990813803601f1991601f91838382011682019460018060401b039183871083881117620003ee57808492604098895283396020938491810103126200040457516001600160a01b0380821692909183900362000404576200006b62000409565b94600b86526a4652454e5320536861726560a81b858701526200008d62000409565b60058152644652454e5360d81b86820152865197838911620003ee576000988954986001998a81811c91168015620003e3575b8a821014620003cf579081868493116200037c575b5089908683116001146200031b578c926200030f575b5050600019600383901b1c191690891b1789555b8151938411620002fb5787548881811c91168015620002f0575b88821014620002dc57908184869594931162000285575b5087928411600114620002245750889262000218575b5050600019600383901b1c191690851b1784555b600b80546001600160a01b03198082163390811790935592167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a3600c541617600c55828052600a8152838320338452815260ff848420541615620001cb575b835161242f90816200042a8239f35b828052600a815283832090338452528282209060ff19825416179055339033907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4388080620001bc565b01519050388062000146565b888a52878a20899590939291168a5b898282106200026e575050841162000254575b505050811b0184556200015a565b015160001960f88460031b161c1916905538808062000246565b8385015186558b9790950194938401930162000233565b9091929350888a52878a208480870160051c8201928a8810620002d2575b9187968c92969594930160051c01915b828110620002c357505062000130565b8c81558796508b9101620002b3565b92508192620002a3565b634e487b7160e01b8a52602260045260248afd5b90607f169062000119565b634e487b7160e01b89526041600452602489fd5b015190503880620000eb565b908c91858d95168380528c8420935b8d8282106200036557505084116200034b575b505050811b018955620000ff565b015160001960f88460031b161c191690553880806200033d565b8385015186558f979095019493840193016200032a565b9091508b8052898c208680850160051c8201928c8610620003c5575b918d91869594930160051c01915b828110620003b6575050620000d5565b8e81558594508d9101620003a6565b9250819262000398565b634e487b7160e01b8c52602260045260248cfd5b90607f1690620000c0565b634e487b7160e01b600052604160045260246000fd5b600080fd5b60408051919082016001600160401b03811183821017620003ee5760405256fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146114ef5750806306fdde0314611424578063081812fc14611404578063095ea7b3146112975780630bc59b381461124657806318160ddd146112785780631dc82a751461124657806323b872dd14611221578063248a9ca3146111f75780632f2ff15d1461114b5780632f745c591461109f57806330dbf8871461107657806336568abe14610fe457806342842e0e14610fb057806342966c6814610c6b5780634f558e7914610c2c5780634f6ccce714610b995780636352211e14610b685780636a6278421461091e57806370a08231146108f1578063715018a6146108945780638da5cb5b1461086b57806391d148541461082557806395d89b411461070f578063a217fddf146106f4578063a22cb46514610625578063a2d6c6da1461055e578063b88d4fde146104ab578063c87b56dd14610322578063d5391393146102e7578063d547741f146102a9578063e985e9c5146102575763f2fde38b1461018e57600080fd5b34610253576020366003190112610253576101a76115d7565b906101b0611bb8565b6001600160a01b03918216928315610201575050600b54826001600160601b0360a01b821617600b55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346102a557806003193601126102a55760ff816020936102776115d7565b61027f6115f2565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b5090346102535780600319360112610253576102e491356102df60016102cd6115f2565b93838752600a6020528620015461180c565b611b42565b80f35b5050346102a557816003193601126102a557602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b50903461025357602091826003193601126104a757600c5482516f636f6e74726163742e6164647265737360801b858201908152754672656e73506f6f6c5368617265546f6b656e55524960501b6030830152602682526001600160a01b0393919260608401919085169067ffffffffffffffff831185841017610494578260248180948b948d9998978c52885190206321f8a72160e01b835260648901525afa92831561048a578790859461044f575b5050506024908551948593849263c87b56dd60e01b8452803590840152165afa93841561044457809461041a575b505061041690519282849384528301906115b2565b0390f35b6104169294509061043c913d8091833e610434818361166f565b8101906117aa565b929038610401565b8251903d90823e3d90fd5b9080929394503d8311610483575b610467818561166f565b81010312610253575183811681036102535790602486386103d3565b503d61045d565b86513d86823e3d90fd5b634e487b7160e01b895260418452602489fd5b8380fd5b509034610253576080366003190112610253576104c66115d7565b906104cf6115f2565b604435906064359467ffffffffffffffff861161055a573660238701121561055a578501359361050a61050186611691565b9451948561166f565b848452863660248789010111610557576020866105529760246102e49a01838901378601015261054261053d8433611dcb565b611cf6565b61054d838383611edf565b612314565b611dab565b80fd5b8680fd5b50903461025357602091826003193601126104a757838135808252600d85528260018060a01b0386818786205416875196878092638ae578fd60e01b82525afa94851561048a5784956105ea575b50906024918651958694859363516b636d60e11b8552840152165afa93841561044457809461041a57505061041690519282849384528301906115b2565b9094508681813d831161061e575b610602818361166f565b810103126104a757519084821682036104a757909360246105ac565b503d6105f8565b50903461025357806003193601126102535761063f6115d7565b90602435918215158093036106f0576001600160a01b0316923384146106ae5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b5050346102a557816003193601126102a55751908152602090f35b5091346105575780600319360112610557578151918160019283549384811c9181861695861561081b575b6020968785108114610808578899509688969785829a5291826000146107e1575050600114610786575b505050610416929161077791038561166f565b519282849384528301906115b2565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106107c95750505082010181610777610416610764565b8054848a0186015288955087949093019281016107b0565b60ff19168782015293151560051b8601909301935084925061077791506104169050610764565b634e487b7160e01b835260228a52602483fd5b92607f169261073a565b50346102535781600319360112610253578160209360ff926108456115f2565b90358252600a86528282206001600160a01b039091168252855220549151911615158152f35b5050346102a557816003193601126102a557600b5490516001600160a01b039091168152602090f35b83346105575780600319360112610557576108ad611bb8565b600b80546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102a55760203660031901126102a5576020906109176109126115d7565b611c10565b9051908152f35b508290346102a557602090816003193601126102535761093c6115d7565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68452600a8352848420338552835260ff858520541615610b265760085491828552600d84528585206001600160601b0360a01b9033828254161790558651946109a58661163d565b8686526001600160a01b038416928315610ae6576000868152600260205260409020546109de906001600160a01b031615155b15611e39565b6008549086895260098352818a8a2055600160401b821015610ad3575091836102e49899600288979694610a3a89610a218960016105529f9e9b0160085561239b565b90919082549060031b91821b91600019901b1916179055565b8c83610a458a611c10565b8683526006845281832081845284528183208a905589835260078452912055600d8152600087815260026020526040902054610a8b906001600160a01b031615156109d8565b838d5260038152828d2060018154019055868d52528a2091825416179055877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46121fa565b634e487b7160e01b895260419052602488fd5b816064928a519262461bcd60e51b845283015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b5060649184519162461bcd60e51b8352820152601b60248201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044820152fd5b5091346105575760203660031901126105575750610b8860209235611cd3565b90516001600160a01b039091168152f35b5082346105575760203660031901126105575750803590600854821015610bd457602083610bc68461239b565b91905490519160031b1c8152f35b608490602084519162461bcd60e51b8352820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152fd5b5091346105575760203660031901126105575750610c6260209235600052600260205260018060a01b0360406000205416151590565b90519015158152f35b508290346102a55760209283600319360112610253578135808452600d85528184205490926001600160a01b0392909183163303610f6257610cac84611cd3565b838116801597918815610ee1575050600854858752600982528083882055600160401b811015610ece5785610a21826001610cea940160085561239b565b6008546000199490858101908111610ebb5786885260098352610d10848920549161239b565b90549060031b1c610d2481610a218461239b565b885260098352838820558587528683812055600854978815610ea85785889998979801610d508161239b565b8882549160031b1b19169055600855878752600d8352818488205416901580610ea1575b610de8575b5090600291610d8788611cd3565b948888528252838720946001600160601b0360a01b958681541690551694858752600382528387209081540190558686525283209081541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a480f35b8394959650916024919281945192838092635a2d1e0760e11b82528b8a8301525afa908115610e97578891610e5e575b50610e295790869493929188610d79565b50905162461bcd60e51b815291820152601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508281813d8311610e90575b610e75818361166f565b81010312610e8c57610e86906116ad565b88610e18565b8780fd5b503d610e6b565b84513d8a823e3d90fd5b5086610d74565b634e487b7160e01b885260318552602488fd5b634e487b7160e01b885260118552602488fd5b634e487b7160e01b875260418452602487fd5b610eea90611c10565b600019810191908211610ebb578688526007835283882054828103610f2b575b50868852878481205587526006825282872090875281528582812055610cea565b81895260068452848920838a52845284892054828a5260068552858a20828b52855280868b20558952600784528489205589610f0a565b5162461bcd60e51b8152908101859052602360248201527f63616e6e6f74206275726e207368617265732066726f6d206f7468657220706f6044820152626f6c7360e81b6064820152608490fd5b5050346102a5576105526102e491610fc736611608565b91925192610fd48461163d565b86845261054261053d8433611dcb565b508290346102a557826003193601126102a557610fff6115f2565b90336001600160a01b0383160361101b57906102e49135611b42565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b5050346102a557816003193601126102a557600c5490516001600160a01b039091168152602090f35b5091346105575781600319360112610557576110b96115d7565b602435906110c681611c10565b8210156110f4576001600160a01b031682526006602090815283832091835290815290829020548251908152f35b835162461bcd60e51b8152602081870152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b503461025357816003193601126102535735906111666115f2565b90828452600a60205261117e6001828620015461180c565b828452600a60209081528185206001600160a01b039093168086529290528084205460ff16156111ac578380f35b828452600a6020528084208285526020528320600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a43880808380f35b50346102535760203660031901126102535781602093600192358152600a85522001549051908152f35b8334610557576102e461123336611608565b9161124161053d8433611dcb565b611edf565b503461025357602036600319011261025357358252600d6020908152918190205490516001600160a01b039091168152f35b5050346102a557816003193601126102a5576020906008549051908152f35b50346102535781600319360112610253576112b06115d7565b6024359290916001600160a01b03919082806112cb87611cd3565b169416938085146113b757803314908115611398575b501561133057848652602052842080546001600160a01b0319168317905561130883611cd3565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff8287205416386112e1565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b5091346105575760203660031901126105575750610b88602092356116ba565b50913461055757806003193601126105575781519181825492600184811c918186169586156114e5575b6020968785108114610808578899509688969785829a5291826000146107e157505060011461148a57505050610416929161077791038561166f565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106114cd5750505082010181610777610416610764565b8054848a0186015288955087949093019281016114b4565b92607f169261144e565b92505034610253576020366003190112610253573563ffffffff60e01b81168091036102535760209250637965db0b60e01b8114908115611532575b5015158152f35b63780e9d6360e01b81149150811561154c575b503861152b565b6380ac58cd60e01b81149150811561157e575b811561156d575b5038611545565b6301ffc9a760e01b14905038611566565b635b5e139f60e01b8114915061155f565b60005b8381106115a25750506000910152565b8181015183820152602001611592565b906020916115cb8151809281855285808601910161158f565b601f01601f1916010190565b600435906001600160a01b03821682036115ed57565b600080fd5b602435906001600160a01b03821682036115ed57565b60609060031901126115ed576001600160a01b039060043582811681036115ed579160243590811681036115ed579060443590565b6020810190811067ffffffffffffffff82111761165957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761165957604052565b67ffffffffffffffff811161165957601f01601f191660200190565b519081151582036115ed57565b6000818152600260205260409020546116dd906001600160a01b03161515611c87565b6000818152600d60205260018060a01b03908160408220541692604051637e01dd6960e11b8152816004820152606081602481885afa90811561179f578391611763575b501561172d5750505090565b600081815260026020526040908190205493945092611756906001600160a01b03161515611c87565b8152600460205220541690565b90506060813d8211611797575b8161177d6060938361166f565b8101031261025357604061179191016116ad565b38611721565b3d9150611770565b6040513d85823e3d90fd5b6020818303126115ed5780519067ffffffffffffffff82116115ed570181601f820112156115ed5780516117dd81611691565b926117eb604051948561166f565b818452602082840101116115ed57611809916020808501910161158f565b90565b600090808252602090600a8252604092838120338252835260ff8482205416156118365750505050565b83519167ffffffffffffffff90336060850183811186821017611b2e578752602a85528585019187368437855115611b1a5760308353855191600192831015611b06576078602188015360295b838111611a9c5750611a5a5790875193608085019085821090821117611a4657885260428452868401946060368737845115611a3257603086538451821015611a325790607860218601536041915b8183116119c4575050506119825761197e9386936119629361195360489461192a9a519a8b957f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008c880152518092603788019061158f565b8401917001034b99036b4b9b9b4b733903937b6329607d1b60378401525180938684019061158f565b0103602881018752018561166f565b5192839262461bcd60e51b8452600484015260248301906115b2565b0390fd5b60648587519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015611a1e576f181899199a1a9b1b9c1cb0b131b232b360811b901a6119f485886123e8565b5360041c928015611a0a576000190191906118d2565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b86526041600452602486fd5b60648789519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b90600f81166010811015611af2576f181899199a1a9b1b9c1cb0b131b232b360811b901a611aca838a6123e8565b5360041c908015611ade5760001901611883565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b90600091808352600a602052604083209160018060a01b03169182845260205260ff604084205416611b7357505050565b808352600a602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b600b546001600160a01b03163303611bcc57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b03168015611c3057600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b15611c8e57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152600260205260409020546001600160a01b0316611809811515611c87565b15611cfd57565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15611db257565b60405162461bcd60e51b81528061197e60048201611d58565b906001600160a01b038080611ddf84611cd3565b16931691838314938415611e12575b508315611dfc575b50505090565b611e08919293506116ba565b1614388080611df6565b909350600052600560205260406000208260005260205260ff604060002054169238611dee565b15611e4057565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b15611e8c57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b611f0391611eec84611cd3565b6001600160a01b0393848416939185168414611e85565b8382169384156121a95783801592836000146120f65750506008549286600052600960205283604060002055600160401b84101561165957611f5087610a2186600189980160085561239b565b8386036120c3575b5084600092878452602092600d84526040918183872054169015806120bb575b612003575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95611fb491611fad8b611cd3565b1614611e85565b878452600483526002818520936001600160601b0360a01b94858154169055878652600381528286206000198154019055838652828620600181540190558986525283209182541617905580a4565b8495965082602493959294505192838092635a2d1e0760e11b82528c60048301525afa9081156120b157859161207c575b506120455784939291869138611f7d565b815162461bcd60e51b815260048101849052601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508381813d83116120aa575b612093818361166f565b810103126106f0576120a4906116ad565b38612034565b503d612089565b83513d87823e3d90fd5b506001611f78565b6120cc90611c10565b60406000878152600660205281812083825260205288828220558881526007602052205538611f58565b8682959203612106575b50611f50565b612111919450611c10565b600019810193908411612193578493600090888252602090600782526040918284205482810361215c575b508a84528383812055878452600681528284209184525281205538612100565b888552600682528385208386528252838520548986526006835284862082875283528085872055855260078252838520553861213c565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b91929091803b1561230b57612247936040519081630a85bd0160e11b9384825233600483015260009687602484015260448301526080606483015281878160209a8b9660848301906115b2565b03926001600160a01b03165af18491816122cb575b506122ba575050503d6000146122b2573d61227681611691565b90612284604051928361166f565b81528091833d92013e5b805191826122af5760405162461bcd60e51b81528061197e60048201611d58565b01fd5b50606061228e565b6001600160e01b0319161492509050565b9091508581813d8311612304575b6122e3818361166f565b810103126106f057516001600160e01b0319811681036106f057903861225c565b503d6122d9565b50915050600190565b92939190803b1561239157612366946040518092630a85bd0160e11b9485835233600484015260018060a01b03809816602484015260448301526080606483015281806020998a9560848301906115b2565b03916000988991165af18491816122cb57506122ba575050503d6000146122b2573d61227681611691565b5050915050600190565b6008548110156123d25760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b9081518110156123d257016020019056fea2646970667358221220001844df1ccf24e5fc204c0a0bcb199264bf8c18687c0fc92751888b0fb906aa64736f6c6343000814003360806040908082523462000164578062001105803803809162000023828562000169565b83396020928391810103126200016457516001600160a01b038082169290918390036200016457600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b038411858510176200014e5760248484938193828c52885190206321f8a72160e01b835260448901525afa9283156200014357600093620000ff575b5050501690600054161760005551610f7790816200018e8239f35b813d83116200013b575b62000115818562000169565b81010312620001375751908282168203620001345750388080620000e4565b80fd5b5080fd5b503d62000109565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200014e5760405256fe6040608081526004908136101561001557600080fd5b600091823560e01c63c87b56dd1461002c57600080fd5b3461077657602092836003193601126107735780548235929061005f906001600160a01b03165b6001600160a01b031690565b91634f558e7960e01b608052856080607f1961007e879060a491608452565b0181865afa8015610677578190610743575b61009990610855565b600154610131906100b2906001600160a01b0316610053565b9487875196818801886100fa6100df836010906f636f6e74726163742e6164647265737360801b81520190565b6e233932b739a6b2ba30a432b63832b960891b8152600f0190565b039861010e601f199a8b8101835282610807565b51902089516321f8a72160e01b8152878101918252948592918391829160200190565b03915afa918215610677578392610724575b508651630178b36760e31b81528481018281526001600160a01b03938416968a918391908290819060200103915afa80156106775783918591610707575b501691875191631865c57d60e01b835284838781875afa9283156106775785936106eb575b5088519063ef21184f60e01b82528582806101c8848b83019190602083019252565b03818b5afa9182156106775786926106cf575b5089516333c7180560e11b81528781018281528c90829081906020010381895afa8015610677576102319988928e84936106a0575b50508c516376e8a45160e11b81528a81019283529a8b928391829160200190565b03915afa928315610677578b98879461067c575b5061024f86610d62565b9661025983610b4c565b988c51809a8c820161028390601190706672656e20706f6f6c207368617265202360781b81520190565b61028c91610941565b038c81018b5261029c908b610807565b8c51809b81016102d090601b907f74686973206672656e206861732061206465706f736974206f6620000000000081520190565b6102da9087610941565b6c01022ba341034b7103837b7b61609d1b8152600d016102fa908b610941565b7f2c207769746820636c61696d61626c652062616c616e6365206f6620000000008152601c0161032a9088610941565b630408ae8d60e31b8152600401038c81018c52610347908c610807565b8d8d518092638da5cb5b60e01b8252818b5afa918215610677579161064a575b501661037290610d62565b9461037c91610958565b61038590610e58565b9489519788978c89016103a890600990683d913730b6b2911d1160b91b81520190565b6103b191610941565b71111610113232b9b1b934b83a34b7b7111d1160711b81526012016103d591610941565b7f222c202265787465726e616c5f75726c223a2268747470733a2f2f6170702e6681526d72656e732e66756e2f706f6f6c2f60901b6020820152602e0161041c9082610941565b7f222c202261747472696275746573223a205b7b2274726169745f74797065223a81527110113837b7b6111610113b30b63ab2911d1160711b602082015260320161046691610941565b7f227d2c7b2274726169745f74797065223a20226465706f736974222c20227661815266363ab2911d101160c91b60208201526027016104a591610941565b630408ae8d60e31b81526004017f227d2c7b2274726169745f74797065223a2022636c61696d61626c65222c20228152683b30b63ab2911d101160b91b60208201526029016104f391610941565b630408ae8d60e31b81526004017f227d2c7b2274726169745f74797065223a2022706f6f6c207374617465222c20815269113b30b63ab2911d101160b11b6020820152602a0161054291610941565b7f227d2c7b2274726169745f74797065223a2022706f6f6c2063726561746f722281526b1610113b30b63ab2911d101160a11b6020820152602c0161058691610941565b6e113eae96101134b6b0b3b2911d101160891b8152600f017f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000008152601a016105cd91610941565b61227d60f01b81526002010382810182526105e89082610807565b6105f190610e58565b82517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000094810194855293849190601d0161062a91610941565b03908101835261063a9083610807565b5161064681928261079d565b0390f35b61066a91508d803d10610670575b6106628183610807565b810190610895565b38610367565b503d610658565b610849565b6106999194503d8089833e6106918183610807565b8101906108d0565b9238610245565b6106c0929350803d106106c8575b6106b88183610807565b810190610932565b90388e610210565b503d6106ae565b6106e49192503d8088833e6106918183610807565b90386101db565b6107009193503d8087833e6106918183610807565b91386101a6565b61071e91508a3d8c11610670576106628183610807565b38610181565b61073c919250883d8a11610670576106628183610807565b9038610143565b50853d871161076c575b6107658161075d610099936107df565b608001610829565b9050610090565b503d61074d565b80fd5b8280fd5b60005b83811061078d5750506000910152565b818101518382015260200161077d565b604091602082526107bd815180928160208601526020868601910161077a565b601f01601f1916010190565b634e487b7160e01b600052604160045260246000fd5b601f80199101166080016080811067ffffffffffffffff82111761080257604052565b6107c9565b90601f8019910116810190811067ffffffffffffffff82111761080257604052565b602090607f1901126108445760805180151581036108445790565b600080fd5b6040513d6000823e3d90fd5b1561085c57565b60405162461bcd60e51b81526020600482015260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b9081602091031261084457516001600160a01b03811681036108445790565b67ffffffffffffffff811161080257601f01601f191660200190565b6020818303126108445780519067ffffffffffffffff8211610844570181601f82011215610844578051610903816108b4565b926109116040519485610807565b818452602082840101116108445761092f916020808501910161077a565b90565b90816020910312610844575190565b906109546020928281519485920161077a565b0190565b604051638ae578fd60e01b81526001600160a01b03926020908290600490829087165afa8015610677576000926109b2928492610aa9575b5060405194858094819363516b636d60e11b8352600483019190602083019252565b0392165afa90811561067757610a709161092f91600091610a90575b50610a82604051938492610a6a60208501606c907f3c7376672077696474683d2234303022206865696768743d223430302220786d81527f6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f7376672260208201527f20786d6c6e733a786c696e6b3d22687474703a2f2f7777772e77332e6f72672f60408201526b189c9c9c97bc3634b735911f60a11b60608201520190565b90610941565b651e17b9bb339f60d11b815260060190565b03601f198101835282610807565b610aa3913d8091833e6106918183610807565b386109ce565b610ac291925060203d8111610670576106628183610807565b9038610990565b604051906020820182811067ffffffffffffffff8211176108025760405260008252565b604051906060820182811067ffffffffffffffff82111761080257604052602a8252604082602036910137565b90610b24826108b4565b610b316040519182610807565b8281528092610b42601f19916108b4565b0190602036910137565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015610c81575b506d04ee2d6d415b85acef810000000080831015610c72575b50662386f26fc1000080831015610c63575b506305f5e10080831015610c54575b5061271080831015610c45575b506064821015610c35575b600a80921015610c2b575b600190816021610be3828701610b1a565b95860101905b610bf5575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215610c2657919082610be9565b610bee565b9160010191610bd2565b9190606460029104910191610bc7565b60049193920491019138610bbc565b60089193920491019138610baf565b60109193920491019138610ba0565b60209193920491019138610b8e565b604093508104915038610b75565b634e487b7160e01b600052601160045260246000fd5b600281901b91906001600160fe1b03811603610cbd57565b610c8f565b9060028201809211610cbd57565b9060208201809211610cbd57565b634e487b7160e01b600052603260045260246000fd5b908151811015610d05570160200190565b610cde565b8015610cbd576000190190565b15610d1e57565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b610d6a610aed565b90815115610d0557603060208301538151600190811015610d055790607860218401536029915b808311610da4575061092f915015610d17565b90600f8116906010821015610d0557610de1916f181899199a1a9b1b9c1cb0b131b232b360811b901a610dd78587610cf4565b5360041c92610d0a565b9190610d91565b604051906060820182811067ffffffffffffffff82111761080257604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b805115610f3857610e67610de8565b610e83610e7e610e778451610cc2565b6003900490565b610ca5565b91610e95610e9084610cd0565b610b1a565b92835280815182019060208501935b828210610ee657505050600390510680600114610ed557600214610ec6575090565b603d60f81b6000199091015290565b50613d3d60f01b6001199091015290565b9091936004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301939190610ea4565b5061092f610ac956fea2646970667358221220d7ac7eba35a39945ac758bf97b9e72a251671b0f5f001a93d4e5a32c00360eb564736f6c634300081400336080806040523461002857600380546001600160a01b03191633179055610624908161002e8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80630e14a376146105455780631e0ea61e1461046e57806321f8a7211461043c5780632c62ff2d1461040057806367a6a917146103405780637ae1cfca146103145780638a0dac4a146102cb578063a75b87d2146102a2578063abfdcced1461024f578063adb353dc1461020f578063bd02d0f5146101e9578063ca446dd91461018f578063e2a4853a1461015857838163e2b202bf1461011e575063ebb9d8c9146100c857600080fd5b3461011a576100d636610587565b92906100ed60018060a01b036003541633146105a2565b845283602052832090815492830392831161010757505580f35b634e487b7160e01b845260119052602483fd5b8280fd5b808484346101545760203660031901126101545761014760018060a01b036003541633146105a2565b3582528160205281205580f35b5050fd5b50503461018b5761016836610587565b919061017f60018060a01b036003541633146105a2565b83528260205282205580f35b5080fd5b50903461011a578060031936011261011a576024356001600160a01b0381811693918490036101e5576101c7906003541633146105a2565b3583526001602052822080546001600160a01b031916909117905580f35b8480fd5b503461011a57602036600319011261011a57602092829135815280845220549051908152f35b503461011a5761021e36610587565b929061023560018060a01b036003541633146105a2565b845283602052832090815492830180931161010757505580f35b50903461011a578060031936011261011a576024359182151580930361029e5761028460018060a01b036003541633146105a2565b358352600260205282209060ff8019835416911617905580f35b8380fd5b50503461018b578160031936011261018b5760035490516001600160a01b039091168152602090f35b83823461018b57602036600319011261018b5780356001600160a01b038181169182900361029e57610302906003541633146105a2565b81546001600160a01b03191617905580f35b503461011a57602036600319011261011a578160209360ff923581526002855220541690519015158152f35b5091903461018b578160031936011261018b57600354926001600160a01b03808516919061036f3384146105a2565b8154166103bd57507fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e96792936bffffffffffffffffffffffff60a01b166003558151908152836020820152a180f35b606490602084519162461bcd60e51b8352820152601f60248201527f6d7573742073657420677561726469616e20746f2030783030206669727374006044820152fd5b503461011a57602036600319011261011a5761042760018060a01b036003541633146105a2565b35825260026020528120805460ff1916905580f35b503461011a57602036600319011261011a5735825260016020908152918190205490516001600160a01b039091168152f35b5091903461018b578160031936011261018b5782546001600160a01b0380821690338290036104e9577fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e9679495600354936bffffffffffffffffffffffff60a01b9084828716176003551690558351921682526020820152a180f35b835162461bcd60e51b8152602081880152603060248201527f436f6e6669726d6174696f6e206d75737420636f6d652066726f6d206e65772060448201526f677561726469616e206164647265737360801b6064820152608490fd5b503461011a57602036600319011261011a5761056c60018060a01b036003541633146105a2565b3582526001602052812080546001600160a01b031916905580f35b604090600319011261059d576004359060243590565b600080fd5b156105a957565b60405162461bcd60e51b815260206004820152601960248201527f4163636f756e74206973206e6f74206120677561726469616e000000000000006044820152606490fdfea264697066735822122057b73efffb12a522c4e08ecd95bc0fbfd455582875bb420fc94dccd7762d499664736f6c634300081400336080604090808252346101535780612dbf803803809161001f8285610158565b833960209283918101031261015357516001600160a01b0380821692909183900361015357600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b0384118585101761013d5760248484938193828c52885190206321f8a72160e01b835260448901525afa928315610132576000936100f5575b5050501690600054161760005551612c43908161017c8239f35b813d831161012b575b6101088185610158565b81010312610127575190828216820361012457503880806100db565b80fd5b5080fd5b503d6100fe565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761013d5760405256fe6080604090808252600436101561001557600080fd5b600091823560e01c63319e90901461002c57600080fd5b346101705780600319360112610170576001600160a01b039160043583811691908290036101965760243591821515809303610192578460015416612a73938484019267ffffffffffffffff958585108786111761017e5792859491928a97969360609561019b8639835260208301528782015203019083f09384156101745780835416941693803b156101705782906044855180958193632f2ff15d60e01b83527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660048401528960248401525af180156101665761013f575b60208484817fb224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e8280513381523087820152a251908152f35b8111610152576020935081523880610107565b634e487b7160e01b84526041600452602484fd5b83513d87823e3d90fd5b8280fd5b83513d84823e3d90fd5b634e487b7160e01b8a52604160045260248afd5b8580fd5b8480fdfe608060409080825234620006ad5760608162002a738038038091620000258285620006e4565b833981010312620006ad576200003b8162000708565b9060208082015191821515809303620006ad578401516001600160a01b03808216929091839003620006ad5762000072336200071d565b81851615620006585782156200060157601180546001600160a01b0319908116851790915586516f636f6e74726163742e6164647265737360801b83820181815267119c995b9cd05c9d60c21b603084015260188352909491620000d681620006b2565b519020948851946321f8a72160e01b908187526004978888015260249686818981875afa801562000511578591600091620005c2575b501680156200056f578560105416176010558a518681019182526d4672656e73506f6f6c536861726560901b6030820152601e81526200014c81620006b2565b5190208a51908282528882015285818881865afa80156200046e57849160009162000530575b501684600f541617600f5589518581017f65787465726e616c2e636f6e74726163742e616464726573730000000000000081526e11195c1bdcda5d10dbdb9d1c9858dd608a1b603983015260288252606082019082821060018060401b038311176200051c57818d5282519020838252606483015286818981875afa9081156200051157878693600093620004d0575b50505016801562000479578460125416176012558951858101907f70726f746f636f6c2e6665652e70657263656e740000000000000000000000008252601481526200024e81620006b2565b5190208a519063bd02d0f560e01b82528882015285818881865afa80156200046e576000906200043a575b600a91508060085511620003ee578490868b51838101907f70726f746f636f6c2e6665652e726563697069656e7400000000000000000000825260168152620002c281620006b2565b519020918c51948593849283528b8301525afa908115620003e357600091620003a3575b50168091600e541617600e55156200035157856200032a868660ff801960095416911680911760095560001462000338576000805460ff60a01b191690556200071d565b5161230e9081620007658239f35b6000805460ff60a01b1916600160a01b1790556200071d565b855162461bcd60e51b8152928301526029908201527f4652454e5320636f6e7472616374206572726f72206e6f2066656520726563696044820152681c1a595b9d081cd95d60ba1b6064820152608490fd5b908482813d8311620003db575b620003bc8183620006e4565b81010312620003d85750620003d19062000708565b38620002e6565b80fd5b503d620003b0565b89513d6000823e3d90fd5b895162461bcd60e51b81528088018690526021818801527f4652454e5320636f6e7472616374206572726f722066656520746f6f206869676044820152600d60fb1b6064820152608490fd5b8682813d831162000466575b620004528183620006e4565b81010312620003d85750600a905162000279565b503d62000446565b8b513d6000823e3d90fd5b8a5162461bcd60e51b8152808901879052602c818901527f4652454e5320636f6e7472616374206572726f72206e6f204465706f7369742060448201526b18dbdb9d1c9858dd081cd95d60a21b6064820152608490fd5b90809294503d831162000509575b620004ea8186620006e4565b81010312620003d8575062000500849162000708565b38878162000202565b503d620004de565b8c513d6000823e3d90fd5b8860418b634e487b7160e01b600052526000fd5b91508682813d831162000567575b6200054a8183620006e4565b81010312620003d8575062000560849162000708565b3862000172565b503d6200053e565b508a5162461bcd60e51b81528089018790526027818901527f4652454e5320636f6e7472616374206572726f72206e6f206172742061646472604482015266195cdcc81cd95d60ca1b6064820152608490fd5b91508782813d8311620005f9575b620005dc8183620006e4565b81010312620003d85750620005f2859162000708565b386200010c565b503d620005d0565b60849086519062461bcd60e51b82526004820152602b60248201527f4652454e5320636f6e7472616374206572726f72206e6f2073746f726167652060448201526a1859191c995cdcc81cd95d60aa1b6064820152fd5b60849086519062461bcd60e51b82526004820152602960248201527f4652454e5320636f6e7472616374206572726f72206e6f206f776e6572206164604482015268191c995cdcc81cd95d60ba1b6064820152fd5b600080fd5b604081019081106001600160401b03821117620006ce57604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b03821190821017620006ce57604052565b51906001600160a01b0382168203620006ad57565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604081815260048036101561001e575b505050361561001c57005b005b600092833560e01c9081630c3f6acf146113705750806312686aae146113495780631865c57d146113185780632cf2cd48146112f15780632daad61d146112ca57806330dbf887146112a1578063379607f514610f025780633a4b66f114610ee957806341c6138314610eca578063441a3e7014610d0457806345b58fe414610c515780634690484014610c285780634b2b4e3614610b6b57806351ff484714610b46578063591167c714610b1d578063678e300a14610afd578063715018a614610aa35780637d88209714610a845780637fd6f15c14610a655780638620891c146108df578063888e9cf8146108a75780638ae578fd1461087e5780638da5cb5b146108565780639426e2261461082f578063ac2a5dfd1461080a578063b45a3c0e146107de578063cfb5a5f814610735578063e2d9ae3e14610716578063e3f05d83146106f2578063e4a50276146106b0578063e6b1a3ae14610570578063e920eec014610544578063e94ad65b14610517578063f2fde38b1461044d578063f9faa104146101f95763fc03bad20361001157346101f55760203660031901126101f557606092818392358252602052209081549160ff60026001830154920154169082519384526020840152151590820152f35b8280fd5b50826003193601126101f55734156104165760ff835460a01c16818110156104035760016102279114611735565b6102476801bc16d674ec8000006102406005543461177a565b111561179d565b600f5482516318160ddd60e01b8152602093909290916001600160a01b0390859085908490829085165afa9384156103f95786946103c6575b508386526001855234838720556102993460055461177a565b600555600754680100000000000000008110156103b357906102c3826001899594016007556116e8565b81549060031b9087821b91600019901b19161790558483526002865260018484205560ff60095460081c16600387528484209060ff801983541691151516179055600f5416803b156101f55760248392855194859384926335313c2160e11b845233908401525af180156103a95761036f575b5091606091837fd91527a40417d48f76ba016aaa9157e2ddaca6cb5b660432901659cb075058fc9451923484523390840152820152a180f35b917fd91527a40417d48f76ba016aaa9157e2ddaca6cb5b660432901659cb075058fc93919461039f606094611680565b9491935091610336565b82513d87823e3d90fd5b634e487b7160e01b875260418352602487fd5b9093508481813d83116103f2575b6103de81836116c6565b810103126103ee57519238610280565b8580fd5b503d6103d4565b83513d88823e3d90fd5b634e487b7160e01b845260218252602484fd5b6020606492519162461bcd60e51b8352820152601260248201527136bab9ba103232b837b9b4ba1032ba3432b960711b6044820152fd5b5090346101f55760203660031901126101f5576001600160a01b0382358181169391929084900361051357610480612280565b83156104c157505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b50503461054057816003193601126105405760125490516001600160a01b039091168152602090f35b5080fd5b833461056d5761056a6105563661142a565b95610565959195949294612280565b611b12565b80f35b80fd5b50346101f5576020806003193601126106ac5781356001600160a01b0381169390849003610513576105a0612280565b805163516b636d60e11b81526001848201528581602481885afa9081156106a2578691610625575b5051156105ed575050506bffffffffffffffffffffffff60a01b601054161760105580f35b5162461bcd60e51b81529182015260146024820152731a5b9d985b1a5908185c9d0818dbdb9d1c9858dd60621b604482015260649150fd5b90503d8087833e61063681836116c6565b810190838183031261069e5780519067ffffffffffffffff821161069a570181601f8201121561069e57805161066b8161187e565b92610678855194856116c6565b81845285828401011161069a57610694918580850191016113af565b386105c8565b8780fd5b8680fd5b82513d88823e3d90fd5b8380fd5b50503461054057816003193601126105405780516106ee916106dc826106d5816115f9565b03836116c6565b519182916020835260208301906113d2565b0390f35b50503461054057816003193601126105405760209060ff6009541690519015158152f35b505034610540578160031936011261054057602090600d549051908152f35b50346101f55760203660031901126101f557600f548251631dc82a7560e01b81528235928101839052906001600160a01b03906020908390602490829085165afa9182156107d457916107999161079e9493602097926107a5575b5016301461181a565b6120a1565b9051908152f35b6107c6919250873d81116107cd575b6107be81836116c6565b8101906117fb565b9038610790565b503d6107b4565b84513d87823e3d90fd5b50346101f55760203660031901126101f5578160209360ff923581526003855220541690519015158152f35b50503461054057816003193601126105405780516106ee916106dc826106d5816114ce565b50503461054057816003193601126105405760209060ff60095460101c1690519015158152f35b505034610540578160031936011261054057905490516001600160a01b039091168152602090f35b50503461054057816003193601126105405760105490516001600160a01b039091168152602090f35b50346101f55760203660031901126101f557359160075483101561056d57506108d16020926116e8565b91905490519160031b1c8152f35b50602090816003193601126106ac5780359060ff855460a01c1681811015610a5257600161090d9114611735565b6109266801bc16d674ec8000006102406005543461177a565b600f548451631dc82a7560e01b8152828101849052906001600160a01b039081168583602481845afa928315610a4857602493879361096e928b92610a30575016301461181a565b865192838092634f558e7960e01b825287878301525afa908115610a265786916109f9575b50156109c257509060019184525281206109ae34825461177a565b90556109bc3460055461177a565b60055580f35b835162461bcd60e51b815290810183905260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b610a199150843d8611610a1f575b610a1181836116c6565b810190611866565b38610993565b503d610a07565b85513d88823e3d90fd5b6107c6919250853d87116107cd576107be81836116c6565b87513d8a823e3d90fd5b634e487b7160e01b865260218252602486fd5b5050346105405781600319360112610540576020906008549051908152f35b5050346105405781600319360112610540576020906005549051908152f35b833461056d578060031936011261056d57610abc612280565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50913461056d57602036600319011261056d575061079e60209235612114565b505034610540578160031936011261054057600f5490516001600160a01b039091168152602090f35b50503461054057816003193601126105405780516106ee916106dc826106d581611572565b50346101f557610b7a3661142a565b93610b89989698939193612280565b60095460101c60ff1615610c1357505050505092610baa919293369161189a565b602081519101208151610bc781610bc0816114ce565b03826116c6565b6020815191012003610bde5750505b61056a61190b565b906020606492519162461bcd60e51b8352820152600f60248201526e0e0eac496caf240dad2e6dac2e8c6d608b1b6044820152fd5b92955092955092610c2396611b12565b610bd6565b505034610540578160031936011261054057600e5490516001600160a01b039091168152602090f35b82843461056d578060031936011261056d579080519182906007549182855260208095018093600784527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890845b818110610cf05750505081610cb59103826116c6565b83519485948186019282875251809352850193925b828110610cd957505050500390f35b835185528695509381019392810192600101610cca565b825484529288019260019283019201610c9f565b5090346101f557806003193601126101f5578135602480359360ff865460a01c1681811015610eb8576001610d399114611735565b600f5484516331a9108f60e11b8082528382018690526020949290916001600160a01b0391869082908690829086165afa908115610eae579082918b91610e91575b50163303610e5f578589526001855287878a205410610e2657918493918695938a9897895260018552878920610db28b8254612051565b9055610dc08a600554612051565b600555600f54168751968794859384528301525afa928315610e1d575061056a948493849384938492610e00575b50505af1610dfa61205e565b50611af5565b610e169250803d106107cd576107be81836116c6565b3880610dee565b513d85823e3d90fd5b865162461bcd60e51b8152808501869052601481850152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b6044820152606490fd5b865162461bcd60e51b8152808501869052600d818501526c3737ba103a34329037bbb732b960991b6044820152606490fd5b610ea89150873d89116107cd576107be81836116c6565b38610d7b565b88513d8c823e3d90fd5b50634e487b7160e01b86526021905284fd5b5050346105405781600319360112610540576020906006549051908152f35b833461056d578060031936011261056d57610bd6612280565b50913461056d5760209182600319360112610540578335938360018060a01b039586600f5416845196878092631dc82a7560e01b825284878301526024998a915afa908115610a265790610f61918791611284575b508816301461181a565b60ff855460a01c168381101561127257600181146112305760644711156111e0576003146111d457866011541696828551818101906f636f6e74726163742e6164647265737360801b82526a4672656e734f7261636c6560a81b6030820152601b8152610fcd816116aa565b519020888751809b81936321f8a72160e01b8352898301525afa978815610a2657818888999a86938a916111b7575b50885163404df7b160e11b81523089820152998a938492165af19586156111ad57879661118e575b508580611163575b61114d575b61103a826120a1565b958288526002845285882061105088825461177a565b905561105e8760065461177a565b600655600854908115159081611144575b506110bd575b509086978392600f989798541694865195869384926331a9108f60e11b84528301525afa928315610e1d575061056a948493849384938492610e005750505af1610dfa61205e565b6110cc8760649298939861208e565b0490600182116110f3575b976110e8849392899a999899612051565b965097969091611075565b600e5460001983019088168382116111325792899a926111238b8080809d9e6110e8978c9b9a5af1610dfa61205e565b929a50929350509695966110d7565b634e487b7160e01b8a52601187528a8afd5b9050153861106f565b865460ff60a01b1916600360a01b178755611031565b5060ff875460a01c168481101561117c5760021461102c565b634e487b7160e01b8852602185528888fd5b6111a6919650833d8511610a1f57610a1181836116c6565b9438611024565b85513d89823e3d90fd5b6111ce9150843d86116107cd576107be81836116c6565b38610ffc565b60019694959694611031565b845162461bcd60e51b81528085018490526025818901527f6d7573742062652067726561746572207468616e203130302077656920746f20604482015264636c61696d60d81b6064820152608490fd5b845162461bcd60e51b8152808501849052601c818901527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152606490fd5b634e487b7160e01b8652602184528686fd5b61129b9150843d86116107cd576107be81836116c6565b38610f57565b50503461054057816003193601126105405760115490516001600160a01b039091168152602090f35b50346101f55760203660031901126101f55760209282913581526001845220549051908152f35b50346101f55760203660031901126101f55760209282913581526002845220549051908152f35b5050346105405781600319360112610540576106ee9061133661217a565b90519182916020835260208301906113d2565b50503461054057816003193601126105405760209060ff60095460081c1690519015158152f35b9050833461056d578060031936011261056d5760ff815460a01c16908382101561139c57602083838152f35b634e487b7160e01b815260218452602490fd5b60005b8381106113c25750506000910152565b81810151838201526020016113b2565b906020916113eb815180928185528580860191016113af565b601f01601f1916010190565b9181601f840112156114255782359167ffffffffffffffff8311611425576020838186019501011161142557565b600080fd5b9060806003198301126114255767ffffffffffffffff6004358181116114255783611457916004016113f7565b939093926024358381116114255782611472916004016113f7565b939093926044359182116114255761148c916004016113f7565b909160643590565b90600182811c921680156114c4575b60208310146114ae57565b634e487b7160e01b600052602260045260246000fd5b91607f16916114a3565b600a54600092916114de82611494565b8082529160019081811690811561155557506001146114fc57505050565b91929350600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8916000925b84841061153d57505060209250010190565b8054602085850181019190915290930192810161152b565b915050602093945060ff929192191683830152151560051b010190565b600c546000929161158282611494565b8082529160019081811690811561155557506001146115a057505050565b91929350600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7916000925b8484106115e157505060209250010190565b805460208585018101919091529093019281016115cf565b600b546000929161160982611494565b80825291600190818116908115611555575060011461162757505050565b91929350600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9916000925b84841061166857505060209250010190565b80546020858501810191909152909301928101611656565b67ffffffffffffffff811161169457604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761169457604052565b90601f8019910116810190811067ffffffffffffffff82111761169457604052565b60075481101561171f5760076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880190600090565b634e487b7160e01b600052603260045260246000fd5b1561173c57565b60405162461bcd60e51b81526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b6044820152606490fd5b9190820180921161178757565b634e487b7160e01b600052601160045260246000fd5b156117a457565b60405162461bcd60e51b815260206004820152602960248201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686044820152680c2dc406664408ae8d60bb1b6064820152608490fd5b9081602091031261142557516001600160a01b03811681036114255790565b1561182157565b60405162461bcd60e51b815260206004820152601960248201527f77726f6e67207374616b696e6720706f6f6c20666f72206964000000000000006044820152606490fd5b90816020910312611425575180151581036114255790565b67ffffffffffffffff811161169457601f01601f191660200190565b9291926118a68261187e565b916118b460405193846116c6565b829481845281830111611425578281602093846000960137010152565b156118d857565b60405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720737461746560a81b6044820152606490fd5b6801bc16d674ec800000804710611abf578060055403611a8457600090815460ff8160a01c166004811015611a7057600161194691146118d1565b60ff60095460101c1615611a375760ff60a01b1916600160a11b178255601254600d546001600160a01b0393918416803b156101f55790829160405180958180946304512a2360e31b8252608060048301526119cc6119a7608484016114ce565b6119bd60031991828682030160248701526115f9565b90848203016044850152611572565b90606483015203925af1908115611a2b5750916040917f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce19293611a1c575b50601254168151908152336020820152a1565b611a2590611680565b38611a09565b604051903d90823e3d90fd5b60405162461bcd60e51b81526020600482015260116024820152701d985b1a59185d1bdc881b9bdd081cd95d607a1b6044820152606490fd5b634e487b7160e01b84526021600452602484fd5b60405162461bcd60e51b81526020600482015260136024820152726e6f7420656e6f756768206465706f7369747360681b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d0dcdee840cadcdeeaced040cae8d60931b6044820152606490fd5b15611afc57565b634e487b7160e01b600052600160045260246000fd5b929094939194600160f81b30019081301161178757604051602092838201908152838252611b3f826116aa565b611b4a36868b61189a565b848151910120915190200361200c5760095460ff8116611fb2575b5060009260ff845460a01c16976004891015611f9e57611b886001809a146118d1565b67ffffffffffffffff92838111611f8a5780611ba5600a54611494565b98601f998a8111611f1d575b5087908a8311600114611e95578892611e8a575b5050600019600383901b1c1916908a1b17600a555b828211611e76578190611bee600b54611494565b888111611e09575b508590888311600114611d8a578692611d7f575b5050600019600383901b1c191690881b17600b555b8511611d6b57611c30600c54611494565b848111611d09575b5081938511600114611c85575091839491849394611c7a575b50501b916000199060031b1c191617600c555b600d556201000062ff0000196009541617600955565b013592503880611c51565b600c82527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c793918591601f19831691905b88838310611cef5750505010611cd5575b505050811b01600c55611c64565b0135600019600384901b60f8161c19169055388080611cc7565b868601358855909601959384019387935090810190611cb6565b600c83527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c78580880160051c820192848910611d62575b0160051c019087905b828110611d57575050611c38565b848155018790611d49565b92508192611d40565b634e487b7160e01b82526041600452602482fd5b013590503880611c0a565b600b87528a93507f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db991601f198416885b88828210611df35750508411611dd9575b505050811b01600b55611c1f565b0135600019600384901b60f8161c19169055388080611dcb565b8385013586558e97909501949283019201611dba565b909150600b86527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db98880850160051c820192878610611e6d575b918c91869594930160051c01915b828110611e5f575050611bf6565b8881558594508c9101611e51565b92508192611e43565b634e487b7160e01b85526041600452602485fd5b013590503880611bc5565b600a89528c93507fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a891601f1984168a5b8a828210611efe5750508411611ee4575b505050811b01600a55611bda565b0135600019600384901b60f8161c19169055388080611ed6565b91929596849587849396013581550195019201908e9594939291611ec5565b909150600a88527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a88a80850160051c820192898610611f81575b918e91869594930160051c01915b828110611f73575050611bb1565b8a81558594508e9101611f65565b92508192611f57565b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b85526021600452602485fd5b6000549060ff8260a01c166004811015611ff657611fe091611fd660ff92156118d1565b60101c1615611af5565b60ff60a01b1916600160a01b1760005538611b65565b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260048101839052601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d6174636800006044820152606490fd5b9190820391821161178757565b3d15612089573d9061206f8261187e565b9161207d60405193846116c6565b82523d6000602084013e565b606090565b8181029291811591840414171561178757565b471561210e5760009081526001602052604081205460026020526120d76040832054916120d1476006549061177a565b9061208e565b6005549081156120fa570480156120f5576120f29250612051565b90565b505090565b634e487b7160e01b84526012600452602484fd5b50600090565b60ff60005460a01c16906004821015611ff65760018203612136575050600090565b61213f906120a1565b9060085490811515908161216e575b50612157575090565b906064612167826120f29461208e565b0490612051565b6003915014153861214e565b60ff60005460a01c166004811015611ff6578015612246576002811461222357600181146121f4576003146121d2576040516121b5816116aa565b600d81526c7374617465206661696c75726560981b602082015290565b6040516121de816116aa565b6006815265195e1a5d195960d21b602082015290565b50604051612201816116aa565b6012815271616363657074696e67206465706f7369747360701b602082015290565b50604051612230816116aa565b60068152651cdd185ad95960d21b602082015290565b50604051612253816116aa565b601781527f6177616974696e672076616c696461746f7220696e666f000000000000000000602082015290565b6000546001600160a01b0316330361229457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212204307075ad24c60a5e77fdd1e87a336c740159c4494ba11f6c7f626069d43b45364736f6c63430008140033a26469706673582212207e2521306c4a85342d870836a0e59843d88a6b6cc3a185f1cdc54f4621cb697264736f6c6343000814003360808060405234610016576101d7908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63150b7a021461002857600080fd5b346100b75760803660031901126100b7576001600160a01b0360043581811681036100ba5760243591821682036100ba5760643567ffffffffffffffff938482116100b757366023830112156100b75781600401359485116100b75736602486840101116100b75760206100a4866024850160443588886100be565b6040516001600160e01b03199091168152f35b80fd5b8280fd5b9293926001600160a01b03908116911614610192576001146101845767ffffffffffffffff80821161016e5760405190601f8301601f19908116603f011682019081118282101761016e5760405281815260208101913681850111610169576020816000927f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d968637830101525190201461015e57630a85bd0160e11b90565b630a85bd0160e11b90565b600080fd5b634e487b7160e01b600052604160045260246000fd5b50630a85bd0160e11b919050565b50630a85bd0160e11b9291505056fea264697066735822122066efe2ddc2731a2442b0aa3ccf5da3ac87f205363468dac7b0f454b80c40660d64736f6c6343000814003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50a26469706673582212200f00d0e7b5ef47a107af5d6cbe8ee92f70550a4af1d4f9212167ea139bd93d8364736f6c634300081400333ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc1",
    "sourceMap": "736:10287:46:-:0;;;;;;1594:4:22;736:10287:46;;;;;;;;;1872:42;1195;736:10287;;;;;;;;;1187:51;736:10287;;;1187:51;736:10287;1385:42;736:10287;1385:42;736:10287;;;1385:42;736:10287;1461:42;736:10287;1461:42;736:10287;;;1461:42;736:10287;;1545:25;736:10287;;;1545:25;736:10287;1604:42;736:10287;1604:42;736:10287;;;1604:42;736:10287;1691:42;736:10287;1683:51;736:10287;;;1683:51;736:10287;1777:42;736:10287;1769:51;736:10287;;;1769:51;736:10287;1864:51;736:10287;;;1864:51;736:10287;;1937:101;736:10287;;:::i;:::-;;;;;;;;;-1:-1:-1;;736:10287:46;1937:101;736:10287;;;;;;;;-1:-1:-1;;;736:10287:46;;2075:69;736:10287;;;;;;;:::i;:::-;;;;;;-1:-1:-1;736:10287:46;;2075:69;736:10287;2075:69;736:10287;;;;;;;;2168:197;736:10287;;:::i;:::-;;;;;;;-1:-1:-1;736:10287:46;2168:197;736:10287;;;;;;-1:-1:-1;;;;;;;;;;;736:10287:46;;;;;;;;;;;2399:66;;736:10287;;;;;;;;;;;2168:197;736:10287;;;;;-1:-1:-1;;;;;;;;;;;736:10287:46;;;;;;;;;;;;;;;;;2075:69;736:10287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1937:101;736:10287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "736:10287:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1652:82;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:30;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;1154:84;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;1740:80;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;798:38;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;842:52;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;938:44;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;7935:14;736:10287;;;-1:-1:-1;;;7935:22:46;;;;;-1:-1:-1;;;;;736:10287:46;;;;7935:22;;736:10287;;;;;;;;7935:22;;;;;;;;;;;;736:10287;7928:4;;7935:22;:::i;:::-;7966:11;736:10287;7971:5;736:10287;;7966:11;:::i;:::-;736:10287;;7985:51;;;;;736:10287;;;;;;;;;;;;7985:51;;;;;;736:10287;;;;;;;;;;;7985:51;;;;;;;;736:10287;;;7935:14;736:10287;;;;;8077:3;736:10287;;8044:37;;;;;;736:10287;;;;;;;;;;;;8044:37;;;;;;;736:10287;8044:37;;;;;;;;736:10287;7928:4;8094:13;7928:4;8094:13;:::i;:::-;736:10287;;7935:14;736:10287;;;;8077:3;736:10287;;8116:37;;;;;;736:10287;;;;;8116:37;;;;;;;;;;736:10287;8116:37;;;;;;;;;;;736:10287;;;8077:3;736:10287;;;7935:14;736:10287;;;;;8175:22;;;;;;;;;;;;;8161:37;8175:22;;;;;;736:10287;8161:37;;;:::i;:::-;736:10287;;8175:22;;;;;;;-1:-1:-1;8175:22:46;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;736:10287;;;;;;;;;8116:37;;;;:::i;:::-;;;;;736:10287;;;;;;;;;8116:37;736:10287;;;8044:37;;;;:::i;:::-;;;;;736:10287;;;;;;;;;7985:51;;;;:::i;:::-;;;;7935:22;;;;;;;;;;;;;;:::i;:::-;;;;736:10287;;;;;;;;;;;;;;768:24;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;8889:5;736:10287;-1:-1:-1;;;;;736:10287:46;8884:11;;736:10287;;8884:11;:::i;:::-;736:10287;8903:11;736:10287;;8903:37;;;;;;736:10287;;;;;;;;;;;;8903:37;;;;;;;;;;736:10287;;;8958:14;736:10287;;;;8889:5;736:10287;;;;;;;;8958:44;;;;;;736:10287;;;;;1671:64:22;8958:44:46;;;;736:10287;8958:44;;;;;;;;;;;;;;;736:10287;;;;;;;;;;;;;;9026:26;;;;;;1671:64:22;9026:26:46;;;;;;;9010:43;9026:26;;;;;736:10287;9010:43;;:::i;:::-;9066:3;736:10287;9061:9;736:10287;;;;9061:9;:::i;:::-;736:10287;9078:64;;;;;;736:10287;;-1:-1:-1;;;9078:64:46;;;736:10287;;9078:64;;;;;:::i;:::-;;;;;;;;;;;;;736:10287;;;;8958:14;736:10287;;;;8889:5;736:10287;;;;;;;9150:47;;;;;736:10287;;-1:-1:-1;;;9150:47:46;;;-1:-1:-1;;;;;736:10287:46;;;9150:47;;;736:10287;;;;;;;;;;;;;;1671:64:22;;;736:10287:46;;;;;;;;;;;;;;9150:47;;;;;;;;;;736:10287;;9205:11;736:10287;8889:5;736:10287;;9205:11;:::i;:::-;736:10287;8958:14;736:10287;;;8889:5;736:10287;;;;;;;9224:47;;;;;;736:10287;;9224:47;;;-1:-1:-1;;;;;736:10287:46;;;9224:47;;;736:10287;;;;;;;;;;;;;;1671:64:22;;;736:10287:46;;;;;;;;;;;;9224:47;;;;;;;;;;736:10287;;;;;;;;;8958:14;736:10287;;;;;;;;;;;9293:26;;;;;;1671:64:22;9293:26:46;;;;;;;9279:41;9293:26;;;;;9279:41;;:::i;:::-;9328:9;736:10287;;;;9328:9;:::i;:::-;9345:69;;;;;736:10287;;;;;;;;;;;;9345:69;;;;;;736:10287;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;9345:69;;;;;;;;736:10287;;;8958:14;736:10287;;;;;;;;;9467:12;736:10287;;9422:63;;;;;;736:10287;;9422:63;;;-1:-1:-1;;;;;736:10287:46;;;9422:63;;;736:10287;;;;;;;;;;;;;;1671:64:22;;;736:10287:46;;;;;;;;;;9422:63;;;;;;;;;;736:10287;;;;9520:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9545:9;736:10287;;;;9545:9;:::i;:::-;736:10287;;;8958:14;736:10287;;;;;;;9562:62;;;;;;736:10287;;9562:62;;;-1:-1:-1;;;;;736:10287:46;;;9562:62;;;736:10287;;;;;;;;;;;;;1671:64:22;;;736:10287:46;;;;;-1:-1:-1;736:10287:46;;;;;;;;9562:62;;;;;;;;;;;736:10287;9562:62;;;736:10287;;8958:14;736:10287;;;;;;;;;;;;;9663:26;;;;1671:64:22;9663:26:46;;;;;;;;;;;;;;;;;:::i;9562:62::-;;;;:::i;:::-;;;;9520:17;736:10287;;;;;;;;;;;9520:17;-1:-1:-1;;;1671:64:22;;;;;736:10287:46;1671:64:22;;9422:63:46;;;;:::i;:::-;;;;;736:10287;;;;;;;;;9345:69;;;;:::i;:::-;;;;9293:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;736:10287;;;;;;;;;9224:47;;;;:::i;:::-;;;;;736:10287;;;;;;;;;9224:47;736:10287;;;9150:47;;;;:::i;:::-;;;;;736:10287;;;9078:64;;;;:::i;:::-;;;;;736:10287;;;9026:26;;;;;;;;;;;;;;;:::i;8958:44::-;;;;;;;;;;;;;;;:::i;:::-;;;736:10287;;;;;;;;8958:44;;;;;;;;8903:37;;;;:::i;:::-;;;;;736:10287;;;;;;;;;;;;;;;;;6861:5;736:10287;-1:-1:-1;;;;;736:10287:46;6851:16;;736:10287;;6851:16;:::i;:::-;6875:10;6900:7;6904:3;6900:7;;;;736:10287;;;6893:607;6919:11;736:10287;;;;;6919:37;;;;;;736:10287;;;;;;6919:37;;;;736:10287;;;;;6919:37;;;;;;;;;;6893:607;6990:14;;;736:10287;;;;;;;;;;;;;;;;6990:29;;;;;;1671:64:22;6990:29:46;736:10287;;;;6990:29;;;;;;;;;;7084:3;6990:29;;7060:13;6990:29;;;;;6893:607;736:10287;;;;;7060:13;:::i;:::-;7084:3;:::i;:::-;7097:12;736:10287;;;;7097:38;;;;;736:10287;;;;;;;;7097:38;;;;;;;;;;;;;;;;;;;;;;;;;;6893:607;736:10287;;;;;;7170:29;;;;;;;;;;1671:64:22;7170:29:46;;;;;;;;;7241:14;7170:29;7266:3;7170:29;;;;;;6893:607;736:10287;;;7241:14;:::i;7266:3::-;736:10287;;;;;7279:37;;;;;;736:10287;;;;7279:37;;;;;;;;;;;;;;;;;;;;;6893:607;736:10287;;;;;;7393:29;;;;;;;;;;1671:64:22;7393:29:46;;;;;;;7463:13;7393:29;7487:3;7393:29;;;;;;;;;6893:607;736:10287;;;;7463:13;:::i;7487:3::-;6893:607;;7393:29;;;;;;;-1:-1:-1;7393:29:46;;;;;;:::i;:::-;;;;;;;736:10287;;;;;;;;;7279:37;;;;:::i;:::-;;;;;736:10287;;;;;;;;;7170:29;;;;;;;;-1:-1:-1;7170:29:46;;;;;;:::i;:::-;;;;;;736:10287;;;;;;;;;7097:38;;;;:::i;:::-;;;;6990:29;;;;;;;;;;;;;;:::i;:::-;;;;;736:10287;;;;;;;;;6919:37;;;;:::i;:::-;;;;;736:10287;;;;;;;;;6919:37;736:10287;;;;;;;;;;;;;;;;;;5402:5;736:10287;-1:-1:-1;;;;;736:10287:46;;;5397:11;;736:10287;;5397:11;:::i;:::-;736:10287;5416:46;;;;;736:10287;;;;;;;;5416:46;;;;;;;;;736:10287;;;;;;;;;;;;;;;;;;5416:46;;;;;;;;;;;736:10287;;;5470:14;736:10287;;;5402:5;736:10287;;5470:35;;;;;;736:10287;;;;;;;;;;;;;5470:35;;;;736:10287;5470:35;;;;;;;;;;736:10287;;;5470:35;;;;:::i;:::-;736:10287;;;;;;;;5416:46;;;;:::i;:::-;;;;;736:10287;;;;;;;;;;;;;;;;;;;;;;;;8249:10;8274:7;8278:3;8274:7;;;;736:10287;;;8267:558;8298:5;736:10287;;-1:-1:-1;;;;;736:10287:46;8293:11;;736:10287;;8293:11;:::i;:::-;8314;736:10287;;;;;8314:37;;;;;;736:10287;;;;;;8314:37;;;;736:10287;;;;;8314:37;;;;;;;;;;;;;;8267:558;8379:14;;736:10287;;;;;;;;;;;;;;;;;8379:25;;;;;;1671:64:22;8379:25:46;736:10287;;;;8379:25;;;;;;;;;;;;8414:24;8379:25;8448:3;8379:25;;;;;;;736:10287;;;;8414:24;:::i;8448:3::-;8466;;736:10287;8461:9;736:10287;;;;8461:9;:::i;:::-;736:10287;8480:12;736:10287;;8480:38;;;;;736:10287;;;;;;8480:38;;;;;;;;;;;;;;;;;;;;;;;;8267:558;736:10287;;;;;;;8544:25;;;;;;;;;;1671:64:22;8544:25:46;;;;;;;;8579:20;8609:3;8544:25;;;;;;;;8267:558;736:10287;;;;;;8579:20;:::i;8609:3::-;736:10287;8622:9;736:10287;;;;8622:9;:::i;:::-;736:10287;;8641:37;;;;;;736:10287;;;;8641:37;;;;;;;;;;;;;;;;;;;;;8267:558;736:10287;;;;;;8747:25;;;;;;;;;;1671:64:22;8747:25:46;;;;;;;;8782:20;8747:25;;8812:3;8747:25;;;;;;;736:10287;;;;8782:20;:::i;8812:3::-;8267:558;;8641:37;;;;:::i;:::-;;;;8544:25;;;;;;-1:-1:-1;8544:25:46;;;;;;:::i;:::-;;;;;8480:38;;;;:::i;:::-;;;;8379:25;;;;;;;-1:-1:-1;8379:25:46;;;;;;:::i;:::-;;;;;;8314:37;;;;:::i;:::-;;;;;736:10287;;;;;;;;;;;;;;;;;;;;;;;;10014:5;736:10287;;;-1:-1:-1;;;;;736:10287:46;10009:11;;736:10287;;10009:11;:::i;:::-;736:10287;10028:11;736:10287;;10028:37;;;;;736:10287;;;;;;;;;;;;;10028:37;;;;;;;;;;736:10287;;;10083:14;736:10287;;;10014:5;736:10287;;;;;;;;;10083:44;;;;;;736:10287;;;;;1671:64:22;10083:44:46;;;;736:10287;10083:44;;;;;;;;;;;;;736:10287;;;;;;;;;;;;;;10151:26;;;;;;1671:64:22;10151:26:46;;;;;;;;10135:43;10151:26;;;;;;;10135:43;;;:::i;:::-;10186:9;736:10287;10191:3;736:10287;;10186:9;:::i;:::-;736:10287;10203:64;;;;;736:10287;;;;;;;;10203:64;;;;;;;;;;:::i;:::-;;;;;;;;;;;736:10287;;;10083:14;736:10287;;;;10014:5;736:10287;;;10191:3;736:10287;;10275:43;;;;;;736:10287;;-1:-1:-1;;;10275:43:46;;;-1:-1:-1;;;;;736:10287:46;;;10275:43;;;736:10287;;;;;;;;;;;;;;1671:64:22;;;736:10287:46;;;;;;;;;;;;;10275:43;;;;;;;;;;736:10287;;10326:11;736:10287;10014:5;736:10287;;10326:11;:::i;:::-;736:10287;10083:14;736:10287;;;;10014:5;736:10287;;;10191:3;736:10287;;10345:43;;;;;;;736:10287;;;;10345:43;;;;;;;;;;;736:10287;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:22;736:10287:46;10345:43;;;;;;;;;;;;;736:10287;;;10345:43;736:10287;;;10275:43;;;;:::i;:::-;;;;;736:10287;;;;;;;;;10203:64;;;;:::i;:::-;;;;;736:10287;;;;;;;;;10151:26;736:10287;;;;;;;;;10083:44;;;;;;;;;;;;;;;;;:::i;:::-;;;736:10287;;;;;;;10083:44;;;;;;;10028:37;;;;:::i;:::-;;;;736:10287;;;;;;;;;;;;;;;9757:5;736:10287;-1:-1:-1;;;;;736:10287:46;;9747:16;;736:10287;;9747:16;:::i;:::-;9771:10;9796:7;9800:3;9796:7;;;;736:10287;;;9789:165;736:10287;9815:11;736:10287;;9815:37;;;;;;736:10287;;;;;;;;;;;;9815:37;;;;;;;;;;9789:165;736:10287;;9872:14;736:10287;;;;;;;;;;9872:30;;;;;;1671:64:22;9872:30:46;736:10287;9872:30;;;;;;;;;;;;;;;9789:165;9923:7;;;;9942:3;9923:7;;;:::i;9942:3::-;9789:165;;9872:30;;;;;;;;;;;;;;;;:::i;:::-;;;736:10287;;;;;;;9923:7;736:10287;9872:30;;;;;;;;736:10287;;;;;;;;;9815:37;;;;:::i;:::-;;;;;736:10287;;;;;;;;;;;;;;;;;;;;;;;1577:69;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;1024:31;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;1061:36;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;;6572:5;736:10287;-1:-1:-1;;;;;736:10287:46;6562:16;;736:10287;;6562:16;:::i;:::-;6593:10;6619:7;6623:3;6619:7;;;;736:10287;;;6612:178;6650:14;736:10287;;;;;;;;;;;;;;6650:24;;;;;;;;1671:64:22;6650:24:46;736:10287;;;;6650:24;;;;;;;;;;;7918:5:25;6650:24:46;;;;;6612:178;7918:5:25;;;:::i;:::-;736:10287:46;6685:11;736:10287;;6685:37;;;;;;736:10287;;;;;;;;;;;;6685:37;;;;;;;;;;;;;;;;6612:178;736:10287;;;;;;6743:24;;;;;;;;;;1671:64:22;6743:24:46;;;;;;;;;;6778:3;6743:24;;;;;;6612:178;6743:24;;;:::i;6778:3::-;6612:178;;6743:24;;;;;;-1:-1:-1;6743:24:46;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;6685:37;;;;:::i;:::-;;;;6650:24;;;;;;;;;;;;;;:::i;:::-;;;;736:10287;;;;;;;;;;;;;;;10463:5;736:10287;-1:-1:-1;;;;;736:10287:46;;10453:16;;736:10287;;10453:16;:::i;:::-;736:10287;10475:46;;;;;;736:10287;;;;;;10475:46;;;;;;;;;;;736:10287;;;;;;;;;;;;;;;;;;10475:46;;;;;;;;;;;;;736:10287;;;10527:14;736:10287;;;10463:5;736:10287;;10527:26;;;;;736:10287;;;;;;;;;;;;;;;10527:26;;;;;736:10287;10527:26;;;;;;;;736:10287;10559:167;;;;;;736:10287;;10559:167;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;736:10287;;;10527:14;736:10287;;;;10463:5;736:10287;;10732:57;;;;;;736:10287;;;;;;;;;;;;;10732:57;;;;10757:24;10732:57;;;1671:64:22;736:10287:46;;;;10732:57;;;;;;;;736:10287;10795:167;;;;;;736:10287;;;;10795:167;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;736:10287;;;10527:14;736:10287;;;10463:5;736:10287;;10968:46;;;;;;736:10287;;;;;;;10968:46;;;;;;;;;1671:64:22;736:10287:46;;;;10968:46;;;;;;;;;;736:10287;;;10795:167;;;;:::i;:::-;;;;;736:10287;;;;;;;;;10732:57;;;;:::i;:::-;;;;10559:167;;;;:::i;:::-;;;;10527:26;;;;:::i;:::-;;;;10475:46;;;;:::i;:::-;;;;736:10287;;;;;;;;;;;;;;;;;;1826:89;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;;6161:5;736:10287;;6161:5;;;-1:-1:-1;;;;;736:10287:46;6151:16;;736:10287;;6151:16;:::i;:::-;6175:10;6200:7;6204:3;6200:7;;;;736:10287;;;6193:320;6219:11;736:10287;;;;6219:37;;;;;;736:10287;;;;;6219:37;;736:10287;;;;;6219:37;;;;;;;;;;6193:320;-1:-1:-1;6276:14:46;736:10287;;;;;;-1:-1:-1;;;6276:44:46;;736:10287;;;-1:-1:-1;;;;;736:10287:46;6276:44;;;736:10287;;;6276:44;736:10287;;;1671:64:22;;;6276:44:46;;;;736:10287;;;;;;;;;;;6276:44;;;;;;;;;;;;;;;;;;;6193:320;6341:7;;736:10287;;1671:64:22;;;;:::i;:::-;;;-1:-1:-1;;;736:10287:46;;;;3496:10:22;;3492:111;;6193:320:46;736:10287;;;;;;;;;;;;;;;;;;;;6398:31;;;;;736:10287;;6398:31;;;;;;;;;;;;;;6193:320;736:10287;;;;;;;;;;;6501:3;736:10287;;;;;1671:64:22;;;:::i;:::-;736:10287:46;1671:64:22;;-1:-1:-1;;;736:10287:46;;;;5545:6:22;;;;5541:100;;;;6193:320:46;6501:3;;;;;;:::i;:::-;6193:320;;5541:100:22;5572:30;;736:10287:46;;;5572:30:22;;;;;:::i;:::-;;;;5255:203;;5541:100;;;;;5255:203;-1:-1:-1;;;;;;;;;;;736:10287:46;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;5286:41:22;736:10287:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;;;;;;;;;1671:64:22;5346:31;;;;;;;;736:10287:46;;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;;;;;;;;1671:64:22;5396:31;;;;;:::i;:::-;5255:203;;;;;736:10287:46;-1:-1:-1;;;736:10287:46;;;;;1671:64:22;736:10287:46;6398:31;;;;;;;;;;;;;;;;;:::i;:::-;;;736:10287;;;;;6398:31;;;;736:10287;;;;6398:31;;;;;3492:111:22;3527:30;;3582:9;736:10287:46;;;3527:30:22;;;;;:::i;:::-;;;;3582:9;:::i;:::-;3492:111;;;;6276:44:46;;;;;;;;;;;;;;;;;;:::i;:::-;;;736:10287;;;;;;;;6276:44;;;736:10287;;;;6276:44;;;;;6219:37;;;;:::i;:::-;;;;736:10287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:32;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;1349:78;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;1433:70;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;;5566:5;736:10287;;-1:-1:-1;;;;;736:10287:46;5566:5;5556:16;;736:10287;;5556:16;:::i;:::-;5580:10;5605:7;5609:3;5605:7;;;;736:10287;;;5598:501;736:10287;5699:11;736:10287;;5699:37;;;;;;736:10287;;;;;;;;;;;;5699:37;;;;;;;;;;5598:501;-1:-1:-1;5758:14:46;736:10287;;;;;;-1:-1:-1;;;5758:44:46;;736:10287;;;-1:-1:-1;;;;;736:10287:46;5758:44;;;736:10287;;;5758:44;736:10287;;;1671:64:22;;;5758:44:46;:14;:44;;736:10287;;;;;;;;;;;5758:44;;;;;;;;;;;;;;5598:501;5823:7;;;;;:::i;:::-;736:10287;;;;;;;;;;;;;5866:29;;;;;;;;1671:64:22;736:10287:46;5866:29;;;;;;;;;;;;;;;;;5598:501;736:10287;;3678:6:22;3674:212;;5598:501:46;736:10287;;;;;5973:3;;736:10287;;;;;;5950:30;;;;;736:10287;;-1:-1:-1;;;5950:30:46;;-1:-1:-1;;;;;736:10287:46;;;5950:30;;;736:10287;;;;;;1671:64:22;;;736:10287:46;;;;;;;;;;;;5950:30;;;;;;;;;;;;;;;;5598:501;736:10287;;;;;;6012:29;;;;;;;;;;1671:64:22;6012:29:46;;;;;;;6051:26;6012:29;6087:3;6012:29;;;;;;;;;736:10287;;;;6051:26;:::i;6087:3::-;5598:501;;5950:30;;;;:::i;:::-;;;;;736:10287;;;;;;;;;3674:212:22;-1:-1:-1;;;;;;;;;;;736:10287:46;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;3705:44:22;736:10287:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;;;;;;;;;;3768:34:22;;;;;;;;736:10287:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;;;;;;;;;;3821:34:22;;;;;:::i;:::-;3674:212;;;5866:29:46;;;;;;;;;;;;;;:::i;:::-;;;;5758:44;;;;;;;;;;;;;;;;:::i;:::-;;;736:10287;;;;;5823:7;736:10287;;5758:44;;736:10287;;;;5758:44;;;;;5699:37;;;;:::i;:::-;;;;736:10287;;;;;;;;;;;;;;988:30;736:10287;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;;;;2547:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2532:33;736:10287;;-1:-1:-1;;;;;736:10287:46;;;-1:-1:-1;;;;;;736:10287:46;;;;;;;;;;2638:60;;;;736:10287;;;-1:-1:-1;;;736:10287:46;;;;2638:60;;;;736:10287;;2638:60;;;;2532:33;2638:60;;736:10287;2638:60;736:10287;2638:60;:::i;:::-;1671:64:22;2628:71:46;;736:10287;;2701:18;736:10287;;2604:116;;;;;736:10287;;-1:-1:-1;;;2604:116:46;;;;;;1671:64:22;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;;;;;;2604:116;;;;;;;;;;736:10287;;;;;;;;;2798:64;;;736:10287;;;;-1:-1:-1;;;736:10287:46;;;;2798:64;;;;;;:::i;:::-;1671::22;2788:75:46;;736:10287;2865:7;736:10287;;2764:109;;;;;;736:10287;;2764:109;;;;;;1671:64:22;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;2764:109;;;;;;;;;;736:10287;;;;;;;;;;2939:52;;;736:10287;;;-1:-1:-1;;;736:10287:46;;;;2939:52;;;;;;:::i;:::-;1671:64:22;2929:63:46;;736:10287;;2994:10;736:10287;;2905:100;;;;;;736:10287;;2905:100;;;;;;1671:64:22;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;-1:-1:-1;736:10287:46;;;;;;;;2905:100;;;;;;;;;;736:10287;;;;;;;;;3069:42;;;736:10287;-1:-1:-1;;;736:10287:46;;3069:42;;;;;;:::i;:::-;1671:64:22;3059:53:46;;736:10287;;3114:12;736:10287;;3035:92;;;;;;736:10287;;3035:92;;;;;;1671:64:22;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;-1:-1:-1;736:10287:46;;;;;;;;3035:92;;;;;;;;;;736:10287;;;;;;;;3180:32;;;;;;;;;;;;;;;;;;;;;;;;736:10287;;3180:32;;;;;;;;;736:10287;;;;;;;;;;;;;;;;;;3286:54;;;;;736:10287;-1:-1:-1;;;736:10287:46;;;;;;-1:-1:-1;;;736:10287:46;;;;3286:54;;;;;;:::i;:::-;1671:64:22;3276:65:46;;3252:115;;;;;;736:10287;;3252:115;;;;;;1671:64:22;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;3252:115;;;;;;;;;;736:10287;;;;;;;;3419:36;;;;;;;;;;;;;;;;;;;;;;;;736:10287;;3419:36;;;;;;;;;736:10287;;;;3398:57;736:10287;;;3398:57;736:10287;;;;;;;;3524:58;;;736:10287;;;;-1:-1:-1;;;736:10287:46;;;;3524:58;;;;;;:::i;:::-;1671:64:22;3514:69:46;;3490:123;;;;;;736:10287;;3490:123;;;;;;1671:64:22;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;3490:123;;;;;;;;;;736:10287;;;;;;;;3398:57;736:10287;;3621:69;;;;;;736:10287;;;;;;;;;;;;;;;;;;3621:69;;;;1671:64:22;736:10287:46;;;3621:69;;;;;;;;736:10287;;;;;;;;3739:29;;;;;;;;;;;;;;;;;;;;;;;;736:10287;;3739:29;;;;;;;;;736:10287;;;;;;;;;;;;;;;;;3841:51;;;736:10287;;;;-1:-1:-1;;;736:10287:46;;;;3841:51;;;;;;:::i;:::-;1671:64:22;3831:62:46;;3807:109;;;;;;736:10287;;3807:109;;;;;;1671:64:22;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;3807:109;;;;;;;;;;736:10287;;;;;;;;3968:33;;;;;;;;;;;;;;;;;;;;;;;;736:10287;;3968:33;;;;;;;;;736:10287;;;;3950:51;736:10287;;;3950:51;736:10287;;;;;;;;4073:55;;;736:10287;;;;-1:-1:-1;;;736:10287:46;;;;4073:55;;;;;;:::i;:::-;1671:64:22;4063:66:46;;4039:117;;;;;;736:10287;;4039:117;;;;;;1671:64:22;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;4039:117;;;;;;;;;;736:10287;;;;;;;;4213:40;;;;;;;;;;;;;;;;;;;;;;;;736:10287;;4213:40;;;;;;;;;736:10287;;;;4188:65;736:10287;;;4188:65;736:10287;;;;;;;;4323:62;;;736:10287;;;;-1:-1:-1;;;736:10287:46;;;;4323:62;;;;;;:::i;:::-;1671:64:22;4313:73:46;;4289:131;;;;;;736:10287;;4289:131;;;;;;1671:64:22;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;4289:131;;;;;;;;;;736:10287;-1:-1:-1;736:10287:46;;;;;4457:26;;;;;736:10287;;;4457:26;;;;;;;;;;;;;;;;;;;;;736:10287;;4457:26;;;;;;;;;736:10287;;;;;;;4446:37;736:10287;;;4446:37;736:10287;;;;-1:-1:-1;;;736:10287:46;;4548:48;;;;736:10287;;;;;;3114:12;4548:48;;;;;:::i;:::-;1671:64:22;4538:59:46;;4514:103;;;;;736:10287;;4514:103;;;;;;1671:64:22;;;-1:-1:-1;;;;;736:10287:46;;;;;;;;;;;;;;;;;4514:103;;;;;;;;;;736:10287;;;3398:57;736:10287;;;;;4759:9;736:10287;;;;;;;;;;;;;4733:79;;;;;;;736:10287;;;;;;4733:79;;;;;;;;;736:10287;4733:79;;;;;;;;736:10287;;;;4852:40;736:10287;;;4852:40;736:10287;;;3398:57;736:10287;;;;4759:9;736:10287;;;;;5065:79;;;;;;;;;736:10287;;;;5065:79;;;;;;;;;;;;736:10287;;;;;;;;;;;;;5065:79;;;;;;-1:-1:-1;5065:79:46;;;;;;:::i;:::-;;;;;;736:10287;;;;;;;;4733:79;;;;;;;;;;;;;;:::i;:::-;;;;;736:10287;;;;;;;;;4514:103;;;;:::i;:::-;;;;;736:10287;;;;;;;;;4457:26;736:10287;;;;;;;;;4457:26;-1:-1:-1;;;1671:64:22;;;;;;;;4289:131:46;;;;:::i;:::-;;;;;736:10287;;;;;;;;;4213:40;736:10287;;;;;;;;;4213:40;-1:-1:-1;;;;1671:64:22;;;;;;;;4039:117:46;;;;:::i;:::-;;;;3807:109;;;;:::i;:::-;;;;3621:69;;;;:::i;:::-;;;;3490:123;;;;:::i;:::-;;;;3252:115;;;;:::i;:::-;;;;3180:32;736:10287;;;;;;;;;3180:32;-1:-1:-1;;;1671:64:22;;;;;;;;3035:92:46;;;;:::i;:::-;;;;;736:10287;;;;;;;;;2905:100;;;;:::i;:::-;;;;2764:109;;;;:::i;:::-;;;;2604:116;;;;:::i;:::-;;;;2547:18;736:10287;;;;;;;;;2547:18;-1:-1:-1;;;1671:64:22;;;;;;;;736:10287:46;;;;;;;;;;;;;;7569:5;736:10287;-1:-1:-1;;;;;736:10287:46;7559:16;;736:10287;;7559:16;:::i;:::-;7583:10;7608:6;;;;;;736:10287;;;7704:14;736:10287;;;;7569:5;736:10287;;;;7743:3;736:10287;;;;;;;;;;7704:43;;;;;;;;;;;;;;736:10287;;;;;;;;;;;;;;;;;;;;;;;;;7704:43;;;;;;;;;7918:5:25;7704:43:46;;;;;7918:5:25;;;:::i;:::-;736:10287:46;7704:14;736:10287;;;7743:3;736:10287;;7756:43;;;;;;736:10287;;;;;;;;;;;;;7756:43;;;;;736:10287;;;;;;7756:43;;;;;;;;;;;7601:84;-1:-1:-1;7704:14:46;736:10287;7569:5;736:10287;7743:3;736:10287;;;7818:43;;;-1:-1:-1;;;;;736:10287:46;;;;;7818:43;;;736:10287;;;;;;;;;;;;;;;;;;;;7818:43;;;;;;;;;;;;;;;;;;;:::i;:::-;736:10287;;;;;;;;;;;;7756:43;;;;:::i;:::-;;;;7704;;;;;;;;;;;;;;:::i;:::-;736:10287;;;;;;;;;7601:84;736:10287;7626:11;736:10287;;7626:37;;;;;;;736:10287;;;;;;;;;;;;7626:37;;;;;;;;;7673:3;7626:37;;;7601:84;7673:3;;:::i;:::-;7601:84;;7626:37;;;;:::i;:::-;;;;1671:64:22;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:22;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;736:10287:46;;;1671:64:22;;;;-1:-1:-1;;1671:64:22;;;736:10287:46;1671:64:22;:::i;:::-;;;;-1:-1:-1;1671:64:22;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;736:10287:46;;;1671:64:22;;;;;:::o;:::-;-1:-1:-1;1671:64:22;;1819:584;1873:7;736:10287:46;;;;;;;;;;;;;;;1896:14:22:o;1869:528::-;1941:25;2939:104;;;1980:374;;2367:19;;;:::o;1980:374::-;736:10287:46;;;;;2196:43:22;;;;736:10287:46;;;1671:64:22;;;736:10287:46;1671:64:22;;;736:10287:46;2196:43:22;;;;;:::i;:::-;2086:175;1671:64;736:10287:46;;2086:175:22;;1671:64;2196:43;2086:175;;1671:64;;;;;;;;;;;;;;:::i;:::-;;;2086:175;1671:64;2086:175;;;;;;;:::i;:::-;2047:232;;;;;2312:27;2047:232;;:::i;:::-;2196:43;1671:64;;;2312:27;;;;;;:::i;:::-;2367:19;:::o;736:10287:46:-;;;;;;;;;;-1:-1:-1;;;;;736:10287:46;;;;;;;:::o;1449:98:25:-;736:10287:46;1495:22:25;;;;;736:10287:46;;-1:-1:-1;;;1495:22:25;;-1:-1:-1;;;;;736:10287:46;;;1495:22:25;;;736:10287:46;;;-1:-1:-1;;;736:10287:46;;;1671:64:22;1495:22:25;;;736:10287:46;;;1495:22:25;;;;;;;;;;1449:98;1527:13;;;;;;736:10287:46;;;;;;;;;;;;;;;1527:13:25;;1495:22;1527:13;;736:10287:46;1527:13:25;;;;;;;;1449:98;;:::o;1527:13::-;;;;;:::i;:::-;736:10287:46;;1449:98:25;:::o;1527:13::-;736:10287:46;;;;;;;;;1495:22:25;;;;;;;:::i;:::-;;;;;;736:10287:46;;;;;;;;;;-1:-1:-1;;736:10287:46;;;;;;;:::o;:::-;1671:64:22;;;736:10287:46;;;;;;;;3255:157:22;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;736:10287:46;;;;;;;;;;;;;;;;3345:30:22;;;:::i;:::-;3255:157::o;2410:424::-;2939:104;;;2445:359;;2410:424;736:10287:46;;;;2928:1:22;736:10287:46;;;2928:1:22;736:10287:46;2410:424:22:o;2445:359::-;736:10287:46;;2645:67:22;;;;736:10287:46;;;;1671:64:22;;;736:10287:46;;;1671:64:22;2705:4;736:10287:46;;;1671:64:22;736:10287:46;2645:67:22;;736:10287:46;1671:64:22;;;;;;;;;;;;-1:-1:-1;1671:64:22;2534:196;;1671:64;;;;736:10287:46;1671:64:22;2534:196;;;1671:64;;;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;3615:277;-1:-1:-1;;;;;736:10287:46;;;;;3678:6:22;;;3674:212;;3615:277;;:::o;3674:212::-;736:10287:46;;;;-1:-1:-1;;;;;;;;;;;736:10287:46;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;3705:44:22;736:10287:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;;;;;;;;;;3768:34:22;;;;;;;;736:10287:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;;;;;;;;;;3821:34:22;;;;;:::i;1998:108:25:-;736:10287:46;2049:22:25;;;;;736:10287:46;;-1:-1:-1;;;2049:22:25;;-1:-1:-1;;;;;736:10287:46;;;2049:22:25;;;736:10287:46;;;-1:-1:-1;;;736:10287:46;;;1671:64:22;2049:22:25;;;736:10287:46;;;2049:22:25;;;;;;;;;;1998:108;2081:18;;;;;;736:10287:46;;;;;;;;;;;;;;;2081:18:25;;2049:22;2081:18;;736:10287:46;2081:18:25;;;;;;;;1998:108;;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;736:10287:46;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;;;;;;;1671:64:22;;736:10287:46;;;;;;;;;;;;;;:::i;:::-;1671:64:22;;-1:-1:-1;;1671:64:22;736:10287:46;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;736:10287:46;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "failed()": "ba414fa6",
    "feeRecipient()": "46904840",
    "frensArt()": "94cd95e3",
    "frensMetaHelper()": "bc48e947",
    "frensOracle()": "edc91a92",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "setUp()": "0a9254e4",
    "ssvRegistryAddress()": "25b5e62f",
    "stakingPool()": "0c56ae3b",
    "stakingPool2()": "5f583c1d",
    "stakingPoolFactory()": "a1b8adcb",
    "testApprove()": "1aeb10a6",
    "testBalanceOf()": "3df77c0e",
    "testGetPoolById()": "87496250",
    "testIsApprovedForAll()": "09d26b6c",
    "testMintingDirectly()": "796a773d",
    "testOwner()": "9e535c69",
    "testOwnerOf()": "71a29bb7",
    "testSafeTransferFrom()": "90ec5d96",
    "testTokenByIndex()": "6a7179c3",
    "testTransferFrom()": "70557298",
    "testUnauthorizedAccess()": "4fc1a73e",
    "testexists()": "524ad495",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensOracle\",\"outputs\":[{\"internalType\":\"contract FrensOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssvRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool2\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBalanceOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetPoolById\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIsApprovedForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMintingDirectly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwnerOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSafeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenByIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUnauthorizedAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testexists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/FrensPoolShareTest.t.sol\":\"MiscTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensArt.sol\":{\"keccak256\":\"0x4d4e86a043ed3ddb4c807c390dc06584d03a91fa48022d951e9e60cc441147fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8255e91e410605c634b42d7d951746502c9b3b91084b1201b7ea350b5486a6d\",\"dweb:/ipfs/QmQeez7K4Zyq7bHpWZxSrFnf35bn831uwcbBBbHL1YnHLe\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0xdcefe236e7f6ced98c2a505b10f30d4b1341cc4776f94d40393cba6e2a1c67b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e5f65ea49a6af09223dcc55c670e7b8e0a32416cf8b1a17bb09bb5e83434f5\",\"dweb:/ipfs/QmT4MKAP1f4edVuaXUKTSWXfos1MuNb7EtehfC4hcx4hW5\"]},\"contracts/FrensOracle.sol\":{\"keccak256\":\"0x47b53ff148dbc4cbde609fd92f77dd024d8bbea9100a86d251ba19007f86e7f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b76b61a142e05f91751d9f92833bb871f2e64c0f9eff063c80493ac02b22d7d2\",\"dweb:/ipfs/QmcL1gRKGt6oWBk7tE8RqPMkFbQpEiXA7zuWatruLmM2NL\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0x7615c54bcde098d5739a893a91fdeca75234292bcc18ddfc05c26ad6cda2d7f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eca18d92c4b40b227c0708f4108f1ff8c9a9dfdc1207229ffa67351dad8bd81\",\"dweb:/ipfs/QmP7rpUXXNXRuikeZyUGggVp25SmDKPisjSsmLzyFecFnL\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x4d03ddbe46199b6f86c0173fcd2ef9e8f852613292629cd1747679b49ab22466\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fffe27c53b45238778331e25402704489bea80543992569fc1cdd1116b343\",\"dweb:/ipfs/QmNmMgSgftGrVWZ6u2h5nHNXLD7vaNF2kGZZTGsfPj9aaf\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0xc6f96d09d0c1f3349bc216170fdc6d58961b5a69b9a65fa825afeeb47b9eaac9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2f900c4c9343c2274e0839d5b3dace55bea9ba115efdfa7de002bac1ac2550ee\",\"dweb:/ipfs/QmRAoCgRFznFk8RtFf5FtRUWCZzLSRwNpe3UNpjXnvQ3XR\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0xf0d4e080bc8a31cebb6544ecda5abee508b0a5ffaada9a6935f26ea763ef259c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def2f8e50cef925a425708cc22296804dded68105763c10aa910faef742d71e\",\"dweb:/ipfs/QmRxAdanVtAvxwoLq9iZFcEWzNQjkxZDmRqNxVRwCQP5h5\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x5a90cb90f8bdf62acaf8d1c76c29c4168581fdff55130d6d28c09e223d7bc2c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c218722a566fb38f0f5f4c2a149ae461887c7764b85ecbc540cb7ce9e458237\",\"dweb:/ipfs/QmdUWJZChjUrEJUEciQ3vBG5SLsbgGcBiixmmjq17ufy3i\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x839f7e3c08d72fc538e0889fb75065435242ae3b9d81c839176a8309326775db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://869748145485481385c88e27b24e2952017bb11a150739dcdb1d50915830d4b9\",\"dweb:/ipfs/QmTQ9jy87d8qxpPLg3g3tqE63GJenfD1cz16x5iZnkuJao\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x71ec8963cc6af99db89417e259f4987b2503e31585db6450e7140e192d868e32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e5727b5f0f1d911d827f3b97bb00c4a6a21aa3b235ff2dcf9c70122c9485bc\",\"dweb:/ipfs/QmNTf6qo7kCzhuzyuV7q5rpmaT4Juepfgkc6eXYc93HYLT\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0x9ca4f7eb7011a8f1ed7a6d9a0f88ab68b29d49b63aa8864a694b63d5551a0bad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://691442367708458da9827c029828f74ddea99a4b327a2e31f2efdfd759b97f88\",\"dweb:/ipfs/Qmbd6EADu2GntQhPobDgdRg9c6vzwutzgn7fZfa5gTC8Jr\"]},\"contracts/interfaces/IFrensLogo.sol\":{\"keccak256\":\"0x71b64fda21ce2b1daa8f795394c34335837044734eaeaf1e73bd7d3a836365bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dd1adc76ac6ccbf64393fc480bedba681b01b1b33e68459149b879caa0fcc1a\",\"dweb:/ipfs/QmaLbTp7sztsYHKQ1D4vyGzvdRWwNGF3KqExWzCSiCdinM\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0xc08609d3c44bdaf6d77150129ed72337dfaee1a560e305bd2f435bb8ac0d1f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a56b465c201630f128ce60fddd6c9fd341193ce759b7a854996bf33bab5b042c\",\"dweb:/ipfs/QmYdSsAYumebM5BypK4tPxGoNKmezFv5VAHQotEDLQKjFb\"]},\"contracts/interfaces/IFrensOracle.sol\":{\"keccak256\":\"0xb8fb907cadbdd9dd146bd3179d385be91b039955df1eb85731afbbed01894e57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af779ef4e0f538f2ca4a397f0b8f757d33c7f3d2b64baf29d39045ae7b41bdce\",\"dweb:/ipfs/QmQytMCQNJCF5PoSB3EMSYNWaZqbHYjfSppHAZ3sUCCRYS\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0xef1985c0b95767f7b96d1f21aed9e48142c021d25d574f0615323ec2b83ad996\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074079edb1b5b586e73914cd4203e49eb5fd813baa6fc85038de0f23bd5a25e7\",\"dweb:/ipfs/QmQXtreUs6eJyuoLEGb79a1nWwdiziQeoL2kbjTPnYk1G3\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0xb5ee629c513705bc3c46fbe4ce81f6a9edac2c0d1f7030da14b3859a2e8aa39e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://970db7758aa9fa468922dae70b2c85c3094506dfb59293520d4fd83769b3bee1\",\"dweb:/ipfs/QmVjiqtVZYCxXVKtxsFZhMJvFcTYhKFuiBa6eP3UtpnVeW\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0xfd293708621d8eb26c25db108d90583d36ab7f4a7f1f71a75e0b6f54c9a0a451\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c10da0cd1b7cccb05340a2505803ca0ff8fe1821c5107059c95d09eff6e7a1a4\",\"dweb:/ipfs/QmfSzqmRf2sYBMfXzav6jdkuNc6N4xoN3NUJ1o5624vUkt\"]},\"contracts/interfaces/IPmFont.sol\":{\"keccak256\":\"0x505d6001f751cbbe1261b1a87160d99c438ff76d198f316b5fc8a9066f629e24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f00e50f07ffca6b806ec9afa4cd5e0325c6c80f691014fab4732782eedb18eef\",\"dweb:/ipfs/QmV5o8JGPuAhUXUzeUt97oo7gTCFSjNicXhBiKpsxGuzvs\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0xc4849e951336ce62ba55f6b4a6158a8c1bc8716e41b83a4afa98b23c1d97442c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3beb90e7b61ecd038b18fccda4384f60b0e5c486d1392d35ad3e9be5c3d012ae\",\"dweb:/ipfs/QmP5VAe3ZFFyTjWsyyTm5VN8U2d5u6U3cfcMHJHticD9w6\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0xfcce7e4e1de632af6ab1d89918ff97980a3b0e282eab86875e86128c41260574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://caa6604f6c96202509d52c75a78ceecee9bf95fa4dfc040c47a7d05c1d1cc250\",\"dweb:/ipfs/QmbjsaNxKJP9HAyk6HmSVE83XgNtFLRMAtTWp87uszQ8ab\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0x004e7a6a1ea7ac2dd49f26e4b423da2e87b4c9014867ec81f9572a15e0fba4a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ad4480a298be6ea7421524b1b185a634566cea4f989ceb7dac8094b17f807a2\",\"dweb:/ipfs/QmeNsCgQQif5w4Yuz3L7oddxsMXSzmECFgesdEHQ5Nca9P\"]},\"contracts/interfaces/IWaves.sol\":{\"keccak256\":\"0x5a318f5ff6701f3371425a37f40db5dfc5a960a197602bb561ca084b305d12b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f23abde1abc61d913d90bef65a3c421f2c037151304f61ac27585ad02d310c34\",\"dweb:/ipfs/QmeK8VZ9LR2JhXSNBotFjoEsXdjBfgrt6QfdMDuPnTL1rq\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/FrensPoolShareTest.t.sol\":{\"keccak256\":\"0x016b705bef9aae7498f7676de70260abe6c7d40e13912f6daf11ac0605a0def4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://365c112fe2a6d1182bdcee8e17208bafe40f6e70e3c99e3d9965a8442f2f5a45\",\"dweb:/ipfs/QmU3dXBcTA9dkQtXWSYEpJ66D3szYaUNNULtCATPnKSnMZ\"]},\"test/foundry/TestHelper.sol\":{\"keccak256\":\"0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f\",\"dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeRecipient",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensOracle",
          "outputs": [
            {
              "internalType": "contract FrensOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ssvRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool2",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testApprove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBalanceOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetPoolById"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIsApprovedForAll"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMintingDirectly"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwnerOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSafeTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenByIndex"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testUnauthorizedAccess"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testexists"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/FrensPoolShareTest.t.sol": "MiscTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensArt.sol": {
        "keccak256": "0x4d4e86a043ed3ddb4c807c390dc06584d03a91fa48022d951e9e60cc441147fd",
        "urls": [
          "bzz-raw://b8255e91e410605c634b42d7d951746502c9b3b91084b1201b7ea350b5486a6d",
          "dweb:/ipfs/QmQeez7K4Zyq7bHpWZxSrFnf35bn831uwcbBBbHL1YnHLe"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0xdcefe236e7f6ced98c2a505b10f30d4b1341cc4776f94d40393cba6e2a1c67b2",
        "urls": [
          "bzz-raw://a1e5f65ea49a6af09223dcc55c670e7b8e0a32416cf8b1a17bb09bb5e83434f5",
          "dweb:/ipfs/QmT4MKAP1f4edVuaXUKTSWXfos1MuNb7EtehfC4hcx4hW5"
        ],
        "license": "MIT"
      },
      "contracts/FrensOracle.sol": {
        "keccak256": "0x47b53ff148dbc4cbde609fd92f77dd024d8bbea9100a86d251ba19007f86e7f9",
        "urls": [
          "bzz-raw://b76b61a142e05f91751d9f92833bb871f2e64c0f9eff063c80493ac02b22d7d2",
          "dweb:/ipfs/QmcL1gRKGt6oWBk7tE8RqPMkFbQpEiXA7zuWatruLmM2NL"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0x7615c54bcde098d5739a893a91fdeca75234292bcc18ddfc05c26ad6cda2d7f9",
        "urls": [
          "bzz-raw://6eca18d92c4b40b227c0708f4108f1ff8c9a9dfdc1207229ffa67351dad8bd81",
          "dweb:/ipfs/QmP7rpUXXNXRuikeZyUGggVp25SmDKPisjSsmLzyFecFnL"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0x4d03ddbe46199b6f86c0173fcd2ef9e8f852613292629cd1747679b49ab22466",
        "urls": [
          "bzz-raw://383fffe27c53b45238778331e25402704489bea80543992569fc1cdd1116b343",
          "dweb:/ipfs/QmNmMgSgftGrVWZ6u2h5nHNXLD7vaNF2kGZZTGsfPj9aaf"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0xc6f96d09d0c1f3349bc216170fdc6d58961b5a69b9a65fa825afeeb47b9eaac9",
        "urls": [
          "bzz-raw://2f900c4c9343c2274e0839d5b3dace55bea9ba115efdfa7de002bac1ac2550ee",
          "dweb:/ipfs/QmRAoCgRFznFk8RtFf5FtRUWCZzLSRwNpe3UNpjXnvQ3XR"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0xf0d4e080bc8a31cebb6544ecda5abee508b0a5ffaada9a6935f26ea763ef259c",
        "urls": [
          "bzz-raw://6def2f8e50cef925a425708cc22296804dded68105763c10aa910faef742d71e",
          "dweb:/ipfs/QmRxAdanVtAvxwoLq9iZFcEWzNQjkxZDmRqNxVRwCQP5h5"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x5a90cb90f8bdf62acaf8d1c76c29c4168581fdff55130d6d28c09e223d7bc2c3",
        "urls": [
          "bzz-raw://7c218722a566fb38f0f5f4c2a149ae461887c7764b85ecbc540cb7ce9e458237",
          "dweb:/ipfs/QmdUWJZChjUrEJUEciQ3vBG5SLsbgGcBiixmmjq17ufy3i"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x839f7e3c08d72fc538e0889fb75065435242ae3b9d81c839176a8309326775db",
        "urls": [
          "bzz-raw://869748145485481385c88e27b24e2952017bb11a150739dcdb1d50915830d4b9",
          "dweb:/ipfs/QmTQ9jy87d8qxpPLg3g3tqE63GJenfD1cz16x5iZnkuJao"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x71ec8963cc6af99db89417e259f4987b2503e31585db6450e7140e192d868e32",
        "urls": [
          "bzz-raw://81e5727b5f0f1d911d827f3b97bb00c4a6a21aa3b235ff2dcf9c70122c9485bc",
          "dweb:/ipfs/QmNTf6qo7kCzhuzyuV7q5rpmaT4Juepfgkc6eXYc93HYLT"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0x9ca4f7eb7011a8f1ed7a6d9a0f88ab68b29d49b63aa8864a694b63d5551a0bad",
        "urls": [
          "bzz-raw://691442367708458da9827c029828f74ddea99a4b327a2e31f2efdfd759b97f88",
          "dweb:/ipfs/Qmbd6EADu2GntQhPobDgdRg9c6vzwutzgn7fZfa5gTC8Jr"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensLogo.sol": {
        "keccak256": "0x71b64fda21ce2b1daa8f795394c34335837044734eaeaf1e73bd7d3a836365bf",
        "urls": [
          "bzz-raw://7dd1adc76ac6ccbf64393fc480bedba681b01b1b33e68459149b879caa0fcc1a",
          "dweb:/ipfs/QmaLbTp7sztsYHKQ1D4vyGzvdRWwNGF3KqExWzCSiCdinM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0xc08609d3c44bdaf6d77150129ed72337dfaee1a560e305bd2f435bb8ac0d1f46",
        "urls": [
          "bzz-raw://a56b465c201630f128ce60fddd6c9fd341193ce759b7a854996bf33bab5b042c",
          "dweb:/ipfs/QmYdSsAYumebM5BypK4tPxGoNKmezFv5VAHQotEDLQKjFb"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensOracle.sol": {
        "keccak256": "0xb8fb907cadbdd9dd146bd3179d385be91b039955df1eb85731afbbed01894e57",
        "urls": [
          "bzz-raw://af779ef4e0f538f2ca4a397f0b8f757d33c7f3d2b64baf29d39045ae7b41bdce",
          "dweb:/ipfs/QmQytMCQNJCF5PoSB3EMSYNWaZqbHYjfSppHAZ3sUCCRYS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0xef1985c0b95767f7b96d1f21aed9e48142c021d25d574f0615323ec2b83ad996",
        "urls": [
          "bzz-raw://074079edb1b5b586e73914cd4203e49eb5fd813baa6fc85038de0f23bd5a25e7",
          "dweb:/ipfs/QmQXtreUs6eJyuoLEGb79a1nWwdiziQeoL2kbjTPnYk1G3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0xb5ee629c513705bc3c46fbe4ce81f6a9edac2c0d1f7030da14b3859a2e8aa39e",
        "urls": [
          "bzz-raw://970db7758aa9fa468922dae70b2c85c3094506dfb59293520d4fd83769b3bee1",
          "dweb:/ipfs/QmVjiqtVZYCxXVKtxsFZhMJvFcTYhKFuiBa6eP3UtpnVeW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0xfd293708621d8eb26c25db108d90583d36ab7f4a7f1f71a75e0b6f54c9a0a451",
        "urls": [
          "bzz-raw://c10da0cd1b7cccb05340a2505803ca0ff8fe1821c5107059c95d09eff6e7a1a4",
          "dweb:/ipfs/QmfSzqmRf2sYBMfXzav6jdkuNc6N4xoN3NUJ1o5624vUkt"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPmFont.sol": {
        "keccak256": "0x505d6001f751cbbe1261b1a87160d99c438ff76d198f316b5fc8a9066f629e24",
        "urls": [
          "bzz-raw://f00e50f07ffca6b806ec9afa4cd5e0325c6c80f691014fab4732782eedb18eef",
          "dweb:/ipfs/QmV5o8JGPuAhUXUzeUt97oo7gTCFSjNicXhBiKpsxGuzvs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0xc4849e951336ce62ba55f6b4a6158a8c1bc8716e41b83a4afa98b23c1d97442c",
        "urls": [
          "bzz-raw://3beb90e7b61ecd038b18fccda4384f60b0e5c486d1392d35ad3e9be5c3d012ae",
          "dweb:/ipfs/QmP5VAe3ZFFyTjWsyyTm5VN8U2d5u6U3cfcMHJHticD9w6"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0xfcce7e4e1de632af6ab1d89918ff97980a3b0e282eab86875e86128c41260574",
        "urls": [
          "bzz-raw://caa6604f6c96202509d52c75a78ceecee9bf95fa4dfc040c47a7d05c1d1cc250",
          "dweb:/ipfs/QmbjsaNxKJP9HAyk6HmSVE83XgNtFLRMAtTWp87uszQ8ab"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0x004e7a6a1ea7ac2dd49f26e4b423da2e87b4c9014867ec81f9572a15e0fba4a1",
        "urls": [
          "bzz-raw://8ad4480a298be6ea7421524b1b185a634566cea4f989ceb7dac8094b17f807a2",
          "dweb:/ipfs/QmeNsCgQQif5w4Yuz3L7oddxsMXSzmECFgesdEHQ5Nca9P"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IWaves.sol": {
        "keccak256": "0x5a318f5ff6701f3371425a37f40db5dfc5a960a197602bb561ca084b305d12b5",
        "urls": [
          "bzz-raw://f23abde1abc61d913d90bef65a3c421f2c037151304f61ac27585ad02d310c34",
          "dweb:/ipfs/QmeK8VZ9LR2JhXSNBotFjoEsXdjBfgrt6QfdMDuPnTL1rq"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a",
        "urls": [
          "bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe",
          "dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b",
        "urls": [
          "bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c",
          "dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/FrensPoolShareTest.t.sol": {
        "keccak256": "0x016b705bef9aae7498f7676de70260abe6c7d40e13912f6daf11ac0605a0def4",
        "urls": [
          "bzz-raw://365c112fe2a6d1182bdcee8e17208bafe40f6e70e3c99e3d9965a8442f2f5a45",
          "dweb:/ipfs/QmU3dXBcTA9dkQtXWSYEpJ66D3szYaUNNULtCATPnKSnMZ"
        ],
        "license": "UNLICENSED"
      },
      "test/foundry/TestHelper.sol": {
        "keccak256": "0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4",
        "urls": [
          "bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f",
          "dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/FrensPoolShareTest.t.sol",
    "id": 31126,
    "exportedSymbols": {
      "AccessControl": [
        26799
      ],
      "Address": [
        28809
      ],
      "Base64": [
        30022
      ],
      "BoolGetter": [
        34976
      ],
      "Context": [
        28831
      ],
      "DSTest": [
        5043
      ],
      "ERC165": [
        29030
      ],
      "ERC721": [
        27933
      ],
      "ERC721Enumerable": [
        28421
      ],
      "FrensArt": [
        159
      ],
      "FrensMetaHelper": [
        520
      ],
      "FrensOracle": [
        597
      ],
      "FrensPoolShare": [
        915
      ],
      "FrensPoolShareTokenURI": [
        1175
      ],
      "FrensStorage": [
        1483
      ],
      "IAccessControl": [
        26872
      ],
      "IDepositContract": [
        2736
      ],
      "IENS": [
        2873
      ],
      "IERC165": [
        29042
      ],
      "IERC721": [
        28049
      ],
      "IERC721Enumerable": [
        28452
      ],
      "IERC721Metadata": [
        28479
      ],
      "IERC721Receiver": [
        28067
      ],
      "IFrensArt": [
        2883
      ],
      "IFrensLogo": [
        2891
      ],
      "IFrensMetaHelper": [
        2924
      ],
      "IFrensOracle": [
        2941
      ],
      "IFrensPoolShare": [
        2992
      ],
      "IFrensPoolShareTokenURI": [
        3002
      ],
      "IFrensStorage": [
        3092
      ],
      "IMaliciousProxyInterface": [
        34952
      ],
      "IPmFont": [
        3100
      ],
      "IReverseResolver": [
        3110
      ],
      "IStakingPool": [
        3235
      ],
      "IStakingPoolFactory": [
        3248
      ],
      "IWaves": [
        3256
      ],
      "Math": [
        29907
      ],
      "MiscTest": [
        31125
      ],
      "NftReceiver": [
        35025
      ],
      "Ownable": [
        26985
      ],
      "Script": [
        5306
      ],
      "StakingPool": [
        2609
      ],
      "StakingPoolFactory": [
        2717
      ],
      "StdStorage": [
        8334
      ],
      "Strings": [
        29006
      ],
      "Test": [
        8236
      ],
      "Vm": [
        10355
      ],
      "console": [
        18419
      ],
      "console2": [
        26483
      ],
      "stdError": [
        8306
      ],
      "stdJson": [
        5666
      ],
      "stdMath": [
        9575
      ],
      "stdStorage": [
        9436
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:10985:46",
    "nodes": [
      {
        "id": 30024,
        "nodeType": "PragmaDirective",
        "src": "39:24:46",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 30025,
        "nodeType": "ImportDirective",
        "src": "181:28:46",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 9576,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30026,
        "nodeType": "ImportDirective",
        "src": "229:38:46",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 160,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30027,
        "nodeType": "ImportDirective",
        "src": "268:45:46",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 521,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30028,
        "nodeType": "ImportDirective",
        "src": "314:52:46",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 1176,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30029,
        "nodeType": "ImportDirective",
        "src": "367:42:46",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 1484,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30030,
        "nodeType": "ImportDirective",
        "src": "410:41:46",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 2610,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30031,
        "nodeType": "ImportDirective",
        "src": "452:48:46",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 2718,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30032,
        "nodeType": "ImportDirective",
        "src": "501:44:46",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 916,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30033,
        "nodeType": "ImportDirective",
        "src": "546:60:46",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 3249,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30034,
        "nodeType": "ImportDirective",
        "src": "607:57:46",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 2737,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30035,
        "nodeType": "ImportDirective",
        "src": "665:26:46",
        "nodes": [],
        "absolutePath": "test/foundry/TestHelper.sol",
        "file": "./TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 35026,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30036,
        "nodeType": "ImportDirective",
        "src": "692:41:46",
        "nodes": [],
        "absolutePath": "contracts/FrensOracle.sol",
        "file": "../../contracts/FrensOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31126,
        "sourceUnit": 598,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31125,
        "nodeType": "ContractDefinition",
        "src": "736:10287:46",
        "nodes": [
          {
            "id": 30041,
            "nodeType": "VariableDeclaration",
            "src": "768:24:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "784:8:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$159",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 30040,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30039,
                "name": "FrensArt",
                "nameLocations": [
                  "768:8:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 159,
                "src": "768:8:46"
              },
              "referencedDeclaration": 159,
              "src": "768:8:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$159",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30044,
            "nodeType": "VariableDeclaration",
            "src": "798:38:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "821:15:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 30043,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30042,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "798:15:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 520,
                "src": "798:15:46"
              },
              "referencedDeclaration": 520,
              "src": "798:15:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30047,
            "nodeType": "VariableDeclaration",
            "src": "842:52:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "872:22:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 30046,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30045,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "842:22:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1175,
                "src": "842:22:46"
              },
              "referencedDeclaration": 1175,
              "src": "842:22:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30050,
            "nodeType": "VariableDeclaration",
            "src": "900:32:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "920:12:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$1483",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 30049,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30048,
                "name": "FrensStorage",
                "nameLocations": [
                  "900:12:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1483,
                "src": "900:12:46"
              },
              "referencedDeclaration": 1483,
              "src": "900:12:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$1483",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30053,
            "nodeType": "VariableDeclaration",
            "src": "938:44:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "964:18:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 30052,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30051,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "938:18:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2717,
                "src": "938:18:46"
              },
              "referencedDeclaration": 2717,
              "src": "938:18:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30056,
            "nodeType": "VariableDeclaration",
            "src": "988:30:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1007:11:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2609",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 30055,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30054,
                "name": "StakingPool",
                "nameLocations": [
                  "988:11:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2609,
                "src": "988:11:46"
              },
              "referencedDeclaration": 2609,
              "src": "988:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2609",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30059,
            "nodeType": "VariableDeclaration",
            "src": "1024:31:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "5f583c1d",
            "mutability": "mutable",
            "name": "stakingPool2",
            "nameLocation": "1043:12:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2609",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 30058,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30057,
                "name": "StakingPool",
                "nameLocations": [
                  "1024:11:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2609,
                "src": "1024:11:46"
              },
              "referencedDeclaration": 2609,
              "src": "1024:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2609",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30062,
            "nodeType": "VariableDeclaration",
            "src": "1061:36:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1083:14:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 30061,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30060,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1061:14:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 915,
                "src": "1061:14:46"
              },
              "referencedDeclaration": 915,
              "src": "1061:14:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30065,
            "nodeType": "VariableDeclaration",
            "src": "1103:30:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "edc91a92",
            "mutability": "mutable",
            "name": "frensOracle",
            "nameLocation": "1122:11:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensOracle_$597",
              "typeString": "contract FrensOracle"
            },
            "typeName": {
              "id": 30064,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30063,
                "name": "FrensOracle",
                "nameLocations": [
                  "1103:11:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 597,
                "src": "1103:11:46"
              },
              "referencedDeclaration": 597,
              "src": "1103:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensOracle_$597",
                "typeString": "contract FrensOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30071,
            "nodeType": "VariableDeclaration",
            "src": "1154:84:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1177:7:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30066,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1154:15:46",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 30069,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1195:42:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30068,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1187:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30067,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1187:8:46",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30070,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1187:51:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30074,
            "nodeType": "VariableDeclaration",
            "src": "1349:78:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "25b5e62f",
            "mutability": "mutable",
            "name": "ssvRegistryAddress",
            "nameLocation": "1364:18:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30072,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1349:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862396531353565363542356334443636646632384461384539613039353766303646313142633034",
              "id": 30073,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1385:42:46",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb9e155e65B5c4D66df28Da8E9a0957f06F11Bc04"
            },
            "visibility": "public"
          },
          {
            "id": 30077,
            "nodeType": "VariableDeclaration",
            "src": "1433:70:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "1448:10:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30075,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1433:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 30076,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1461:42:46",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 30083,
            "nodeType": "VariableDeclaration",
            "src": "1510:60:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "1527:15:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$2736",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 30079,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30078,
                "name": "IDepositContract",
                "nameLocations": [
                  "1510:16:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2736,
                "src": "1510:16:46"
              },
              "referencedDeclaration": 2736,
              "src": "1510:16:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$2736",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 30081,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30071,
                  "src": "1562:7:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 30080,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2736,
                "src": "1545:16:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$2736_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 30082,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1545:25:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$2736",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30086,
            "nodeType": "VariableDeclaration",
            "src": "1577:69:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "1592:9:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30084,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1577:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 30085,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1604:42:46",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 30092,
            "nodeType": "VariableDeclaration",
            "src": "1652:82:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1675:5:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30087,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1652:15:46",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 30090,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1691:42:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30089,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1683:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30088,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1683:8:46",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30091,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1683:51:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30098,
            "nodeType": "VariableDeclaration",
            "src": "1740:80:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1763:3:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30093,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1740:15:46",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 30096,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1777:42:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30095,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1769:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30094,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1769:8:46",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30097,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1769:51:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30104,
            "nodeType": "VariableDeclaration",
            "src": "1826:89:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "46904840",
            "mutability": "mutable",
            "name": "feeRecipient",
            "nameLocation": "1849:12:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30099,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1826:15:46",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030363934323030303030303031333337",
                  "id": 30102,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1872:42:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000694200000001337"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30101,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1864:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30100,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1864:8:46",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30103,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1864:51:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30107,
            "nodeType": "VariableDeclaration",
            "src": "1922:116:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "1928:6:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30105,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1922:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575",
              "id": 30106,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1937:101:46",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_21dcdee5842ff0f482197d6a15db2c021a867314be6d63d4bb4246bbaafd3909",
                "typeString": "literal_string hex\"ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30110,
            "nodeType": "VariableDeclaration",
            "src": "2044:100:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "2050:22:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30108,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2044:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2",
              "id": 30109,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2075:69:46",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_15e0678a74c943adbbbd50fdf9fc6ac3c93162a3c810614e1c98914f8980a59e",
                "typeString": "literal_string hex\"0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30113,
            "nodeType": "VariableDeclaration",
            "src": "2150:215:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2156:9:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30111,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2150:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9",
              "id": 30112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2168:197:46",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d36984ec5b61d40bef1c5fbe334dfcbf8cb40ea4c1dee515b99a6e9ce042c56e",
                "typeString": "literal_string hex\"92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30116,
            "nodeType": "VariableDeclaration",
            "src": "2371:94:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2379:17:46",
            "scope": 31125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 30114,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2371:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834303933313830323032303633623065363663643861656635613933346266616263663332393139653439343036343534326235663161333838396266353136",
              "id": 30115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2399:66:46",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_29207914523896875400091520570111070750124087433100064560086113879594058380566_by_1",
                "typeString": "int_const 2920...(69 digits omitted)...0566"
              },
              "value": "0x4093180202063b0e66cd8aef5a934bfabcf32919e494064542b5f1a3889bf516"
            },
            "visibility": "internal"
          },
          {
            "id": 30369,
            "nodeType": "FunctionDefinition",
            "src": "2477:2868:46",
            "nodes": [],
            "body": {
              "id": 30368,
              "nodeType": "Block",
              "src": "2501:2844:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30119,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30050,
                      "src": "2532:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1483",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 30122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2547:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$1483_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 30121,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30120,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "2551:12:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1483,
                            "src": "2551:12:46"
                          },
                          "referencedDeclaration": 1483,
                          "src": "2551:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 30123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2547:18:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1483",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "2532:33:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$1483",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 30125,
                  "nodeType": "ExpressionStatement",
                  "src": "2532:33:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 30132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2655:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "5353565265676973747279",
                                "id": 30133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2684:13:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                                  "typeString": "literal_string \"SSVRegistry\""
                                },
                                "value": "SSVRegistry"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                                  "typeString": "literal_string \"SSVRegistry\""
                                }
                              ],
                              "expression": {
                                "id": 30130,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2638:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2642:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2638:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2638:60:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30129,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2628:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2628:71:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 30136,
                        "name": "ssvRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30074,
                        "src": "2701:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30126,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30050,
                        "src": "2604:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2617:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "2604:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2604:116:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30138,
                  "nodeType": "ExpressionStatement",
                  "src": "2604:116:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 30145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2815:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "4465706f736974436f6e7472616374",
                                "id": 30146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2844:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                },
                                "value": "DepositContract"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                }
                              ],
                              "expression": {
                                "id": 30143,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2798:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2802:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2798:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2798:64:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30142,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2788:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2788:75:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 30149,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30071,
                        "src": "2865:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30139,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30050,
                        "src": "2764:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2777:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "2764:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:109:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30151,
                  "nodeType": "ExpressionStatement",
                  "src": "2764:109:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 30158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2956:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "454e53",
                                "id": 30159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2985:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                },
                                "value": "ENS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                }
                              ],
                              "expression": {
                                "id": 30156,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2939:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2943:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2939:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2939:52:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30155,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2929:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2929:63:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 30162,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30077,
                        "src": "2994:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30152,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30050,
                        "src": "2905:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2918:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "2905:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2905:100:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30164,
                  "nodeType": "ExpressionStatement",
                  "src": "2905:100:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "70726f746f636f6c2e6665652e726563697069656e74",
                                "id": 30171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3086:24:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a7383de6a675e1f7707d2a4203dfe5b10ebd3f64934351a03f6389c17278502d",
                                  "typeString": "literal_string \"protocol.fee.recipient\""
                                },
                                "value": "protocol.fee.recipient"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_a7383de6a675e1f7707d2a4203dfe5b10ebd3f64934351a03f6389c17278502d",
                                  "typeString": "literal_string \"protocol.fee.recipient\""
                                }
                              ],
                              "expression": {
                                "id": 30169,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3069:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3073:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3069:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3069:42:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30168,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3059:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3059:53:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 30174,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30104,
                        "src": "3114:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30165,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30050,
                        "src": "3035:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3048:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "3035:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:92:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30176,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:92:46"
                },
                {
                  "expression": {
                    "id": 30183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30177,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30062,
                      "src": "3163:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30181,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30050,
                          "src": "3199:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3180:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3092_$returns$_t_contract$_FrensPoolShare_$915_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 30179,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30178,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "3184:14:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 915,
                            "src": "3184:14:46"
                          },
                          "referencedDeclaration": 915,
                          "src": "3184:14:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 30182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3180:32:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "3163:49:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 30184,
                  "nodeType": "ExpressionStatement",
                  "src": "3163:49:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3303:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265",
                                "id": 30192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3323:16:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                },
                                "value": "FrensPoolShare"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                }
                              ],
                              "expression": {
                                "id": 30189,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3286:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3290:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3286:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3286:54:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30188,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3276:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3276:65:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30197,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30062,
                            "src": "3351:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 30196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3343:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30195,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3343:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3343:23:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30185,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30050,
                        "src": "3252:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3265:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "3252:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3252:115:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30200,
                  "nodeType": "ExpressionStatement",
                  "src": "3252:115:46"
                },
                {
                  "expression": {
                    "id": 30207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30201,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30053,
                      "src": "3398:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30205,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30050,
                          "src": "3442:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3419:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3092_$returns$_t_contract$_StakingPoolFactory_$2717_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 30203,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30202,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "3423:18:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2717,
                            "src": "3423:18:46"
                          },
                          "referencedDeclaration": 2717,
                          "src": "3423:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 30206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3419:36:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "3398:57:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 30208,
                  "nodeType": "ExpressionStatement",
                  "src": "3398:57:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3541:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "5374616b696e67506f6f6c466163746f7279",
                                "id": 30216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3561:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                },
                                "value": "StakingPoolFactory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                }
                              ],
                              "expression": {
                                "id": 30213,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3524:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3528:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3524:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3524:58:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30212,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3514:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3514:69:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30221,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30053,
                            "src": "3593:18:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 30220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3585:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3585:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3585:27:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30209,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30050,
                        "src": "3490:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3503:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "3490:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3490:123:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30224,
                  "nodeType": "ExpressionStatement",
                  "src": "3490:123:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783030",
                            "id": 30230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3654:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 30229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3646:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 30228,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3646:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3646:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30234,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30053,
                            "src": "3670:18:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 30233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3662:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30232,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3662:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3662:27:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30225,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "3621:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3636:9:46",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26650,
                      "src": "3621:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3621:69:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30237,
                  "nodeType": "ExpressionStatement",
                  "src": "3621:69:46"
                },
                {
                  "expression": {
                    "id": 30244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30238,
                      "name": "frensOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30065,
                      "src": "3725:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$597",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30242,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30050,
                          "src": "3755:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3739:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3092_$returns$_t_contract$_FrensOracle_$597_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensOracle)"
                        },
                        "typeName": {
                          "id": 30240,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30239,
                            "name": "FrensOracle",
                            "nameLocations": [
                              "3743:11:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 597,
                            "src": "3743:11:46"
                          },
                          "referencedDeclaration": 597,
                          "src": "3743:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensOracle_$597",
                            "typeString": "contract FrensOracle"
                          }
                        }
                      },
                      "id": 30243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3739:29:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$597",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "src": "3725:43:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensOracle_$597",
                      "typeString": "contract FrensOracle"
                    }
                  },
                  "id": 30245,
                  "nodeType": "ExpressionStatement",
                  "src": "3725:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3858:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734f7261636c65",
                                "id": 30253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3878:13:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                },
                                "value": "FrensOracle"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                }
                              ],
                              "expression": {
                                "id": 30250,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3841:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3845:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3841:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3841:51:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30249,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3831:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3831:62:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30258,
                            "name": "frensOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30065,
                            "src": "3903:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensOracle_$597",
                              "typeString": "contract FrensOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensOracle_$597",
                              "typeString": "contract FrensOracle"
                            }
                          ],
                          "id": 30257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3895:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3895:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3895:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30246,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30050,
                        "src": "3807:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3820:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "3807:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3807:109:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30261,
                  "nodeType": "ExpressionStatement",
                  "src": "3807:109:46"
                },
                {
                  "expression": {
                    "id": 30268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30262,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30044,
                      "src": "3950:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30266,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30050,
                          "src": "3988:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3968:19:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3092_$returns$_t_contract$_FrensMetaHelper_$520_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 30264,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30263,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "3972:15:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 520,
                            "src": "3972:15:46"
                          },
                          "referencedDeclaration": 520,
                          "src": "3972:15:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 30267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3968:33:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "3950:51:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 30269,
                  "nodeType": "ExpressionStatement",
                  "src": "3950:51:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4090:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734d65746148656c706572",
                                "id": 30277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4110:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                },
                                "value": "FrensMetaHelper"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                }
                              ],
                              "expression": {
                                "id": 30274,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4073:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4077:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4073:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4073:55:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30273,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4063:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4063:66:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30282,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30044,
                            "src": "4139:15:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$520",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 30281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4131:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30280,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4131:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4131:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30270,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30050,
                        "src": "4039:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4052:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "4039:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4039:117:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30285,
                  "nodeType": "ExpressionStatement",
                  "src": "4039:117:46"
                },
                {
                  "expression": {
                    "id": 30292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30286,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30047,
                      "src": "4188:22:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30290,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30050,
                          "src": "4240:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4213:26:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3092_$returns$_t_contract$_FrensPoolShareTokenURI_$1175_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 30288,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30287,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "4217:22:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1175,
                            "src": "4217:22:46"
                          },
                          "referencedDeclaration": 1175,
                          "src": "4217:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 30291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4213:40:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "4188:65:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 30293,
                  "nodeType": "ExpressionStatement",
                  "src": "4188:65:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4340:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                                "id": 30301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4360:24:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                },
                                "value": "FrensPoolShareTokenURI"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                }
                              ],
                              "expression": {
                                "id": 30298,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4323:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4327:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4323:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4323:62:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30297,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4313:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4313:73:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30306,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30047,
                            "src": "4396:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1175",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 30305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4388:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30304,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4388:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4388:31:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30294,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30050,
                        "src": "4289:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4302:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "4289:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4289:131:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30309,
                  "nodeType": "ExpressionStatement",
                  "src": "4289:131:46"
                },
                {
                  "expression": {
                    "id": 30316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30310,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30041,
                      "src": "4446:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30314,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30050,
                          "src": "4470:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1483",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4457:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3092_$returns$_t_contract$_FrensArt_$159_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 30312,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30311,
                            "name": "FrensArt",
                            "nameLocations": [
                              "4461:8:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 159,
                            "src": "4461:8:46"
                          },
                          "referencedDeclaration": 159,
                          "src": "4461:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$159",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 30315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4457:26:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "4446:37:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$159",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 30317,
                  "nodeType": "ExpressionStatement",
                  "src": "4446:37:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4565:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73417274",
                                "id": 30325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4585:10:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                                  "typeString": "literal_string \"FrensArt\""
                                },
                                "value": "FrensArt"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                                  "typeString": "literal_string \"FrensArt\""
                                }
                              ],
                              "expression": {
                                "id": 30322,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4548:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4552:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4548:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4548:48:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30321,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4538:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4538:59:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30330,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30041,
                            "src": "4607:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$159",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$159",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 30329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4599:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30328,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4599:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4599:17:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30318,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30050,
                        "src": "4514:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1483",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4527:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "4514:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:103:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30333,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:103:46"
                },
                {
                  "assignments": [
                    30335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30335,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "4725:4:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30368,
                      "src": "4717:12:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30334,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4717:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30341,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30338,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30086,
                        "src": "4759:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4770:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30336,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30053,
                        "src": "4733:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 30337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4752:6:46",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2716,
                      "src": "4733:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4733:79:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4716:96:46"
                },
                {
                  "expression": {
                    "id": 30349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30342,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30056,
                      "src": "4852:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2609",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30346,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30335,
                              "src": "4886:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4878:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30344,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4878:8:46",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:13:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30343,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2609,
                        "src": "4866:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2609_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4866:26:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2609",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "4852:40:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2609",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30350,
                  "nodeType": "ExpressionStatement",
                  "src": "4852:40:46"
                },
                {
                  "assignments": [
                    30352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30352,
                      "mutability": "mutable",
                      "name": "pool2",
                      "nameLocation": "5056:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30368,
                      "src": "5048:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30351,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5048:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30358,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30355,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30086,
                        "src": "5091:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5102:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30353,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30053,
                        "src": "5065:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2717",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 30354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5084:6:46",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2716,
                      "src": "5065:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:79:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5047:97:46"
                },
                {
                  "expression": {
                    "id": 30366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30359,
                      "name": "stakingPool2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30059,
                      "src": "5184:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2609",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30363,
                              "name": "pool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30352,
                              "src": "5219:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5211:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30361,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5211:8:46",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5211:14:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30360,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2609,
                        "src": "5199:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2609_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5199:27:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2609",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "5184:42:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2609",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30367,
                  "nodeType": "ExpressionStatement",
                  "src": "5184:42:46"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2486:5:46",
            "parameters": {
              "id": 30117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2491:2:46"
            },
            "returnParameters": {
              "id": 30118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30392,
            "nodeType": "FunctionDefinition",
            "src": "5351:161:46",
            "nodes": [],
            "body": {
              "id": 30391,
              "nodeType": "Block",
              "src": "5389:123:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30373,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "5402:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30372,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5772,
                        5793,
                        5817,
                        5841
                      ],
                      "referencedDeclaration": 5772,
                      "src": "5397:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5397:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30375,
                  "nodeType": "ExpressionStatement",
                  "src": "5397:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "796f7520617265206e6f7420616c6c6f77656420746f206d696e74",
                        "id": 30379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5432:29:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        },
                        "value": "you are not allowed to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        }
                      ],
                      "expression": {
                        "id": 30376,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5074,
                        "src": "5416:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10355",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5419:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9841,
                      "src": "5416:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5416:46:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30381,
                  "nodeType": "ExpressionStatement",
                  "src": "5416:46:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30387,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30092,
                            "src": "5498:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 30386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5490:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30385,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5490:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5490:14:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30382,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "5470:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5485:4:46",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 685,
                      "src": "5470:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5470:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30390,
                  "nodeType": "ExpressionStatement",
                  "src": "5470:35:46"
                }
              ]
            },
            "functionSelector": "796a773d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintingDirectly",
            "nameLocation": "5360:19:46",
            "parameters": {
              "id": 30370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5379:2:46"
            },
            "returnParameters": {
              "id": 30371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5389:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30467,
            "nodeType": "FunctionDefinition",
            "src": "5518:587:46",
            "nodes": [],
            "body": {
              "id": 30466,
              "nodeType": "Block",
              "src": "5548:557:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30396,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "5566:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30395,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5883,
                        5907,
                        5931
                      ],
                      "referencedDeclaration": 5862,
                      "src": "5556:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5556:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30398,
                  "nodeType": "ExpressionStatement",
                  "src": "5556:16:46"
                },
                {
                  "assignments": [
                    30400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30400,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "5585:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30466,
                      "src": "5580:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30399,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5580:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30402,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5589:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5580:10:46"
                },
                {
                  "body": {
                    "id": 30464,
                    "nodeType": "Block",
                    "src": "5614:485:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30406,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30056,
                                "src": "5699:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2609",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5711:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1887,
                              "src": "5699:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5732:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "5699:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5699:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30412,
                        "nodeType": "ExpressionStatement",
                        "src": "5699:37:46"
                      },
                      {
                        "assignments": [
                          30414
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30414,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "5753:2:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30464,
                            "src": "5748:7:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30413,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5748:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30420,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30417,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30092,
                              "src": "5793:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30418,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30400,
                              "src": "5800:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30415,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30062,
                              "src": "5758:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5773:19:46",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28145,
                            "src": "5758:34:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5758:44:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5748:54:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30422,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30414,
                                "src": "5823:2:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30423,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30400,
                                "src": "5829:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5823:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30421,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3526,
                              3547
                            ],
                            "referencedDeclaration": 3526,
                            "src": "5812:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5812:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30426,
                        "nodeType": "ExpressionStatement",
                        "src": "5812:20:46"
                      },
                      {
                        "assignments": [
                          30428
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30428,
                            "mutability": "mutable",
                            "name": "shouldBeZero",
                            "nameLocation": "5851:12:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30464,
                            "src": "5843:20:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30427,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5843:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30433,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30431,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30400,
                              "src": "5893:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30429,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30062,
                              "src": "5866:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5881:11:46",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 757,
                            "src": "5866:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5866:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5843:52:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 30437,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5922:1:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 30436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5914:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30435,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5914:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5914:10:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30439,
                              "name": "shouldBeZero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30428,
                              "src": "5926:12:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30434,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6424,
                              6449,
                              6462,
                              6478,
                              6520,
                              6562,
                              6604,
                              6641,
                              6678,
                              6715,
                              3577,
                              3602,
                              3632,
                              3657,
                              3716,
                              3741,
                              3771,
                              3796,
                              4896,
                              4931
                            ],
                            "referencedDeclaration": 3577,
                            "src": "5905:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5905:34:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30441,
                        "nodeType": "ExpressionStatement",
                        "src": "5905:34:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30445,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30098,
                              "src": "5973:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30446,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30400,
                              "src": "5978:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30442,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30062,
                              "src": "5950:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5965:7:46",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27245,
                            "src": "5950:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 30447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5950:30:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30448,
                        "nodeType": "ExpressionStatement",
                        "src": "5950:30:46"
                      },
                      {
                        "assignments": [
                          30450
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30450,
                            "mutability": "mutable",
                            "name": "shouldBeBob",
                            "nameLocation": "5998:11:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30464,
                            "src": "5990:19:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30449,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5990:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30455,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30453,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30400,
                              "src": "6039:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30451,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30062,
                              "src": "6012:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6027:11:46",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 757,
                            "src": "6012:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6012:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5990:51:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30457,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30098,
                              "src": "6060:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30458,
                              "name": "shouldBeBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30450,
                              "src": "6065:11:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30456,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6424,
                              6449,
                              6462,
                              6478,
                              6520,
                              6562,
                              6604,
                              6641,
                              6678,
                              6715,
                              3577,
                              3602,
                              3632,
                              3657,
                              3716,
                              3741,
                              3771,
                              3796,
                              4896,
                              4931
                            ],
                            "referencedDeclaration": 3577,
                            "src": "6051:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6051:26:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30460,
                        "nodeType": "ExpressionStatement",
                        "src": "6051:26:46"
                      },
                      {
                        "expression": {
                          "id": 30462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6087:3:46",
                          "subExpression": {
                            "id": 30461,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30400,
                            "src": "6087:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30463,
                        "nodeType": "ExpressionStatement",
                        "src": "6087:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30403,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30400,
                      "src": "5605:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5609:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "5605:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30465,
                  "nodeType": "WhileStatement",
                  "src": "5598:501:46"
                }
              ]
            },
            "functionSelector": "1aeb10a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testApprove",
            "nameLocation": "5527:11:46",
            "parameters": {
              "id": 30393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5538:2:46"
            },
            "returnParameters": {
              "id": 30394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5548:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30524,
            "nodeType": "FunctionDefinition",
            "src": "6111:408:46",
            "nodes": [],
            "body": {
              "id": 30523,
              "nodeType": "Block",
              "src": "6143:376:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30471,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "6161:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30470,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5883,
                        5907,
                        5931
                      ],
                      "referencedDeclaration": 5862,
                      "src": "6151:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6151:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30473,
                  "nodeType": "ExpressionStatement",
                  "src": "6151:16:46"
                },
                {
                  "assignments": [
                    30475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30475,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6180:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30523,
                      "src": "6175:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30474,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6175:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30477,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6184:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6175:10:46"
                },
                {
                  "body": {
                    "id": 30521,
                    "nodeType": "Block",
                    "src": "6209:304:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30481,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30056,
                                "src": "6219:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2609",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6231:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1887,
                              "src": "6219:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6252:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6219:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6219:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30487,
                        "nodeType": "ExpressionStatement",
                        "src": "6219:37:46"
                      },
                      {
                        "assignments": [
                          30489
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30489,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6271:2:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30521,
                            "src": "6266:7:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30488,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6266:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30495,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30492,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30092,
                              "src": "6311:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30493,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30475,
                              "src": "6318:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30490,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30062,
                              "src": "6276:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6291:19:46",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28145,
                            "src": "6276:34:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6276:44:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6266:54:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30497,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30489,
                                "src": "6341:2:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30498,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30475,
                                "src": "6347:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6341:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "66697273742069732069732030",
                              "id": 30500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6350:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5383c90f43f3984cfbee9f1b49449ca89697befdf646488c4aed86b6fc774c91",
                                "typeString": "literal_string \"first is is 0\""
                              },
                              "value": "first is is 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5383c90f43f3984cfbee9f1b49449ca89697befdf646488c4aed86b6fc774c91",
                                "typeString": "literal_string \"first is is 0\""
                              }
                            ],
                            "id": 30496,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3526,
                              3547
                            ],
                            "referencedDeclaration": 3547,
                            "src": "6330:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 30501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6330:36:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30502,
                        "nodeType": "ExpressionStatement",
                        "src": "6330:36:46"
                      },
                      {
                        "assignments": [
                          30504
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30504,
                            "mutability": "mutable",
                            "name": "balanceOfAlice",
                            "nameLocation": "6381:14:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30521,
                            "src": "6376:19:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30503,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6376:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30509,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30507,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30092,
                              "src": "6423:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 30505,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30062,
                              "src": "6398:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6413:9:46",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27106,
                            "src": "6398:24:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 30508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6398:31:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6376:53:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30511,
                              "name": "balanceOfAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30504,
                              "src": "6448:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30512,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30475,
                                "src": "6464:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 30513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6468:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6464:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "73686f756c6420686176652069202b2031",
                              "id": 30515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6471:19:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_978826511a0b0555103e7b26be874c5b266d55585b385712656ccee45fca8f35",
                                "typeString": "literal_string \"should have i + 1\""
                              },
                              "value": "should have i + 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_978826511a0b0555103e7b26be874c5b266d55585b385712656ccee45fca8f35",
                                "typeString": "literal_string \"should have i + 1\""
                              }
                            ],
                            "id": 30510,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6424,
                              6449,
                              6462,
                              6478,
                              6520,
                              6562,
                              6604,
                              6641,
                              6678,
                              6715,
                              3577,
                              3602,
                              3632,
                              3657,
                              3716,
                              3741,
                              3771,
                              3796,
                              4896,
                              4931
                            ],
                            "referencedDeclaration": 3796,
                            "src": "6439:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 30516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6439:52:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30517,
                        "nodeType": "ExpressionStatement",
                        "src": "6439:52:46"
                      },
                      {
                        "expression": {
                          "id": 30519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6501:3:46",
                          "subExpression": {
                            "id": 30518,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30475,
                            "src": "6501:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30520,
                        "nodeType": "ExpressionStatement",
                        "src": "6501:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30478,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30475,
                      "src": "6200:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6204:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6200:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30522,
                  "nodeType": "WhileStatement",
                  "src": "6193:320:46"
                }
              ]
            },
            "functionSelector": "3df77c0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBalanceOf",
            "nameLocation": "6120:13:46",
            "parameters": {
              "id": 30468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6133:2:46"
            },
            "returnParameters": {
              "id": 30469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6143:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30565,
            "nodeType": "FunctionDefinition",
            "src": "6525:278:46",
            "nodes": [],
            "body": {
              "id": 30564,
              "nodeType": "Block",
              "src": "6554:249:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30528,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "6572:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30527,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5883,
                        5907,
                        5931
                      ],
                      "referencedDeclaration": 5862,
                      "src": "6562:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6562:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30530,
                  "nodeType": "ExpressionStatement",
                  "src": "6562:16:46"
                },
                {
                  "assignments": [
                    30532
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30532,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6598:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30564,
                      "src": "6593:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30531,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6593:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30534,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6602:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6593:10:46"
                },
                {
                  "body": {
                    "id": 30562,
                    "nodeType": "Block",
                    "src": "6628:162:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30541,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30532,
                                  "src": "6672:1:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30539,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30062,
                                  "src": "6650:14:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 30540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6665:6:46",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 697,
                                "src": "6650:21:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 30542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6650:24:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30538,
                            "name": "assertFalse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6374,
                              6388
                            ],
                            "referencedDeclaration": 6374,
                            "src": "6638:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6638:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30544,
                        "nodeType": "ExpressionStatement",
                        "src": "6638:37:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30545,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30056,
                                "src": "6685:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2609",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6697:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1887,
                              "src": "6685:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6718:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6685:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6685:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30551,
                        "nodeType": "ExpressionStatement",
                        "src": "6685:37:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30555,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30532,
                                  "src": "6765:1:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30553,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30062,
                                  "src": "6743:14:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 30554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6758:6:46",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 697,
                                "src": "6743:21:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 30556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6743:24:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30552,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3526,
                              3547
                            ],
                            "referencedDeclaration": 3526,
                            "src": "6732:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6732:36:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30558,
                        "nodeType": "ExpressionStatement",
                        "src": "6732:36:46"
                      },
                      {
                        "expression": {
                          "id": 30560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6778:3:46",
                          "subExpression": {
                            "id": 30559,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30532,
                            "src": "6778:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30561,
                        "nodeType": "ExpressionStatement",
                        "src": "6778:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30535,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30532,
                      "src": "6619:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6623:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6619:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30563,
                  "nodeType": "WhileStatement",
                  "src": "6612:178:46"
                }
              ]
            },
            "functionSelector": "524ad495",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testexists",
            "nameLocation": "6534:10:46",
            "parameters": {
              "id": 30525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6544:2:46"
            },
            "returnParameters": {
              "id": 30526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6554:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30657,
            "nodeType": "FunctionDefinition",
            "src": "6809:697:46",
            "nodes": [],
            "body": {
              "id": 30656,
              "nodeType": "Block",
              "src": "6843:663:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30569,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "6861:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30568,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5883,
                        5907,
                        5931
                      ],
                      "referencedDeclaration": 5862,
                      "src": "6851:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6851:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30571,
                  "nodeType": "ExpressionStatement",
                  "src": "6851:16:46"
                },
                {
                  "assignments": [
                    30573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30573,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6880:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30656,
                      "src": "6875:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30572,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6875:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30575,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6884:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6875:10:46"
                },
                {
                  "body": {
                    "id": 30654,
                    "nodeType": "Block",
                    "src": "6909:591:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30579,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30056,
                                "src": "6919:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2609",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6931:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1887,
                              "src": "6919:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6952:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6919:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6919:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30585,
                        "nodeType": "ExpressionStatement",
                        "src": "6919:37:46"
                      },
                      {
                        "assignments": [
                          30587
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30587,
                            "mutability": "mutable",
                            "name": "sbStakingPool",
                            "nameLocation": "6974:13:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30654,
                            "src": "6966:21:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30586,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6966:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30592,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30590,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30573,
                              "src": "7017:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30588,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30062,
                              "src": "6990:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7005:11:46",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 710,
                            "src": "6990:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6990:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6966:53:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30596,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30056,
                                  "src": "7046:11:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2609",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2609",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7038:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30594,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7038:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7038:20:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30598,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30587,
                              "src": "7060:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30593,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6424,
                              6449,
                              6462,
                              6478,
                              6520,
                              6562,
                              6604,
                              6641,
                              6678,
                              6715,
                              3577,
                              3602,
                              3632,
                              3657,
                              3716,
                              3741,
                              3771,
                              3796,
                              4896,
                              4931
                            ],
                            "referencedDeclaration": 3577,
                            "src": "7029:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7029:45:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30600,
                        "nodeType": "ExpressionStatement",
                        "src": "7029:45:46"
                      },
                      {
                        "expression": {
                          "id": 30602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7084:3:46",
                          "subExpression": {
                            "id": 30601,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30573,
                            "src": "7084:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30603,
                        "nodeType": "ExpressionStatement",
                        "src": "7084:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30604,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30059,
                                "src": "7097:12:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2609",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7110:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1887,
                              "src": "7097:26:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7131:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7097:36:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7097:38:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30610,
                        "nodeType": "ExpressionStatement",
                        "src": "7097:38:46"
                      },
                      {
                        "assignments": [
                          30612
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30612,
                            "mutability": "mutable",
                            "name": "sbStakingPool2",
                            "nameLocation": "7153:14:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30654,
                            "src": "7145:22:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30611,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7145:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30617,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30615,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30573,
                              "src": "7197:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30613,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30062,
                              "src": "7170:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7185:11:46",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 710,
                            "src": "7170:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7170:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7145:54:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30621,
                                  "name": "stakingPool2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30059,
                                  "src": "7226:12:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2609",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2609",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7218:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30619,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7218:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7218:21:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30623,
                              "name": "sbStakingPool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30612,
                              "src": "7241:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30618,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6424,
                              6449,
                              6462,
                              6478,
                              6520,
                              6562,
                              6604,
                              6641,
                              6678,
                              6715,
                              3577,
                              3602,
                              3632,
                              3657,
                              3716,
                              3741,
                              3771,
                              3796,
                              4896,
                              4931
                            ],
                            "referencedDeclaration": 3577,
                            "src": "7209:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7209:47:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30625,
                        "nodeType": "ExpressionStatement",
                        "src": "7209:47:46"
                      },
                      {
                        "expression": {
                          "id": 30627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7266:3:46",
                          "subExpression": {
                            "id": 30626,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30573,
                            "src": "7266:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30628,
                        "nodeType": "ExpressionStatement",
                        "src": "7266:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30629,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30056,
                                "src": "7279:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2609",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7291:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1887,
                              "src": "7279:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7312:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7279:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7279:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30635,
                        "nodeType": "ExpressionStatement",
                        "src": "7279:37:46"
                      },
                      {
                        "expression": {
                          "id": 30641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 30636,
                            "name": "sbStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30587,
                            "src": "7377:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 30639,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30573,
                                "src": "7420:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30637,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30062,
                                "src": "7393:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 30638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7408:11:46",
                              "memberName": "getPoolById",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 710,
                              "src": "7393:26:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 30640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7393:29:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7377:45:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30642,
                        "nodeType": "ExpressionStatement",
                        "src": "7377:45:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30646,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30056,
                                  "src": "7449:11:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2609",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2609",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7441:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30644,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7441:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7441:20:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30648,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30587,
                              "src": "7463:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30643,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6424,
                              6449,
                              6462,
                              6478,
                              6520,
                              6562,
                              6604,
                              6641,
                              6678,
                              6715,
                              3577,
                              3602,
                              3632,
                              3657,
                              3716,
                              3741,
                              3771,
                              3796,
                              4896,
                              4931
                            ],
                            "referencedDeclaration": 3577,
                            "src": "7432:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7432:45:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30650,
                        "nodeType": "ExpressionStatement",
                        "src": "7432:45:46"
                      },
                      {
                        "expression": {
                          "id": 30652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7487:3:46",
                          "subExpression": {
                            "id": 30651,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30573,
                            "src": "7487:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30653,
                        "nodeType": "ExpressionStatement",
                        "src": "7487:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30576,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30573,
                      "src": "6900:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6904:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6900:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30655,
                  "nodeType": "WhileStatement",
                  "src": "6893:607:46"
                }
              ]
            },
            "functionSelector": "87496250",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetPoolById",
            "nameLocation": "6818:15:46",
            "parameters": {
              "id": 30566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6833:2:46"
            },
            "returnParameters": {
              "id": 30567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6843:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30707,
            "nodeType": "FunctionDefinition",
            "src": "7512:357:46",
            "nodes": [],
            "body": {
              "id": 30706,
              "nodeType": "Block",
              "src": "7551:318:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30661,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "7569:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30660,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5883,
                        5907,
                        5931
                      ],
                      "referencedDeclaration": 5862,
                      "src": "7559:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7559:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30663,
                  "nodeType": "ExpressionStatement",
                  "src": "7559:16:46"
                },
                {
                  "assignments": [
                    30665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30665,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "7588:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30706,
                      "src": "7583:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30664,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7583:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30667,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7592:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7583:10:46"
                },
                {
                  "body": {
                    "id": 30681,
                    "nodeType": "Block",
                    "src": "7616:69:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30671,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30056,
                                "src": "7626:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2609",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7638:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1887,
                              "src": "7626:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7659:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7626:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7626:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30677,
                        "nodeType": "ExpressionStatement",
                        "src": "7626:37:46"
                      },
                      {
                        "expression": {
                          "id": 30679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7673:3:46",
                          "subExpression": {
                            "id": 30678,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30665,
                            "src": "7673:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30680,
                        "nodeType": "ExpressionStatement",
                        "src": "7673:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30668,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30665,
                      "src": "7608:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3634",
                      "id": 30669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7612:2:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_64_by_1",
                        "typeString": "int_const 64"
                      },
                      "value": "64"
                    },
                    "src": "7608:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30682,
                  "nodeType": "WhileStatement",
                  "src": "7601:84:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30686,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30092,
                            "src": "7736:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 30687,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30098,
                            "src": "7743:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 30684,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30062,
                            "src": "7704:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7719:16:46",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27298,
                          "src": "7704:31:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 30688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7704:43:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30683,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6374,
                        6388
                      ],
                      "referencedDeclaration": 6374,
                      "src": "7692:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 30689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7692:56:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30690,
                  "nodeType": "ExpressionStatement",
                  "src": "7692:56:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30694,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "7789:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 30695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7794:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30691,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "7756:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7771:17:46",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27280,
                      "src": "7756:32:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 30696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7756:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30697,
                  "nodeType": "ExpressionStatement",
                  "src": "7756:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30701,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30092,
                            "src": "7850:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 30702,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30098,
                            "src": "7857:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 30699,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30062,
                            "src": "7818:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7833:16:46",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27298,
                          "src": "7818:31:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 30703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7818:43:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30698,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3526,
                        3547
                      ],
                      "referencedDeclaration": 3526,
                      "src": "7807:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 30704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7807:55:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30705,
                  "nodeType": "ExpressionStatement",
                  "src": "7807:55:46"
                }
              ]
            },
            "functionSelector": "09d26b6c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIsApprovedForAll",
            "nameLocation": "7521:20:46",
            "parameters": {
              "id": 30658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7541:2:46"
            },
            "returnParameters": {
              "id": 30659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7551:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30757,
            "nodeType": "FunctionDefinition",
            "src": "7875:330:46",
            "nodes": [],
            "body": {
              "id": 30756,
              "nodeType": "Block",
              "src": "7903:302:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30713,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7928:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31125",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31125",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7920:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30711,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7920:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7920:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30715,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30062,
                            "src": "7935:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7950:5:46",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26913,
                          "src": "7935:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 30717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7935:22:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30710,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6424,
                        6449,
                        6462,
                        6478,
                        6520,
                        6562,
                        6604,
                        6641,
                        6678,
                        6715,
                        3577,
                        3602,
                        3632,
                        3657,
                        3716,
                        3741,
                        3771,
                        3796,
                        4896,
                        4931
                      ],
                      "referencedDeclaration": 3577,
                      "src": "7911:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7911:47:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30719,
                  "nodeType": "ExpressionStatement",
                  "src": "7911:47:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30721,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "7971:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30720,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5772,
                        5793,
                        5817,
                        5841
                      ],
                      "referencedDeclaration": 5772,
                      "src": "7966:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7966:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30723,
                  "nodeType": "ExpressionStatement",
                  "src": "7966:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 30727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8001:34:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 30724,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5074,
                        "src": "7985:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10355",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7988:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9841,
                      "src": "7985:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7985:51:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30729,
                  "nodeType": "ExpressionStatement",
                  "src": "7985:51:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30733,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "8077:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30730,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "8044:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8059:17:46",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26964,
                      "src": "8044:32:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8044:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30735,
                  "nodeType": "ExpressionStatement",
                  "src": "8044:37:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30739,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8102:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31125",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31125",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8094:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30737,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8094:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8094:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30736,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5772,
                        5793,
                        5817,
                        5841
                      ],
                      "referencedDeclaration": 5772,
                      "src": "8089:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8089:19:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30742,
                  "nodeType": "ExpressionStatement",
                  "src": "8089:19:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30746,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "8149:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30743,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "8116:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8131:17:46",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26964,
                      "src": "8116:32:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8116:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30748,
                  "nodeType": "ExpressionStatement",
                  "src": "8116:37:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30750,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "8170:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30751,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30062,
                            "src": "8175:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8190:5:46",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26913,
                          "src": "8175:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 30753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8175:22:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30749,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6424,
                        6449,
                        6462,
                        6478,
                        6520,
                        6562,
                        6604,
                        6641,
                        6678,
                        6715,
                        3577,
                        3602,
                        3632,
                        3657,
                        3716,
                        3741,
                        3771,
                        3796,
                        4896,
                        4931
                      ],
                      "referencedDeclaration": 3577,
                      "src": "8161:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8161:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30755,
                  "nodeType": "ExpressionStatement",
                  "src": "8161:37:46"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "7884:9:46",
            "parameters": {
              "id": 30708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7893:2:46"
            },
            "returnParameters": {
              "id": 30709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7903:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30848,
            "nodeType": "FunctionDefinition",
            "src": "8211:620:46",
            "nodes": [],
            "body": {
              "id": 30847,
              "nodeType": "Block",
              "src": "8241:590:46",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30761,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "8254:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30847,
                      "src": "8249:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30760,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8249:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30763,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8258:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8249:10:46"
                },
                {
                  "body": {
                    "id": 30845,
                    "nodeType": "Block",
                    "src": "8283:542:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30768,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30092,
                              "src": "8298:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30767,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5772,
                              5793,
                              5817,
                              5841
                            ],
                            "referencedDeclaration": 5772,
                            "src": "8293:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8293:11:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30770,
                        "nodeType": "ExpressionStatement",
                        "src": "8293:11:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30771,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30056,
                                "src": "8314:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2609",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8326:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1887,
                              "src": "8314:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8347:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8314:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8314:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30777,
                        "nodeType": "ExpressionStatement",
                        "src": "8314:37:46"
                      },
                      {
                        "assignments": [
                          30779
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30779,
                            "mutability": "mutable",
                            "name": "sbAlice",
                            "nameLocation": "8369:7:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30845,
                            "src": "8361:15:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30778,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8361:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30784,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30782,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30761,
                              "src": "8402:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30780,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30062,
                              "src": "8379:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8394:7:46",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27134,
                            "src": "8379:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8379:25:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8361:43:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30786,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30092,
                              "src": "8423:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30787,
                              "name": "sbAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30779,
                              "src": "8430:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30785,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6424,
                              6449,
                              6462,
                              6478,
                              6520,
                              6562,
                              6604,
                              6641,
                              6678,
                              6715,
                              3577,
                              3602,
                              3632,
                              3657,
                              3716,
                              3741,
                              3771,
                              3796,
                              4896,
                              4931
                            ],
                            "referencedDeclaration": 3577,
                            "src": "8414:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8414:24:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30789,
                        "nodeType": "ExpressionStatement",
                        "src": "8414:24:46"
                      },
                      {
                        "expression": {
                          "id": 30791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8448:3:46",
                          "subExpression": {
                            "id": 30790,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30761,
                            "src": "8448:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30792,
                        "nodeType": "ExpressionStatement",
                        "src": "8448:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30794,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30098,
                              "src": "8466:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30793,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5772,
                              5793,
                              5817,
                              5841
                            ],
                            "referencedDeclaration": 5772,
                            "src": "8461:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8461:9:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30796,
                        "nodeType": "ExpressionStatement",
                        "src": "8461:9:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30797,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30059,
                                "src": "8480:12:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2609",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8493:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1887,
                              "src": "8480:26:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8514:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8480:36:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8480:38:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30803,
                        "nodeType": "ExpressionStatement",
                        "src": "8480:38:46"
                      },
                      {
                        "assignments": [
                          30805
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30805,
                            "mutability": "mutable",
                            "name": "sbBob",
                            "nameLocation": "8536:5:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30845,
                            "src": "8528:13:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30804,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8528:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30810,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30808,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30761,
                              "src": "8567:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30806,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30062,
                              "src": "8544:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8559:7:46",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27134,
                            "src": "8544:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8544:25:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8528:41:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30812,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30098,
                              "src": "8588:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30813,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30805,
                              "src": "8593:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30811,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6424,
                              6449,
                              6462,
                              6478,
                              6520,
                              6562,
                              6604,
                              6641,
                              6678,
                              6715,
                              3577,
                              3602,
                              3632,
                              3657,
                              3716,
                              3741,
                              3771,
                              3796,
                              4896,
                              4931
                            ],
                            "referencedDeclaration": 3577,
                            "src": "8579:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8579:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30815,
                        "nodeType": "ExpressionStatement",
                        "src": "8579:20:46"
                      },
                      {
                        "expression": {
                          "id": 30817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8609:3:46",
                          "subExpression": {
                            "id": 30816,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30761,
                            "src": "8609:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30818,
                        "nodeType": "ExpressionStatement",
                        "src": "8609:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30820,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30098,
                              "src": "8627:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30819,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5772,
                              5793,
                              5817,
                              5841
                            ],
                            "referencedDeclaration": 5772,
                            "src": "8622:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8622:9:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30822,
                        "nodeType": "ExpressionStatement",
                        "src": "8622:9:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30823,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30056,
                                "src": "8641:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2609",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8653:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1887,
                              "src": "8641:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8674:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8641:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8641:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30829,
                        "nodeType": "ExpressionStatement",
                        "src": "8641:37:46"
                      },
                      {
                        "expression": {
                          "id": 30835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 30830,
                            "name": "sbBob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30805,
                            "src": "8739:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 30833,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30761,
                                "src": "8770:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30831,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30062,
                                "src": "8747:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 30832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8762:7:46",
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27134,
                              "src": "8747:22:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 30834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8747:25:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8739:33:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30836,
                        "nodeType": "ExpressionStatement",
                        "src": "8739:33:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30838,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30098,
                              "src": "8791:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30839,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30805,
                              "src": "8796:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30837,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6424,
                              6449,
                              6462,
                              6478,
                              6520,
                              6562,
                              6604,
                              6641,
                              6678,
                              6715,
                              3577,
                              3602,
                              3632,
                              3657,
                              3716,
                              3741,
                              3771,
                              3796,
                              4896,
                              4931
                            ],
                            "referencedDeclaration": 3577,
                            "src": "8782:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8782:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30841,
                        "nodeType": "ExpressionStatement",
                        "src": "8782:20:46"
                      },
                      {
                        "expression": {
                          "id": 30843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8812:3:46",
                          "subExpression": {
                            "id": 30842,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30761,
                            "src": "8812:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30844,
                        "nodeType": "ExpressionStatement",
                        "src": "8812:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30764,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30761,
                      "src": "8274:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8278:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "8274:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30846,
                  "nodeType": "WhileStatement",
                  "src": "8267:558:46"
                }
              ]
            },
            "functionSelector": "71a29bb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwnerOf",
            "nameLocation": "8220:11:46",
            "parameters": {
              "id": 30758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8231:2:46"
            },
            "returnParameters": {
              "id": 30759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8241:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30972,
            "nodeType": "FunctionDefinition",
            "src": "8837:861:46",
            "nodes": [],
            "body": {
              "id": 30971,
              "nodeType": "Block",
              "src": "8876:822:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30852,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "8889:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30851,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5772,
                        5793,
                        5817,
                        5841
                      ],
                      "referencedDeclaration": 5772,
                      "src": "8884:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8884:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30854,
                  "nodeType": "ExpressionStatement",
                  "src": "8884:11:46"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 30855,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30056,
                          "src": "8903:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2609",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 30857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8915:13:46",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1887,
                        "src": "8903:25:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 30859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 30858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8936:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "8903:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 30860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8903:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30861,
                  "nodeType": "ExpressionStatement",
                  "src": "8903:37:46"
                },
                {
                  "assignments": [
                    30863
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30863,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "8953:2:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30971,
                      "src": "8948:7:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30862,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8948:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30869,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30866,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "8993:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9000:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 30864,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "8958:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8973:19:46",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28145,
                      "src": "8958:34:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 30868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8958:44:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8948:54:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30871,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "9019:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30874,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30863,
                            "src": "9049:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30872,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30062,
                            "src": "9026:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9041:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27134,
                          "src": "9026:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 30875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9026:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30870,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6424,
                        6449,
                        6462,
                        6478,
                        6520,
                        6562,
                        6604,
                        6641,
                        6678,
                        6715,
                        3577,
                        3602,
                        3632,
                        3657,
                        3716,
                        3741,
                        3771,
                        3796,
                        4896,
                        4931
                      ],
                      "referencedDeclaration": 3577,
                      "src": "9010:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9010:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30877,
                  "nodeType": "ExpressionStatement",
                  "src": "9010:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30879,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "9066:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30878,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5772,
                        5793,
                        5817,
                        5841
                      ],
                      "referencedDeclaration": 5772,
                      "src": "9061:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9061:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30881,
                  "nodeType": "ExpressionStatement",
                  "src": "9061:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 30885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9094:47:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "expression": {
                        "id": 30882,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5074,
                        "src": "9078:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10355",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9081:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9841,
                      "src": "9078:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9078:64:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30887,
                  "nodeType": "ExpressionStatement",
                  "src": "9078:64:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30891,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "9182:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30892,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "9189:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30893,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30863,
                        "src": "9194:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30888,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "9150:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9165:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27344,
                      "src": "9150:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9150:47:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30895,
                  "nodeType": "ExpressionStatement",
                  "src": "9150:47:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30897,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "9210:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30896,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5772,
                        5793,
                        5817,
                        5841
                      ],
                      "referencedDeclaration": 5772,
                      "src": "9205:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9205:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30899,
                  "nodeType": "ExpressionStatement",
                  "src": "9205:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30903,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "9256:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30904,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "9263:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30905,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30863,
                        "src": "9268:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30900,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "9224:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9239:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27344,
                      "src": "9224:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9224:47:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30907,
                  "nodeType": "ExpressionStatement",
                  "src": "9224:47:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30909,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "9288:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30912,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30863,
                            "src": "9316:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30910,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30062,
                            "src": "9293:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9308:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27134,
                          "src": "9293:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 30913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9293:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30908,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6424,
                        6449,
                        6462,
                        6478,
                        6520,
                        6562,
                        6604,
                        6641,
                        6678,
                        6715,
                        3577,
                        3602,
                        3632,
                        3657,
                        3716,
                        3741,
                        3771,
                        3796,
                        4896,
                        4931
                      ],
                      "referencedDeclaration": 3577,
                      "src": "9279:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9279:41:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30915,
                  "nodeType": "ExpressionStatement",
                  "src": "9279:41:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30917,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "9333:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30916,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5772,
                        5793,
                        5817,
                        5841
                      ],
                      "referencedDeclaration": 5772,
                      "src": "9328:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9328:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30919,
                  "nodeType": "ExpressionStatement",
                  "src": "9328:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 30923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9361:52:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "expression": {
                        "id": 30920,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5074,
                        "src": "9345:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10355",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9348:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9841,
                      "src": "9345:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9345:69:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30925,
                  "nodeType": "ExpressionStatement",
                  "src": "9345:69:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30929,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "9454:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30932,
                            "name": "frensStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30050,
                            "src": "9467:12:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensStorage_$1483",
                              "typeString": "contract FrensStorage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensStorage_$1483",
                              "typeString": "contract FrensStorage"
                            }
                          ],
                          "id": 30931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9459:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30930,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9459:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9459:21:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30934,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30863,
                        "src": "9482:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30926,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "9422:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9437:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27344,
                      "src": "9422:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9422:63:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30936,
                  "nodeType": "ExpressionStatement",
                  "src": "9422:63:46"
                },
                {
                  "assignments": [
                    30939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30939,
                      "mutability": "mutable",
                      "name": "nftReceiver",
                      "nameLocation": "9506:11:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30971,
                      "src": "9494:23:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftReceiver_$35025",
                        "typeString": "contract NftReceiver"
                      },
                      "typeName": {
                        "id": 30938,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30937,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "9494:11:46"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35025,
                          "src": "9494:11:46"
                        },
                        "referencedDeclaration": 35025,
                        "src": "9494:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$35025",
                          "typeString": "contract NftReceiver"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30944,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9520:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NftReceiver_$35025_$",
                        "typeString": "function () returns (contract NftReceiver)"
                      },
                      "typeName": {
                        "id": 30941,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30940,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "9524:11:46"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35025,
                          "src": "9524:11:46"
                        },
                        "referencedDeclaration": 35025,
                        "src": "9524:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$35025",
                          "typeString": "contract NftReceiver"
                        }
                      }
                    },
                    "id": 30943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9520:17:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftReceiver_$35025",
                      "typeString": "contract NftReceiver"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9494:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30946,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "9550:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30945,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5772,
                        5793,
                        5817,
                        5841
                      ],
                      "referencedDeclaration": 5772,
                      "src": "9545:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9545:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30948,
                  "nodeType": "ExpressionStatement",
                  "src": "9545:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30952,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "9594:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30955,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30939,
                            "src": "9607:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$35025",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$35025",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 30954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9599:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30953,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9599:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9599:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30957,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30863,
                        "src": "9621:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30949,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "9562:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9577:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27344,
                      "src": "9562:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9562:62:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30959,
                  "nodeType": "ExpressionStatement",
                  "src": "9562:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30963,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30939,
                            "src": "9649:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$35025",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$35025",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 30962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9641:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30961,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9641:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9641:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30967,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30863,
                            "src": "9686:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30965,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30062,
                            "src": "9663:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9678:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27134,
                          "src": "9663:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 30968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9663:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30960,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6424,
                        6449,
                        6462,
                        6478,
                        6520,
                        6562,
                        6604,
                        6641,
                        6678,
                        6715,
                        3577,
                        3602,
                        3632,
                        3657,
                        3716,
                        3741,
                        3771,
                        3796,
                        4896,
                        4931
                      ],
                      "referencedDeclaration": 3577,
                      "src": "9632:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9632:58:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30970,
                  "nodeType": "ExpressionStatement",
                  "src": "9632:58:46"
                }
              ]
            },
            "functionSelector": "90ec5d96",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSafeTransferFrom",
            "nameLocation": "8846:20:46",
            "parameters": {
              "id": 30849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8866:2:46"
            },
            "returnParameters": {
              "id": 30850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8876:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31012,
            "nodeType": "FunctionDefinition",
            "src": "9704:256:46",
            "nodes": [],
            "body": {
              "id": 31011,
              "nodeType": "Block",
              "src": "9739:221:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30976,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "9757:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30975,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5883,
                        5907,
                        5931
                      ],
                      "referencedDeclaration": 5862,
                      "src": "9747:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9747:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30978,
                  "nodeType": "ExpressionStatement",
                  "src": "9747:16:46"
                },
                {
                  "assignments": [
                    30980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30980,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "9776:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 31011,
                      "src": "9771:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30979,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9771:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30982,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9780:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9771:10:46"
                },
                {
                  "body": {
                    "id": 31009,
                    "nodeType": "Block",
                    "src": "9805:149:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30986,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30056,
                                "src": "9815:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2609",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9827:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1887,
                              "src": "9815:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30989,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9848:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "9815:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9815:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30992,
                        "nodeType": "ExpressionStatement",
                        "src": "9815:37:46"
                      },
                      {
                        "assignments": [
                          30994
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30994,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "9867:2:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 31009,
                            "src": "9862:7:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30993,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9862:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30999,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30997,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30980,
                              "src": "9900:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30995,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30062,
                              "src": "9872:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9887:12:46",
                            "memberName": "tokenByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28179,
                            "src": "9872:27:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9872:30:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9862:40:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 31003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 31001,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30994,
                                "src": "9923:2:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 31002,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30980,
                                "src": "9929:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9923:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 31000,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3526,
                              3547
                            ],
                            "referencedDeclaration": 3526,
                            "src": "9912:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 31004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9912:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31005,
                        "nodeType": "ExpressionStatement",
                        "src": "9912:20:46"
                      },
                      {
                        "expression": {
                          "id": 31007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9942:3:46",
                          "subExpression": {
                            "id": 31006,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30980,
                            "src": "9942:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31008,
                        "nodeType": "ExpressionStatement",
                        "src": "9942:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30983,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30980,
                      "src": "9796:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9800:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "9796:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31010,
                  "nodeType": "WhileStatement",
                  "src": "9789:165:46"
                }
              ]
            },
            "functionSelector": "6a7179c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenByIndex",
            "nameLocation": "9713:16:46",
            "parameters": {
              "id": 30973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9729:2:46"
            },
            "returnParameters": {
              "id": 30974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9739:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31073,
            "nodeType": "FunctionDefinition",
            "src": "9966:436:46",
            "nodes": [],
            "body": {
              "id": 31072,
              "nodeType": "Block",
              "src": "10001:401:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31016,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "10014:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31015,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5772,
                        5793,
                        5817,
                        5841
                      ],
                      "referencedDeclaration": 5772,
                      "src": "10009:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10009:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31018,
                  "nodeType": "ExpressionStatement",
                  "src": "10009:11:46"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 31019,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30056,
                          "src": "10028:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2609",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 31021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10040:13:46",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1887,
                        "src": "10028:25:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 31023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 31022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10061:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "10028:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 31024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10028:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31025,
                  "nodeType": "ExpressionStatement",
                  "src": "10028:37:46"
                },
                {
                  "assignments": [
                    31027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31027,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "10078:2:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 31072,
                      "src": "10073:7:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31026,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10073:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31033,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31030,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "10118:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10125:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 31028,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "10083:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10098:19:46",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28145,
                      "src": "10083:34:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 31032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10083:44:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10073:54:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31035,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "10144:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31038,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31027,
                            "src": "10174:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31036,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30062,
                            "src": "10151:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10166:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27134,
                          "src": "10151:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10151:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31034,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6424,
                        6449,
                        6462,
                        6478,
                        6520,
                        6562,
                        6604,
                        6641,
                        6678,
                        6715,
                        3577,
                        3602,
                        3632,
                        3657,
                        3716,
                        3741,
                        3771,
                        3796,
                        4896,
                        4931
                      ],
                      "referencedDeclaration": 3577,
                      "src": "10135:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10135:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31041,
                  "nodeType": "ExpressionStatement",
                  "src": "10135:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31043,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "10191:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31042,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5772,
                        5793,
                        5817,
                        5841
                      ],
                      "referencedDeclaration": 5772,
                      "src": "10186:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10186:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31045,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 31049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10219:47:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "expression": {
                        "id": 31046,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5074,
                        "src": "10203:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10355",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10206:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9841,
                      "src": "10203:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10203:64:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31051,
                  "nodeType": "ExpressionStatement",
                  "src": "10203:64:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31055,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "10303:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31056,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "10310:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31057,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31027,
                        "src": "10315:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31052,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "10275:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10290:12:46",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27325,
                      "src": "10275:27:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10275:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31059,
                  "nodeType": "ExpressionStatement",
                  "src": "10275:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31061,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "10331:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31060,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5772,
                        5793,
                        5817,
                        5841
                      ],
                      "referencedDeclaration": 5772,
                      "src": "10326:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10326:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31063,
                  "nodeType": "ExpressionStatement",
                  "src": "10326:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31067,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "10373:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31068,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30098,
                        "src": "10380:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31069,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31027,
                        "src": "10385:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31064,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "10345:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10360:12:46",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27325,
                      "src": "10345:27:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10345:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31071,
                  "nodeType": "ExpressionStatement",
                  "src": "10345:43:46"
                }
              ]
            },
            "functionSelector": "70557298",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferFrom",
            "nameLocation": "9975:16:46",
            "parameters": {
              "id": 31013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9991:2:46"
            },
            "returnParameters": {
              "id": 31014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10001:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31124,
            "nodeType": "FunctionDefinition",
            "src": "10406:613:46",
            "nodes": [],
            "body": {
              "id": 31123,
              "nodeType": "Block",
              "src": "10447:572:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31077,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "10463:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31076,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5883,
                        5907,
                        5931
                      ],
                      "referencedDeclaration": 5862,
                      "src": "10453:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10453:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31079,
                  "nodeType": "ExpressionStatement",
                  "src": "10453:16:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "796f7520617265206e6f7420616c6c6f77656420746f206d696e74",
                        "id": 31083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10491:29:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        },
                        "value": "you are not allowed to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a908c923e99f344147718d6e1401d1677a36ea5b640acb69b86f988cce0d971e",
                          "typeString": "literal_string \"you are not allowed to mint\""
                        }
                      ],
                      "expression": {
                        "id": 31080,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5074,
                        "src": "10475:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10355",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10478:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9841,
                      "src": "10475:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10475:46:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31085,
                  "nodeType": "ExpressionStatement",
                  "src": "10475:46:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31089,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "10547:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 31086,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "10527:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10542:4:46",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 685,
                      "src": "10527:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10527:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31091,
                  "nodeType": "ExpressionStatement",
                  "src": "10527:26:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420307830303030303030303030303030303030303030303030303030303030303030303030306131316365206973206d697373696e6720726f6c6520307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                        "id": 31095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10575:150:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        },
                        "value": "AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        }
                      ],
                      "expression": {
                        "id": 31092,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5074,
                        "src": "10559:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10355",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10562:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9841,
                      "src": "10559:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10559:167:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31097,
                  "nodeType": "ExpressionStatement",
                  "src": "10559:167:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 31102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10767:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 31101,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10757:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 31103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10757:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 31104,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "10783:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 31098,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "10732:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10747:9:46",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26650,
                      "src": "10732:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 31105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10732:57:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31106,
                  "nodeType": "ExpressionStatement",
                  "src": "10732:57:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420307830303030303030303030303030303030303030303030303030303030303030303030306131316365206973206d697373696e6720726f6c6520307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                        "id": 31110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10811:150:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        },
                        "value": "AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c6512edccfb43878cf586d205cf7d2da01d5d9ffc1bd98f110033f2e2912f5f8",
                          "typeString": "literal_string \"AccessControl: account 0x00000000000000000000000000000000000a11ce is missing role 0x0000000000000000000000000000000000000000000000000000000000000000\""
                        }
                      ],
                      "expression": {
                        "id": 31107,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5074,
                        "src": "10795:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10355",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10798:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9841,
                      "src": "10795:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10795:167:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31112,
                  "nodeType": "ExpressionStatement",
                  "src": "10795:167:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783030",
                            "id": 31118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11001:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 31117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10993:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 31116,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10993:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10993:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 31120,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30092,
                        "src": "11008:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 31113,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30062,
                        "src": "10968:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$915",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10983:9:46",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26650,
                      "src": "10968:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 31121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10968:46:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31122,
                  "nodeType": "ExpressionStatement",
                  "src": "10968:46:46"
                }
              ]
            },
            "functionSelector": "4fc1a73e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUnauthorizedAccess",
            "nameLocation": "10415:22:46",
            "parameters": {
              "id": 31074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10437:2:46"
            },
            "returnParameters": {
              "id": 31075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10447:0:46"
            },
            "scope": 31125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30037,
              "name": "Test",
              "nameLocations": [
                "757:4:46"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8236,
              "src": "757:4:46"
            },
            "id": 30038,
            "nodeType": "InheritanceSpecifier",
            "src": "757:4:46"
          }
        ],
        "canonicalName": "MiscTest",
        "contractDependencies": [
          159,
          520,
          597,
          915,
          1175,
          1483,
          2717,
          35025
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31125,
          8236,
          5306,
          5043
        ],
        "name": "MiscTest",
        "nameLocation": "745:8:46",
        "scope": 31126,
        "usedErrors": [],
        "usedEvents": [
          3262,
          3266,
          3270,
          3274,
          3278,
          3282,
          3286,
          3290,
          3296,
          3302,
          3310,
          3318,
          3324,
          3330,
          3336,
          3342,
          5690,
          5695,
          5700,
          5707,
          5714,
          5721
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 46
}