{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensOracle",
      "outputs": [
        {
          "internalType": "contract FrensOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool2",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBalanceOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetPoolById",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIsApprovedForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintingDirectly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwnerOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSafeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenByIndex",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testexists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "736:9442:46:-:0;;;;;;1594:4:22;736:9442:46;;;;;;;;;1777:42;1195;736:9442;;;;;;;;;1187:51;736:9442;;;1187:51;736:9442;1385:42;736:9442;1385:42;736:9442;;;1385:42;736:9442;1461:42;736:9442;1461:42;736:9442;;;1461:42;736:9442;;1545:25;736:9442;;;1545:25;736:9442;1604:42;736:9442;1604:42;736:9442;;;1604:42;736:9442;1691:42;736:9442;1683:51;736:9442;;;1683:51;736:9442;1769:51;736:9442;;;1769:51;736:9442;;1842:101;736:9442;;:::i;:::-;;;;;;;;;-1:-1:-1;;736:9442:46;1842:101;736:9442;;;;;;;;-1:-1:-1;;;736:9442:46;;1980:69;736:9442;;;;;;;:::i;:::-;;;;;;-1:-1:-1;736:9442:46;;1980:69;736:9442;1980:69;736:9442;;;;;;;;2073:197;736:9442;;:::i;:::-;;;;;;;-1:-1:-1;736:9442:46;2073:197;736:9442;;;;;;-1:-1:-1;;;;;;;;;;;736:9442:46;;;;;;;;;;;2304:66;;736:9442;;;;;;;;;;;2073:197;736:9442;;;;;-1:-1:-1;;;;;;;;;;;736:9442:46;;;;;;;;;;;;;;;;;1980:69;736:9442;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1842:101;736:9442;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "736:9442:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;1652:82;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;1103:30;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;1154:84;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;1740:80;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;798:38;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;842:52;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;938:44;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;7695:14;736:9442;;;-1:-1:-1;;;7695:22:46;;;;;736:9442;;-1:-1:-1;;;;;736:9442:46;7695:22;;736:9442;;;;;;;;7695:22;;;;;;;;736:9442;7695:22;;;736:9442;7688:4;;7695:22;:::i;:::-;7726:11;736:9442;7731:5;736:9442;;7726:11;:::i;:::-;736:9442;7745:51;;;;;736:9442;;;;;;;;;;;;;7745:51;;;736:9442;7745:51;;736:9442;;;;;;;;;;;7745:51;;;;;;;;736:9442;;;7695:14;736:9442;;;7837:3;736:9442;;7804:37;;;;;;736:9442;;;;;;;;;;;;;7804:37;;;;736:9442;7804:37;;736:9442;7804:37;;;;;;;;736:9442;7688:4;7854:13;7688:4;7854:13;:::i;:::-;736:9442;7695:14;736:9442;;;;7837:3;736:9442;;7876:37;;;;;736:9442;;;;;;7876:37;;;;;;;736:9442;7876:37;;736:9442;7876:37;;;;;;;;736:9442;;;;7837:3;736:9442;;;7695:14;736:9442;;;;;;7935:22;;;;;;;;;;;;;7921:37;7935:22;736:9442;7935:22;;;736:9442;7921:37;;;:::i;:::-;736:9442;7935:22;;;;;;;-1:-1:-1;7935:22:46;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;736:9442;;;;;;;;;7876:37;;;;:::i;:::-;;;;7804;;;;:::i;:::-;;;;7745:51;;;;:::i;:::-;;;;7695:22;;;;;;;;;;;;;;:::i;:::-;;;;736:9442;;;;;;-1:-1:-1;;736:9442:46;;;;768:24;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;8649:5;736:9442;-1:-1:-1;;;;;736:9442:46;8644:11;;736:9442;;8644:11;:::i;:::-;736:9442;8663:11;736:9442;;8663:37;;;;;736:9442;;;;;;;;;;;;;8663:37;;;;;;;;;;736:9442;;;8718:14;736:9442;;;8649:5;736:9442;;;;;;;;;8718:44;;;736:9442;8718:44;;736:9442;;;;;1671:64:22;8718:44:46;;;;736:9442;8718:44;;;;;;;;;;;736:9442;8718:44;;;736:9442;;;;;;;;;;;;;;;8786:26;;;736:9442;8786:26;;1671:64:22;8786:26:46;;;;;;;8770:43;8786:26;736:9442;8786:26;;;736:9442;8770:43;;:::i;:::-;8826:3;8821:9;736:9442;;;;8821:9;:::i;:::-;736:9442;8838:68;;;;;;736:9442;;-1:-1:-1;;;8838:68:46;;736:9442;;;8838:68;736:9442;8838:68;;;:::i;:::-;;;;;;;;;;;;;736:9442;;;8718:14;736:9442;;;;8649:5;736:9442;;;;;;;8914:47;;;;;;736:9442;;-1:-1:-1;;;8914:47:46;;;-1:-1:-1;;;;;736:9442:46;;;;8914:47;;736:9442;;;;;;;;;;;;1671:64:22;;;736:9442:46;;;;;;;;;;8914:47;;;;;;;;;;736:9442;;8969:11;736:9442;8649:5;736:9442;;8969:11;:::i;:::-;736:9442;8718:14;736:9442;;;8649:5;736:9442;;;;;;8988:47;;;;;736:9442;;8988:47;;;-1:-1:-1;;;;;736:9442:46;;;;8988:47;;736:9442;;;;;;;;;;1671:64:22;;;736:9442:46;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;8988:47:46;;;;;;;;736:9442;;;;;;;;;8718:14;736:9442;;;;;;;;;;;9057:26;;;736:9442;9057:26;;1671:64:22;9057:26:46;;;;;;;9043:41;9057:26;736:9442;9057:26;;;9043:41;;:::i;:::-;9092:9;736:9442;;;;9092:9;:::i;:::-;9109:69;;;;;736:9442;;;;;;;;;;;;;9109:69;;;736:9442;9109:69;;736:9442;;;;;;;;;;;-1:-1:-1;;;736:9442:46;;;;9109:69;;;;;;;;736:9442;;;8718:14;736:9442;;;;;;;9231:12;736:9442;;9186:63;;;;;;736:9442;;9186:63;;;-1:-1:-1;;;;;736:9442:46;;;;9186:63;;736:9442;;;;;;;;;;1671:64:22;;;736:9442:46;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;9186:63:46;;;;;;;;736:9442;;;;9284:17;;;;;;;-1:-1:-1;;;;;9284:17:46;;;;;;;;;;;;736:9442;9284:17;;;;;9309:9;736:9442;;;;9309:9;:::i;:::-;736:9442;;;8718:14;736:9442;;;;;;;9326:62;;;;;;736:9442;;9326:62;;;-1:-1:-1;;;;;736:9442:46;;;;9326:62;;736:9442;;;;;;;;;;;1671:64:22;;;736:9442:46;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;9326:62:46;;;;;;;;;;;736:9442;;8718:14;736:9442;;;;;;;;;;;;;9427:26;;736:9442;9427:26;;1671:64:22;9427:26:46;;;;;;;;;736:9442;9427:26;;;;;;:::i;9326:62::-;;;;:::i;:::-;;;;9284:17;1671:64:22;;;736:9442:46;1671:64:22;;736:9442:46;1671:64:22;736:9442:46;;1671:64:22;9186:63:46;;;;:::i;:::-;;;;9109:69;;;;:::i;:::-;;;;9057:26;;;;;;;;;;;;;;;:::i;:::-;;;;;8988:47;;;;:::i;:::-;;;;8914;;;;:::i;:::-;;;;8838:68;;;;:::i;:::-;;;;8786:26;;;;;;;;;;;;;;;:::i;:::-;;;;;8718:44;;;;;;;;;;;;;;;;:::i;:::-;;;736:9442;;;;;;;;8718:44;;;;;;;;;8663:37;;;;:::i;:::-;;;;736:9442;;;;;;-1:-1:-1;;736:9442:46;;;;6621:5;736:9442;-1:-1:-1;;;;;736:9442:46;6611:16;;736:9442;;6611:16;:::i;:::-;736:9442;6635:10;;6660:7;6664:3;6660:7;;;;736:9442;6653:607;6679:11;736:9442;;;;;6679:37;;;;;736:9442;;;;;;;;;;6679:37;;;;;;;;;;;;6653:607;6750:14;;736:9442;;;;;;;;;;;;;;;6750:29;;;;;736:9442;6750:29;;1671:64:22;6750:29:46;736:9442;;;;6750:29;;;;;;;;;;6844:3;6750:29;6820:13;6750:29;736:9442;6750:29;;;6653:607;736:9442;;;;;6820:13;:::i;:::-;6844:3;:::i;:::-;6857:12;736:9442;;;;;6857:38;;;;;;736:9442;;;;;;6857:38;;;;;;;;;;;;;;;;;;6653:607;736:9442;;;;;;;;6930:29;;;;;;;;736:9442;6930:29;;1671:64:22;6930:29:46;;;;;;;7001:14;6930:29;7026:3;6930:29;736:9442;6930:29;;;6653:607;736:9442;;;7001:14;:::i;7026:3::-;736:9442;;;;;7039:37;;;;;;736:9442;;;;;;;7039:37;;;;;;;;;;;;;;;;;;;;6653:607;736:9442;;;;;;7153:29;;;;;;;736:9442;7153:29;;1671:64:22;7153:29:46;;;;;;;7247:3;7153:29;7223:13;7153:29;;;736:9442;7153:29;;;6653:607;736:9442;;;;7223:13;:::i;7247:3::-;6653:607;;7153:29;;;;;;;-1:-1:-1;7153:29:46;;;;;;:::i;:::-;;;;;;7039:37;;;;:::i;:::-;;;;6930:29;;;;;;;;;;;;;;;:::i;:::-;;;;;6857:38;;;;:::i;:::-;;;;6750:29;;;;;;;;;;;;;;:::i;:::-;;;;6679:37;;;;:::i;:::-;;;;736:9442;;;;;;-1:-1:-1;;736:9442:46;;;;5214:5;736:9442;-1:-1:-1;;;;;736:9442:46;5209:11;;736:9442;;5209:11;:::i;:::-;736:9442;5228:31;;;;;736:9442;;;;;;;;;;;;;5228:31;;736:9442;;5228:31;;736:9442;;;;;;-1:-1:-1;;;736:9442:46;;;;5228:31;;;;;;;;736:9442;;;5267:14;736:9442;;;5214:5;736:9442;;5267:35;;;;;736:9442;;;;;;;;;;;;;;;5267:35;;736:9442;5267:35;;736:9442;5267:35;;;;;;;;736:9442;5267:35;;;;:::i;5228:31::-;;;;:::i;:::-;;;;736:9442;;;;;;-1:-1:-1;;736:9442:46;;;;8018:1;8009:10;8034:7;8038:3;8034:7;;;;736:9442;8027:558;8058:5;736:9442;;-1:-1:-1;;;;;736:9442:46;8058:5;8053:11;;736:9442;;8053:11;:::i;:::-;8074;736:9442;;;;;8074:37;;;;;;736:9442;;;;;;;;;;8074:37;;;;;;;;;;;;8027:558;8139:14;;736:9442;;;;;;;;;;;;;;8139:25;;;;;736:9442;8139:25;;1671:64:22;8139:25:46;736:9442;;;;8139:25;;;;;;;;;;8174:24;8139:25;8208:3;8139:25;736:9442;8139:25;;;736:9442;;;8174:24;:::i;8208:3::-;8226;;736:9442;8221:9;736:9442;;;;8221:9;:::i;:::-;736:9442;8240:12;736:9442;;8240:38;;;;;;736:9442;;;;;;8240:38;;;;;;;;;;;;;;;;;;8027:558;736:9442;;;;;;;;8304:25;;;;;;;;736:9442;8304:25;;1671:64:22;8304:25:46;;;;;;;8339:20;8369:3;8304:25;;;736:9442;8304:25;;;8027:558;736:9442;;;;;8339:20;:::i;8369:3::-;736:9442;8382:9;736:9442;;;;8382:9;:::i;:::-;736:9442;;8401:37;;;;;;736:9442;;;;;;;8401:37;;;;;;;;;;;;;;;;;;;;8027:558;736:9442;;;;;;8507:25;;;;;;;736:9442;8507:25;;1671:64:22;8507:25:46;;;;;;;8572:3;8507:25;8542:20;8507:25;736:9442;8507:25;;;736:9442;;;;8542:20;:::i;8572:3::-;8027:558;;8507:25;;;;;;;-1:-1:-1;8507:25:46;;;;;;:::i;:::-;;;;;;8401:37;;;;:::i;:::-;;;;8304:25;;;;;;;;;;;;;;:::i;:::-;;;;8240:38;;;;:::i;:::-;;;;8139:25;;;;;;;;;;;;;;;:::i;8074:37::-;;;;:::i;:::-;;;;736:9442;;;;;;-1:-1:-1;;736:9442:46;;;;9780:5;736:9442;-1:-1:-1;;;;;736:9442:46;9775:11;;736:9442;;9775:11;:::i;:::-;736:9442;9794:11;736:9442;;9794:37;;;;;736:9442;;;;;;;;;;;;;9794:37;;;;;;;;;;736:9442;;;9849:14;736:9442;;;;9780:5;736:9442;;;;;;;;;9849:44;;;736:9442;9849:44;;736:9442;;;;;1671:64:22;9849:44:46;;;;736:9442;9849:44;;;;;;;;;736:9442;9849:44;;;736:9442;;;;;;;;;;;;;;;9917:26;;;736:9442;9917:26;;1671:64:22;9917:26:46;;;;;;;9901:43;9917:26;736:9442;9917:26;;;9901:43;;;:::i;:::-;9952:9;736:9442;9957:3;736:9442;;9952:9;:::i;:::-;736:9442;9969:68;;;;;736:9442;;;;;;;;9969:68;;;;;;736:9442;9969:68;;;:::i;:::-;;;;;;;;;;;736:9442;;;9849:14;736:9442;;;;9780:5;736:9442;;;;9957:3;736:9442;;10045:43;;;;;;736:9442;;-1:-1:-1;;;10045:43:46;;;-1:-1:-1;;;;;736:9442:46;;;;10045:43;;736:9442;;;;;;;;;;;;1671:64:22;;;736:9442:46;;;;;;;;;;10045:43;;;;;;;;;;736:9442;;10096:11;736:9442;9780:5;736:9442;;10096:11;:::i;:::-;736:9442;9849:14;736:9442;;;9780:5;736:9442;;;9957:3;736:9442;;10115:43;;;;;;736:9442;;10115:43;;;-1:-1:-1;;;;;736:9442:46;;;;10115:43;;736:9442;;;;;;;;;;;;1671:64:22;;;;736:9442:46;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;10115:43:46;;;;;;;;736:9442;10045:43;;;;:::i;:::-;;;;9969:68;;;;:::i;:::-;;;;9917:26;;;;;;;-1:-1:-1;9917:26:46;;;;;;:::i;:::-;;;;;;9849:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;736:9442;;;;;;;;9849:44;;;;;;;9794:37;;;;:::i;:::-;;;;736:9442;;;;;;-1:-1:-1;;736:9442:46;;;;9521:5;736:9442;-1:-1:-1;;;;;736:9442:46;9511:16;;736:9442;;9511:16;:::i;:::-;736:9442;9535:10;;9560:7;9564:3;9560:7;;;;736:9442;9553:167;736:9442;9579:11;736:9442;;9579:37;;;;;736:9442;;;;;;;;;;;;;9579:37;;;;;;;;;;9553:167;-1:-1:-1;9636:14:46;736:9442;;;;-1:-1:-1;;736:9442:46;;;;;;;;;;;;;;;9636:32;;736:9442;9636:32;;1671:64:22;9636:32:46;736:9442;9636:32;;;;;;;;;;;736:9442;9636:32;;;9553:167;9689:7;;;;9708:3;9689:7;;;:::i;9708:3::-;9553:167;;9636:32;;;;;;;;;;;;;;;;:::i;:::-;;;736:9442;;;;;;;9689:7;736:9442;9636:32;;;;;;;736:9442;1671:64:22;;;736:9442:46;;;;;;;;9579:37;;;;:::i;:::-;;;;736:9442;;;;;;-1:-1:-1;;736:9442:46;;;;1577:69;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;1024:31;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;1061:36;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;6332:5;736:9442;-1:-1:-1;;;;;736:9442:46;6322:16;;736:9442;;6322:16;:::i;:::-;736:9442;6353:10;6379:7;6383:3;6379:7;;;;736:9442;6372:178;6410:14;736:9442;;;;;;;;;;;;;;6410:24;;;;;736:9442;6410:24;;1671:64:22;6410:24:46;736:9442;;;;6410:24;;;;;;;;;7918:5:25;6410:24:46;736:9442;6410:24;;;6372:178;7918:5:25;;;:::i;:::-;736:9442:46;6445:11;736:9442;;6445:37;;;;;;736:9442;;;;;;;;;;;;;6445:37;;;;;;;;;;;;;;;6372:178;736:9442;;;;;;6503:24;;;;;;;736:9442;6503:24;;1671:64:22;6503:24:46;;;;;;6538:3;6503:24;;;736:9442;6503:24;;;6372:178;6503:24;;;:::i;6538:3::-;6372:178;;6503:24;;;;;;-1:-1:-1;6503:24:46;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;6445:37;;;;:::i;:::-;;;;6410:24;;;;;;;;;;;;;;:::i;:::-;;;;736:9442;;;;;;-1:-1:-1;;736:9442:46;;;;5960:5;736:9442;;-1:-1:-1;;;;;736:9442:46;5950:16;;736:9442;;5950:16;:::i;:::-;736:9442;5974:10;;5999:7;6003:3;5999:7;;;;736:9442;5992:281;736:9442;6018:11;736:9442;;6018:37;;;;;736:9442;;;;;;;;;;;;;6018:37;;;;;;;;;;5992:281;6075:14;;736:9442;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6075:46:46;;-1:-1:-1;;;;;736:9442:46;;;;;6075:46;;736:9442;;;;1671:64:22;;;;6075:46:46;;736:9442;6075:46;;736:9442;;;;;;6075:46;;;;;;;;;;;736:9442;6075:46;;;5992:281;-1:-1:-1;6142:7:46;;;;:::i;:::-;736:9442;;;;;;;;;;;;;;;;;;6183:31;;736:9442;6183:31;;736:9442;6183:31;;;;;;;736:9442;6183:31;;;5992:281;6261:3;5259:6:22;;;;;5255:203;;5992:281:46;6261:3;;;:::i;:::-;5992:281;;5255:203:22;-1:-1:-1;;;;;;;;;;;736:9442:46;;;;;;;;;;;;;;;;-1:-1:-1;;;736:9442:46;;;;5286:41:22;736:9442:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:9442:46;;;;;;;;;;;;1671:64:22;5346:31;;;;;;;;736:9442:46;;;;;;;;;;;;;;;;;-1:-1:-1;;;736:9442:46;;;;;;;;;;;1671:64:22;5396:31;;;;;:::i;:::-;5255:203;;;;6183:31:46;;;;;;;;;;;;;;;;:::i;:::-;;;736:9442;;;;6261:3;736:9442;;6183:31;;;;;;;;6075:46;;;;;;;;;;;;;;;;;;:::i;:::-;;;736:9442;;;;6142:7;736:9442;;;;6075:46;;;;;;;;;6018:37;;;;:::i;:::-;;;;736:9442;;;;;;-1:-1:-1;;736:9442:46;;;;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;900:32;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;1349:78;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;1433:70;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;5363:5;736:9442;;-1:-1:-1;;;;;736:9442:46;5363:5;5353:16;;736:9442;;5353:16;:::i;:::-;736:9442;5377:10;;5402:7;5406:3;5402:7;;;;736:9442;5395:503;736:9442;5496:11;736:9442;;5496:37;;;;;736:9442;;;;;;;;;;;;;5496:37;;;;;;;;;;5395:503;5555:14;;736:9442;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5555:46:46;;-1:-1:-1;;;;;736:9442:46;;;;;5555:46;;736:9442;;;;1671:64:22;;;;5555:46:46;;736:9442;5555:46;;736:9442;;;;;;5555:46;;;;;;;;736:9442;5555:46;;;5395:503;5622:7;;;;;:::i;:::-;736:9442;;;;;;;;;;;;;;5665:29;;;;;736:9442;5665:29;;1671:64:22;736:9442:46;5665:29;;;;;;;;;;;736:9442;5665:29;;;5395:503;736:9442;;3678:6:22;3674:212;;5395:503:46;736:9442;;;;;5772:3;;736:9442;;;;;5749:30;;;;;;736:9442;;-1:-1:-1;;;5749:30:46;;-1:-1:-1;;;;;736:9442:46;;;;;5749:30;;736:9442;;;;1671:64:22;;;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;5749:30:46;;;;;;;;;;;;;5395:503;736:9442;;;;;;5811:29;;;;;;;736:9442;5811:29;;1671:64:22;5811:29:46;;;;;;;5886:3;5811:29;5850:26;5811:29;;;736:9442;5811:29;;;736:9442;;;;5850:26;:::i;5886:3::-;5395:503;;5811:29;;;;;;;-1:-1:-1;5811:29:46;;;;;;:::i;:::-;;;;;;5749:30;;;;:::i;:::-;;;;3674:212:22;-1:-1:-1;;;;;;;;;;;736:9442:46;;;;;;;;;;;;;;;;-1:-1:-1;;;736:9442:46;;;;3705:44:22;736:9442:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:9442:46;;;;;;;;;;;;;3768:34:22;;;;;;;;736:9442:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:9442:46;;;;;;;;;;;;;3821:34:22;;;;;:::i;:::-;3674:212;;;5665:29:46;;;;;;;;;;;;;;:::i;:::-;;;;5555:46;;;;;;;;;;;;;;;;:::i;:::-;;;736:9442;;;;;5622:7;736:9442;;5555:46;;;;;;;5496:37;;;;:::i;:::-;;;;736:9442;;;;;;-1:-1:-1;;736:9442:46;;;;988:30;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;;;2452:18;;;;;;;-1:-1:-1;;;;;2452:18:46;;;;;;;;;;;;736:9442;2452:18;;;;;2437:33;736:9442;;-1:-1:-1;;;;;;736:9442:46;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;;2543:60;;;736:9442;;;-1:-1:-1;;;736:9442:46;;;;2543:60;;;;;736:9442;;2543:60;736:9442;2543:60;:::i;:::-;1671:64:22;2533:71:46;;2606:18;736:9442;-1:-1:-1;;;;;736:9442:46;2509:116;;;;;736:9442;;-1:-1:-1;;;2509:116:46;;736:9442;2509:116;;1671:64:22;;;;-1:-1:-1;;;;;736:9442:46;;;;;;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;2509:116:46;;;;;;;;736:9442;;;;;;;2437:33;736:9442;;;;2543:60;2703:64;;736:9442;;;;-1:-1:-1;;;736:9442:46;;;;2703:64;;;;;;:::i;:::-;1671::22;2693:75:46;;2770:7;736:9442;-1:-1:-1;;;;;736:9442:46;2669:109;;;;;736:9442;;;;;;;;;;;;;;2669:109;;736:9442;2669:109;;1671:64:22;736:9442:46;;;;2669:109;;;;;;;;736:9442;;;;;;;2437:33;736:9442;;;;;2543:60;2844:52;;736:9442;;;-1:-1:-1;;;736:9442:46;;;;2844:52;;;;;;:::i;:::-;1671:64:22;2834:63:46;;2899:10;736:9442;-1:-1:-1;;;;;736:9442:46;2810:100;;;;;736:9442;;-1:-1:-1;;;2810:100:46;;736:9442;2810:100;;1671:64:22;;;;-1:-1:-1;;;;;736:9442:46;;;;;;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;2810:100:46;;;;;;;;736:9442;-1:-1:-1;2437:33:46;736:9442;;;;-1:-1:-1;;;;;736:9442:46;2963:32;;;;-1:-1:-1;;;;;2963:32:46;;;;;;;;2543:60;2963:32;;;;;;736:9442;;2963:32;;;736:9442;2963:32;;;;;736:9442;;;-1:-1:-1;;;;;;736:9442:46;-1:-1:-1;;;;;736:9442:46;;;;;;;;;2437:33;736:9442;;;-1:-1:-1;;;2543:60:46;3069:54;;736:9442;;;-1:-1:-1;;;736:9442:46;;;;3069:54;;;736:9442;;;;;3069:54;736:9442;3069:54;:::i;:::-;1671:64:22;3059:65:46;;3035:115;;;;;;736:9442;;-1:-1:-1;;;3035:115:46;;736:9442;3035:115;;1671:64:22;;;;-1:-1:-1;;;;;736:9442:46;;;;;;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;3035:115:46;;;;;;;;736:9442;-1:-1:-1;2437:33:46;736:9442;;;;-1:-1:-1;;;;;736:9442:46;3202:36;;;;-1:-1:-1;;;;;3202:36:46;;;;;;;;2543:60;3202:36;;;;;;736:9442;;3202:36;;;736:9442;3202:36;;;;;3181:57;736:9442;;-1:-1:-1;;;;;;736:9442:46;-1:-1:-1;;;;;736:9442:46;;;;;;;;;2437:33;736:9442;;;-1:-1:-1;;;2543:60:46;3307:58;;736:9442;;;-1:-1:-1;;;736:9442:46;;;;3307:58;;;736:9442;;;;;3307:58;736:9442;3307:58;:::i;:::-;1671:64:22;3297:69:46;;3273:123;;;;;;736:9442;;-1:-1:-1;;;3273:123:46;;736:9442;3273:123;;1671:64:22;;;;-1:-1:-1;;;;;736:9442:46;;;;;;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;3273:123:46;;;;;;;;736:9442;-1:-1:-1;736:9442:46;;3181:57;736:9442;-1:-1:-1;;;;;736:9442:46;;;;;3404:69;;;;;736:9442;;;;;;;;;;;;;;;3404:69;;;736:9442;3404:69;;1671:64:22;736:9442:46;;;;3404:69;;;;;;;;736:9442;-1:-1:-1;2437:33:46;736:9442;;;;-1:-1:-1;;;;;736:9442:46;3522:29;;;;-1:-1:-1;;;;;3522:29:46;;;;;;;;2543:60;3522:29;;;;;;736:9442;;3522:29;;;736:9442;3522:29;;;;;736:9442;;;-1:-1:-1;;;;;;736:9442:46;-1:-1:-1;;;;;736:9442:46;;;;;;;;;2437:33;736:9442;;;-1:-1:-1;;;2543:60:46;3624:51;;736:9442;;;-1:-1:-1;;;736:9442:46;;;;3624:51;;;736:9442;;;;;3624:51;736:9442;3624:51;:::i;:::-;1671:64:22;3614:62:46;;3590:109;;;;;;736:9442;;-1:-1:-1;;;3590:109:46;;736:9442;3590:109;;1671:64:22;;;;-1:-1:-1;;;;;736:9442:46;;;;;;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;3590:109:46;;;;;;;;736:9442;-1:-1:-1;2437:33:46;736:9442;;;;-1:-1:-1;;;;;736:9442:46;3751:33;;;;-1:-1:-1;;;;;3751:33:46;;;;;;;;2543:60;3751:33;;;;;;736:9442;;3751:33;;;736:9442;3751:33;;;;;3733:51;736:9442;;-1:-1:-1;;;;;;736:9442:46;-1:-1:-1;;;;;736:9442:46;;;;;;;;;2437:33;736:9442;;;-1:-1:-1;;;2543:60:46;3856:55;;736:9442;;;-1:-1:-1;;;736:9442:46;;;;3856:55;;;736:9442;;;;;3856:55;736:9442;3856:55;:::i;:::-;1671:64:22;3846:66:46;;3822:117;;;;;;736:9442;;-1:-1:-1;;;3822:117:46;;736:9442;3822:117;;1671:64:22;;;;-1:-1:-1;;;;;736:9442:46;;;;;;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;3822:117:46;;;;;;;;736:9442;-1:-1:-1;2437:33:46;736:9442;;;;-1:-1:-1;;;;;736:9442:46;-1:-1:-1;;;;;3996:40:46;;;;;;;;-1:-1:-1;3996:40:46;;;;;;;;;;736:9442;2543:60;3996:40;;;;;;;736:9442;3996:40;;;;;3971:65;736:9442;;-1:-1:-1;;;;;;736:9442:46;-1:-1:-1;;;;;736:9442:46;;;;;;;;;2437:33;736:9442;;;-1:-1:-1;;;2543:60:46;4106:62;;736:9442;;;-1:-1:-1;;;736:9442:46;;;;4106:62;;;736:9442;;;;;4106:62;736:9442;4106:62;:::i;:::-;1671:64:22;4096:73:46;;4072:131;;;;;;736:9442;;-1:-1:-1;;;4072:131:46;;736:9442;4072:131;;1671:64:22;;;;-1:-1:-1;;;;;736:9442:46;;;;;;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;4072:131:46;;;;;;;;736:9442;-1:-1:-1;2437:33:46;736:9442;;;;-1:-1:-1;;;;;736:9442:46;4240:26;;;;-1:-1:-1;;;;;4240:26:46;;;;;;;;2543:60;4240:26;;;;;;736:9442;;4240:26;;;736:9442;4240:26;;;;;4229:37;736:9442;;-1:-1:-1;;;;;;736:9442:46;-1:-1:-1;;;;;736:9442:46;;;;;;2437:33;736:9442;;;-1:-1:-1;;;2543:60:46;4331:51;;736:9442;;;-1:-1:-1;;;736:9442:46;;;;3624:51;4331;;736:9442;;;;;4331:51;736:9442;4331:51;:::i;:::-;1671:64:22;4321:62:46;;736:9442;;-1:-1:-1;;;;;736:9442:46;4297:109;;;;;736:9442;;-1:-1:-1;;;4297:109:46;;736:9442;4297:109;;1671:64:22;;;;-1:-1:-1;;;;;736:9442:46;;;;;;-1:-1:-1;;736:9442:46;;;;;;-1:-1:-1;;4297:109:46;;;;;;;;736:9442;-1:-1:-1;3181:57:46;736:9442;4548:9;736:9442;;;-1:-1:-1;;;4522:79:46;;;-1:-1:-1;;;;;736:9442:46;;;;4522:79;;736:9442;;;;;;;;;;;;2543:60;;736:9442;;;;;;;;4522:79;;;;;;2543:60;4522:79;736:9442;4522:79;;;736:9442;-1:-1:-1;4641:40:46;736:9442;;-1:-1:-1;;;;;;736:9442:46;-1:-1:-1;;;;;736:9442:46;;;;;;3181:57;736:9442;4548:9;736:9442;;;4877:79;;;736:9442;;;4877:79;;736:9442;-1:-1:-1;736:9442:46;;;;;;;;;;;;;;-1:-1:-1;736:9442:46;4877:79;;;;;;;736:9442;4877:79;;;736:9442;-1:-1:-1;736:9442:46;;;-1:-1:-1;;;;;;736:9442:46;-1:-1:-1;;;;;736:9442:46;;;;;;;;;;;4877:79;;;;2543:60;4877:79;2543:60;4877:79;;;;;;;:::i;:::-;;;;4522;;;;;;;;;;;;;;:::i;:::-;;;;4297:109;;;;:::i;:::-;;;;4240:26;1671:64:22;;;;736:9442:46;1671:64:22;;736:9442:46;1671:64:22;736:9442:46;1671:64:22;4072:131:46;;;;:::i;:::-;;;;3996:40;1671:64:22;;;;736:9442:46;1671:64:22;;736:9442:46;1671:64:22;736:9442:46;1671:64:22;3822:117:46;;;;:::i;:::-;;;;3590:109;;;;:::i;:::-;;;;3404:69;;;;:::i;:::-;;;;3273:123;;;;:::i;:::-;;;;3035:115;;;;:::i;:::-;;;;2810:100;;;;:::i;:::-;;;;2669:109;;;;:::i;:::-;;;;2509:116;;;;:::i;:::-;;;;736:9442;;;;;;-1:-1:-1;;736:9442:46;;;;7329:5;736:9442;-1:-1:-1;;;;;736:9442:46;7319:16;;736:9442;;7319:16;:::i;:::-;736:9442;7343:10;7368:6;736:9442;7368:6;;;;-1:-1:-1;7464:14:46;736:9442;7329:5;736:9442;7503:3;736:9442;;;-1:-1:-1;;;7464:43:46;;;736:9442;;;-1:-1:-1;;;;;736:9442:46;;;;7464:43;;736:9442;;;;;;;;;;;7464:43;;736:9442;7464:43;;736:9442;;;;;;;;7464:43;;;;;;7918:5:25;7464:43:46;736:9442;7464:43;;;7918:5:25;;;:::i;:::-;736:9442:46;7464:14;736:9442;;;;7503:3;736:9442;;7516:43;;;;;;736:9442;;;;;;;;;;;;;;7516:43;;736:9442;7516:43;;736:9442;;;;;7516:43;;;;;;;7578;7516;;;;;7361:84;-1:-1:-1;7464:14:46;736:9442;7329:5;736:9442;7503:3;736:9442;;;7578:43;;;-1:-1:-1;;;;;736:9442:46;;;;;;7578:43;;736:9442;;;;;;;;;;;;;;;;;;;;;;;;;7578:43;;;;;;;;;;;;736:9442;7578:43;;;;;;:::i;:::-;;;;;;-1:-1:-1;7578:43:46;;;;;;:::i;:::-;;;;;7516;;;;:::i;:::-;;;;7464;;;;;;;;;;;;;;:::i;:::-;;;;7361:84;736:9442;7386:11;736:9442;;7386:37;;;;;;736:9442;;;;;;;;;;;;;7386:37;;;;;;;;;7433:3;7386:37;;;7361:84;7433:3;;:::i;:::-;7361:84;;7386:37;;;;:::i;:::-;;;;1671:64:22;-1:-1:-1;;;;;1671:64:22;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1671:64:22;;;;736:9442:46;;;1671:64:22;;;;-1:-1:-1;;1671:64:22;;;736:9442:46;1671:64:22;:::i;:::-;;;;-1:-1:-1;1671:64:22;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;736:9442:46;;;1671:64:22;;;;;:::o;1819:584::-;1873:7;736:9442:46;;;;;;;;;;;;;;;1896:14:22:o;1869:528::-;1941:25;2939:104;;;1980:374;;2367:19;;;:::o;1980:374::-;736:9442:46;;;2196:43:22;;;;736:9442:46;;;-1:-1:-1;;;1671:64:22;;;;2196:43;;;736:9442:46;;-1:-1:-1;2196:43:22;736:9442:46;2196:43:22;736:9442:46;2196:43:22;:::i;:::-;736:9442:46;;2086:175:22;;;;1671:64;;;;;;;;;;;;;;;;;;;;;2086:175;1671:64;;;;;2312:27;1671:64;;;;;;;;2086:175;1671:64;2086:175;;;;;;;:::i;:::-;2047:232;;;;;;;:::i;:::-;1671:64;;2312:27;;;;;;;:::i;:::-;2367:19;:::o;1671:64::-;;;;;;;;;;;;;;;;;736:9442:46;;;;;;;;;;-1:-1:-1;;;;;736:9442:46;;;;;;;:::o;1449:98:25:-;736:9442:46;1495:22:25;;;;;736:9442:46;;-1:-1:-1;;;1495:22:25;;-1:-1:-1;;;;;736:9442:46;;;1495:22:25;;;736:9442:46;;;-1:-1:-1;;;736:9442:46;;;1671:64:22;1495:22:25;;;736:9442:46;;;1495:22:25;;;;;;;;;;1449:98;1527:13;;;;;;736:9442:46;;;;;;;;;;;;;;;1527:13:25;;1495:22;1527:13;;736:9442:46;1527:13:25;;;;;;;;1449:98;;:::o;1527:13::-;;;;;:::i;:::-;736:9442:46;;1449:98:25;:::o;736:9442:46:-;;;1527:13:25;736:9442:46;;;;;;;;;1527:13:25;736:9442:46;;;1495:22:25;;;;;;;:::i;:::-;;;;;;736:9442:46;;;;;;;;;;-1:-1:-1;;736:9442:46;;;;;;;:::o;3255:157:22:-;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;736:9442:46;;;;;;;;;;;;;;;;3345:30:22;;;:::i;:::-;3255:157::o;2410:424::-;2939:104;;;2445:359;;2410:424;736:9442:46;;;;2928:1:22;736:9442:46;;;2928:1:22;736:9442:46;2410:424:22:o;2445:359::-;736:9442:46;;2645:67:22;;;;;;736:9442:46;1671:64:22;;;736:9442:46;;;1671:64:22;2705:4;736:9442:46;;;1671:64:22;736:9442:46;2645:67:22;;736:9442:46;1671:64:22;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;;736:9442:46;1671:64:22;2534:196;;;1671:64;;;;;;;;;-1:-1:-1;1671:64:22;;;;;;;;-1:-1:-1;1671:64:22;;2534:196;;1671:64;;;;;;;;;;;;;2534:196;;;;;;;;;:::i;:::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;1671:64;;;;;;;;;;;;;;;;;3615:277;-1:-1:-1;;;;;736:9442:46;;;;;3678:6:22;;;3674:212;;3615:277;;:::o;3674:212::-;736:9442:46;;;;-1:-1:-1;;;;;;;;;;;736:9442:46;;;;;;;;;;;;;;;;-1:-1:-1;;;736:9442:46;;;;3705:44:22;736:9442:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:9442:46;;;;;;;;;;;;;3768:34:22;;;;;;;;736:9442:46;;;;;;;;;;;;;;;-1:-1:-1;;;736:9442:46;;;;;;;;;;;;;3821:34:22;;;;;:::i;1998:108:25:-;736:9442:46;2049:22:25;;;;;736:9442:46;;-1:-1:-1;;;2049:22:25;;-1:-1:-1;;;;;736:9442:46;;;2049:22:25;;;736:9442:46;;;-1:-1:-1;;;736:9442:46;;;1671:64:22;2049:22:25;;;736:9442:46;;;2049:22:25;;;;;;;;;;1998:108;2081:18;;;;;;736:9442:46;;;;;;;;;;;;;;;2081:18:25;;2049:22;2081:18;;736:9442:46;2081:18:25;;;;;;;;1998:108;;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;736:9442:46;;;;;;;;;;;;;;;;-1:-1:-1;;;736:9442:46;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "failed()": "ba414fa6",
    "frensArt()": "94cd95e3",
    "frensMetaHelper()": "bc48e947",
    "frensOracle()": "edc91a92",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "setUp()": "0a9254e4",
    "ssvRegistryAddress()": "25b5e62f",
    "stakingPool()": "0c56ae3b",
    "stakingPool2()": "5f583c1d",
    "stakingPoolFactory()": "a1b8adcb",
    "testApprove()": "1aeb10a6",
    "testBalanceOf()": "3df77c0e",
    "testGetPoolById()": "87496250",
    "testIsApprovedForAll()": "09d26b6c",
    "testMintingDirectly()": "796a773d",
    "testOwner()": "9e535c69",
    "testOwnerOf()": "71a29bb7",
    "testSafeTransferFrom()": "90ec5d96",
    "testTokenByIndex()": "6a7179c3",
    "testTransferFrom()": "70557298",
    "testexists()": "524ad495",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensOracle\",\"outputs\":[{\"internalType\":\"contract FrensOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssvRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool2\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBalanceOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetPoolById\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIsApprovedForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMintingDirectly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwnerOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSafeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenByIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testexists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/FrensPoolShareTest.t.sol\":\"MiscTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensArt.sol\":{\"keccak256\":\"0xef411b90bc731b36733a7f721b779ae92d3dcb154f8f228df3b8c9a3c389ac0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://709940117e6ddab0793ad919af3680d9ab8d5957890e95b084acfe1e9ac79df4\",\"dweb:/ipfs/QmaBEbeSVXdYgXNpFrh16VTaKUsXLMwbbuhxKZrmc15w6Y\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0x41602c82df593e6897ca249b50e5291466465ff00c8ba67fd068deaaafb24cd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4b911d058e419008666712dbda0247d90577e48ebe518dd98bed260dfb6e038\",\"dweb:/ipfs/QmUDKHbTTdRo2ZWDD1UVvsez2qogB3tTHKBEb2yXh9Phvp\"]},\"contracts/FrensOracle.sol\":{\"keccak256\":\"0x2d4440e69f6aa64badc0a0d09e0ecfd07274e1d36c857ee8821b5ffccdabe9a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d883ca312a007dccf5706ded83ebe0bf30c45f553e4ae07866ba9f750e72b787\",\"dweb:/ipfs/QmQUcqnLDchCVTZHYgnmCi6ntmJYMDE4xPavqDQgoibv4u\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0x0304458fd69a02780cadf1d3555e5eb1ad65d4f8794971f656d32a1d7862181f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f0d9ce3fd5578fa6d95cb4202167ae7feeef64cc5a9e4c74bcaf133d56c92bf\",\"dweb:/ipfs/QmRuWBF3irvBnVaXZcSe7qTLkifhA8n9sBko64FJDhqF9J\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x1702c3ed07f2b4edc490cc404d9ac77811d3f9670ba2e064a205b8d5fe0344d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6f1b6c242793afd7b99a6fceb72d757fa5949e5c743d5a99ad5163ce203f328\",\"dweb:/ipfs/QmQ3qvzAUWAHCsUi4BaJRvRuTjJEZibtCLF5BTDv8nDEuN\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0x5ffd9e4083f17b1daadccfb9395ade194a931f66ea12293c4f55e4a2512f3c0a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://289e3f4f2c227602f98d721c959f26c804663501651408874287633e28703996\",\"dweb:/ipfs/Qme5aj1jdB1sQtbDPvNkihu1HbJBYwvq24KHcmkZGgjPmy\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0x101cf833ffd1a9e6721dc3c74941f97bf878382f3846492cd24db82fed92977a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a084d8a3eec4c8966ad85c3fdb0ad4d3bad4ec8fe93975d482d5135d0adf2a8\",\"dweb:/ipfs/QmZhcE2YLk7AQ4o4cFqTUB6QrRW9uaaD1zH7yu9w3bypUy\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x850c63480201467919343e173645e76684e1741ae01528a7ee114407f074965c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9ed6bec1ab0b7e3926c39006170621402b1995fbd66fa25c0abe5dad41f08e9\",\"dweb:/ipfs/QmTsfWCN68CkDPeFiSBSjrNTSQJ86iQrGjsjECJvZErVv4\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168\",\"dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8\",\"dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensLogo.sol\":{\"keccak256\":\"0x212d3d6ce97efad3d5b2a2d245e86fe081bb2ac93c4578e4971d317ac06cb0c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c428e9c94d83b1484eded18c5d908f04c1fcc1937da8984313a79290858e1d84\",\"dweb:/ipfs/QmQ5CE2JXrfFx3U6pYxN7GfyBB3CaAyCXgcmke31MS4q6i\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0xc27e7f5b0d7d3759cb0d8fb16441a82a940257026947c963be6ca27a9deea886\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://518efe7e5ab2d70a314729048c79b30f8ca0c963ff71169193e79de5d8eabdb9\",\"dweb:/ipfs/QmbcXWtymVEVu81kKST5WP1opPovN3hGwoyueJ72HKrwHY\"]},\"contracts/interfaces/IFrensOracle.sol\":{\"keccak256\":\"0xdf2291434faca3e9976a42d2328a4347ced5978b29477e40eb75642185afdf67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f84266eaa6df4162f6a2be8dac55a8fd6ba4865a1dda48f4c1dd27c07c8c4316\",\"dweb:/ipfs/QmWbkZtvjrmJ61ZvnFn81UsLEoqzzah7oDkb66eEoSqJ1y\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0x39505e8b566da73b07b6f11e72e17e8fe4f195b371bc38e8d6aa7c83044a6456\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ce8f156ca2b9fef1b683581dd8f7d6ae1e54ad05613c0dbeedd56c2008f67b6\",\"dweb:/ipfs/QmeC2HKSJAGKCP1Uoir3ykuMFeSVQQLDfxQ9N87LBNNLrg\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x5be82a202873c792bcf47db774c09eac8b231d7039fa05cfe66d7bc308608eb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4e998b95a27a694fa84c46aac7b5a00ddddf9801f709b9e4507216d80fa8eca\",\"dweb:/ipfs/QmTdpt18NmPuFuUTqt1Ddpejhd4brRQ1MJT9WLwCB5kjTN\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x99fcb22e7c7a93607fc2802dc74e2d96b6f1aa251918bb27211ad33b61bb5a5c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://970a9a34229ba42eadf60cd7a40b1f46fa54d30642ffa5938230312386f66fae\",\"dweb:/ipfs/QmaKjqpMmGr11cc3rEebVH6cJ6GtfBiXnrhDY4WeNPjHrU\"]},\"contracts/interfaces/IPmFont.sol\":{\"keccak256\":\"0x84732ddb98b622bf1b3d535c35e902c342efdba881b33488e7425b31a7551f2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fec9edc00690bafd5f15deca835430f0fda3eac331aac9279a9284d4c835c19\",\"dweb:/ipfs/QmbPk3jq5NWCsxn5GEWaqNmMYU8m4uuUR54XKWayAsuJjc\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6\",\"dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x9c1fde0bb6fec8f684ee091ee181807fb74a28945e70c06761b504f79b5371a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4450e2936d49c9fe321994e4684ddfb5a684b5c530a21f7d9afba9f1ba95bf5d\",\"dweb:/ipfs/QmXgAedVuHVhjr7X3Utpi6DojqZH4oj5RR1Z4aZ98c6twc\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0x51a9513e55ce45437c8e21d18d49506cfd08b86b8f4fd76350eafc141aaa203f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba89ad2584eb3c4ce2cf2b17abbaa3b459cae2758c8db26b11249387ab244da2\",\"dweb:/ipfs/QmfPBFQSXj7HkxJhfeFuY2ewR85RoisrqWrURw5jGSjY4r\"]},\"contracts/interfaces/IWaves.sol\":{\"keccak256\":\"0xe728208d23a5bc81fde1cadb770ee72d5a37565c736536770418eb0ab0d8cdeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6b093ef06a083c68c0ed2d04deb000ac26b565e00f26a9cca521ccc7cc034b2\",\"dweb:/ipfs/QmcXdbezAsuh1KqiXWKH8Vs6aVL8V6Ag2b4nwDX7qXUEAN\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/FrensPoolShareTest.t.sol\":{\"keccak256\":\"0x860f9fcdc58edc6010a81a4a0a4da1dadcb83b2ffea74f91ddfa87cb787e8f40\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://db3e3eeb3301c44ae136c02679e10344b32ec27b5966bcf472770db304ed8ebe\",\"dweb:/ipfs/QmegN2etfcgrme8SQfRzS1W1hjmtzi1YfHbJqgkVyT4ibb\"]},\"test/foundry/TestHelper.sol\":{\"keccak256\":\"0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f\",\"dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensOracle",
          "outputs": [
            {
              "internalType": "contract FrensOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ssvRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool2",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testApprove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBalanceOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetPoolById"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIsApprovedForAll"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMintingDirectly"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwnerOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSafeTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenByIndex"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testexists"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/FrensPoolShareTest.t.sol": "MiscTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensArt.sol": {
        "keccak256": "0xef411b90bc731b36733a7f721b779ae92d3dcb154f8f228df3b8c9a3c389ac0e",
        "urls": [
          "bzz-raw://709940117e6ddab0793ad919af3680d9ab8d5957890e95b084acfe1e9ac79df4",
          "dweb:/ipfs/QmaBEbeSVXdYgXNpFrh16VTaKUsXLMwbbuhxKZrmc15w6Y"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0x41602c82df593e6897ca249b50e5291466465ff00c8ba67fd068deaaafb24cd9",
        "urls": [
          "bzz-raw://e4b911d058e419008666712dbda0247d90577e48ebe518dd98bed260dfb6e038",
          "dweb:/ipfs/QmUDKHbTTdRo2ZWDD1UVvsez2qogB3tTHKBEb2yXh9Phvp"
        ],
        "license": "MIT"
      },
      "contracts/FrensOracle.sol": {
        "keccak256": "0x2d4440e69f6aa64badc0a0d09e0ecfd07274e1d36c857ee8821b5ffccdabe9a3",
        "urls": [
          "bzz-raw://d883ca312a007dccf5706ded83ebe0bf30c45f553e4ae07866ba9f750e72b787",
          "dweb:/ipfs/QmQUcqnLDchCVTZHYgnmCi6ntmJYMDE4xPavqDQgoibv4u"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0x0304458fd69a02780cadf1d3555e5eb1ad65d4f8794971f656d32a1d7862181f",
        "urls": [
          "bzz-raw://5f0d9ce3fd5578fa6d95cb4202167ae7feeef64cc5a9e4c74bcaf133d56c92bf",
          "dweb:/ipfs/QmRuWBF3irvBnVaXZcSe7qTLkifhA8n9sBko64FJDhqF9J"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0x1702c3ed07f2b4edc490cc404d9ac77811d3f9670ba2e064a205b8d5fe0344d1",
        "urls": [
          "bzz-raw://c6f1b6c242793afd7b99a6fceb72d757fa5949e5c743d5a99ad5163ce203f328",
          "dweb:/ipfs/QmQ3qvzAUWAHCsUi4BaJRvRuTjJEZibtCLF5BTDv8nDEuN"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0x5ffd9e4083f17b1daadccfb9395ade194a931f66ea12293c4f55e4a2512f3c0a",
        "urls": [
          "bzz-raw://289e3f4f2c227602f98d721c959f26c804663501651408874287633e28703996",
          "dweb:/ipfs/Qme5aj1jdB1sQtbDPvNkihu1HbJBYwvq24KHcmkZGgjPmy"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0x101cf833ffd1a9e6721dc3c74941f97bf878382f3846492cd24db82fed92977a",
        "urls": [
          "bzz-raw://4a084d8a3eec4c8966ad85c3fdb0ad4d3bad4ec8fe93975d482d5135d0adf2a8",
          "dweb:/ipfs/QmZhcE2YLk7AQ4o4cFqTUB6QrRW9uaaD1zH7yu9w3bypUy"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x850c63480201467919343e173645e76684e1741ae01528a7ee114407f074965c",
        "urls": [
          "bzz-raw://e9ed6bec1ab0b7e3926c39006170621402b1995fbd66fa25c0abe5dad41f08e9",
          "dweb:/ipfs/QmTsfWCN68CkDPeFiSBSjrNTSQJ86iQrGjsjECJvZErVv4"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7",
        "urls": [
          "bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168",
          "dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c",
        "urls": [
          "bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8",
          "dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensLogo.sol": {
        "keccak256": "0x212d3d6ce97efad3d5b2a2d245e86fe081bb2ac93c4578e4971d317ac06cb0c1",
        "urls": [
          "bzz-raw://c428e9c94d83b1484eded18c5d908f04c1fcc1937da8984313a79290858e1d84",
          "dweb:/ipfs/QmQ5CE2JXrfFx3U6pYxN7GfyBB3CaAyCXgcmke31MS4q6i"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0xc27e7f5b0d7d3759cb0d8fb16441a82a940257026947c963be6ca27a9deea886",
        "urls": [
          "bzz-raw://518efe7e5ab2d70a314729048c79b30f8ca0c963ff71169193e79de5d8eabdb9",
          "dweb:/ipfs/QmbcXWtymVEVu81kKST5WP1opPovN3hGwoyueJ72HKrwHY"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensOracle.sol": {
        "keccak256": "0xdf2291434faca3e9976a42d2328a4347ced5978b29477e40eb75642185afdf67",
        "urls": [
          "bzz-raw://f84266eaa6df4162f6a2be8dac55a8fd6ba4865a1dda48f4c1dd27c07c8c4316",
          "dweb:/ipfs/QmWbkZtvjrmJ61ZvnFn81UsLEoqzzah7oDkb66eEoSqJ1y"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0x39505e8b566da73b07b6f11e72e17e8fe4f195b371bc38e8d6aa7c83044a6456",
        "urls": [
          "bzz-raw://5ce8f156ca2b9fef1b683581dd8f7d6ae1e54ad05613c0dbeedd56c2008f67b6",
          "dweb:/ipfs/QmeC2HKSJAGKCP1Uoir3ykuMFeSVQQLDfxQ9N87LBNNLrg"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0x5be82a202873c792bcf47db774c09eac8b231d7039fa05cfe66d7bc308608eb4",
        "urls": [
          "bzz-raw://b4e998b95a27a694fa84c46aac7b5a00ddddf9801f709b9e4507216d80fa8eca",
          "dweb:/ipfs/QmTdpt18NmPuFuUTqt1Ddpejhd4brRQ1MJT9WLwCB5kjTN"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x99fcb22e7c7a93607fc2802dc74e2d96b6f1aa251918bb27211ad33b61bb5a5c",
        "urls": [
          "bzz-raw://970a9a34229ba42eadf60cd7a40b1f46fa54d30642ffa5938230312386f66fae",
          "dweb:/ipfs/QmaKjqpMmGr11cc3rEebVH6cJ6GtfBiXnrhDY4WeNPjHrU"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPmFont.sol": {
        "keccak256": "0x84732ddb98b622bf1b3d535c35e902c342efdba881b33488e7425b31a7551f2c",
        "urls": [
          "bzz-raw://1fec9edc00690bafd5f15deca835430f0fda3eac331aac9279a9284d4c835c19",
          "dweb:/ipfs/QmbPk3jq5NWCsxn5GEWaqNmMYU8m4uuUR54XKWayAsuJjc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52",
        "urls": [
          "bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6",
          "dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x9c1fde0bb6fec8f684ee091ee181807fb74a28945e70c06761b504f79b5371a6",
        "urls": [
          "bzz-raw://4450e2936d49c9fe321994e4684ddfb5a684b5c530a21f7d9afba9f1ba95bf5d",
          "dweb:/ipfs/QmXgAedVuHVhjr7X3Utpi6DojqZH4oj5RR1Z4aZ98c6twc"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0x51a9513e55ce45437c8e21d18d49506cfd08b86b8f4fd76350eafc141aaa203f",
        "urls": [
          "bzz-raw://ba89ad2584eb3c4ce2cf2b17abbaa3b459cae2758c8db26b11249387ab244da2",
          "dweb:/ipfs/QmfPBFQSXj7HkxJhfeFuY2ewR85RoisrqWrURw5jGSjY4r"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IWaves.sol": {
        "keccak256": "0xe728208d23a5bc81fde1cadb770ee72d5a37565c736536770418eb0ab0d8cdeb",
        "urls": [
          "bzz-raw://c6b093ef06a083c68c0ed2d04deb000ac26b565e00f26a9cca521ccc7cc034b2",
          "dweb:/ipfs/QmcXdbezAsuh1KqiXWKH8Vs6aVL8V6Ag2b4nwDX7qXUEAN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a",
        "urls": [
          "bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe",
          "dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b",
        "urls": [
          "bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c",
          "dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/FrensPoolShareTest.t.sol": {
        "keccak256": "0x860f9fcdc58edc6010a81a4a0a4da1dadcb83b2ffea74f91ddfa87cb787e8f40",
        "urls": [
          "bzz-raw://db3e3eeb3301c44ae136c02679e10344b32ec27b5966bcf472770db304ed8ebe",
          "dweb:/ipfs/QmegN2etfcgrme8SQfRzS1W1hjmtzi1YfHbJqgkVyT4ibb"
        ],
        "license": "UNLICENSED"
      },
      "test/foundry/TestHelper.sol": {
        "keccak256": "0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4",
        "urls": [
          "bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f",
          "dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/FrensPoolShareTest.t.sol",
    "id": 30834,
    "exportedSymbols": {
      "AccessControl": [
        26574
      ],
      "Address": [
        28584
      ],
      "Base64": [
        29797
      ],
      "BoolGetter": [
        34562
      ],
      "Context": [
        28606
      ],
      "DSTest": [
        4818
      ],
      "ERC165": [
        28805
      ],
      "ERC721": [
        27708
      ],
      "ERC721Enumerable": [
        28196
      ],
      "FrensArt": [
        159
      ],
      "FrensMetaHelper": [
        516
      ],
      "FrensOracle": [
        601
      ],
      "FrensPoolShare": [
        864
      ],
      "FrensPoolShareTokenURI": [
        1126
      ],
      "FrensStorage": [
        1405
      ],
      "IAccessControl": [
        26647
      ],
      "IDepositContract": [
        2535
      ],
      "IENS": [
        2672
      ],
      "IERC165": [
        28817
      ],
      "IERC721": [
        27824
      ],
      "IERC721Enumerable": [
        28227
      ],
      "IERC721Metadata": [
        28254
      ],
      "IERC721Receiver": [
        27842
      ],
      "IFrensArt": [
        2682
      ],
      "IFrensLogo": [
        2690
      ],
      "IFrensMetaHelper": [
        2723
      ],
      "IFrensOracle": [
        2740
      ],
      "IFrensPoolShare": [
        2791
      ],
      "IFrensPoolShareTokenURI": [
        2801
      ],
      "IFrensStorage": [
        2888
      ],
      "IMaliciousProxyInterface": [
        34538
      ],
      "IPmFont": [
        2896
      ],
      "IReverseResolver": [
        2906
      ],
      "IStakingPool": [
        3010
      ],
      "IStakingPoolFactory": [
        3023
      ],
      "IWaves": [
        3031
      ],
      "Math": [
        29682
      ],
      "MiscTest": [
        30833
      ],
      "NftReceiver": [
        34611
      ],
      "Ownable": [
        26760
      ],
      "Script": [
        5081
      ],
      "StakingPool": [
        2409
      ],
      "StakingPoolFactory": [
        2516
      ],
      "StdStorage": [
        8109
      ],
      "Strings": [
        28781
      ],
      "Test": [
        8011
      ],
      "Vm": [
        10130
      ],
      "console": [
        18194
      ],
      "console2": [
        26258
      ],
      "stdError": [
        8081
      ],
      "stdJson": [
        5441
      ],
      "stdMath": [
        9350
      ],
      "stdStorage": [
        9211
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:10140:46",
    "nodes": [
      {
        "id": 29799,
        "nodeType": "PragmaDirective",
        "src": "39:24:46",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 29800,
        "nodeType": "ImportDirective",
        "src": "181:28:46",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 9351,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29801,
        "nodeType": "ImportDirective",
        "src": "229:38:46",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 160,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29802,
        "nodeType": "ImportDirective",
        "src": "268:45:46",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 517,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29803,
        "nodeType": "ImportDirective",
        "src": "314:52:46",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 1127,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29804,
        "nodeType": "ImportDirective",
        "src": "367:42:46",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 1406,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29805,
        "nodeType": "ImportDirective",
        "src": "410:41:46",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 2410,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29806,
        "nodeType": "ImportDirective",
        "src": "452:48:46",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 2517,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29807,
        "nodeType": "ImportDirective",
        "src": "501:44:46",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 865,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29808,
        "nodeType": "ImportDirective",
        "src": "546:60:46",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 3024,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29809,
        "nodeType": "ImportDirective",
        "src": "607:57:46",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 2536,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29810,
        "nodeType": "ImportDirective",
        "src": "665:26:46",
        "nodes": [],
        "absolutePath": "test/foundry/TestHelper.sol",
        "file": "./TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 34612,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29811,
        "nodeType": "ImportDirective",
        "src": "692:41:46",
        "nodes": [],
        "absolutePath": "contracts/FrensOracle.sol",
        "file": "../../contracts/FrensOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30834,
        "sourceUnit": 602,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30833,
        "nodeType": "ContractDefinition",
        "src": "736:9442:46",
        "nodes": [
          {
            "id": 29816,
            "nodeType": "VariableDeclaration",
            "src": "768:24:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "784:8:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$159",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 29815,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29814,
                "name": "FrensArt",
                "nameLocations": [
                  "768:8:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 159,
                "src": "768:8:46"
              },
              "referencedDeclaration": 159,
              "src": "768:8:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$159",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29819,
            "nodeType": "VariableDeclaration",
            "src": "798:38:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "821:15:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$516",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 29818,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29817,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "798:15:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 516,
                "src": "798:15:46"
              },
              "referencedDeclaration": 516,
              "src": "798:15:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$516",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29822,
            "nodeType": "VariableDeclaration",
            "src": "842:52:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "872:22:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1126",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 29821,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29820,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "842:22:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1126,
                "src": "842:22:46"
              },
              "referencedDeclaration": 1126,
              "src": "842:22:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1126",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29825,
            "nodeType": "VariableDeclaration",
            "src": "900:32:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "920:12:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$1405",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 29824,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29823,
                "name": "FrensStorage",
                "nameLocations": [
                  "900:12:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1405,
                "src": "900:12:46"
              },
              "referencedDeclaration": 1405,
              "src": "900:12:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$1405",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29828,
            "nodeType": "VariableDeclaration",
            "src": "938:44:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "964:18:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 29827,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29826,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "938:18:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2516,
                "src": "938:18:46"
              },
              "referencedDeclaration": 2516,
              "src": "938:18:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29831,
            "nodeType": "VariableDeclaration",
            "src": "988:30:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1007:11:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2409",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 29830,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29829,
                "name": "StakingPool",
                "nameLocations": [
                  "988:11:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2409,
                "src": "988:11:46"
              },
              "referencedDeclaration": 2409,
              "src": "988:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2409",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29834,
            "nodeType": "VariableDeclaration",
            "src": "1024:31:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "5f583c1d",
            "mutability": "mutable",
            "name": "stakingPool2",
            "nameLocation": "1043:12:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2409",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 29833,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29832,
                "name": "StakingPool",
                "nameLocations": [
                  "1024:11:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2409,
                "src": "1024:11:46"
              },
              "referencedDeclaration": 2409,
              "src": "1024:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2409",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29837,
            "nodeType": "VariableDeclaration",
            "src": "1061:36:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1083:14:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$864",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 29836,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29835,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1061:14:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 864,
                "src": "1061:14:46"
              },
              "referencedDeclaration": 864,
              "src": "1061:14:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29840,
            "nodeType": "VariableDeclaration",
            "src": "1103:30:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "edc91a92",
            "mutability": "mutable",
            "name": "frensOracle",
            "nameLocation": "1122:11:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensOracle_$601",
              "typeString": "contract FrensOracle"
            },
            "typeName": {
              "id": 29839,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29838,
                "name": "FrensOracle",
                "nameLocations": [
                  "1103:11:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 601,
                "src": "1103:11:46"
              },
              "referencedDeclaration": 601,
              "src": "1103:11:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensOracle_$601",
                "typeString": "contract FrensOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29846,
            "nodeType": "VariableDeclaration",
            "src": "1154:84:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1177:7:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 29841,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1154:15:46",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 29844,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1195:42:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 29843,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1187:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 29842,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1187:8:46",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 29845,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1187:51:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29849,
            "nodeType": "VariableDeclaration",
            "src": "1349:78:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "25b5e62f",
            "mutability": "mutable",
            "name": "ssvRegistryAddress",
            "nameLocation": "1364:18:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29847,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1349:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862396531353565363542356334443636646632384461384539613039353766303646313142633034",
              "id": 29848,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1385:42:46",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb9e155e65B5c4D66df28Da8E9a0957f06F11Bc04"
            },
            "visibility": "public"
          },
          {
            "id": 29852,
            "nodeType": "VariableDeclaration",
            "src": "1433:70:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "1448:10:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29850,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1433:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 29851,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1461:42:46",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 29858,
            "nodeType": "VariableDeclaration",
            "src": "1510:60:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "1527:15:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$2535",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 29854,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29853,
                "name": "IDepositContract",
                "nameLocations": [
                  "1510:16:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2535,
                "src": "1510:16:46"
              },
              "referencedDeclaration": 2535,
              "src": "1510:16:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$2535",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 29856,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 29846,
                  "src": "1562:7:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 29855,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2535,
                "src": "1545:16:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$2535_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 29857,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1545:25:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$2535",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29861,
            "nodeType": "VariableDeclaration",
            "src": "1577:69:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "1592:9:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29859,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1577:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 29860,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1604:42:46",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 29867,
            "nodeType": "VariableDeclaration",
            "src": "1652:82:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1675:5:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 29862,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1652:15:46",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 29865,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1691:42:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 29864,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1683:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 29863,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1683:8:46",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 29866,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1683:51:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29873,
            "nodeType": "VariableDeclaration",
            "src": "1740:80:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1763:3:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 29868,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1740:15:46",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 29871,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1777:42:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 29870,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1769:8:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 29869,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1769:8:46",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 29872,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1769:51:46",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29876,
            "nodeType": "VariableDeclaration",
            "src": "1827:116:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "1833:6:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 29874,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1827:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575",
              "id": 29875,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1842:101:46",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_21dcdee5842ff0f482197d6a15db2c021a867314be6d63d4bb4246bbaafd3909",
                "typeString": "literal_string hex\"ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29879,
            "nodeType": "VariableDeclaration",
            "src": "1949:100:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "1955:22:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 29877,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1949:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2",
              "id": 29878,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1980:69:46",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_15e0678a74c943adbbbd50fdf9fc6ac3c93162a3c810614e1c98914f8980a59e",
                "typeString": "literal_string hex\"0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29882,
            "nodeType": "VariableDeclaration",
            "src": "2055:215:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2061:9:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 29880,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2055:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9",
              "id": 29881,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2073:197:46",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d36984ec5b61d40bef1c5fbe334dfcbf8cb40ea4c1dee515b99a6e9ce042c56e",
                "typeString": "literal_string hex\"92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29885,
            "nodeType": "VariableDeclaration",
            "src": "2276:94:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2284:17:46",
            "scope": 30833,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 29883,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2276:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834303933313830323032303633623065363663643861656635613933346266616263663332393139653439343036343534326235663161333838396266353136",
              "id": 29884,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2304:66:46",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_29207914523896875400091520570111070750124087433100064560086113879594058380566_by_1",
                "typeString": "int_const 2920...(69 digits omitted)...0566"
              },
              "value": "0x4093180202063b0e66cd8aef5a934bfabcf32919e494064542b5f1a3889bf516"
            },
            "visibility": "internal"
          },
          {
            "id": 30126,
            "nodeType": "FunctionDefinition",
            "src": "2382:2775:46",
            "nodes": [],
            "body": {
              "id": 30125,
              "nodeType": "Block",
              "src": "2406:2751:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 29893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29888,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29825,
                      "src": "2437:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1405",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2452:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$1405_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 29890,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29889,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "2456:12:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1405,
                            "src": "2456:12:46"
                          },
                          "referencedDeclaration": 1405,
                          "src": "2456:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 29892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2452:18:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1405",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "2437:33:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$1405",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 29894,
                  "nodeType": "ExpressionStatement",
                  "src": "2437:33:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 29901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2560:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "5353565265676973747279",
                                "id": 29902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2589:13:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                                  "typeString": "literal_string \"SSVRegistry\""
                                },
                                "value": "SSVRegistry"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                                  "typeString": "literal_string \"SSVRegistry\""
                                }
                              ],
                              "expression": {
                                "id": 29899,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2543:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 29900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2547:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2543:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 29903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2543:60:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 29898,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2533:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 29904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2533:71:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 29905,
                        "name": "ssvRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29849,
                        "src": "2606:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29895,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29825,
                        "src": "2509:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1405",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 29897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2522:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1287,
                      "src": "2509:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 29906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2509:116:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29907,
                  "nodeType": "ExpressionStatement",
                  "src": "2509:116:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 29914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2720:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "4465706f736974436f6e7472616374",
                                "id": 29915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2749:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                },
                                "value": "DepositContract"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                }
                              ],
                              "expression": {
                                "id": 29912,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2703:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 29913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2707:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2703:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 29916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2703:64:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 29911,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2693:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 29917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2693:75:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 29918,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29846,
                        "src": "2770:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 29908,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29825,
                        "src": "2669:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1405",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 29910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2682:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1287,
                      "src": "2669:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 29919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:109:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29920,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:109:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 29927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2861:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "454e53",
                                "id": 29928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2890:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                },
                                "value": "ENS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                }
                              ],
                              "expression": {
                                "id": 29925,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2844:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 29926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2848:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2844:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 29929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2844:52:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 29924,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2834:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 29930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2834:63:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 29931,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29852,
                        "src": "2899:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29921,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29825,
                        "src": "2810:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1405",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 29923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2823:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1287,
                      "src": "2810:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 29932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2810:100:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29933,
                  "nodeType": "ExpressionStatement",
                  "src": "2810:100:46"
                },
                {
                  "expression": {
                    "id": 29940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29934,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29837,
                      "src": "2946:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29938,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29825,
                          "src": "2982:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 29937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2963:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$2888_$returns$_t_contract$_FrensPoolShare_$864_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 29936,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29935,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "2967:14:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 864,
                            "src": "2967:14:46"
                          },
                          "referencedDeclaration": 864,
                          "src": "2967:14:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 29939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2963:32:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "2946:49:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 29941,
                  "nodeType": "ExpressionStatement",
                  "src": "2946:49:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 29948,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3086:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265",
                                "id": 29949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3106:16:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                },
                                "value": "FrensPoolShare"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                }
                              ],
                              "expression": {
                                "id": 29946,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3069:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 29947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3073:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3069:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 29950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3069:54:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 29945,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3059:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 29951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3059:65:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29954,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29837,
                            "src": "3134:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 29953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3126:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29952,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3126:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3126:23:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29942,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29825,
                        "src": "3035:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1405",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 29944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3048:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1287,
                      "src": "3035:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 29956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:115:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29957,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:115:46"
                },
                {
                  "expression": {
                    "id": 29964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29958,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29828,
                      "src": "3181:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29962,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29825,
                          "src": "3225:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 29961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3202:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$2888_$returns$_t_contract$_StakingPoolFactory_$2516_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 29960,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29959,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "3206:18:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2516,
                            "src": "3206:18:46"
                          },
                          "referencedDeclaration": 2516,
                          "src": "3206:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 29963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3202:36:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "3181:57:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 29965,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:57:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 29972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3324:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "5374616b696e67506f6f6c466163746f7279",
                                "id": 29973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3344:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                },
                                "value": "StakingPoolFactory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                }
                              ],
                              "expression": {
                                "id": 29970,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3307:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 29971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3311:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3307:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 29974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3307:58:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 29969,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3297:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 29975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3297:69:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29978,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29828,
                            "src": "3376:18:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 29977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3368:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29976,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3368:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3368:27:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29966,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29825,
                        "src": "3273:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1405",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 29968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3286:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1287,
                      "src": "3273:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 29980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3273:123:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29981,
                  "nodeType": "ExpressionStatement",
                  "src": "3273:123:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783030",
                            "id": 29987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3437:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 29986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3429:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 29985,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3429:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3429:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29991,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29828,
                            "src": "3453:18:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 29990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3445:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29989,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3445:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3445:27:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29982,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "3404:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 29984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3419:9:46",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26425,
                      "src": "3404:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 29993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3404:69:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29994,
                  "nodeType": "ExpressionStatement",
                  "src": "3404:69:46"
                },
                {
                  "expression": {
                    "id": 30001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29995,
                      "name": "frensOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29840,
                      "src": "3508:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$601",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29999,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29825,
                          "src": "3538:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 29998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3522:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$2888_$returns$_t_contract$_FrensOracle_$601_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensOracle)"
                        },
                        "typeName": {
                          "id": 29997,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29996,
                            "name": "FrensOracle",
                            "nameLocations": [
                              "3526:11:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 601,
                            "src": "3526:11:46"
                          },
                          "referencedDeclaration": 601,
                          "src": "3526:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensOracle_$601",
                            "typeString": "contract FrensOracle"
                          }
                        }
                      },
                      "id": 30000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3522:29:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$601",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "src": "3508:43:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensOracle_$601",
                      "typeString": "contract FrensOracle"
                    }
                  },
                  "id": 30002,
                  "nodeType": "ExpressionStatement",
                  "src": "3508:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3641:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734f7261636c65",
                                "id": 30010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3661:13:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                },
                                "value": "FrensOracle"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                }
                              ],
                              "expression": {
                                "id": 30007,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3624:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3628:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3624:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3624:51:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30006,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3614:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3614:62:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30015,
                            "name": "frensOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29840,
                            "src": "3686:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensOracle_$601",
                              "typeString": "contract FrensOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensOracle_$601",
                              "typeString": "contract FrensOracle"
                            }
                          ],
                          "id": 30014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3678:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30013,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3678:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3678:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30003,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29825,
                        "src": "3590:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1405",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3603:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1287,
                      "src": "3590:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3590:109:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30018,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:109:46"
                },
                {
                  "expression": {
                    "id": 30025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30019,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29819,
                      "src": "3733:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$516",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30023,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29825,
                          "src": "3771:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3751:19:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$2888_$returns$_t_contract$_FrensMetaHelper_$516_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 30021,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30020,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "3755:15:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 516,
                            "src": "3755:15:46"
                          },
                          "referencedDeclaration": 516,
                          "src": "3755:15:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$516",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 30024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3751:33:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$516",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "3733:51:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$516",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 30026,
                  "nodeType": "ExpressionStatement",
                  "src": "3733:51:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3873:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734d65746148656c706572",
                                "id": 30034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3893:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                },
                                "value": "FrensMetaHelper"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                }
                              ],
                              "expression": {
                                "id": 30031,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3856:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3860:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3856:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3856:55:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30030,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3846:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3846:66:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30039,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29819,
                            "src": "3922:15:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$516",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$516",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 30038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3914:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30037,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3914:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3914:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30027,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29825,
                        "src": "3822:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1405",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3835:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1287,
                      "src": "3822:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3822:117:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30042,
                  "nodeType": "ExpressionStatement",
                  "src": "3822:117:46"
                },
                {
                  "expression": {
                    "id": 30049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30043,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29822,
                      "src": "3971:22:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1126",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30047,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29825,
                          "src": "4023:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3996:26:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$2888_$returns$_t_contract$_FrensPoolShareTokenURI_$1126_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 30045,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30044,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "4000:22:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1126,
                            "src": "4000:22:46"
                          },
                          "referencedDeclaration": 1126,
                          "src": "4000:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1126",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 30048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3996:40:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1126",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "3971:65:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1126",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 30050,
                  "nodeType": "ExpressionStatement",
                  "src": "3971:65:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4123:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                                "id": 30058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4143:24:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                },
                                "value": "FrensPoolShareTokenURI"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                }
                              ],
                              "expression": {
                                "id": 30055,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4106:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4110:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4106:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4106:62:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30054,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4096:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4096:73:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30063,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29822,
                            "src": "4179:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1126",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1126",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 30062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4171:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30061,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4171:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4171:31:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30051,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29825,
                        "src": "4072:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1405",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4085:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1287,
                      "src": "4072:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:131:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30066,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:131:46"
                },
                {
                  "expression": {
                    "id": 30073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30067,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29816,
                      "src": "4229:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30071,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29825,
                          "src": "4253:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1405",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4240:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$2888_$returns$_t_contract$_FrensArt_$159_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 30069,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30068,
                            "name": "FrensArt",
                            "nameLocations": [
                              "4244:8:46"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 159,
                            "src": "4244:8:46"
                          },
                          "referencedDeclaration": 159,
                          "src": "4244:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$159",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 30072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4240:26:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "4229:37:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$159",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 30074,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:37:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 30081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4348:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734f7261636c65",
                                "id": 30082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4368:13:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                },
                                "value": "FrensOracle"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                }
                              ],
                              "expression": {
                                "id": 30079,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4331:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 30080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4335:12:46",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4331:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 30083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4331:51:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 30078,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4321:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 30084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4321:62:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30087,
                            "name": "frensOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29840,
                            "src": "4393:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensOracle_$601",
                              "typeString": "contract FrensOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensOracle_$601",
                              "typeString": "contract FrensOracle"
                            }
                          ],
                          "id": 30086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4385:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30085,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4385:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4385:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30075,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29825,
                        "src": "4297:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1405",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4310:10:46",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1287,
                      "src": "4297:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 30089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4297:109:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30090,
                  "nodeType": "ExpressionStatement",
                  "src": "4297:109:46"
                },
                {
                  "assignments": [
                    30092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30092,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "4514:4:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30125,
                      "src": "4506:12:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30091,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4506:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30098,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30095,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29861,
                        "src": "4548:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4559:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30093,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29828,
                        "src": "4522:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 30094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4541:6:46",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2515,
                      "src": "4522:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4522:79:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4505:96:46"
                },
                {
                  "expression": {
                    "id": 30106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30099,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29831,
                      "src": "4641:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2409",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30103,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30092,
                              "src": "4675:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4667:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30101,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4667:8:46",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4667:13:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30100,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2409,
                        "src": "4655:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2409_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4655:26:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2409",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "4641:40:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2409",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30107,
                  "nodeType": "ExpressionStatement",
                  "src": "4641:40:46"
                },
                {
                  "assignments": [
                    30109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30109,
                      "mutability": "mutable",
                      "name": "pool2",
                      "nameLocation": "4868:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30125,
                      "src": "4860:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30108,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4860:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30115,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30112,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29861,
                        "src": "4903:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4914:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30110,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29828,
                        "src": "4877:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2516",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 30111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4896:6:46",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2515,
                      "src": "4877:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4877:79:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4859:97:46"
                },
                {
                  "expression": {
                    "id": 30123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30116,
                      "name": "stakingPool2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29834,
                      "src": "4996:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2409",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30120,
                              "name": "pool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30109,
                              "src": "5031:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5023:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30118,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5023:8:46",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5023:14:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30117,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2409,
                        "src": "5011:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2409_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5011:27:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2409",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "4996:42:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2409",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30124,
                  "nodeType": "ExpressionStatement",
                  "src": "4996:42:46"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2391:5:46",
            "parameters": {
              "id": 29886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2396:2:46"
            },
            "returnParameters": {
              "id": 29887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2406:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30149,
            "nodeType": "FunctionDefinition",
            "src": "5163:146:46",
            "nodes": [],
            "body": {
              "id": 30148,
              "nodeType": "Block",
              "src": "5201:108:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30130,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "5214:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30129,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5547,
                        5568,
                        5592,
                        5616
                      ],
                      "referencedDeclaration": 5547,
                      "src": "5209:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5209:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30132,
                  "nodeType": "ExpressionStatement",
                  "src": "5209:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "496e76616c696420506f6f6c",
                        "id": 30136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5244:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37ca368ac1df11530b6ea17ba67c80aaedb32310c29cd8124ebb0d882cd3866a",
                          "typeString": "literal_string \"Invalid Pool\""
                        },
                        "value": "Invalid Pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37ca368ac1df11530b6ea17ba67c80aaedb32310c29cd8124ebb0d882cd3866a",
                          "typeString": "literal_string \"Invalid Pool\""
                        }
                      ],
                      "expression": {
                        "id": 30133,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4849,
                        "src": "5228:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10130",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5231:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9616,
                      "src": "5228:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5228:31:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30138,
                  "nodeType": "ExpressionStatement",
                  "src": "5228:31:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30144,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29867,
                            "src": "5295:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 30143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5287:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30142,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5287:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5287:14:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30139,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "5267:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5282:4:46",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 687,
                      "src": "5267:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5267:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30147,
                  "nodeType": "ExpressionStatement",
                  "src": "5267:35:46"
                }
              ]
            },
            "functionSelector": "796a773d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintingDirectly",
            "nameLocation": "5172:19:46",
            "parameters": {
              "id": 30127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5191:2:46"
            },
            "returnParameters": {
              "id": 30128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5201:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30226,
            "nodeType": "FunctionDefinition",
            "src": "5315:589:46",
            "nodes": [],
            "body": {
              "id": 30225,
              "nodeType": "Block",
              "src": "5345:559:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30153,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "5363:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30152,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5637,
                        5658,
                        5682,
                        5706
                      ],
                      "referencedDeclaration": 5637,
                      "src": "5353:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30155,
                  "nodeType": "ExpressionStatement",
                  "src": "5353:16:46"
                },
                {
                  "assignments": [
                    30157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30157,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "5382:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30225,
                      "src": "5377:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30156,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5377:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30159,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 30158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5386:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5377:10:46"
                },
                {
                  "body": {
                    "id": 30223,
                    "nodeType": "Block",
                    "src": "5411:487:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30163,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29831,
                                "src": "5496:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2409",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5508:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1657,
                              "src": "5496:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5529:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "5496:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5496:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30169,
                        "nodeType": "ExpressionStatement",
                        "src": "5496:37:46"
                      },
                      {
                        "assignments": [
                          30171
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30171,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "5550:2:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30223,
                            "src": "5545:7:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30170,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5545:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30179,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30174,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29867,
                              "src": "5590:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30175,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30157,
                                "src": "5597:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 30176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5599:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5597:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30172,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29837,
                              "src": "5555:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5570:19:46",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27920,
                            "src": "5555:34:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5555:46:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5545:56:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30181,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30171,
                                "src": "5622:2:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30182,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30157,
                                "src": "5628:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5622:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30180,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3301,
                              3322
                            ],
                            "referencedDeclaration": 3301,
                            "src": "5611:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5611:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30185,
                        "nodeType": "ExpressionStatement",
                        "src": "5611:20:46"
                      },
                      {
                        "assignments": [
                          30187
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30187,
                            "mutability": "mutable",
                            "name": "shouldBeZero",
                            "nameLocation": "5650:12:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30223,
                            "src": "5642:20:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30186,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5642:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30192,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30190,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30157,
                              "src": "5692:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30188,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29837,
                              "src": "5665:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5680:11:46",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27038,
                            "src": "5665:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5665:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5642:52:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 30196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5721:1:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 30195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5713:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30194,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5713:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5713:10:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30198,
                              "name": "shouldBeZero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30187,
                              "src": "5725:12:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30193,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6199,
                              6224,
                              6237,
                              6253,
                              6295,
                              6337,
                              6379,
                              6416,
                              6453,
                              6490,
                              3352,
                              3377,
                              3407,
                              3432,
                              3491,
                              3516,
                              3546,
                              3571,
                              4671,
                              4706
                            ],
                            "referencedDeclaration": 3352,
                            "src": "5704:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5704:34:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30200,
                        "nodeType": "ExpressionStatement",
                        "src": "5704:34:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30204,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29873,
                              "src": "5772:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30205,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30157,
                              "src": "5777:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30201,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29837,
                              "src": "5749:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5764:7:46",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27020,
                            "src": "5749:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 30206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5749:30:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30207,
                        "nodeType": "ExpressionStatement",
                        "src": "5749:30:46"
                      },
                      {
                        "assignments": [
                          30209
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30209,
                            "mutability": "mutable",
                            "name": "shouldBeBob",
                            "nameLocation": "5797:11:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30223,
                            "src": "5789:19:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30208,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5789:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30214,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30212,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30157,
                              "src": "5838:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30210,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29837,
                              "src": "5811:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5826:11:46",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27038,
                            "src": "5811:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5811:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5789:51:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30216,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29873,
                              "src": "5859:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30217,
                              "name": "shouldBeBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30209,
                              "src": "5864:11:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30215,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6199,
                              6224,
                              6237,
                              6253,
                              6295,
                              6337,
                              6379,
                              6416,
                              6453,
                              6490,
                              3352,
                              3377,
                              3407,
                              3432,
                              3491,
                              3516,
                              3546,
                              3571,
                              4671,
                              4706
                            ],
                            "referencedDeclaration": 3352,
                            "src": "5850:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5850:26:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30219,
                        "nodeType": "ExpressionStatement",
                        "src": "5850:26:46"
                      },
                      {
                        "expression": {
                          "id": 30221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "5886:3:46",
                          "subExpression": {
                            "id": 30220,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30157,
                            "src": "5886:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30222,
                        "nodeType": "ExpressionStatement",
                        "src": "5886:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30160,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30157,
                      "src": "5402:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5406:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "5402:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30224,
                  "nodeType": "WhileStatement",
                  "src": "5395:503:46"
                }
              ]
            },
            "functionSelector": "1aeb10a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testApprove",
            "nameLocation": "5324:11:46",
            "parameters": {
              "id": 30150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5335:2:46"
            },
            "returnParameters": {
              "id": 30151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5345:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30281,
            "nodeType": "FunctionDefinition",
            "src": "5910:369:46",
            "nodes": [],
            "body": {
              "id": 30280,
              "nodeType": "Block",
              "src": "5942:337:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30230,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "5960:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30229,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5637,
                        5658,
                        5682,
                        5706
                      ],
                      "referencedDeclaration": 5637,
                      "src": "5950:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5950:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30232,
                  "nodeType": "ExpressionStatement",
                  "src": "5950:16:46"
                },
                {
                  "assignments": [
                    30234
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30234,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "5979:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30280,
                      "src": "5974:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30233,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5974:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30236,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 30235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5983:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5974:10:46"
                },
                {
                  "body": {
                    "id": 30278,
                    "nodeType": "Block",
                    "src": "6008:265:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30240,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29831,
                                "src": "6018:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2409",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6030:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1657,
                              "src": "6018:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6051:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6018:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6018:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30246,
                        "nodeType": "ExpressionStatement",
                        "src": "6018:37:46"
                      },
                      {
                        "assignments": [
                          30248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30248,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6070:2:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30278,
                            "src": "6065:7:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30247,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6065:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30256,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30251,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29867,
                              "src": "6110:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30252,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30234,
                                "src": "6117:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 30253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6119:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6117:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30249,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29837,
                              "src": "6075:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6090:19:46",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27920,
                            "src": "6075:34:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6075:46:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6065:56:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30258,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30248,
                                "src": "6142:2:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30259,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30234,
                                "src": "6148:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6142:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30257,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3301,
                              3322
                            ],
                            "referencedDeclaration": 3301,
                            "src": "6131:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6131:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30262,
                        "nodeType": "ExpressionStatement",
                        "src": "6131:20:46"
                      },
                      {
                        "assignments": [
                          30264
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30264,
                            "mutability": "mutable",
                            "name": "balanceOfAlice",
                            "nameLocation": "6166:14:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30278,
                            "src": "6161:19:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30263,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6161:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30269,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30267,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29867,
                              "src": "6208:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 30265,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29837,
                              "src": "6183:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6198:9:46",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26881,
                            "src": "6183:24:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 30268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6183:31:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6161:53:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30271,
                              "name": "balanceOfAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30264,
                              "src": "6233:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 30272,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30234,
                              "src": "6249:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30270,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6199,
                              6224,
                              6237,
                              6253,
                              6295,
                              6337,
                              6379,
                              6416,
                              6453,
                              6490,
                              3352,
                              3377,
                              3407,
                              3432,
                              3491,
                              3516,
                              3546,
                              3571,
                              4671,
                              4706
                            ],
                            "referencedDeclaration": 3546,
                            "src": "6224:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 30273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6224:27:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30274,
                        "nodeType": "ExpressionStatement",
                        "src": "6224:27:46"
                      },
                      {
                        "expression": {
                          "id": 30276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6261:3:46",
                          "subExpression": {
                            "id": 30275,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30234,
                            "src": "6261:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30277,
                        "nodeType": "ExpressionStatement",
                        "src": "6261:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30237,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30234,
                      "src": "5999:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6003:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "5999:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30279,
                  "nodeType": "WhileStatement",
                  "src": "5992:281:46"
                }
              ]
            },
            "functionSelector": "3df77c0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBalanceOf",
            "nameLocation": "5919:13:46",
            "parameters": {
              "id": 30227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5932:2:46"
            },
            "returnParameters": {
              "id": 30228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5942:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30322,
            "nodeType": "FunctionDefinition",
            "src": "6285:278:46",
            "nodes": [],
            "body": {
              "id": 30321,
              "nodeType": "Block",
              "src": "6314:249:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30285,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "6332:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30284,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5637,
                        5658,
                        5682,
                        5706
                      ],
                      "referencedDeclaration": 5637,
                      "src": "6322:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6322:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30287,
                  "nodeType": "ExpressionStatement",
                  "src": "6322:16:46"
                },
                {
                  "assignments": [
                    30289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30289,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6358:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30321,
                      "src": "6353:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30288,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6353:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30291,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 30290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6362:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6353:10:46"
                },
                {
                  "body": {
                    "id": 30319,
                    "nodeType": "Block",
                    "src": "6388:162:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30298,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30289,
                                  "src": "6432:1:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30296,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29837,
                                  "src": "6410:14:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 30297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6425:6:46",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 699,
                                "src": "6410:21:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 30299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6410:24:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30295,
                            "name": "assertFalse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6149,
                              6163
                            ],
                            "referencedDeclaration": 6149,
                            "src": "6398:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6398:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30301,
                        "nodeType": "ExpressionStatement",
                        "src": "6398:37:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30302,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29831,
                                "src": "6445:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2409",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6457:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1657,
                              "src": "6445:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6478:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6445:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6445:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30308,
                        "nodeType": "ExpressionStatement",
                        "src": "6445:37:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30312,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30289,
                                  "src": "6525:1:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30310,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29837,
                                  "src": "6503:14:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 30311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6518:6:46",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 699,
                                "src": "6503:21:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 30313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6503:24:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30309,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3301,
                              3322
                            ],
                            "referencedDeclaration": 3301,
                            "src": "6492:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6492:36:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30315,
                        "nodeType": "ExpressionStatement",
                        "src": "6492:36:46"
                      },
                      {
                        "expression": {
                          "id": 30317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6538:3:46",
                          "subExpression": {
                            "id": 30316,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30289,
                            "src": "6538:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30318,
                        "nodeType": "ExpressionStatement",
                        "src": "6538:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30292,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30289,
                      "src": "6379:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6383:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6379:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30320,
                  "nodeType": "WhileStatement",
                  "src": "6372:178:46"
                }
              ]
            },
            "functionSelector": "524ad495",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testexists",
            "nameLocation": "6294:10:46",
            "parameters": {
              "id": 30282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6304:2:46"
            },
            "returnParameters": {
              "id": 30283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6314:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30414,
            "nodeType": "FunctionDefinition",
            "src": "6569:697:46",
            "nodes": [],
            "body": {
              "id": 30413,
              "nodeType": "Block",
              "src": "6603:663:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30326,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "6621:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30325,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5637,
                        5658,
                        5682,
                        5706
                      ],
                      "referencedDeclaration": 5637,
                      "src": "6611:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6611:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30328,
                  "nodeType": "ExpressionStatement",
                  "src": "6611:16:46"
                },
                {
                  "assignments": [
                    30330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30330,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6640:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30413,
                      "src": "6635:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30329,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6635:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30332,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 30331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6644:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6635:10:46"
                },
                {
                  "body": {
                    "id": 30411,
                    "nodeType": "Block",
                    "src": "6669:591:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30336,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29831,
                                "src": "6679:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2409",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6691:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1657,
                              "src": "6679:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6712:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6679:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6679:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30342,
                        "nodeType": "ExpressionStatement",
                        "src": "6679:37:46"
                      },
                      {
                        "assignments": [
                          30344
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30344,
                            "mutability": "mutable",
                            "name": "sbStakingPool",
                            "nameLocation": "6734:13:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30411,
                            "src": "6726:21:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30343,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6726:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30349,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30347,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30330,
                              "src": "6777:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30345,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29837,
                              "src": "6750:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6765:11:46",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 712,
                            "src": "6750:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6750:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6726:53:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30353,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29831,
                                  "src": "6806:11:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2409",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2409",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6798:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30351,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6798:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6798:20:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30355,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30344,
                              "src": "6820:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30350,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6199,
                              6224,
                              6237,
                              6253,
                              6295,
                              6337,
                              6379,
                              6416,
                              6453,
                              6490,
                              3352,
                              3377,
                              3407,
                              3432,
                              3491,
                              3516,
                              3546,
                              3571,
                              4671,
                              4706
                            ],
                            "referencedDeclaration": 3352,
                            "src": "6789:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6789:45:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30357,
                        "nodeType": "ExpressionStatement",
                        "src": "6789:45:46"
                      },
                      {
                        "expression": {
                          "id": 30359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6844:3:46",
                          "subExpression": {
                            "id": 30358,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30330,
                            "src": "6844:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30360,
                        "nodeType": "ExpressionStatement",
                        "src": "6844:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30361,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29834,
                                "src": "6857:12:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2409",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6870:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1657,
                              "src": "6857:26:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6891:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6857:36:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6857:38:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30367,
                        "nodeType": "ExpressionStatement",
                        "src": "6857:38:46"
                      },
                      {
                        "assignments": [
                          30369
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30369,
                            "mutability": "mutable",
                            "name": "sbStakingPool2",
                            "nameLocation": "6913:14:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30411,
                            "src": "6905:22:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30368,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6905:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30374,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30372,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30330,
                              "src": "6957:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30370,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29837,
                              "src": "6930:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6945:11:46",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 712,
                            "src": "6930:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6930:29:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6905:54:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30378,
                                  "name": "stakingPool2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29834,
                                  "src": "6986:12:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2409",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2409",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6978:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30376,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6978:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6978:21:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30380,
                              "name": "sbStakingPool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30369,
                              "src": "7001:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30375,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6199,
                              6224,
                              6237,
                              6253,
                              6295,
                              6337,
                              6379,
                              6416,
                              6453,
                              6490,
                              3352,
                              3377,
                              3407,
                              3432,
                              3491,
                              3516,
                              3546,
                              3571,
                              4671,
                              4706
                            ],
                            "referencedDeclaration": 3352,
                            "src": "6969:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6969:47:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30382,
                        "nodeType": "ExpressionStatement",
                        "src": "6969:47:46"
                      },
                      {
                        "expression": {
                          "id": 30384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7026:3:46",
                          "subExpression": {
                            "id": 30383,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30330,
                            "src": "7026:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30385,
                        "nodeType": "ExpressionStatement",
                        "src": "7026:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30386,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29831,
                                "src": "7039:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2409",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7051:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1657,
                              "src": "7039:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7072:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7039:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7039:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30392,
                        "nodeType": "ExpressionStatement",
                        "src": "7039:37:46"
                      },
                      {
                        "expression": {
                          "id": 30398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 30393,
                            "name": "sbStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30344,
                            "src": "7137:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 30396,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30330,
                                "src": "7180:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30394,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29837,
                                "src": "7153:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 30395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7168:11:46",
                              "memberName": "getPoolById",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 712,
                              "src": "7153:26:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 30397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7153:29:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7137:45:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30399,
                        "nodeType": "ExpressionStatement",
                        "src": "7137:45:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30403,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29831,
                                  "src": "7209:11:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2409",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2409",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7201:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30401,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7201:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7201:20:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30405,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30344,
                              "src": "7223:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30400,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6199,
                              6224,
                              6237,
                              6253,
                              6295,
                              6337,
                              6379,
                              6416,
                              6453,
                              6490,
                              3352,
                              3377,
                              3407,
                              3432,
                              3491,
                              3516,
                              3546,
                              3571,
                              4671,
                              4706
                            ],
                            "referencedDeclaration": 3352,
                            "src": "7192:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7192:45:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30407,
                        "nodeType": "ExpressionStatement",
                        "src": "7192:45:46"
                      },
                      {
                        "expression": {
                          "id": 30409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7247:3:46",
                          "subExpression": {
                            "id": 30408,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30330,
                            "src": "7247:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30410,
                        "nodeType": "ExpressionStatement",
                        "src": "7247:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30333,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30330,
                      "src": "6660:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6664:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6660:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30412,
                  "nodeType": "WhileStatement",
                  "src": "6653:607:46"
                }
              ]
            },
            "functionSelector": "87496250",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetPoolById",
            "nameLocation": "6578:15:46",
            "parameters": {
              "id": 30323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6593:2:46"
            },
            "returnParameters": {
              "id": 30324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6603:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30464,
            "nodeType": "FunctionDefinition",
            "src": "7272:357:46",
            "nodes": [],
            "body": {
              "id": 30463,
              "nodeType": "Block",
              "src": "7311:318:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30418,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "7329:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30417,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5637,
                        5658,
                        5682,
                        5706
                      ],
                      "referencedDeclaration": 5637,
                      "src": "7319:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7319:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30420,
                  "nodeType": "ExpressionStatement",
                  "src": "7319:16:46"
                },
                {
                  "assignments": [
                    30422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30422,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "7348:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30463,
                      "src": "7343:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30421,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7343:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30424,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 30423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7352:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7343:10:46"
                },
                {
                  "body": {
                    "id": 30438,
                    "nodeType": "Block",
                    "src": "7376:69:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30428,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29831,
                                "src": "7386:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2409",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7398:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1657,
                              "src": "7386:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7419:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7386:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7386:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30434,
                        "nodeType": "ExpressionStatement",
                        "src": "7386:37:46"
                      },
                      {
                        "expression": {
                          "id": 30436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7433:3:46",
                          "subExpression": {
                            "id": 30435,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30422,
                            "src": "7433:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30437,
                        "nodeType": "ExpressionStatement",
                        "src": "7433:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30425,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30422,
                      "src": "7368:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3634",
                      "id": 30426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7372:2:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_64_by_1",
                        "typeString": "int_const 64"
                      },
                      "value": "64"
                    },
                    "src": "7368:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30439,
                  "nodeType": "WhileStatement",
                  "src": "7361:84:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30443,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29867,
                            "src": "7496:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 30444,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29873,
                            "src": "7503:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 30441,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29837,
                            "src": "7464:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7479:16:46",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27073,
                          "src": "7464:31:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 30445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7464:43:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30440,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6149,
                        6163
                      ],
                      "referencedDeclaration": 6149,
                      "src": "7452:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 30446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7452:56:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30447,
                  "nodeType": "ExpressionStatement",
                  "src": "7452:56:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30451,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "7549:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 30452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7554:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30448,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "7516:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7531:17:46",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27055,
                      "src": "7516:32:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 30453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7516:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30454,
                  "nodeType": "ExpressionStatement",
                  "src": "7516:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30458,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29867,
                            "src": "7610:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 30459,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29873,
                            "src": "7617:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 30456,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29837,
                            "src": "7578:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7593:16:46",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27073,
                          "src": "7578:31:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 30460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7578:43:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30455,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3301,
                        3322
                      ],
                      "referencedDeclaration": 3301,
                      "src": "7567:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 30461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7567:55:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30462,
                  "nodeType": "ExpressionStatement",
                  "src": "7567:55:46"
                }
              ]
            },
            "functionSelector": "09d26b6c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIsApprovedForAll",
            "nameLocation": "7281:20:46",
            "parameters": {
              "id": 30415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7301:2:46"
            },
            "returnParameters": {
              "id": 30416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7311:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30514,
            "nodeType": "FunctionDefinition",
            "src": "7635:330:46",
            "nodes": [],
            "body": {
              "id": 30513,
              "nodeType": "Block",
              "src": "7663:302:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30470,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7688:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$30833",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$30833",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7680:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7680:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7680:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30472,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29837,
                            "src": "7695:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7710:5:46",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26688,
                          "src": "7695:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 30474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7695:22:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30467,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6199,
                        6224,
                        6237,
                        6253,
                        6295,
                        6337,
                        6379,
                        6416,
                        6453,
                        6490,
                        3352,
                        3377,
                        3407,
                        3432,
                        3491,
                        3516,
                        3546,
                        3571,
                        4671,
                        4706
                      ],
                      "referencedDeclaration": 3352,
                      "src": "7671:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7671:47:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30476,
                  "nodeType": "ExpressionStatement",
                  "src": "7671:47:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30478,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "7731:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30477,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5547,
                        5568,
                        5592,
                        5616
                      ],
                      "referencedDeclaration": 5547,
                      "src": "7726:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7726:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30480,
                  "nodeType": "ExpressionStatement",
                  "src": "7726:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 30484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7761:34:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 30481,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4849,
                        "src": "7745:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10130",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7748:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9616,
                      "src": "7745:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7745:51:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30486,
                  "nodeType": "ExpressionStatement",
                  "src": "7745:51:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30490,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "7837:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30487,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "7804:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7819:17:46",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26739,
                      "src": "7804:32:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7804:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30492,
                  "nodeType": "ExpressionStatement",
                  "src": "7804:37:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30496,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7862:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$30833",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$30833",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7854:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30494,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7854:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7854:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30493,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5547,
                        5568,
                        5592,
                        5616
                      ],
                      "referencedDeclaration": 5547,
                      "src": "7849:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7849:19:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30499,
                  "nodeType": "ExpressionStatement",
                  "src": "7849:19:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30503,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "7909:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 30500,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "7876:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7891:17:46",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26739,
                      "src": "7876:32:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7876:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30505,
                  "nodeType": "ExpressionStatement",
                  "src": "7876:37:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30507,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "7930:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30508,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29837,
                            "src": "7935:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7950:5:46",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26688,
                          "src": "7935:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 30510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7935:22:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30506,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6199,
                        6224,
                        6237,
                        6253,
                        6295,
                        6337,
                        6379,
                        6416,
                        6453,
                        6490,
                        3352,
                        3377,
                        3407,
                        3432,
                        3491,
                        3516,
                        3546,
                        3571,
                        4671,
                        4706
                      ],
                      "referencedDeclaration": 3352,
                      "src": "7921:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7921:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30512,
                  "nodeType": "ExpressionStatement",
                  "src": "7921:37:46"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "7644:9:46",
            "parameters": {
              "id": 30465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7653:2:46"
            },
            "returnParameters": {
              "id": 30466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7663:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30605,
            "nodeType": "FunctionDefinition",
            "src": "7971:620:46",
            "nodes": [],
            "body": {
              "id": 30604,
              "nodeType": "Block",
              "src": "8001:590:46",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30518,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "8014:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30604,
                      "src": "8009:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30517,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8009:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30520,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 30519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8018:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8009:10:46"
                },
                {
                  "body": {
                    "id": 30602,
                    "nodeType": "Block",
                    "src": "8043:542:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30525,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29867,
                              "src": "8058:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30524,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5547,
                              5568,
                              5592,
                              5616
                            ],
                            "referencedDeclaration": 5547,
                            "src": "8053:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8053:11:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30527,
                        "nodeType": "ExpressionStatement",
                        "src": "8053:11:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30528,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29831,
                                "src": "8074:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2409",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8086:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1657,
                              "src": "8074:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8107:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8074:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8074:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30534,
                        "nodeType": "ExpressionStatement",
                        "src": "8074:37:46"
                      },
                      {
                        "assignments": [
                          30536
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30536,
                            "mutability": "mutable",
                            "name": "sbAlice",
                            "nameLocation": "8129:7:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30602,
                            "src": "8121:15:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30535,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8121:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30541,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30539,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30518,
                              "src": "8162:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30537,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29837,
                              "src": "8139:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8154:7:46",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26909,
                            "src": "8139:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8139:25:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8121:43:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30543,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29867,
                              "src": "8183:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30544,
                              "name": "sbAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30536,
                              "src": "8190:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30542,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6199,
                              6224,
                              6237,
                              6253,
                              6295,
                              6337,
                              6379,
                              6416,
                              6453,
                              6490,
                              3352,
                              3377,
                              3407,
                              3432,
                              3491,
                              3516,
                              3546,
                              3571,
                              4671,
                              4706
                            ],
                            "referencedDeclaration": 3352,
                            "src": "8174:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8174:24:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30546,
                        "nodeType": "ExpressionStatement",
                        "src": "8174:24:46"
                      },
                      {
                        "expression": {
                          "id": 30548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8208:3:46",
                          "subExpression": {
                            "id": 30547,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30518,
                            "src": "8208:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30549,
                        "nodeType": "ExpressionStatement",
                        "src": "8208:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30551,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29873,
                              "src": "8226:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30550,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5547,
                              5568,
                              5592,
                              5616
                            ],
                            "referencedDeclaration": 5547,
                            "src": "8221:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8221:9:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30553,
                        "nodeType": "ExpressionStatement",
                        "src": "8221:9:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30554,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29834,
                                "src": "8240:12:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2409",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8253:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1657,
                              "src": "8240:26:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8274:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8240:36:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8240:38:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30560,
                        "nodeType": "ExpressionStatement",
                        "src": "8240:38:46"
                      },
                      {
                        "assignments": [
                          30562
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30562,
                            "mutability": "mutable",
                            "name": "sbBob",
                            "nameLocation": "8296:5:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30602,
                            "src": "8288:13:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30561,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8288:7:46",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30567,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30565,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30518,
                              "src": "8327:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30563,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29837,
                              "src": "8304:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8319:7:46",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26909,
                            "src": "8304:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8304:25:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8288:41:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30569,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29873,
                              "src": "8348:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30570,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30562,
                              "src": "8353:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30568,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6199,
                              6224,
                              6237,
                              6253,
                              6295,
                              6337,
                              6379,
                              6416,
                              6453,
                              6490,
                              3352,
                              3377,
                              3407,
                              3432,
                              3491,
                              3516,
                              3546,
                              3571,
                              4671,
                              4706
                            ],
                            "referencedDeclaration": 3352,
                            "src": "8339:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8339:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30572,
                        "nodeType": "ExpressionStatement",
                        "src": "8339:20:46"
                      },
                      {
                        "expression": {
                          "id": 30574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8369:3:46",
                          "subExpression": {
                            "id": 30573,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30518,
                            "src": "8369:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30575,
                        "nodeType": "ExpressionStatement",
                        "src": "8369:3:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30577,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29873,
                              "src": "8387:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30576,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5547,
                              5568,
                              5592,
                              5616
                            ],
                            "referencedDeclaration": 5547,
                            "src": "8382:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8382:9:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30579,
                        "nodeType": "ExpressionStatement",
                        "src": "8382:9:46"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30580,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29831,
                                "src": "8401:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2409",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8413:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1657,
                              "src": "8401:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8434:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8401:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8401:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30586,
                        "nodeType": "ExpressionStatement",
                        "src": "8401:37:46"
                      },
                      {
                        "expression": {
                          "id": 30592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 30587,
                            "name": "sbBob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30562,
                            "src": "8499:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 30590,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30518,
                                "src": "8530:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30588,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29837,
                                "src": "8507:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 30589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8522:7:46",
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26909,
                              "src": "8507:22:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 30591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8507:25:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8499:33:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 30593,
                        "nodeType": "ExpressionStatement",
                        "src": "8499:33:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30595,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29873,
                              "src": "8551:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30596,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30562,
                              "src": "8556:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30594,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6199,
                              6224,
                              6237,
                              6253,
                              6295,
                              6337,
                              6379,
                              6416,
                              6453,
                              6490,
                              3352,
                              3377,
                              3407,
                              3432,
                              3491,
                              3516,
                              3546,
                              3571,
                              4671,
                              4706
                            ],
                            "referencedDeclaration": 3352,
                            "src": "8542:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8542:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30598,
                        "nodeType": "ExpressionStatement",
                        "src": "8542:20:46"
                      },
                      {
                        "expression": {
                          "id": 30600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8572:3:46",
                          "subExpression": {
                            "id": 30599,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30518,
                            "src": "8572:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30601,
                        "nodeType": "ExpressionStatement",
                        "src": "8572:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30521,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30518,
                      "src": "8034:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8038:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "8034:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30603,
                  "nodeType": "WhileStatement",
                  "src": "8027:558:46"
                }
              ]
            },
            "functionSelector": "71a29bb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwnerOf",
            "nameLocation": "7980:11:46",
            "parameters": {
              "id": 30515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7991:2:46"
            },
            "returnParameters": {
              "id": 30516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8001:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30729,
            "nodeType": "FunctionDefinition",
            "src": "8597:865:46",
            "nodes": [],
            "body": {
              "id": 30728,
              "nodeType": "Block",
              "src": "8636:826:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30609,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "8649:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30608,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5547,
                        5568,
                        5592,
                        5616
                      ],
                      "referencedDeclaration": 5547,
                      "src": "8644:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8644:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30611,
                  "nodeType": "ExpressionStatement",
                  "src": "8644:11:46"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 30612,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29831,
                          "src": "8663:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2409",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 30614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8675:13:46",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1657,
                        "src": "8663:25:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 30616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 30615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8696:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "8663:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 30617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8663:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30618,
                  "nodeType": "ExpressionStatement",
                  "src": "8663:37:46"
                },
                {
                  "assignments": [
                    30620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30620,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "8713:2:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30728,
                      "src": "8708:7:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30619,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8708:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30626,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30623,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "8753:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8760:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 30621,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "8718:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8733:19:46",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27920,
                      "src": "8718:34:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 30625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8718:44:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8708:54:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30628,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "8779:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30631,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30620,
                            "src": "8809:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30629,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29837,
                            "src": "8786:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8801:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26909,
                          "src": "8786:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 30632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8786:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30627,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6199,
                        6224,
                        6237,
                        6253,
                        6295,
                        6337,
                        6379,
                        6416,
                        6453,
                        6490,
                        3352,
                        3377,
                        3407,
                        3432,
                        3491,
                        3516,
                        3546,
                        3571,
                        4671,
                        4706
                      ],
                      "referencedDeclaration": 3352,
                      "src": "8770:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8770:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30634,
                  "nodeType": "ExpressionStatement",
                  "src": "8770:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30636,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "8826:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30635,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5547,
                        5568,
                        5592,
                        5616
                      ],
                      "referencedDeclaration": 5547,
                      "src": "8821:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8821:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30638,
                  "nodeType": "ExpressionStatement",
                  "src": "8821:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 30642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8854:51:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "expression": {
                        "id": 30639,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4849,
                        "src": "8838:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10130",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8841:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9616,
                      "src": "8838:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8838:68:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30644,
                  "nodeType": "ExpressionStatement",
                  "src": "8838:68:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30648,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "8946:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30649,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "8953:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30650,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30620,
                        "src": "8958:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30645,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "8914:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8929:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27119,
                      "src": "8914:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8914:47:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30652,
                  "nodeType": "ExpressionStatement",
                  "src": "8914:47:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30654,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "8974:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30653,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5547,
                        5568,
                        5592,
                        5616
                      ],
                      "referencedDeclaration": 5547,
                      "src": "8969:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8969:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30656,
                  "nodeType": "ExpressionStatement",
                  "src": "8969:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30660,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "9020:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30661,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "9027:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30662,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30620,
                        "src": "9032:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30657,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "8988:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9003:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27119,
                      "src": "8988:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8988:47:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30664,
                  "nodeType": "ExpressionStatement",
                  "src": "8988:47:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30666,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "9052:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30669,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30620,
                            "src": "9080:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30667,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29837,
                            "src": "9057:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9072:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26909,
                          "src": "9057:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 30670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9057:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30665,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6199,
                        6224,
                        6237,
                        6253,
                        6295,
                        6337,
                        6379,
                        6416,
                        6453,
                        6490,
                        3352,
                        3377,
                        3407,
                        3432,
                        3491,
                        3516,
                        3546,
                        3571,
                        4671,
                        4706
                      ],
                      "referencedDeclaration": 3352,
                      "src": "9043:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9043:41:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30672,
                  "nodeType": "ExpressionStatement",
                  "src": "9043:41:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30674,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "9097:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30673,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5547,
                        5568,
                        5592,
                        5616
                      ],
                      "referencedDeclaration": 5547,
                      "src": "9092:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9092:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30676,
                  "nodeType": "ExpressionStatement",
                  "src": "9092:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 30680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9125:52:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "expression": {
                        "id": 30677,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4849,
                        "src": "9109:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10130",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9112:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9616,
                      "src": "9109:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9109:69:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30682,
                  "nodeType": "ExpressionStatement",
                  "src": "9109:69:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30686,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "9218:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30689,
                            "name": "frensStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29825,
                            "src": "9231:12:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensStorage_$1405",
                              "typeString": "contract FrensStorage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensStorage_$1405",
                              "typeString": "contract FrensStorage"
                            }
                          ],
                          "id": 30688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9223:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9223:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9223:21:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30691,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30620,
                        "src": "9246:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30683,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "9186:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9201:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27119,
                      "src": "9186:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9186:63:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30693,
                  "nodeType": "ExpressionStatement",
                  "src": "9186:63:46"
                },
                {
                  "assignments": [
                    30696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30696,
                      "mutability": "mutable",
                      "name": "nftReceiver",
                      "nameLocation": "9270:11:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30728,
                      "src": "9258:23:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftReceiver_$34611",
                        "typeString": "contract NftReceiver"
                      },
                      "typeName": {
                        "id": 30695,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30694,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "9258:11:46"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34611,
                          "src": "9258:11:46"
                        },
                        "referencedDeclaration": 34611,
                        "src": "9258:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$34611",
                          "typeString": "contract NftReceiver"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30701,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9284:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NftReceiver_$34611_$",
                        "typeString": "function () returns (contract NftReceiver)"
                      },
                      "typeName": {
                        "id": 30698,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30697,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "9288:11:46"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34611,
                          "src": "9288:11:46"
                        },
                        "referencedDeclaration": 34611,
                        "src": "9288:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$34611",
                          "typeString": "contract NftReceiver"
                        }
                      }
                    },
                    "id": 30700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9284:17:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftReceiver_$34611",
                      "typeString": "contract NftReceiver"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9258:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30703,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "9314:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30702,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5547,
                        5568,
                        5592,
                        5616
                      ],
                      "referencedDeclaration": 5547,
                      "src": "9309:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9309:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30705,
                  "nodeType": "ExpressionStatement",
                  "src": "9309:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30709,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "9358:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30712,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30696,
                            "src": "9371:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$34611",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$34611",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 30711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9363:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30710,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9363:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9363:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30714,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30620,
                        "src": "9385:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30706,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "9326:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9341:16:46",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27119,
                      "src": "9326:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9326:62:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30716,
                  "nodeType": "ExpressionStatement",
                  "src": "9326:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30720,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30696,
                            "src": "9413:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$34611",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$34611",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 30719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9405:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30718,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9405:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9405:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30724,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30620,
                            "src": "9450:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30722,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29837,
                            "src": "9427:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9442:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26909,
                          "src": "9427:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 30725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9427:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30717,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6199,
                        6224,
                        6237,
                        6253,
                        6295,
                        6337,
                        6379,
                        6416,
                        6453,
                        6490,
                        3352,
                        3377,
                        3407,
                        3432,
                        3491,
                        3516,
                        3546,
                        3571,
                        4671,
                        4706
                      ],
                      "referencedDeclaration": 3352,
                      "src": "9396:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9396:58:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30727,
                  "nodeType": "ExpressionStatement",
                  "src": "9396:58:46"
                }
              ]
            },
            "functionSelector": "90ec5d96",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSafeTransferFrom",
            "nameLocation": "8606:20:46",
            "parameters": {
              "id": 30606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8626:2:46"
            },
            "returnParameters": {
              "id": 30607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8636:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30771,
            "nodeType": "FunctionDefinition",
            "src": "9468:258:46",
            "nodes": [],
            "body": {
              "id": 30770,
              "nodeType": "Block",
              "src": "9503:223:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30733,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "9521:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30732,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5637,
                        5658,
                        5682,
                        5706
                      ],
                      "referencedDeclaration": 5637,
                      "src": "9511:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9511:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30735,
                  "nodeType": "ExpressionStatement",
                  "src": "9511:16:46"
                },
                {
                  "assignments": [
                    30737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30737,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "9540:1:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30770,
                      "src": "9535:6:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30736,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9535:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30739,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 30738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9544:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9535:10:46"
                },
                {
                  "body": {
                    "id": 30768,
                    "nodeType": "Block",
                    "src": "9569:151:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30743,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29831,
                                "src": "9579:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2409",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9591:13:46",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1657,
                              "src": "9579:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9612:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "9579:35:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9579:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30749,
                        "nodeType": "ExpressionStatement",
                        "src": "9579:37:46"
                      },
                      {
                        "assignments": [
                          30751
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30751,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "9631:2:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 30768,
                            "src": "9626:7:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30750,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9626:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30758,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30754,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30737,
                                "src": "9664:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 30755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9666:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "9664:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30752,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29837,
                              "src": "9636:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9651:12:46",
                            "memberName": "tokenByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27954,
                            "src": "9636:27:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9636:32:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9626:42:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30760,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30751,
                                "src": "9689:2:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30761,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30737,
                                "src": "9695:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9689:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30759,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3301,
                              3322
                            ],
                            "referencedDeclaration": 3301,
                            "src": "9678:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9678:20:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30764,
                        "nodeType": "ExpressionStatement",
                        "src": "9678:20:46"
                      },
                      {
                        "expression": {
                          "id": 30766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9708:3:46",
                          "subExpression": {
                            "id": 30765,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30737,
                            "src": "9708:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30767,
                        "nodeType": "ExpressionStatement",
                        "src": "9708:3:46"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30740,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30737,
                      "src": "9560:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9564:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "9560:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30769,
                  "nodeType": "WhileStatement",
                  "src": "9553:167:46"
                }
              ]
            },
            "functionSelector": "6a7179c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenByIndex",
            "nameLocation": "9477:16:46",
            "parameters": {
              "id": 30730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9493:2:46"
            },
            "returnParameters": {
              "id": 30731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9503:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30832,
            "nodeType": "FunctionDefinition",
            "src": "9732:440:46",
            "nodes": [],
            "body": {
              "id": 30831,
              "nodeType": "Block",
              "src": "9767:405:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30775,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "9780:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30774,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5547,
                        5568,
                        5592,
                        5616
                      ],
                      "referencedDeclaration": 5547,
                      "src": "9775:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9775:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30777,
                  "nodeType": "ExpressionStatement",
                  "src": "9775:11:46"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 30778,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29831,
                          "src": "9794:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2409",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 30780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9806:13:46",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1657,
                        "src": "9794:25:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 30782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 30781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9827:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "9794:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 30783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9794:37:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30784,
                  "nodeType": "ExpressionStatement",
                  "src": "9794:37:46"
                },
                {
                  "assignments": [
                    30786
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30786,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "9844:2:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 30831,
                      "src": "9839:7:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30785,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9839:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30792,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30789,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "9884:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9891:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 30787,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "9849:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9864:19:46",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27920,
                      "src": "9849:34:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 30791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9849:44:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9839:54:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30794,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "9910:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30797,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30786,
                            "src": "9940:2:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30795,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29837,
                            "src": "9917:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 30796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9932:7:46",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26909,
                          "src": "9917:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 30798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9917:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30793,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6199,
                        6224,
                        6237,
                        6253,
                        6295,
                        6337,
                        6379,
                        6416,
                        6453,
                        6490,
                        3352,
                        3377,
                        3407,
                        3432,
                        3491,
                        3516,
                        3546,
                        3571,
                        4671,
                        4706
                      ],
                      "referencedDeclaration": 3352,
                      "src": "9901:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9901:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30800,
                  "nodeType": "ExpressionStatement",
                  "src": "9901:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30802,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "9957:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30801,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5547,
                        5568,
                        5592,
                        5616
                      ],
                      "referencedDeclaration": 5547,
                      "src": "9952:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9952:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30804,
                  "nodeType": "ExpressionStatement",
                  "src": "9952:9:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 30808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9985:51:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "expression": {
                        "id": 30805,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4849,
                        "src": "9969:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10130",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9972:12:46",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9616,
                      "src": "9969:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9969:68:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30810,
                  "nodeType": "ExpressionStatement",
                  "src": "9969:68:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30814,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "10073:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30815,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "10080:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30816,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30786,
                        "src": "10085:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30811,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "10045:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10060:12:46",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27100,
                      "src": "10045:27:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10045:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30818,
                  "nodeType": "ExpressionStatement",
                  "src": "10045:43:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30820,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "10101:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30819,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5547,
                        5568,
                        5592,
                        5616
                      ],
                      "referencedDeclaration": 5547,
                      "src": "10096:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10096:11:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30822,
                  "nodeType": "ExpressionStatement",
                  "src": "10096:11:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30826,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29867,
                        "src": "10143:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30827,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29873,
                        "src": "10150:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30828,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30786,
                        "src": "10155:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30823,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29837,
                        "src": "10115:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$864",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10130:12:46",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27100,
                      "src": "10115:27:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 30829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10115:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30830,
                  "nodeType": "ExpressionStatement",
                  "src": "10115:43:46"
                }
              ]
            },
            "functionSelector": "70557298",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferFrom",
            "nameLocation": "9741:16:46",
            "parameters": {
              "id": 30772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9757:2:46"
            },
            "returnParameters": {
              "id": 30773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9767:0:46"
            },
            "scope": 30833,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29812,
              "name": "Test",
              "nameLocations": [
                "757:4:46"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8011,
              "src": "757:4:46"
            },
            "id": 29813,
            "nodeType": "InheritanceSpecifier",
            "src": "757:4:46"
          }
        ],
        "canonicalName": "MiscTest",
        "contractDependencies": [
          159,
          516,
          601,
          864,
          1126,
          1405,
          2516,
          34611
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30833,
          8011,
          5081,
          4818
        ],
        "name": "MiscTest",
        "nameLocation": "745:8:46",
        "scope": 30834,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 46
}