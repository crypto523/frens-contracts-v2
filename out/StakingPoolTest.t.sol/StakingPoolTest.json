{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SSVNetwork",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SSVToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRecipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensLogo",
      "outputs": [
        {
          "internalType": "contract FrensLogo",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensOracle",
      "outputs": [
        {
          "internalType": "contract FrensOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pmFont",
      "outputs": [
        {
          "internalType": "contract PmFont",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvNetwork",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool2",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "x",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "y",
          "type": "uint64"
        }
      ],
      "name": "testAddToDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "x",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "y",
          "type": "uint64"
        }
      ],
      "name": "testAddToDepositWrongPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBadWithdrawalCred",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "x",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "y",
          "type": "uint32"
        }
      ],
      "name": "testClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        }
      ],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEmptyStakeModifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "x",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "y",
          "type": "uint32"
        }
      ],
      "name": "testFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetIds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testPubKeyMismatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetArt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStakeTwoStep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTooMuchDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        },
        {
          "internalType": "uint72",
          "name": "y",
          "type": "uint72"
        }
      ],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "waves",
      "outputs": [
        {
          "internalType": "contract Waves",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "900:24001:53:-:0;;;;;;1594:4:25;900:24001:53;;;;;;;;;2287:42;1448;900:24001;;;;;;;;;1440:51;900:24001;;;1440:51;900:24001;1640:42;900:24001;1640:42;900:24001;;;1640:42;900:24001;1714:42;900:24001;1714:42;900:24001;;;1714:42;900:24001;1790:42;900:24001;1790:42;900:24001;;;1790:42;900:24001;1876:42;900:24001;1876:42;900:24001;;;1876:42;900:24001;;1960:25;900:24001;;;1960:25;900:24001;2019:42;900:24001;2019:42;900:24001;;;2019:42;900:24001;2106:42;900:24001;2098:51;900:24001;;;2098:51;900:24001;2192:42;900:24001;2184:51;900:24001;;;2184:51;900:24001;2279:51;900:24001;;;2279:51;900:24001;;2352:101;900:24001;;:::i;:::-;;;;;;;;;-1:-1:-1;;900:24001:53;2352:101;900:24001;;;;;;-1:-1:-1;;;;;;;;;;;900:24001:53;-1:-1:-1;;;900:24001:53;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;900:24001:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;900:24001:53;;;;;;;;;;;;;;;;;;;;;;2814:66;;900:24001;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:101;900:24001;;;;;;-1:-1:-1;;;;;;;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "900:24001:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:82;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;1612:70;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24694:5;900:24001;;;-1:-1:-1;;;;;900:24001:53;24689:11;;900:24001;;24689:11;:::i;:::-;900:24001;24708:11;900:24001;;24708:50;;;;;900:24001;24741:14;900:24001;;;;;;;;;;;24708:50;;;;;;;;;;;;;900:24001;;;;24808:8;900:24001;;;24831:9;900:24001;24831:9;900:24001;;24831:9;:::i;:::-;24708:11;900:24001;;24849:42;;;;;;900:24001;;;;;;;;;;;;;;;24849:42;;900:24001;24849:42;;900:24001;24849:42;;;;;;;;900:24001;;24849:42;;;;:::i;:::-;900:24001;;24849:42;900:24001;24849:42;900:24001;;;;;;;;;24849:42;900:24001;;;24708:50;;;;:::i;:::-;900:24001;;24708:50;;;;900:24001;;;24708:50;900:24001;;;;;;;;;;;;;;;;;;;;;;1274:30;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;1407:84;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;1342:20;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;1310:26;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;2155:80;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;969:38;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;1013:52;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;900:24001:53;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;900:24001:53;;;9229:5;;;;;:38;;;900:24001;9226:1206;;;-1:-1:-1;;9288:5:53;900:24001;-1:-1:-1;;;;;900:24001:53;;9278:16;;900:24001;;9278:16;:::i;:::-;900:24001;;9304:11;900:24001;;9304:37;;;;;900:24001;;;;;;;;;;;;;9304:37;;;;;;;;;;9226:1206;900:24001;;;9361:14;900:24001;;;;9288:5;900:24001;;;;;;;;;;9361:44;;900:24001;9361:44;;900:24001;;;;;1671:64:25;900:24001:53;;;9361:44;;;;;;;;;;;;;;9226:1206;900:24001;9415:36;900:24001;;:::i;:::-;9426:7;;9415:36;:::i;:::-;900:24001;9304:11;900:24001;;;;;;;;;;;;9475:28;;;;;900:24001;9475:28;;1671:64:25;9475:28:53;;;;;;;;;;9226:1206;9513:33;900:24001;;;;:::i;:::-;9513:33;;;:::i;:::-;900:24001;-1:-1:-1;;;;;;;;;;;9594:44:53;;;;;900:24001;;-1:-1:-1;;;9594:44:53;;900:24001;;9594:44;;900:24001;;;;;;-1:-1:-1;;;900:24001:53;;;;;;;;;;;;;;;9594:44;;;;;;;;9226:1206;900:24001;;;9648:12;900:24001;;;;9648:39;;;;;;900:24001;;;;;;;;;;;9648:39;;;;;900:24001;9648:39;;1671:64:25;9648:39:53;;;;;;;;9226:1206;900:24001;;9304:11;900:24001;;9767:38;;;;;;900:24001;;;;;;;9767:38;;;;;;;;900:24001;9767:38;;1671:64:25;9767:38:53;;;;;;;;;;;9226:1206;900:24001;;;;9304:11;900:24001;;;;;9830:28;;;;;;;900:24001;9830:28;;1671:64:25;9830:28:53;;;;;;;;;;;9226:1206;9879:17;;9920:7;9879:17;;;;:::i;:::-;9920:7;:::i;:::-;900:24001;;9830:28;;;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;;;;9879:17;9830:28;;900:24001;;;;9830:28;;;;;;900:24001;;;;;;;;;9767:38;;;;;;;:::i;:::-;900:24001;;9767:38;;;;;;900:24001;;;;9767:38;900:24001;;;;;;;;;;;9767:38;900:24001;;;9648:39;;;;:::i;:::-;900:24001;;9648:39;;;;900:24001;;;;9594:44;;;;:::i;:::-;900:24001;;9594:44;;;;9475:28;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;9513:33;900:24001;;9475:28;;;;;;;;900:24001;;;;;;;;;9361:44;;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;;9361:44;;;;;;;;;900:24001;;;;;;;;;9304:37;;;;:::i;:::-;900:24001;;9304:37;;;;900:24001;;;;9226:1206;9943:489;;;;9946:6;;;900:24001;;;-1:-1:-1;;;;;;;;;;;9964:37:53;;;;;900:24001;;;;;;;;9964:37;;;;;;900:24001;9964:37;;;:::i;:::-;;;;;;;;;;;;;;9943:489;-1:-1:-1;;10021:5:53;900:24001;-1:-1:-1;;;;;900:24001:53;10011:16;;900:24001;;10011:16;:::i;:::-;10037:11;900:24001;;10037:37;;;;;900:24001;;;;;;;;;;;;10037:37;;;;;;;;;;9943:489;;900:24001;;9964:37;;;;:::i;:::-;900:24001;;9964:37;;;;9943:489;10188:5;900:24001;-1:-1:-1;;;;;900:24001:53;;10178:16;;900:24001;;10178:16;:::i;:::-;900:24001;10204:11;900:24001;;10204:37;;;;;900:24001;;;;;;;;;;;;10204:37;;;;;;;;;;;;;9943:489;900:24001;;;10261:14;900:24001;;;;;10188:5;900:24001;;;;;;;;;;;;10261:44;;900:24001;10261:44;;900:24001;;;;;1671:64:25;10261:44:53;;;;;;;;;;;9943:489;900:24001;-1:-1:-1;;;;;;;;;;;10315:60:53;;;;;900:24001;;;;;;;;10315:60;;;;;;900:24001;10315:60;;;:::i;:::-;;;;;;;;;;;;;;9943:489;900:24001;;10204:11;900:24001;;10385:38;;;;;900:24001;;;;;;;;;;;;;;10385:38;;900:24001;10385:38;;1671:64:25;900:24001:53;10385:38;;;;;;;;;9943:489;;900:24001;;10315:60;;;;:::i;:::-;900:24001;;10315:60;;;;;900:24001;;;;;;;;;10315:60;900:24001;;;10261:44;;;;;900:24001;10261:44;;;;;;;;;900:24001;10261:44;;;:::i;:::-;;;900:24001;;;;;;;10261:44;;;;;;;-1:-1:-1;10261:44:53;;10204:37;;;;:::i;:::-;900:24001;;10204:37;;;;900:24001;;;;;9229:38;900:24001;9259:8;9238:17;900:24001;;;9238:17;;:::i;:::-;:29;;9229:38;;900:24001;;;;;;;;;;;;;1109:44;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;6981:11;900:24001;;;-1:-1:-1;;;6981:19:53;;900:24001;6981:19;;-1:-1:-1;;;;;900:24001:53;6981:19;;900:24001;;;;;;;;6981:19;;;;;;;;;;;900:24001;;;7043:9;900:24001;;;;3678:6:25;;;3674:212;;900:24001:53;;;3674:212:25;-1:-1:-1;;;;;;;;;;;900:24001:53;;;;;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;3705:44:25;900:24001:53;;;;;;;;;;;:::i;:::-;;;;;;3768:34:25;;;;;;;;900:24001:53;;;;;;;;;;;;;:::i;:::-;;;;;3821:34:25;;;;;:::i;:::-;3674:212;;;900:24001:53;;;6981:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;900:24001;;;;;;;;;;;;;;;;;;;;;;939:24;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;17869:9;900:24001;-1:-1:-1;;;;;900:24001:53;17869:9;;900:24001;;17869:9;:::i;:::-;900:24001;17887:11;900:24001;;17952:17;900:24001;17887:83;;;;;;900:24001;;;;;;;;;;;;;;;17887:83;;900:24001;17887:83;;;:::i;:::-;;;;;;;;;;;;;;900:24001;;;-1:-1:-1;;;;;;;;;;;17978:34:53;;;;;;900:24001;;;;;17978:34;;17941:9;;900:24001;17941:9;;;17978:34;;900:24001;17978:34;;900:24001;;;;;;-1:-1:-1;;;900:24001:53;;;;17978:34;;;;;;;;;;;900:24001;;;17887:11;900:24001;;;17952:17;900:24001;18020:82;;;;;900:24001;;-1:-1:-1;;;18020:82:53;;900:24001;;18020:82;;900:24001;;;;;;-1:-1:-1;;;900:24001:53;;;;;;;;;17917:22;900:24001;;;-1:-1:-1;;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17941:9;900:24001;17941:9;;;900:24001;;;;;;;;;;;;;;;;;1671:64:25;18020:82:53;;;;;;;;;;900:24001;;;;;;;;;;-1:-1:-1;900:24001:53;;;;;;;;;;-1:-1:-1;900:24001:53;;;;;;;;-1:-1:-1;900:24001:53;;-1:-1:-1;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;900:24001:53;;;;;-1:-1:-1;;900:24001:53;;;;;;;;-1:-1:-1;900:24001:53;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;1671:64:25;900:24001:53;;;;;;;;;;;;17917:22;900:24001;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18020:82;900:24001;;;17978:34;;;;:::i;:::-;900:24001;;17978:34;;;;900:24001;;;;17887:83;;;;:::i;:::-;900:24001;;17887:83;;;;900:24001;;;;;;;-1:-1:-1;;900:24001:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;10504:6;;;;;:15;;;900:24001;10504:38;;;900:24001;10501:1142;;;10563:5;900:24001;-1:-1:-1;;;;;900:24001:53;10553:16;;900:24001;;10553:16;:::i;:::-;900:24001;10579:11;900:24001;;10579:37;;;;;900:24001;;;;;;;;;;;;;10579:37;;;;;;;;;;;;;10501:1142;900:24001;;;10636:14;900:24001;;;;10563:5;900:24001;;;;;;;;;;;10636:44;;900:24001;10636:44;;900:24001;;;;;1671:64:25;900:24001:53;;;10636:44;;;;;;;;;;;;;;10501:1142;900:24001;10690:43;900:24001;;1671:64:25;;;:::i;:::-;900:24001:53;1671:64:25;;-1:-1:-1;;;900:24001:53;;;;10701:7;;10690:43;:::i;:::-;900:24001;10579:11;900:24001;;;;;;;;;;;;10757:28;;;;;900:24001;10757:28;;1671:64:25;10757:28:53;;;;;;;;;;;10501:1142;-1:-1:-1;900:24001:53;;10795:49;;1671:64:25;900:24001:53;1671:64:25;:::i;:::-;900:24001:53;1671:64:25;;900:24001:53;;;;;10795:49;;:::i;:::-;900:24001;10579:11;900:24001;;10854:27;;;;;900:24001;;-1:-1:-1;;;10854:27:53;;900:24001;10854:27;;1671:64:25;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;;10854:27;;;;;;;;;;;10501:1142;900:24001;;10579:11;900:24001;;;;;10906:28;;;;;;;900:24001;10906:28;;1671:64:25;10906:28:53;;;;;;;;;;;10501:1142;10955:17;10982:41;10955:17;;;;:::i;:::-;-1:-1:-1;;;900:24001:53;;1671:64:25;;;;:::i;:::-;10636:14:53;1671:64:25;;900:24001:53;;;10982:41;:::i;10906:28::-;;;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;;;10982:41;10906:28;;;;;;;10854:27;;;;;;;:::i;:::-;900:24001;;10854:27;;;;;;10757:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;10795:49;900:24001;;;10757:28;;;;;;;;10636:44;;-1:-1:-1;10636:44:53;-1:-1:-1;10636:44:53;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;;;;10636:44;;;;;;;;;10579:37;;;;:::i;:::-;900:24001;;10579:37;;;;10501:1142;11041:6;-1:-1:-1;11041:6:53;;;;900:24001;;-1:-1:-1;;;;;;;;;;;11059:37:53;;;;;900:24001;;;;;;;;11059:37;;;;;;900:24001;11059:37;;;:::i;11038:605::-;11197:8;11187:18;;11197:8;;;900:24001;;-1:-1:-1;;;;;;;;;;;11217:60:53;;;;;900:24001;;;;;;;;11217:60;;;;;;900:24001;11217:60;;;:::i;11184:459::-;900:24001;;;;;;;;11375:16;900:24001;11385:5;900:24001;;11375:16;:::i;:::-;900:24001;11401:11;900:24001;;11401:37;;;;;900:24001;;;;;;;;;;;;11401:37;;;;;;;;;;;;;11184:459;900:24001;;;11458:14;900:24001;;;;;11385:5;900:24001;;;;;;;;;;;;11458:44;;900:24001;11458:44;;900:24001;;;;;1671:64:25;11458:44:53;;;;;;;;;;;11184:459;900:24001;11512:36;900:24001;;:::i;:::-;11523:7;;11512:36;:::i;:::-;-1:-1:-1;;;;;;;;;;;11558:39:53;;;;;;900:24001;;;;;;;;;;;;;;;11558:39;;900:24001;;11558:39;;900:24001;;;;-1:-1:-1;;;900:24001:53;;;;11558:39;;;;;;;;;;;11184:459;900:24001;;11401:11;900:24001;;11607:27;;;;;;900:24001;;-1:-1:-1;;;11607:27:53;;900:24001;11607:27;;1671:64:25;;;;900:24001:53;;;;;;;;;;;;;;;;;11607:27;;;;;;;;11184:459;;900:24001;;11558:39;;;;:::i;:::-;900:24001;;11558:39;;;;11458:44;;;;;900:24001;11458:44;;;;;;;;;900:24001;11458:44;;;:::i;:::-;;;900:24001;;;;;;;11458:44;;;;;;;-1:-1:-1;11458:44:53;;11401:37;;;;:::i;:::-;900:24001;;11401:37;;;;10504:38;10523:19;10534:8;10523:19;;;10504:38;;:15;10514:5;;;;10504:15;;900:24001;;;;;;;;;;;;;11869:5;900:24001;;;-1:-1:-1;;;;;900:24001:53;11864:11;;900:24001;;11864:11;:::i;:::-;-1:-1:-1;;;;;;;;;;;11883:60:53;;;;;900:24001;;;;;;;;11883:60;;;;;;900:24001;11883:60;;;:::i;:::-;;;;;;;;;;;;;;900:24001;;;11951:11;900:24001;;11951:56;;;;;900:24001;11984:20;900:24001;;;;;;;;;;;11951:56;;;;;;;;;;900:24001;;11883:60;;;;:::i;:::-;900:24001;;11883:60;;;;900:24001;;;;;;;;;;;;;17473:9;900:24001;;;-1:-1:-1;;;;;900:24001:53;17473:9;;900:24001;;17473:9;:::i;:::-;-1:-1:-1;;;;;;;;;;;17491:49:53;;;;;900:24001;;-1:-1:-1;;;17491:49:53;;;900:24001;;17491:49;;900:24001;;;;;;;;;;;;17491:49;900:24001;;;17491:49;;;;;;;;;;;;;900:24001;;;;17548:11;900:24001;;17626:17;900:24001;17548:96;;;;;;900:24001;;-1:-1:-1;;;17548:96:53;;900:24001;;;;;;;;;;;17548:96;;900:24001;17548:96;;;:::i;:::-;;;;;;;;;;;;;;900:24001;17652:49;;;;;;;900:24001;;17652:49;;;900:24001;;17652:49;;900:24001;;;;;;;;;;;;;;;;;;;;;;17652:49;;;;;;;;;;;900:24001;;;17548:11;900:24001;;17626:17;900:24001;17709:92;;;;;;900:24001;;-1:-1:-1;;;17709:92:53;;900:24001;;;;;;;;;;;17709:92;;900:24001;17709:92;;;:::i;:::-;;;;;;;;;;;900:24001;;17652:49;;;;:::i;:::-;900:24001;;17652:49;;;;17548:96;;;;:::i;:::-;900:24001;;17548:96;;;;17491:49;;;;:::i;:::-;900:24001;;17491:49;;;;900:24001;;;;;;;;;;;;;1368:18;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;1688:68;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;1992:69;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;1195:31;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;-1:-1:-1;;900:24001:53;;;;;;:::i;:::-;;;:::i;:::-;19624:10;900:24001;;;19672:20;;900:24001;;;;;;;;;;;;;;;;;;;19730:20;900:24001;;19730:20;900:24001;;;;19776:6;;;;;;;:17;;;900:24001;19773:3624;;;-1:-1:-1;;19809:5:53;900:24001;19804:11;;-1:-1:-1;;;;;900:24001:53;19804:11;:::i;:::-;19825;900:24001;-1:-1:-1;;;;;900:24001:53;19825:48;;;;;900:24001;;;;;;;;;19825:48;;;;900:24001;;;19825:48;;;;;;;;;;;;19773:3624;-1:-1:-1;;19888:3:53;900:24001;19883:9;;-1:-1:-1;;;;;900:24001:53;19883:9;:::i;:::-;19825:11;900:24001;-1:-1:-1;;;;;900:24001:53;19902:46;;;;;900:24001;;;;;19902:46;;;;;;;;;;;;;;;;;;19773:3624;-1:-1:-1;19825:11:53;900:24001;;;;;;;;;;-1:-1:-1;;;;;900:24001:53;;19958:32;;;;19773:3624;19958:32;;;;-1:-1:-1;;;;;;;;;;;20000:47:53;;;;900:24001;;-1:-1:-1;;;20000:47:53;;900:24001;;20000:47;;900:24001;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;20000:47:53;;;;;;;;19773:3624;-1:-1:-1;19825:11:53;900:24001;-1:-1:-1;;;;;900:24001:53;20057:20;;;;;900:24001;;;;;;;;;;;;;20057:20;;900:24001;;20057:20;;1671:64:25;20057:20:53;;;;;;;;19773:3624;-1:-1:-1;;20092:9:53;900:24001;20092:9;;-1:-1:-1;;;;;900:24001:53;20092:9;:::i;:::-;19825:11;900:24001;20173:17;900:24001;;;-1:-1:-1;;;;;900:24001:53;20112:79;;;;;900:24001;;-1:-1:-1;;;20112:79:53;;900:24001;;;;;;;;;;;20112:79;;900:24001;20112:79;;;:::i;:::-;;;;;;;;;;;19773:3624;900:24001;;;;;;;19825:11;900:24001;;20221:28;;900:24001;20286:1;900:24001;;;;;;20286:1;900:24001;;;;;;;20331:18;900:24001;20290:3;900:24001;;20331:18;;:::i;:::-;19809:5;900:24001;19888:3;900:24001;-1:-1:-1;;;;;900:24001:53;;;20429:20;;900:24001;;20379:22;;20561:33;;19730:20;;20477:35;;900:24001;20477:35;;:::i;:::-;900:24001;20561:33;;;:::i;:::-;20632:28;20604:57;20632:28;;900:24001;;1671:64:25;;;:::i;:::-;900:24001:53;1671:64:25;;-1:-1:-1;;;900:24001:53;;;;20604:57;:::i;:::-;20671:38;900:24001;;;1671:64:25;;;:::i;:::-;900:24001:53;1671:64:25;;-1:-1:-1;;;900:24001:53;;;;20671:38;:::i;:::-;900:24001;;-1:-1:-1;;;20741:36:53;;900:24001;20741:36;;1671:64:25;;;900:24001:53;;;;;;20741:36;;;;;;;;;;;19773:3624;900:24001;;;;;;;;;;;;;;20807:36;;900:24001;;20807:36;;1671:64:25;20807:36:53;;;;;;;;;;;19773:3624;900:24001;;20853:97;20960:96;900:24001;;;1671:64:25;;;;:::i;:::-;900:24001:53;1671:64:25;;900:24001:53;;;;;-1:-1:-1;;;900:24001:53;;;;20853:97;;:::i;:::-;900:24001;;1671:64:25;;;;:::i;:::-;900:24001:53;1671:64:25;;900:24001:53;;;;;-1:-1:-1;;;900:24001:53;;;;20960:96;;:::i;:::-;21110:12;900:24001;;;21066:66;;-1:-1:-1;;;;;900:24001:53;21102:29;;1671:64:25;900:24001:53;1671:64:25;:::i;:::-;900:24001:53;1671:64:25;;-1:-1:-1;;;900:24001:53;;;;21066:66;:::i;:::-;900:24001;21353:15;;21350:34;;19773:3624;900:24001;21397:13;;21394:29;;19773:3624;21470:25;21581:78;21470:25;;;:::i;:::-;900:24001;;;;;;19809:5;900:24001;;21604:22;900:24001;;1671:64:25;;;;:::i;:::-;19888:3:53;1671:64:25;;900:24001:53;;;;;21581:78;:::i;:::-;19809:5;900:24001;;;-1:-1:-1;;;;;900:24001:53;-1:-1:-1;;;;;;;;;;;21669:15:53;;;;900:24001;;;;;;21669:15;;900:24001;21669:15;;900:24001;21669:15;;900:24001;21669:15;;-1:-1:-1;;;;;;;;;;;21669:15:53;;;;;;;;19773:3624;900:24001;;;;;;19825:11;900:24001;;21694:65;21730:28;;900:24001;;1671:64:25;;;:::i;:::-;900:24001:53;1671:64:25;;-1:-1:-1;;;900:24001:53;;;;21694:65;:::i;:::-;21769:20;;;;;900:24001;;;;;;;;;;;;;21769:20;;;900:24001;21769:20;;1671:64:25;21769:20:53;;;;;;;;19773:3624;900:24001;;22152:72;900:24001;21958:89;22090:21;900:24001;;;;;;19809:5;900:24001;;21814:22;900:24001;;;:::i;:::-;21958:89;;:::i;:::-;22090:21;;:::i;:::-;19888:3;900:24001;;;;-1:-1:-1;;;;;900:24001:53;22173:20;900:24001;;:::i;:::-;22152:72;;:::i;:::-;19888:3;900:24001;;;-1:-1:-1;;;;;900:24001:53;-1:-1:-1;;;;;;;;;;;22234:13:53;;;;900:24001;;;;;;22234:13;;900:24001;22234:13;;900:24001;22234:13;;900:24001;22234:13;;-1:-1:-1;;;;;;;;;;;22234:13:53;;;;;;;;19773:3624;-1:-1:-1;19825:11:53;900:24001;-1:-1:-1;;;;;900:24001:53;20290:3;22260:28;;:35;20290:3;;22309:56;;;-1:-1:-1;;;;;;;;;;;22309:56:53;;;;900:24001;;-1:-1:-1;;;22309:56:53;;900:24001;;;;;22309:56;900:24001;22309:56;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;;22309:56:53;;;;;;;;22257:455;-1:-1:-1;19825:11:53;900:24001;-1:-1:-1;;;;;900:24001:53;22377:20;;;;;900:24001;;;;;;;;;;;;;22377:20;;900:24001;;22377:20;;1671:64:25;22377:20:53;;;;;;;;22257:455;;;;900:24001;;;;;21110:12;900:24001;;22745:29;900:24001;;1671:64:25;;;:::i;:::-;20138:22:53;1671:64:25;;900:24001:53;;;;;22776:2;11368:19:28;900:24001:53;20290:3;900:24001;;11368:19:28;:::i;:::-;11402:16;11398:132;;22257:455:53;19773:3624;;;900:24001;;11398:132:28;11439:33;-1:-1:-1;;;;;;;;;;;900:24001:53;;;11439:33:28;;;;;:::i;:::-;;;;10819:19;900:24001:53;20290:3;900:24001;;10819:19:28;:::i;:::-;22776:2:53;10853:16:28;;10849:340;11398:132;10849:340;900:24001:53;;-1:-1:-1;;;;;;;;;;;900:24001:53;;;;;;;;;;;;;;;;-1:-1:-1;;;1671:64:25;900:24001:53;;;10890:53:28;900:24001:53;;;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;-1:-1:-1;;;;;;;;;;;10962:32:28;;;;;;;;900:24001:53;;;;;;;20290:3;900:24001;;;;;:::i;:::-;;;;;;1671:64:25;11013:32:28;;;900:24001:53;;;;;;;22776:2;900:24001;;;;-1:-1:-1;;;1671:64:25;900:24001:53;;;22776:2;900:24001;;;1671:64:25;11064:39:28;900:24001:53;;;;;;22776:2;900:24001;;;;-1:-1:-1;;;1671:64:25;900:24001:53;;;;;;1671:64:25;11122:36:28;;;:::i;:::-;10849:340;;;11398:132;;22377:20:53;;;;:::i;:::-;900:24001;;22377:20;;;;22309:56;;;;:::i;:::-;900:24001;;22309:56;;;;22257:455;22426:20;;;;;900:24001;;;;;;;;;;;;;22426:20;;900:24001;;22426:20;;1671:64:25;22426:20:53;;;;;;;;22257:455;-1:-1:-1;;19888:3:53;900:24001;22617:83;;-1:-1:-1;;;;;900:24001:53;;;22471:20;;900:24001;;:::i;:::-;22617:83;;:::i;:::-;22257:455;;22426:20;;;;:::i;:::-;900:24001;;22426:20;;;;22234:13;;;;:::i;:::-;900:24001;;22234:13;;;;21769:20;;;;:::i;:::-;900:24001;;21769:20;;;;21669:15;;;;:::i;:::-;900:24001;;21669:15;;;;21394:29;21412:11;;-1:-1:-1;21394:29:53;;21350:34;21370:14;;21350:34;;20807:36;;;900:24001;20807:36;;900:24001;20807:36;;;;;;900:24001;20807:36;;;:::i;:::-;;;900:24001;;;;;;;20853:97;20807:36;;;;;-1:-1:-1;20807:36:53;;;900:24001;;;;;;;;;20741:36;;;900:24001;20741:36;;900:24001;20741:36;;;;;;900:24001;20741:36;;;:::i;:::-;;;900:24001;;;;;;;;20741:36;;;;;-1:-1:-1;20741:36:53;;900:24001;-1:-1:-1;;;900:24001:53;;;;;;1671:64:25;900:24001:53;20112:79;;;;:::i;:::-;900:24001;;20112:79;;;;20057:20;;;;:::i;:::-;900:24001;;20057:20;;;;20000:47;;;;:::i;:::-;900:24001;;20000:47;;;;19958:32;;;;;19902:46;;;;:::i;:::-;900:24001;;19902:46;;;;19825:48;;;;:::i;:::-;900:24001;;19825:48;;;;19773:3624;22831:566;;;;;;;;;;900:24001;;;;-1:-1:-1;;;;;;;;;;;22852:37:53;;;;;900:24001;;;;;;;;22852:37;;;;;;900:24001;22852:37;;;:::i;22831:566::-;900:24001;;;;;;;;;;;22987:11;900:24001;22992:5;900:24001;;22987:11;:::i;:::-;900:24001;23008:11;900:24001;;23008:48;;;;;900:24001;;;;;;;;;;;;;23008:48;;;;900:24001;23008:48;;;;;;;;;;;;22831:566;900:24001;;23066:9;900:24001;23071:3;900:24001;;23066:9;:::i;:::-;900:24001;23008:11;900:24001;;23085:46;;;;;900:24001;;;;;23085:46;;;;;;;;;;;;;;;;;;22831:566;900:24001;;23151:9;900:24001;23151:9;900:24001;;23151:9;:::i;:::-;900:24001;23008:11;900:24001;;;23232:17;900:24001;23171:79;;;;;;900:24001;;-1:-1:-1;;;23171:79:53;;900:24001;;;;;;;;;;;23171:79;;900:24001;23171:79;;;:::i;:::-;;;;;;;;;;;;;;22831:566;900:24001;;;;;;;23008:11;900:24001;;23260:32;;900:24001;;23260:32;;;;;22831:566;23260:32;;;;-1:-1:-1;;;;;;;;;;;23302:56:53;;;;;900:24001;;;;;;;;23302:56;;;;;;900:24001;23302:56;;;:::i;:::-;;;;;;;;;;;;;;22831:566;900:24001;;23008:11;900:24001;;23368:20;;;;;900:24001;;;;;;;;;;;;;23368:20;;900:24001;;23368:20;;1671:64:25;23368:20:53;;;;;;;;22831:566;;900:24001;;23302:56;;;;:::i;:::-;900:24001;;23302:56;;;;23260:32;;;;;23171:79;;;;;;;:::i;:::-;900:24001;;23171:79;;;;;23085:46;;;;:::i;:::-;900:24001;;23085:46;;;;23008:48;;;;:::i;:::-;900:24001;;23008:48;;;;19776:17;900:24001;19790:3;900:24001;;;19786:7;19776:17;;900:24001;-1:-1:-1;;;900:24001:53;;;;;;1671:64:25;900:24001:53;;;;;;;;;;;;;;13361:11;900:24001;;13444:5;900:24001;-1:-1:-1;;;;;900:24001:53;;;13353:28;;900:24001;13439:11;;900:24001;;13439:11;:::i;:::-;900:24001;;;;13458:56;;;;;900:24001;;;;;;13458:56;;13491:20;;900:24001;13491:20;;13458:56;;;;;;;;;;900:24001;;;;;;;;;;;13570:28;900:24001;;;;;;13570:28;;;:::i;:::-;900:24001;13646:15;900:24001;;;;;;;;;;;;13646:35;;;;;;;;;;;;;;;900:24001;1671:64:25;900:24001:53;1671:64:25;;900:24001:53;;13636:46;900:24001;13700:9;900:24001;13700:9;900:24001;;13700:9;:::i;:::-;900:24001;;;;14086:17;900:24001;14021:83;;;;;;900:24001;;-1:-1:-1;;;14021:83:53;;900:24001;;;;;;;;;;;14021:83;;900:24001;14021:83;;;:::i;:::-;;;;;;;;;;;;;;900:24001;;;;;;;14112:19;;;;;900:24001;;;;;;;;;;;;;14112:19;;;;;;;;;;;;;;900:24001;;;14164:28;900:24001;;;14164:28;;;:::i;:::-;13646:15;900:24001;;;;;;14223:35;;;;;;;;;;;;7918:5:28;14223:35:53;;;;;900:24001;1671:64:25;900:24001:53;1671:64:25;;900:24001:53;;14213:46;:68;7918:5:28;;:::i;14223:35:53:-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;14112:19;;;;;;:::i;:::-;900:24001;;14112:19;;;;;14021:83;;;;:::i;:::-;900:24001;;14021:83;;;;13646:35;;;;;;;;;;;;;:::i;:::-;;;;900:24001;-1:-1:-1;;;900:24001:53;;;;;;1671:64:25;900:24001:53;13458:56;;;;:::i;:::-;900:24001;;13458:56;;;;900:24001;;;;;;;-1:-1:-1;;900:24001:53;;;;;;:::i;:::-;;;:::i;:::-;14364:10;;900:24001;;;14412:20;;900:24001;;;;;;;;;;;;;;;;;;;14470:20;;900:24001;;;;;;;;;14516:6;;:17;;;900:24001;14513:2889;;;-1:-1:-1;;14549:5:53;900:24001;-1:-1:-1;;;;;900:24001:53;;14544:11;;900:24001;;14544:11;:::i;:::-;14565;900:24001;;;;;14565:48;;;;;900:24001;;;;;;;;;;14565:48;;;;;;;;;;;;;;;14513:2889;900:24001;;14623:9;900:24001;14628:3;900:24001;;14623:9;:::i;:::-;900:24001;;;;14642:46;;;;;;900:24001;;;;;;14642:46;;;;;;;;;;;;;;;;;;;14513:2889;900:24001;;;;;;;;;;14698:32;;900:24001;;14698:32;;;;;14513:2889;14698:32;;;;-1:-1:-1;;;;;;;;;;;14740:47:53;;;;;;900:24001;;-1:-1:-1;;;14740:47:53;;;900:24001;;14740:47;;900:24001;;;;;;;;;;;;;14740:47;900:24001;;;14740:47;;;;;;;;;;;;;14513:2889;900:24001;;;;;;14797:20;;;;;;900:24001;;;;;;;;;;14797:20;;;;900:24001;;14797:20;;1671:64:25;900:24001:53;;14797:20;;;;;;;;;;;;;;14513:2889;900:24001;;;;;;;;;;;;;14848:23;;;900:24001;14848:23;;1671:64:25;900:24001:53;;;14848:23;;;;;;;;;;;;;;14513:2889;900:24001;;;1671:64:25;;;:::i;:::-;900:24001:53;1671:64:25;;-1:-1:-1;;;900:24001:53;;;;7096:6:25;;7092:100;;;;14513:2889:53;900:24001;;;;14941:9;900:24001;14941:9;900:24001;;14941:9;:::i;:::-;900:24001;;;;15022:17;900:24001;14961:79;;;;;;900:24001;;;;;;;;;;;;;;;14961:79;;900:24001;14961:79;;;:::i;:::-;;;;;;;;;;;;;;14513:2889;900:24001;;;14549:5;900:24001;;15070:22;900:24001;;14628:3;900:24001;;15120:20;900:24001;;;;;15169:28;;;15201:2;900:24001;;;;;;15201:2;900:24001;;;;;;;15221:22;15168:50;;;;:::i;:::-;900:24001;15285:28;;;900:24001;15201:2;900:24001;;;;;;15201:2;900:24001;;;;;;;15284:53;900:24001;15321:3;900:24001;;;15284:53;:::i;:::-;15750:15;900:24001;15750:15;;15747:34;;14513:2889;900:24001;15794:13;;15791:29;;14513:2889;15839:20;;;;;900:24001;;;;;;;15839:20;;;;;;;;900:24001;15839:20;;1671:64:25;15839:20:53;;;;;;;;;;;14513:2889;15897:25;;;16091:89;15897:25;16285:72;15897:25;16223:21;15897:25;;:::i;:::-;900:24001;14549:5;900:24001;;15947:22;900:24001;;;:::i;16223:21::-;900:24001;;14628:3;900:24001;;16306:20;900:24001;;:::i;16285:72::-;900:24001;;;;15321:3;16370:28;;:35;15321:3;;16419:56;;;;;;;900:24001;;;;16419:56;;;;;;;;;900:24001;16419:56;;;:::i;:::-;;;;;;;;;;;;;;16367:454;900:24001;;;;16487:20;;;;;900:24001;;;;;;16487:20;;;;;;;900:24001;;16487:20;;1671:64:25;16487:20:53;;;;;;;;16367:454;;900:24001;;16419:56;;;;:::i;:::-;900:24001;;16419:56;;;;16367:454;16536:20;;;;;;;;;;;;;;900:24001;;;;;;16536:20;;;;;;;900:24001;;16536:20;;1671:64:25;16536:20:53;;;;;;;;16367:454;900:24001;;16727:83;900:24001;14628:3;900:24001;;16581:20;900:24001;;;:::i;16536:20::-;;;;:::i;:::-;900:24001;;16536:20;;;;15839;;;;;;;:::i;:::-;900:24001;;15839:20;;;;;900:24001;;;;15839:20;900:24001;;;;;;;;;15839:20;900:24001;;;15791:29;15809:11;;-1:-1:-1;15791:29:53;;15747:34;15767:14;;-1:-1:-1;15747:34:53;;900:24001;-1:-1:-1;;;900:24001:53;;;;;1671:64:25;;900:24001:53;14961:79;;;;:::i;:::-;900:24001;;14961:79;;;;;900:24001;;;7092:100:25;7123:30;-1:-1:-1;;;;;;;;;;;900:24001:53;;;7123:30:25;;;;;:::i;:::-;;;;6809:200;;7092:100;;;;;6809:200;900:24001:53;;;;-1:-1:-1;;;;;;;;;;;900:24001:53;;;;;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;6840:40:25;900:24001:53;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;;1671:64:25;-1:-1:-1;;;;;;;;;;;6899:30:25;;;;900:24001:53;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;1671:64:25;6948:30;;;:::i;:::-;6809:200;;;;14848:23:53;;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;;14848:23;;;;;;;;14797:20;;;;:::i;:::-;900:24001;;14797:20;;;;14740:47;;;;:::i;:::-;900:24001;;14740:47;;;;14698:32;;;;;14642:46;;;;;;;:::i;:::-;900:24001;;14642:46;;;;;14565:48;;;;:::i;:::-;900:24001;;14565:48;;;;14513:2889;16836:566;;;;;;;;;;;;900:24001;;;;-1:-1:-1;;;;;;;;;;;16857:37:53;;;;;900:24001;;;;;;;;16857:37;;;;;;900:24001;16857:37;;;:::i;16836:566::-;900:24001;;;;;;;;;;;16992:11;900:24001;16997:5;900:24001;;16992:11;:::i;:::-;900:24001;17013:11;900:24001;;17013:48;;;;;;900:24001;;;;;;;;;;;;17013:48;;;;;;;;;;;;;;;900:24001;;17071:9;900:24001;17076:3;900:24001;;17071:9;:::i;14516:17::-;900:24001;14530:3;900:24001;;;14526:7;14516:17;;900:24001;-1:-1:-1;;;900:24001:53;;;;;;1671:64:25;900:24001:53;;;;;;;;;;;;;;1232:36;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;11710:5;900:24001;;;-1:-1:-1;;;;;900:24001:53;11705:11;;900:24001;;11705:11;:::i;:::-;-1:-1:-1;;;;;;;;;;;11724:37:53;;;;;900:24001;;;;;;;;11724:37;;;;;;900:24001;11724:37;;;:::i;:::-;;;;;;;;;;;;;;900:24001;;;11769:11;900:24001;;11769:37;;;;;900:24001;;;;;;;;;;;;;11769:37;;;;;;;;;;900:24001;;11724:37;;;;:::i;:::-;900:24001;;11724:37;;;;900:24001;;;;;;;;;;;;;;;;;:::i;:::-;;7116:5;;;;;;:22;;;900:24001;7113:709;;;-1:-1:-1;;7159:5:53;900:24001;-1:-1:-1;;;;;900:24001:53;;7149:16;;900:24001;;7149:16;:::i;:::-;900:24001;;7175:11;900:24001;;7175:37;;;;;900:24001;;;;;;;;;;;;;7175:37;;;;;;;;;;7113:709;900:24001;;;7232:14;900:24001;;;;7159:5;900:24001;;;;;;;;;;;;7232:44;;900:24001;7232:44;;900:24001;;;;;1671:64:25;7232:44:53;;;;;;;;;;;7113:709;900:24001;7286:36;900:24001;;:::i;7286:36::-;900:24001;;7175:11;900:24001;;;;;;;;;;;;;7346:28;;900:24001;7346:28;;1671:64:25;7346:28:53;;;;;;;;;;;7113:709;900:24001;;;7384:33;900:24001;;;;:::i;:::-;7384:33;;;:::i;:::-;7175:11;900:24001;;;;;;;;;;;7441:27;;;;;;;;;;;;;7113:709;7478:31;900:24001;;-1:-1:-1;;;900:24001:53;;1671:64:25;;;;:::i;:::-;900:24001:53;1671:64:25;;900:24001:53;;;7478:31;:::i;7441:27::-;;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;7478:31;900:24001;;7441:27;;;;;;;;7346:28;;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;;;7346:28;;;;;;;7232:44;;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;;7232:44;;;;;;;;7175:37;;;;:::i;:::-;900:24001;;7175:37;;;;7113:709;7524:298;;;-1:-1:-1;7527:6:53;;;-1:-1:-1;;;;;;;;;;;7545:37:53;;;;;900:24001;;;;;;;;7545:37;;;;;;900:24001;7545:37;;;:::i;7524:298::-;-1:-1:-1;;;;;;;;;;;7680:60:53;;;;;900:24001;;;;;;;;7680:60;;;;;;900:24001;7680:60;;;:::i;7116:22::-;7125:13;7130:8;7125:13;;;7116:22;;900:24001;;;;;;;;;;;;;2241:89;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;23450:5;900:24001;;;-1:-1:-1;;;;;900:24001:53;23445:11;;900:24001;;23445:11;:::i;:::-;23464;900:24001;;;;;23464:44;;;;;900:24001;23497:8;900:24001;;;;;;;;;;;23464:44;;;;;;;;;;;;;900:24001;;;;23525:9;900:24001;;;-1:-1:-1;;;;;;;;;;;23516:19:53;;;;;;900:24001;;;;;;23516:19;;;;900:24001;23516:19;;900:24001;;23516:19;;;;;;;;;;;;;;;;;;900:24001;;;;;;;23604:17;900:24001;23543:79;;;;;;900:24001;;-1:-1:-1;;;23543:79:53;;900:24001;;;;;;;;;;;23543:79;;900:24001;23543:79;;;:::i;:::-;;;;;;;;;;;;;;900:24001;23717:35;;;;;;;900:24001;;-1:-1:-1;;;23717:35:53;;900:24001;;23717:35;;900:24001;;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;23717:35;900:24001;;;23717:35;;;;;;;;;;;;;900:24001;;;;23450:5;900:24001;;23760:15;;;;;900:24001;;23760:15;;;900:24001;23760:15;;900:24001;23760:15;;;;;;;;;;;;;;;;;900:24001;;;;;;;23783:36;;;;;;900:24001;;;;;;;23783:36;;;;900:24001;;23783:36;;900:24001;;;;;;;;;;;:::i;:::-;;;;;23783:36;;;;;;;;;;;;;900:24001;23827:38;;;;;;;900:24001;;;;;;;;;;;;;23827:38;;23844:4;900:24001;23827:38;;900:24001;23844:4;900:24001;;;;23827:38;;;;;;;;;;;900:24001;;;;;;;23873:36;;;;;;900:24001;;;;23873:36;;;;;900:24001;;23873:36;;900:24001;;;;;;;;;:::i;:::-;;;;;;23873:36;;;;;;;;;;;;;900:24001;24012:13;;;900:24001;;;;;;;;;23982:44;;;;;900:24001;;;;24113:20;;;;;;900:24001;;;;;;;;;;24113:20;;;;;900:24001;24113:20;;1671:64:25;24113:20:53;;;;;;;;;;;900:24001;;;;;;;;;;;;;;;;;;24163:22;;;;;;;;;;;;;;;900:24001;;;;;;;;;;24212:26;;;900:24001;-1:-1:-1;;;900:24001:53;;24212:26;;;;;;:::i;:::-;1671:64:25;24202:37:53;;900:24001;;;24251:23;;;;1671:64:25;24251:23:53;;;1671:64:25;;;;;;;;;:::i;:::-;;;24251:23:53;;;;;;;:::i;:::-;1671:64:25;24241:34:53;;900:24001;;;1671:64:25;;;:::i;:::-;900:24001:53;1671:64:25;;-1:-1:-1;;;900:24001:53;;;;4452:6:25;;;;4448:101;;;;900:24001:53;;;;;;;;;;24298:44;;;;;900:24001;;24429:20;;;;;900:24001;;;;;;24429:20;;;;;;;;900:24001;24429:20;;1671:64:25;24429:20:53;;;;;;;;900:24001;;4448:101:25;4479:31;-1:-1:-1;;;;;;;;;;;900:24001:53;;;4479:31:25;;;;;:::i;:::-;;;;4147:212;;4448:101;;;;;4147:212;-1:-1:-1;;;;;;;;;;;900:24001:53;;;;;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;4178:44:25;900:24001:53;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;4241:34;;;;;;;;900:24001:53;;;;;;;;;;;;;:::i;:::-;;;;1671:64:25;4294:34;;;;;:::i;:::-;4147:212;;;;;24163:22:53;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;;;;;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;23569:22;900:24001;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24163:22;;;;;;;900:24001;;;;24113:20;;;;:::i;:::-;900:24001;;24113:20;;;;23873:36;;;;:::i;:::-;900:24001;;23873:36;;;;23827:38;;;;:::i;:::-;900:24001;;23827:38;;;;23783:36;;;;:::i;:::-;900:24001;;23783:36;;;;23760:15;;;;:::i;:::-;900:24001;;23760:15;;;;23717:35;;;;:::i;:::-;900:24001;;23717:35;;;;23543:79;;;;:::i;:::-;900:24001;;23543:79;;;;23516:19;;;;:::i;:::-;900:24001;;23516:19;;;;23464:44;;;;:::i;:::-;900:24001;;23464:44;;;;900:24001;;;;;;;;;;;;;24518:11;900:24001;;;-1:-1:-1;;;24518:30:53;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;24518:30;;;;;;;;;;;900:24001;;;;;24574:30;;;;;;;;;;;;;24630:8;24574:30;;;;;900:24001;1671:64:25;;;;24630:8:53;;:::i;24574:30::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;24518;;;;;;;;;;;;;;:::i;:::-;;;;;900:24001;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;900:24001:53;;;;;;;;;;;;;;;;12122:11;900:24001;;12205:5;900:24001;-1:-1:-1;;;;;900:24001:53;;;12114:28;;12122:11;;12200;;900:24001;;12200:11;:::i;:::-;900:24001;;;;12219:56;;;;;900:24001;;;;;;12219:56;;;;12252:20;;900:24001;12252:20;;12219:56;;;;;;;;;;;;;900:24001;;;;;;;;;;;12331:28;900:24001;;;;;;12331:28;;;:::i;:::-;900:24001;12407:15;900:24001;;;;;;;;;;;;12407:35;;;;;;;;;;;;;;;900:24001;1671:64:25;900:24001:53;1671:64:25;;900:24001:53;;12397:46;900:24001;12456:9;900:24001;12456:9;900:24001;;12456:9;:::i;:::-;900:24001;;;;12838:17;900:24001;12777:79;;;;;;900:24001;;-1:-1:-1;;;12777:79:53;;900:24001;;;;;;;;;;;12777:79;;900:24001;12777:79;;;:::i;:::-;;;;;;;;;;;;;;900:24001;;;12889:28;900:24001;;;;;12889:28;;;:::i;:::-;900:24001;;12407:15;900:24001;;;;;;12948:35;;;;;;;;;;;;7918:5:28;12948:35:53;;;;;1671:64:25;900:24001:53;1671:64:25;;900:24001:53;;12938:46;:68;7918:5:28;;:::i;:::-;13070:16:53;900:24001;12205:5;900:24001;;13070:16;:::i;:::-;-1:-1:-1;;;;;;;;;;;13094:41:53;;;;;;900:24001;;-1:-1:-1;;;13094:41:53;;;900:24001;;13094:41;;900:24001;;;;;;-1:-1:-1;;;900:24001:53;;;;;;13094:41;900:24001;;;13094:41;;;;;;;;;;;;;900:24001;;;;;;;13143:37;;;;;;900:24001;;;;;;;13143:37;;;;;;;;;;;;;;;;;;900:24001;13188:41;;;;;;;900:24001;;13188:41;;;900:24001;;13188:41;;900:24001;;;;;;-1:-1:-1;;;900:24001:53;;;;;;;;;;;;;;;13188:41;;;;;;;;;;;900:24001;;;;;13237:37;;;;;900:24001;;;;;;;;;;;;;13237:37;;;900:24001;13237:37;;1671:64:25;13237:37:53;;;;;;;;900:24001;;13188:41;;;;:::i;:::-;900:24001;;13188:41;;;;13143:37;;;;:::i;:::-;900:24001;;13143:37;;;;13094:41;;;;:::i;:::-;900:24001;;13094:41;;;;12948:35;;;;;;;;;;;;;:::i;12777:79::-;;;;:::i;:::-;900:24001;;12777:79;;;;12407:35;;;;;;;;;;;;;:::i;:::-;;;;12219:56;;;;:::i;:::-;900:24001;;12219:56;;;;900:24001;;;;;;;;;;;;;1071:32;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;1848:70;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;1762:70;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;1159:30;900:24001;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;2957:18;;;;;-1:-1:-1;;;;;2957:18:53;;;;;;;;;;;;;;;;;;;;;;;;2942:33;900:24001;;-1:-1:-1;;;;;;900:24001:53;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;3079:59;;;;900:24001;;;-1:-1:-1;;;900:24001:53;;;;;;3079:59;;;900:24001;;3079:59;;2942:33;;900:24001;;;;;;2942:33;;900:24001;;3079:59;900:24001;3079:59;:::i;:::-;1671:64:25;3052:100:53;;900:24001;;3166:10;900:24001;;3015:171;;;;;;900:24001;;-1:-1:-1;;;3015:171:53;;;900:24001;3015:171;;1671:64:25;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;3015:171;;;;;;;;;;;900:24001;;;;;;;;;3291:57;;;900:24001;;;;-1:-1:-1;;;900:24001:53;;;;3291:57;;;;;;:::i;:::-;1671:64:25;3264:98:53;;900:24001;3376:8;900:24001;;3227:167;;;;;900:24001;;3227:167;;;900:24001;3227:167;;1671:64:25;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;3227:167;;;;;;;;;;;900:24001;;;;;;;;;;3467:59;;;900:24001;;;;;;;;3079:59;3467;;;;;:::i;:::-;1671:64:25;3457:70:53;;900:24001;3529:10;900:24001;;3433:107;;;;;900:24001;;3433:107;;;900:24001;3433:107;;1671:64:25;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;3433:107;;;;;;;;;;;900:24001;;;;;;;;;3618:64;;;900:24001;;;;-1:-1:-1;;;900:24001:53;;;;3618:64;;;;;;:::i;:::-;1671::25;3608:75:53;;900:24001;3685:7;900:24001;;3584:109;;;;;900:24001;;3584:109;;;900:24001;3584:109;;1671:64:25;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;3584:109;;;;;;;;;;;900:24001;;;;;;;;;;3759:52;;;900:24001;;;-1:-1:-1;;;900:24001:53;;;;3759:52;;;;;;:::i;:::-;1671:64:25;3749:63:53;;900:24001;3814:10;900:24001;;3725:100;;;;;900:24001;;3725:100;;;900:24001;3725:100;;1671:64:25;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;3725:100;;;;;;;;900:24001;;;;;;;;3889:42;;;900:24001;-1:-1:-1;;;900:24001:53;;3376:8;3889:42;;;;;:::i;:::-;1671:64:25;3879:53:53;;900:24001;3934:12;900:24001;;3855:92;;;;;900:24001;;3855:92;;;900:24001;3855:92;;1671:64:25;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;3855:92;;;;;;;;900:24001;;;;;;;;;4000:32;;;;;;;;;;;;;;;;;;;;;;;;900:24001;;4000:32;;;;;;;;;900:24001;;;;;;;;;;;;;;;;;;;4106:54;;;;900:24001;-1:-1:-1;;;900:24001:53;;;;;;-1:-1:-1;;;900:24001:53;;;;4106:54;;;;;;:::i;:::-;1671:64:25;4096:65:53;;4072:115;;;;;;900:24001;;4072:115;;;900:24001;4072:115;;1671:64:25;;;;900:24001:53;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;4072:115;;;;;;;;;;900:24001;;;;;;;;;4239:36;;;;;;;;;;;;;;;;;;;;;;;;;;900:24001;;4239:36;;;;;;;;;900:24001;;4218:57;900:24001;;;;;;4218:57;900:24001;;;;;;;;4344:58;;;900:24001;;;;-1:-1:-1;;;900:24001:53;;;;4344:58;;;;;;:::i;:::-;1671:64:25;4334:69:53;;4310:123;;;;;;900:24001;;4310:123;;;900:24001;4310:123;;1671:64:25;;;;900:24001:53;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;4310:123;;;;;;;;;;900:24001;;;;;;;;;;4218:57;900:24001;;4441:69;;;;;;900:24001;;;;;;;;;;;;;4441:69;;;900:24001;4441:69;;1671:64:25;900:24001:53;;;;;;4441:69;;;;;;;;900:24001;;;;;;;;;4559:29;;;;;;;;;;;;;;;;;;;;;;;;;;900:24001;;4559:29;;;;;;;;;900:24001;;;;;;;;;;;;;;;;;4661:51;;;900:24001;;;;-1:-1:-1;;;900:24001:53;;;;4661:51;;;;;;:::i;:::-;1671:64:25;4651:62:53;;4627:109;;;;;;900:24001;;4627:109;;;900:24001;4627:109;;1671:64:25;;;;900:24001:53;;;;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;4627:109;;;;;;;;;;900:24001;;;;;;;;;4788:33;;;;;;;;;;;;;;;;;;;;;;;;;;900:24001;;4788:33;;;;;;;;;900:24001;;4770:51;900:24001;;;;;;4770:51;900:24001;;;;;;;4893:55;;;900:24001;;;;-1:-1:-1;;;900:24001:53;;;;4893:55;;;;;;:::i;:::-;1671:64:25;4883:66:53;;4859:117;;;;;;900:24001;;4859:117;;;900:24001;4859:117;;1671:64:25;;;;900:24001:53;;;;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;4859:117;;;;;;;;;;900:24001;;;;;;;;;5033:40;;;;;;;;;;;;;;;;;;;;;;;;;;900:24001;;5033:40;;;;;;;;;900:24001;;;;;;;;;;;;;;;;;5143:62;;;900:24001;;;;-1:-1:-1;;;900:24001:53;;;;5143:62;;;;;;:::i;:::-;1671:64:25;5133:73:53;;5109:131;;;;;;900:24001;;5109:131;;;900:24001;5109:131;;1671:64:25;;;;900:24001:53;;;;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;5109:131;;;;;;;;;;900:24001;;;;;;;;;5277:26;;;;;;;;;;;;;;;;;;;;;;;;;;900:24001;;5277:26;;;;;;;;;900:24001;;;;;;;;;;;;;;;;;5368:48;;;900:24001;;;;-1:-1:-1;;;900:24001:53;;;;3814:10;5368:48;;;;;:::i;:::-;1671:64:25;5358:59:53;;5334:103;;;;;;900:24001;;5334:103;;;900:24001;5334:103;;1671:64:25;;;;900:24001:53;;;;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;5334:103;;;;;;;;;;900:24001;;;;;5481:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:24001;;5469:27;900:24001;;;;;;5469:27;900:24001;;;;;;;5573:49;;;900:24001;;;;-1:-1:-1;;;900:24001:53;;;;5573:49;;;;;;:::i;:::-;1671:64:25;5563:60:53;;5528:133;;;;;;900:24001;;5528:133;;;900:24001;5528:133;;1671:64:25;;;;900:24001:53;;;;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;5528:133;;;;;;;;;;900:24001;;;;;5698:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:24001;;;;;;;;;;;;;;;;;5787:46;;;900:24001;;;;-1:-1:-1;;;900:24001:53;;;;3376:8;5787:46;;;;;:::i;:::-;1671:64:25;5777:57:53;;5742:127;;;;;;900:24001;;5742:127;;;900:24001;5742:127;;1671:64:25;;;;900:24001:53;;;;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;5742:127;;;;;;;;;;900:24001;-1:-1:-1;;900:24001:53;;;5906:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:24001;;;5898:19;900:24001;;;;;;;5898:19;900:24001;;;;;;-1:-1:-1;;;900:24001:53;;5994:45;;;;900:24001;;;;;;3166:10;5994:45;;;;;:::i;:::-;1671:64:25;5984:56:53;;5949:125;;;;;;900:24001;;5949:125;;;900:24001;5949:125;;1671:64:25;;;;900:24001:53;;;;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;5949:125;;;;;;;;;;;;;;900:24001;;;;;;;6150:40;;;900:24001;-1:-1:-1;;;900:24001:53;;3685:7;6150:40;;;;;:::i;:::-;1671:64:25;6140:51:53;;6119:76;;;;;900:24001;;;;;;;;;;;;;;;6119:76;;900:24001;6119:76;;1671:64:25;900:24001:53;;;;1671:64:25;6119:76:53;;;;;;;;900:24001;;;4218:57;900:24001;;;;6303:9;900:24001;;;;;;;;;;;;;6277:79;;;;900:24001;6277:79;;900:24001;;;;;;6277:79;;;;;;;;;;;;;;;900:24001;;;;6396:40;900:24001;;;6396:40;900:24001;;;4218:57;900:24001;;;;;6303:9;900:24001;;;;;;6632:79;;;;;;;900:24001;6632:79;;900:24001;;;;6632:79;;;;;;;;;;;900:24001;;;;;;;;;;;;;6632:79;;;;;;-1:-1:-1;6632:79:53;;;;;;:::i;:::-;;;;;6277;;;;;;;;;;;;;;:::i;:::-;;;;6119:76;;;;:::i;:::-;900:24001;;6119:76;;;;5949:125;;;;;;;:::i;:::-;900:24001;;5949:125;;;;;;5906:11;-1:-1:-1;;;1671:64:25;;900:24001:53;;1671:64:25;;;;5742:127:53;;;;:::i;:::-;900:24001;;5742:127;;;;5698:12;-1:-1:-1;;;1671:64:25;;900:24001:53;;1671:64:25;;;;5528:133:53;;;;:::i;:::-;900:24001;;5528:133;;;;5334:103;;;;:::i;:::-;900:24001;;5334:103;;;;5277:26;-1:-1:-1;;;1671:64:25;;900:24001:53;;1671:64:25;;;;5109:131:53;;;;:::i;:::-;900:24001;;5109:131;;;;4859:117;;;;:::i;:::-;900:24001;;4859:117;;;;4627:109;;;;:::i;:::-;900:24001;;4627:109;;;;4441:69;;;;:::i;:::-;900:24001;;4441:69;;;;4310:123;;;;:::i;:::-;900:24001;;4310:123;;;;4239:36;-1:-1:-1;;;1671:64:25;;900:24001:53;;1671:64:25;;;;4072:115:53;;;;:::i;:::-;900:24001;;4072:115;;;;4000:32;-1:-1:-1;;;1671:64:25;;900:24001:53;;1671:64:25;;;;3855:92:53;;;;:::i;:::-;900:24001;;3855:92;;;;3725:100;;;;:::i;:::-;900:24001;;3725:100;;;;3584:109;;;;:::i;:::-;900:24001;;3584:109;;;;3433:107;;;;:::i;:::-;900:24001;;3433:107;;;;3227:167;;;;:::i;:::-;900:24001;;3227:167;;;;3015:171;;;;:::i;:::-;900:24001;;3015:171;;;;2957:18;-1:-1:-1;;;1671:64:25;;;900:24001:53;1671:64:25;;;;900:24001:53;;;;;;;-1:-1:-1;;900:24001:53;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;900:24001:53;;;7898:5;;;;;:38;;;900:24001;7895:1249;;;-1:-1:-1;7957:5:53;900:24001;-1:-1:-1;;;;;900:24001:53;7947:16;;900:24001;;7947:16;:::i;:::-;7973:11;900:24001;;;;;7973:37;;;;;900:24001;;;;;;;;;;;;;7973:37;;;;;;;;;;7895:1249;900:24001;;;8030:14;900:24001;;;;7957:5;900:24001;;;;;;;;;;;8030:44;;900:24001;8030:44;;900:24001;;;;;1671:64:25;900:24001:53;;;8030:44;;;;;;;;;;;;;;7895:1249;900:24001;8084:36;900:24001;;:::i;:::-;8095:7;;8084:36;:::i;:::-;900:24001;;;;;;;;;;;;;;8144:28;;;;;900:24001;8144:28;;1671:64:25;8144:28:53;;;;;;;;;;7895:1249;8182:19;;;;;:::i;:::-;900:24001;-1:-1:-1;;;;;;;;;;;8254:44:53;;;;;900:24001;;-1:-1:-1;;;8254:44:53;;900:24001;;8254:44;;900:24001;;;;;;-1:-1:-1;;;900:24001:53;;;;;;;;;;;;;;;8254:44;;;;;;;;7895:1249;900:24001;;;;;;;;8308:38;;;;;;900:24001;;;;;;;;;;;8308:38;;;;8343:2;900:24001;8308:38;;1671:64:25;8308:38:53;;;;;;;;7895:1249;900:24001;;;;;8395:38;;;;;;900:24001;;;;;;;8395:38;;;;;;;;900:24001;8395:38;;1671:64:25;8395:38:53;;;;;;;;;;;7895:1249;900:24001;;;;;;;;;;8458:28;;;;;;;900:24001;8458:28;;1671:64:25;8458:28:53;;;;;;;;;;;7895:1249;8507:17;;8548:7;8507:17;900:24001;8507:17;;;;;:::i;:::-;8548:7;;;:::i;:::-;900:24001;;;;;;;;;;;8581:27;;;;;;;;;;;;;7895:1249;8632:7;;;;;:::i;8581:27::-;;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;8632:7;900:24001;;8581:27;;;;;;;;;8458:28;;;;;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;;;;8458:28;;;8548:7;8458:28;;;;;;;8395:38;;;;;;;:::i;:::-;900:24001;;8395:38;;;;;;8308;;;;:::i;:::-;900:24001;;8308:38;;;;8254:44;;;;:::i;:::-;900:24001;;8254:44;;;;8144:28;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;8182:19;900:24001;;8144:28;;;;;;;;900:24001;;;;;;;;;8030:44;;;;;;;;;;;;;;;;;:::i;:::-;;;900:24001;;;;;8030:44;;;;;;;;;7973:37;;;;:::i;:::-;900:24001;;7973:37;;;;7895:1249;8655:489;;;;;;8658:6;;;900:24001;;;;-1:-1:-1;;;;;;;;;;;8676:37:53;;;;;900:24001;;;;;;;;8676:37;;;;;;900:24001;8676:37;;;:::i;8655:489::-;8900:5;900:24001;-1:-1:-1;;;;;900:24001:53;;8890:16;;900:24001;;8890:16;:::i;:::-;900:24001;8916:11;900:24001;;8916:37;;;;;900:24001;;;;;;;;;;;;8916:37;;;;;;;;;;8655:489;900:24001;;;;8973:14;900:24001;;;;;8900:5;900:24001;;;;;;;;;;;;8973:44;;900:24001;8973:44;;900:24001;;;;;1671:64:25;8973:44:53;;;;;;;;;;;900:24001;-1:-1:-1;;;;;;;;;;;9027:60:53;;;;;900:24001;;;;;;;;9027:60;;;;;;900:24001;9027:60;;;:::i;8916:37::-;;;;;;;:::i;:::-;;;;;;7898:38;900:24001;7928:8;7907:17;900:24001;;;7907:17;;:::i;:::-;:29;;7898:38;;900:24001;;;;-1:-1:-1;;;;;900:24001:53;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;900:24001:53;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;1671:64:25:-;-1:-1:-1;;;;;1671:64:25;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:25;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;;-1:-1:-1;;1671:64:25;;;;:::o;:::-;;;;;;;;;;:::i;:::-;900:24001:53;1671:64:25;900:24001:53;;1671:64:25;;;:::i;:::-;;;;-1:-1:-1;1671:64:25;;;;:::o;:::-;;;:::o;1819:584::-;1873:7;900:24001:53;;;;;;;;;;;;;;;1896:14:25:o;1869:528::-;1941:25;-1:-1:-1;;;;;;;;;;;2939:104:25;;1980:374;;2367:19;;;:::o;1980:374::-;900:24001:53;;;;;;;2196:43:25;;;;900:24001:53;;;1671:64:25;;;900:24001:53;1671:64:25;;;900:24001:53;2196:43:25;;;;;:::i;:::-;2086:175;1671:64;900:24001:53;;2086:175:25;;1671:64;2196:43;2086:175;;1671:64;;;;;;;;;;;;;;:::i;:::-;;;2086:175;1671:64;2086:175;;;;;;;:::i;:::-;2047:232;;;;;;;:::i;:::-;2196:43;1671:64;;;2312:27;;1671:64;;;;2196:43;2312:27;1671:64;900:24001:53;;;;1671:64:25;;;;2297:42;2367:19;:::o;900:24001:53:-;;;;;;;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;:::o;:::-;;;;-1:-1:-1;;;900:24001:53;;;;;;;:::o;:::-;;;;-1:-1:-1;;;900:24001:53;;;;;;;:::o;2410:424:25:-;-1:-1:-1;;;;;;;;;;;2939:104:25;;2445:359;;2410:424;900:24001:53;;;;2928:1:25;900:24001:53;;;2928:1:25;900:24001:53;2410:424:25:o;2445:359::-;900:24001:53;;2645:67:25;;;;900:24001:53;;;;1671:64:25;;;900:24001:53;;;1671:64:25;2705:4;900:24001:53;;;1671:64:25;900:24001:53;2645:67:25;;900:24001:53;1671:64:25;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;-1:-1:-1;1671:64:25;2534:196;;1671:64;;;;900:24001:53;1671:64:25;2534:196;;;1671:64;;;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;900:24001:53;;;;;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;:::o;:::-;1671:64:25;900:24001:53;1671:64:25;;;;:::i;:::-;900:24001:53;1671:64:25;;-1:-1:-1;;;900:24001:53;;;;:::o;:::-;1671:64:25;900:24001:53;1671:64:25;;;;:::i;:::-;900:24001:53;1671:64:25;;-1:-1:-1;;;900:24001:53;;;;:::o;:::-;;;;;1671:64:25;;900:24001:53;;;;;;;;;;;;:::i;:::-;1671:64:25;;-1:-1:-1;;1671:64:25;900:24001:53;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;;;;;;;:::i;:::-;;:::o;3418:191:25:-;3496:10;;3492:111;;3418:191;;:::o;3492:111::-;-1:-1:-1;;;;;;;;;;;3527:30:25;3582:9;900:24001:53;;;3527:30:25;;;;;:::i;:::-;;;;3582:9;:::i;:::-;3418:191::o;3255:157::-;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;900:24001:53;;;;;;;;;;;;;;;;3345:30:25;;;:::i;5469:178::-;5545:6;;;5541:100;;5469:178;;;:::o;5541:100::-;-1:-1:-1;;;;;;;;;;;5572:30:25;5628:1;900:24001:53;;;5572:30:25;;;;;:::i;:::-;;;;5202:262;5259:6;;;5255:203;;5202:262;;:::o;5255:203::-;900:24001:53;;;;-1:-1:-1;;;;;;;;;;;900:24001:53;;;;;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;5286:41:25;900:24001:53;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;5346:31;-1:-1:-1;;;;;;;;;;;5346:31:25;;;;;;900:24001:53;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;5396:31;;;;;:::i;1998:108:28:-;-1:-1:-1;;;;;;;;;;;2049:22:28;;;;;900:24001:53;;-1:-1:-1;;;2049:22:28;;-1:-1:-1;;;;;900:24001:53;;;2049:22:28;;;900:24001:53;;;-1:-1:-1;;;900:24001:53;;;1671:64:25;2049:22:28;;;900:24001:53;;;2049:22:28;;;;;;;;;;1998:108;2081:18;;;;;;900:24001:53;;;;;;;;;;;;;;;2081:18:28;;2049:22;2081:18;;900:24001:53;2081:18:28;;;;;;;;1998:108;;:::o;2081:18::-;;;;;:::i;:::-;900:24001:53;;1998:108:28;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;900:24001:53;;;;;;;;;;:::o;:::-;1671:64:25;;;900:24001:53;;;;;;;;;;;;;;;;;;:::o;1449:98:28:-;-1:-1:-1;;;;;;;;;;;1495:22:28;;;;;900:24001:53;;-1:-1:-1;;;1495:22:28;;-1:-1:-1;;;;;900:24001:53;;;1495:22:28;;;900:24001:53;;;-1:-1:-1;;;900:24001:53;;;1671:64:25;1495:22:28;;;900:24001:53;;;1495:22:28;;;;;;;;;;1449:98;1527:13;;;;;;900:24001:53;;;;;;;;;;;;;;;1527:13:28;;1495:22;1527:13;;900:24001:53;1527:13:28;;;;;;;;1449:98;;:::o;1495:22::-;;;;;;;:::i;:::-;;;;;900:24001:53;;;;;;;;:::i;:::-;;1671:64:25;900:24001:53;;1671:64:25;;;:::i;:::-;900:24001:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;23561:6;900:24001;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;23561:6;-1:-1:-1;900:24001:53;;;;-1:-1:-1;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;900:24001:53;;;;;-1:-1:-1;;900:24001:53;;;;;;;;-1:-1:-1;900:24001:53;;;;;;;1671:64:25;;;-1:-1:-1;900:24001:53;;;;;-1:-1:-1;900:24001:53;;;;;;;;;;;;;;-1:-1:-1;12795:6:53;900:24001;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;900:24001:53;;;;;;;12803:22;900:24001;-1:-1:-1;;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:25;900:24001:53:o;:::-;-1:-1:-1;900:24001:53;;;;;;-1:-1:-1;;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;1671:64:25;900:24001:53;;;;;;;;;;;;;12803:22;-1:-1:-1;900:24001:53;;;;-1:-1:-1;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;900:24001:53;;;;;;;;;;;;;;;;;-1:-1:-1;900:24001:53;;-1:-1:-1;900:24001:53;;;;;;;;;;;;;;12795:6;-1:-1:-1;900:24001:53;;;;-1:-1:-1;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;1671:64:25;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;:::o;:::-;1671:64:25;900:24001:53;1671:64:25;;;;:::i;:::-;900:24001:53;1671:64:25;;900:24001:53;;;;;:::o;:::-;1671:64:25;900:24001:53;1671:64:25;;;;:::i;:::-;900:24001:53;1671:64:25;;900:24001:53;;;;;:::o;:::-;1671:64:25;900:24001:53;1671:64:25;;;;:::i;:::-;900:24001:53;1671:64:25;;900:24001:53;;;;;:::o;11201:335:28:-;;16145:1:53;11368:19:28;;;;:::i;:::-;11402:16;11398:132;;11201:335;;;:::o;11398:132::-;-1:-1:-1;;;;;;;;;;;11439:33:28;900:24001:53;;;;11439:33:28;;;;;:::i;:::-;;;;10819:19;;;;:::i;:::-;16145:1:53;10853:16:28;;10849:340;;11398:132;11201:335;;;:::o;10849:340::-;900:24001:53;;;;;-1:-1:-1;;;;;;;;;;;900:24001:53;;;;;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;10890:53:28;900:24001:53;;;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;-1:-1:-1;;;;;;;;;;;10962:32:28;;;;;;;;900:24001:53;;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;11013:32:28;;;900:24001:53;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;16145:1;900:24001;;;1671:64:25;11064:39:28;900:24001:53;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;1671:64:25;11122:36:28;;;:::i;:::-;10849:340;;;;;;11201:335;;20899:1:53;11368:19:28;;;;:::i;:::-;11402:16;11398:132;;11201:335;;;:::o;11398:132::-;-1:-1:-1;;;;;;;;;;;11439:33:28;900:24001:53;;;;11439:33:28;;;;;:::i;:::-;;;;10819:19;;;;:::i;:::-;20899:1:53;10853:16:28;;10849:340;;11398:132;11201:335;;;:::o;10849:340::-;900:24001:53;;;;;-1:-1:-1;;;;;;;;;;;900:24001:53;;;;;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;10890:53:28;900:24001:53;;;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;-1:-1:-1;;;;;;;;;;;10962:32:28;;;;;;;;900:24001:53;;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;11013:32:28;;;900:24001:53;;;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;20899:1;900:24001;;;1671:64:25;11064:39:28;900:24001:53;;;;;;;;;;-1:-1:-1;;;900:24001:53;;;;;;1671:64:25;11122:36:28;;;:::i;37202:138::-;37288:5;;;;;;37308;;;;:::i;37288:45::-;37328:5;;;:::i;900:24001:53:-;;;;;;;;;;;:::i;:::-;;;;17615:9;900:24001;17615:9;900:24001;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:25;900:24001:53:o;:::-;-1:-1:-1;900:24001:53;;;-1:-1:-1;900:24001:53;;-1:-1:-1;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6548:139:30;-1:-1:-1;6548:139:30;;;;6628:51;900:24001:53;;6628:51:30;;900:24001:53;6628:51:30;;;;;;;;;900:24001:53;6628:51:30;;;900:24001:53;;;;;;:::i;:::-;;;;;1671:64:25;6628:51:30;1671:64:25;;6628:51:30;;;;;;:::i;:::-;1671:64:25;392:159:30;131:42;392:159;;;6548:139::o;900:24001:53:-;;;;;;;;;;;;;-1:-1:-1;;;;;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:25;900:24001:53;;;1671:64:25;;:::i;:::-;900:24001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "SSVNetwork()": "faf7772e",
    "SSVToken()": "7bf5d908",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "failed()": "ba414fa6",
    "feeRecipient()": "46904840",
    "frensArt()": "94cd95e3",
    "frensLogo()": "ca413fdc",
    "frensMetaHelper()": "bc48e947",
    "frensOracle()": "edc91a92",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "pmFont()": "cae72da3",
    "setUp()": "0a9254e4",
    "ssvNetwork()": "10d04858",
    "stakingPool()": "0c56ae3b",
    "stakingPool2()": "5f583c1d",
    "stakingPoolFactory()": "a1b8adcb",
    "testAddToDeposit(uint64,uint64)": "020f12da",
    "testAddToDepositWrongPool(uint64,uint64)": "b7ab10ee",
    "testBadWithdrawalCred()": "8adcff77",
    "testClaim(uint32,uint32)": "5c97929d",
    "testDeposit(uint72)": "4ccd89c4",
    "testEmptyStakeModifier()": "5176a102",
    "testExit()": "456f30ca",
    "testFees(uint32,uint32)": "5efae371",
    "testGetIds()": "3c20ae96",
    "testOwner()": "9e535c69",
    "testPubKeyMismatch()": "94892dda",
    "testSetArt()": "f1759a8b",
    "testStake()": "3a1143da",
    "testStakeTwoStep()": "5dcf6be5",
    "testTooMuchDeposit()": "8d299cc4",
    "testWithdraw(uint72,uint72)": "90f805d9",
    "vm()": "3a768463",
    "waves()": "875d5012"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SSVNetwork\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SSVToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensLogo\",\"outputs\":[{\"internalType\":\"contract FrensLogo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensOracle\",\"outputs\":[{\"internalType\":\"contract FrensOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pmFont\",\"outputs\":[{\"internalType\":\"contract PmFont\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssvNetwork\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool2\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"x\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"y\",\"type\":\"uint64\"}],\"name\":\"testAddToDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"x\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"y\",\"type\":\"uint64\"}],\"name\":\"testAddToDepositWrongPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBadWithdrawalCred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"testClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"}],\"name\":\"testDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testEmptyStakeModifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"testFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testPubKeyMismatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSetArt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStakeTwoStep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTooMuchDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"},{\"internalType\":\"uint72\",\"name\":\"y\",\"type\":\"uint72\"}],\"name\":\"testWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"waves\",\"outputs\":[{\"internalType\":\"contract Waves\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/StakingPoolTest.t.sol\":\"StakingPoolTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensArt.sol\":{\"keccak256\":\"0x6fc3ddbcb82a540c6cb5862bfd3b32b758f6f28292ce6553f9b31d5242076e5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://431413f8466c5fa7885eb18cb9a627c83f2face7284622ff4d26e5c726e8581e\",\"dweb:/ipfs/QmW8Dd53X8TCEwy9rGGnix981H8eT42XFVq3CGd9xHjs4R\"]},\"contracts/FrensLogo.sol\":{\"keccak256\":\"0xf56d97e69b11272fd6d003e9a4c6774da4df43e6d539e229b213be8d31bf767d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48c8bc31ce15905d0c3b7edd3fc59a12cbc6643baf3236b0cd8408ee2788eabb\",\"dweb:/ipfs/QmT6dJH7nACq8xS1gZyUPuxyTF3MUD9KoWjMzfqwxZLfs2\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0x446caa0f7ba537a12580a573e25e4f1451ee84e28ac5b690896325ae9a550b05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1eada04da867f4f88e7f3c9610a3193130f42668f17f2b3a89853dae02962d5c\",\"dweb:/ipfs/QmQFkHt5eeQxqcazJxBjEVsrd4q1oDvwf6gD335UkmM1Ss\"]},\"contracts/FrensOracle.sol\":{\"keccak256\":\"0x47b53ff148dbc4cbde609fd92f77dd024d8bbea9100a86d251ba19007f86e7f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b76b61a142e05f91751d9f92833bb871f2e64c0f9eff063c80493ac02b22d7d2\",\"dweb:/ipfs/QmcL1gRKGt6oWBk7tE8RqPMkFbQpEiXA7zuWatruLmM2NL\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0x018bb9c1b5570cf3e5e2c6d640649964824982091719aa8edf07658bdb8d7970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a2d5d9106bbc1219b9cb79cb6871f21dc5f3b55301ce83959edd4a9b3ae3ca9\",\"dweb:/ipfs/QmSGydiFaYRt7CaXZyfevRhYzizXpe5ZR8UJog147yRuGH\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x63d2019b0f15796d3bbbe1900353696ed1a6f7333e907cb4a5bbfaffb4111dc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a711e671a79d4e8d2f6679d7999cf6715ff9d195a55e0438799942d07a53f97d\",\"dweb:/ipfs/QmZDkQMDd7BGgXnFQzoUWjyw3B6jeVVLxaVTre2RTEWJ4p\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0xc6f96d09d0c1f3349bc216170fdc6d58961b5a69b9a65fa825afeeb47b9eaac9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2f900c4c9343c2274e0839d5b3dace55bea9ba115efdfa7de002bac1ac2550ee\",\"dweb:/ipfs/QmRAoCgRFznFk8RtFf5FtRUWCZzLSRwNpe3UNpjXnvQ3XR\"]},\"contracts/PmFont.sol\":{\"keccak256\":\"0xb5f38951a3e1695fad83b578e2e041165465c9821f464941246a38361c9a34f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f44a0f3aa53ca3aed2af8f1743850dedb663e079885513018b32a1fbc50f86a\",\"dweb:/ipfs/QmUWKaHvEortrBVqvrJggrBjsX8BC9rGB9kqNCoNMeixUd\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0x736a852a2af7544783ab6916ce0ecb01d7e251e23a2d8f1e64af8d14fc9417cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25a5c19b1d44a96d7821862384dd0285db917997268d06e465d02eae9dba63c0\",\"dweb:/ipfs/QmRd7fVHyqEtwUWpSruREFtQyCLmkrKf6zfR7AKb6N9aTQ\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0xf760f8cf93eaaade5978ce0c7cdb1fe02dc4cf344ac30db5c8ab315dc29ddb3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3e99be468e5788c39ca8894fa766ee88d8ed34ae9dfbbc47c89736a3b85b7c3\",\"dweb:/ipfs/QmeC7Wv2cXfYVpUHnEefsgo1Wm8rEsHCn8qasGVbt9KT5o\"]},\"contracts/Waves.sol\":{\"keccak256\":\"0x1fddf83b0e583cec7aa37fc45b7c89f7d4898567d1fcb324adf61685d60831ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7aa6af83006c320c1d89ee51767ead618ff60ed3339c27aa98cc7b2612adb2\",\"dweb:/ipfs/QmUYZJv4hXk7ixPZzJ8sLApBvBnxidRytEz2jW63h6s75x\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x839f7e3c08d72fc538e0889fb75065435242ae3b9d81c839176a8309326775db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://869748145485481385c88e27b24e2952017bb11a150739dcdb1d50915830d4b9\",\"dweb:/ipfs/QmTQ9jy87d8qxpPLg3g3tqE63GJenfD1cz16x5iZnkuJao\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x71ec8963cc6af99db89417e259f4987b2503e31585db6450e7140e192d868e32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e5727b5f0f1d911d827f3b97bb00c4a6a21aa3b235ff2dcf9c70122c9485bc\",\"dweb:/ipfs/QmNTf6qo7kCzhuzyuV7q5rpmaT4Juepfgkc6eXYc93HYLT\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0x9ca4f7eb7011a8f1ed7a6d9a0f88ab68b29d49b63aa8864a694b63d5551a0bad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://691442367708458da9827c029828f74ddea99a4b327a2e31f2efdfd759b97f88\",\"dweb:/ipfs/Qmbd6EADu2GntQhPobDgdRg9c6vzwutzgn7fZfa5gTC8Jr\"]},\"contracts/interfaces/IFrensLogo.sol\":{\"keccak256\":\"0x71b64fda21ce2b1daa8f795394c34335837044734eaeaf1e73bd7d3a836365bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dd1adc76ac6ccbf64393fc480bedba681b01b1b33e68459149b879caa0fcc1a\",\"dweb:/ipfs/QmaLbTp7sztsYHKQ1D4vyGzvdRWwNGF3KqExWzCSiCdinM\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0xc08609d3c44bdaf6d77150129ed72337dfaee1a560e305bd2f435bb8ac0d1f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a56b465c201630f128ce60fddd6c9fd341193ce759b7a854996bf33bab5b042c\",\"dweb:/ipfs/QmYdSsAYumebM5BypK4tPxGoNKmezFv5VAHQotEDLQKjFb\"]},\"contracts/interfaces/IFrensOracle.sol\":{\"keccak256\":\"0xb8fb907cadbdd9dd146bd3179d385be91b039955df1eb85731afbbed01894e57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af779ef4e0f538f2ca4a397f0b8f757d33c7f3d2b64baf29d39045ae7b41bdce\",\"dweb:/ipfs/QmQytMCQNJCF5PoSB3EMSYNWaZqbHYjfSppHAZ3sUCCRYS\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0xef1985c0b95767f7b96d1f21aed9e48142c021d25d574f0615323ec2b83ad996\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074079edb1b5b586e73914cd4203e49eb5fd813baa6fc85038de0f23bd5a25e7\",\"dweb:/ipfs/QmQXtreUs6eJyuoLEGb79a1nWwdiziQeoL2kbjTPnYk1G3\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0xb5ee629c513705bc3c46fbe4ce81f6a9edac2c0d1f7030da14b3859a2e8aa39e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://970db7758aa9fa468922dae70b2c85c3094506dfb59293520d4fd83769b3bee1\",\"dweb:/ipfs/QmVjiqtVZYCxXVKtxsFZhMJvFcTYhKFuiBa6eP3UtpnVeW\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0xfd293708621d8eb26c25db108d90583d36ab7f4a7f1f71a75e0b6f54c9a0a451\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c10da0cd1b7cccb05340a2505803ca0ff8fe1821c5107059c95d09eff6e7a1a4\",\"dweb:/ipfs/QmfSzqmRf2sYBMfXzav6jdkuNc6N4xoN3NUJ1o5624vUkt\"]},\"contracts/interfaces/IPmFont.sol\":{\"keccak256\":\"0x505d6001f751cbbe1261b1a87160d99c438ff76d198f316b5fc8a9066f629e24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f00e50f07ffca6b806ec9afa4cd5e0325c6c80f691014fab4732782eedb18eef\",\"dweb:/ipfs/QmV5o8JGPuAhUXUzeUt97oo7gTCFSjNicXhBiKpsxGuzvs\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0xc4849e951336ce62ba55f6b4a6158a8c1bc8716e41b83a4afa98b23c1d97442c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3beb90e7b61ecd038b18fccda4384f60b0e5c486d1392d35ad3e9be5c3d012ae\",\"dweb:/ipfs/QmP5VAe3ZFFyTjWsyyTm5VN8U2d5u6U3cfcMHJHticD9w6\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0xfcce7e4e1de632af6ab1d89918ff97980a3b0e282eab86875e86128c41260574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://caa6604f6c96202509d52c75a78ceecee9bf95fa4dfc040c47a7d05c1d1cc250\",\"dweb:/ipfs/QmbjsaNxKJP9HAyk6HmSVE83XgNtFLRMAtTWp87uszQ8ab\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0x004e7a6a1ea7ac2dd49f26e4b423da2e87b4c9014867ec81f9572a15e0fba4a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ad4480a298be6ea7421524b1b185a634566cea4f989ceb7dac8094b17f807a2\",\"dweb:/ipfs/QmeNsCgQQif5w4Yuz3L7oddxsMXSzmECFgesdEHQ5Nca9P\"]},\"contracts/interfaces/IWaves.sol\":{\"keccak256\":\"0x5a318f5ff6701f3371425a37f40db5dfc5a960a197602bb561ca084b305d12b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f23abde1abc61d913d90bef65a3c421f2c037151304f61ac27585ad02d310c34\",\"dweb:/ipfs/QmeK8VZ9LR2JhXSNBotFjoEsXdjBfgrt6QfdMDuPnTL1rq\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/StakingPoolTest.t.sol\":{\"keccak256\":\"0x35430881d9855878a96ea440237646d92c9b46a79a365d75f415094bc3af6035\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://48111b20135f4a47ef3498d2a707c0f3b6d03380f42076def1d3254cb516c993\",\"dweb:/ipfs/QmSNEH2xnpULwN823qxBqB9R5BScNmFzhAjkW9sQxSpA9V\"]},\"test/foundry/TestHelper.sol\":{\"keccak256\":\"0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f\",\"dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SSVNetwork",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SSVToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeRecipient",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensLogo",
          "outputs": [
            {
              "internalType": "contract FrensLogo",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensOracle",
          "outputs": [
            {
              "internalType": "contract FrensOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pmFont",
          "outputs": [
            {
              "internalType": "contract PmFont",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ssvNetwork",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool2",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "x",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "y",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddToDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "x",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "y",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddToDepositWrongPool"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBadWithdrawalCred"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "x",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "y",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testEmptyStakeModifier"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExit"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "x",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "y",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFees"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetIds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testPubKeyMismatch"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSetArt"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStakeTwoStep"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTooMuchDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            },
            {
              "internalType": "uint72",
              "name": "y",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "waves",
          "outputs": [
            {
              "internalType": "contract Waves",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/StakingPoolTest.t.sol": "StakingPoolTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensArt.sol": {
        "keccak256": "0x6fc3ddbcb82a540c6cb5862bfd3b32b758f6f28292ce6553f9b31d5242076e5e",
        "urls": [
          "bzz-raw://431413f8466c5fa7885eb18cb9a627c83f2face7284622ff4d26e5c726e8581e",
          "dweb:/ipfs/QmW8Dd53X8TCEwy9rGGnix981H8eT42XFVq3CGd9xHjs4R"
        ],
        "license": "MIT"
      },
      "contracts/FrensLogo.sol": {
        "keccak256": "0xf56d97e69b11272fd6d003e9a4c6774da4df43e6d539e229b213be8d31bf767d",
        "urls": [
          "bzz-raw://48c8bc31ce15905d0c3b7edd3fc59a12cbc6643baf3236b0cd8408ee2788eabb",
          "dweb:/ipfs/QmT6dJH7nACq8xS1gZyUPuxyTF3MUD9KoWjMzfqwxZLfs2"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0x446caa0f7ba537a12580a573e25e4f1451ee84e28ac5b690896325ae9a550b05",
        "urls": [
          "bzz-raw://1eada04da867f4f88e7f3c9610a3193130f42668f17f2b3a89853dae02962d5c",
          "dweb:/ipfs/QmQFkHt5eeQxqcazJxBjEVsrd4q1oDvwf6gD335UkmM1Ss"
        ],
        "license": "MIT"
      },
      "contracts/FrensOracle.sol": {
        "keccak256": "0x47b53ff148dbc4cbde609fd92f77dd024d8bbea9100a86d251ba19007f86e7f9",
        "urls": [
          "bzz-raw://b76b61a142e05f91751d9f92833bb871f2e64c0f9eff063c80493ac02b22d7d2",
          "dweb:/ipfs/QmcL1gRKGt6oWBk7tE8RqPMkFbQpEiXA7zuWatruLmM2NL"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0x018bb9c1b5570cf3e5e2c6d640649964824982091719aa8edf07658bdb8d7970",
        "urls": [
          "bzz-raw://4a2d5d9106bbc1219b9cb79cb6871f21dc5f3b55301ce83959edd4a9b3ae3ca9",
          "dweb:/ipfs/QmSGydiFaYRt7CaXZyfevRhYzizXpe5ZR8UJog147yRuGH"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0x63d2019b0f15796d3bbbe1900353696ed1a6f7333e907cb4a5bbfaffb4111dc4",
        "urls": [
          "bzz-raw://a711e671a79d4e8d2f6679d7999cf6715ff9d195a55e0438799942d07a53f97d",
          "dweb:/ipfs/QmZDkQMDd7BGgXnFQzoUWjyw3B6jeVVLxaVTre2RTEWJ4p"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0xc6f96d09d0c1f3349bc216170fdc6d58961b5a69b9a65fa825afeeb47b9eaac9",
        "urls": [
          "bzz-raw://2f900c4c9343c2274e0839d5b3dace55bea9ba115efdfa7de002bac1ac2550ee",
          "dweb:/ipfs/QmRAoCgRFznFk8RtFf5FtRUWCZzLSRwNpe3UNpjXnvQ3XR"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/PmFont.sol": {
        "keccak256": "0xb5f38951a3e1695fad83b578e2e041165465c9821f464941246a38361c9a34f2",
        "urls": [
          "bzz-raw://1f44a0f3aa53ca3aed2af8f1743850dedb663e079885513018b32a1fbc50f86a",
          "dweb:/ipfs/QmUWKaHvEortrBVqvrJggrBjsX8BC9rGB9kqNCoNMeixUd"
        ],
        "license": "MIT"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0x736a852a2af7544783ab6916ce0ecb01d7e251e23a2d8f1e64af8d14fc9417cb",
        "urls": [
          "bzz-raw://25a5c19b1d44a96d7821862384dd0285db917997268d06e465d02eae9dba63c0",
          "dweb:/ipfs/QmRd7fVHyqEtwUWpSruREFtQyCLmkrKf6zfR7AKb6N9aTQ"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0xf760f8cf93eaaade5978ce0c7cdb1fe02dc4cf344ac30db5c8ab315dc29ddb3d",
        "urls": [
          "bzz-raw://a3e99be468e5788c39ca8894fa766ee88d8ed34ae9dfbbc47c89736a3b85b7c3",
          "dweb:/ipfs/QmeC7Wv2cXfYVpUHnEefsgo1Wm8rEsHCn8qasGVbt9KT5o"
        ],
        "license": "MIT"
      },
      "contracts/Waves.sol": {
        "keccak256": "0x1fddf83b0e583cec7aa37fc45b7c89f7d4898567d1fcb324adf61685d60831ba",
        "urls": [
          "bzz-raw://ab7aa6af83006c320c1d89ee51767ead618ff60ed3339c27aa98cc7b2612adb2",
          "dweb:/ipfs/QmUYZJv4hXk7ixPZzJ8sLApBvBnxidRytEz2jW63h6s75x"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x839f7e3c08d72fc538e0889fb75065435242ae3b9d81c839176a8309326775db",
        "urls": [
          "bzz-raw://869748145485481385c88e27b24e2952017bb11a150739dcdb1d50915830d4b9",
          "dweb:/ipfs/QmTQ9jy87d8qxpPLg3g3tqE63GJenfD1cz16x5iZnkuJao"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x71ec8963cc6af99db89417e259f4987b2503e31585db6450e7140e192d868e32",
        "urls": [
          "bzz-raw://81e5727b5f0f1d911d827f3b97bb00c4a6a21aa3b235ff2dcf9c70122c9485bc",
          "dweb:/ipfs/QmNTf6qo7kCzhuzyuV7q5rpmaT4Juepfgkc6eXYc93HYLT"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0x9ca4f7eb7011a8f1ed7a6d9a0f88ab68b29d49b63aa8864a694b63d5551a0bad",
        "urls": [
          "bzz-raw://691442367708458da9827c029828f74ddea99a4b327a2e31f2efdfd759b97f88",
          "dweb:/ipfs/Qmbd6EADu2GntQhPobDgdRg9c6vzwutzgn7fZfa5gTC8Jr"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensLogo.sol": {
        "keccak256": "0x71b64fda21ce2b1daa8f795394c34335837044734eaeaf1e73bd7d3a836365bf",
        "urls": [
          "bzz-raw://7dd1adc76ac6ccbf64393fc480bedba681b01b1b33e68459149b879caa0fcc1a",
          "dweb:/ipfs/QmaLbTp7sztsYHKQ1D4vyGzvdRWwNGF3KqExWzCSiCdinM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0xc08609d3c44bdaf6d77150129ed72337dfaee1a560e305bd2f435bb8ac0d1f46",
        "urls": [
          "bzz-raw://a56b465c201630f128ce60fddd6c9fd341193ce759b7a854996bf33bab5b042c",
          "dweb:/ipfs/QmYdSsAYumebM5BypK4tPxGoNKmezFv5VAHQotEDLQKjFb"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensOracle.sol": {
        "keccak256": "0xb8fb907cadbdd9dd146bd3179d385be91b039955df1eb85731afbbed01894e57",
        "urls": [
          "bzz-raw://af779ef4e0f538f2ca4a397f0b8f757d33c7f3d2b64baf29d39045ae7b41bdce",
          "dweb:/ipfs/QmQytMCQNJCF5PoSB3EMSYNWaZqbHYjfSppHAZ3sUCCRYS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0xef1985c0b95767f7b96d1f21aed9e48142c021d25d574f0615323ec2b83ad996",
        "urls": [
          "bzz-raw://074079edb1b5b586e73914cd4203e49eb5fd813baa6fc85038de0f23bd5a25e7",
          "dweb:/ipfs/QmQXtreUs6eJyuoLEGb79a1nWwdiziQeoL2kbjTPnYk1G3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0xb5ee629c513705bc3c46fbe4ce81f6a9edac2c0d1f7030da14b3859a2e8aa39e",
        "urls": [
          "bzz-raw://970db7758aa9fa468922dae70b2c85c3094506dfb59293520d4fd83769b3bee1",
          "dweb:/ipfs/QmVjiqtVZYCxXVKtxsFZhMJvFcTYhKFuiBa6eP3UtpnVeW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0xfd293708621d8eb26c25db108d90583d36ab7f4a7f1f71a75e0b6f54c9a0a451",
        "urls": [
          "bzz-raw://c10da0cd1b7cccb05340a2505803ca0ff8fe1821c5107059c95d09eff6e7a1a4",
          "dweb:/ipfs/QmfSzqmRf2sYBMfXzav6jdkuNc6N4xoN3NUJ1o5624vUkt"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPmFont.sol": {
        "keccak256": "0x505d6001f751cbbe1261b1a87160d99c438ff76d198f316b5fc8a9066f629e24",
        "urls": [
          "bzz-raw://f00e50f07ffca6b806ec9afa4cd5e0325c6c80f691014fab4732782eedb18eef",
          "dweb:/ipfs/QmV5o8JGPuAhUXUzeUt97oo7gTCFSjNicXhBiKpsxGuzvs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0xc4849e951336ce62ba55f6b4a6158a8c1bc8716e41b83a4afa98b23c1d97442c",
        "urls": [
          "bzz-raw://3beb90e7b61ecd038b18fccda4384f60b0e5c486d1392d35ad3e9be5c3d012ae",
          "dweb:/ipfs/QmP5VAe3ZFFyTjWsyyTm5VN8U2d5u6U3cfcMHJHticD9w6"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0xfcce7e4e1de632af6ab1d89918ff97980a3b0e282eab86875e86128c41260574",
        "urls": [
          "bzz-raw://caa6604f6c96202509d52c75a78ceecee9bf95fa4dfc040c47a7d05c1d1cc250",
          "dweb:/ipfs/QmbjsaNxKJP9HAyk6HmSVE83XgNtFLRMAtTWp87uszQ8ab"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0x004e7a6a1ea7ac2dd49f26e4b423da2e87b4c9014867ec81f9572a15e0fba4a1",
        "urls": [
          "bzz-raw://8ad4480a298be6ea7421524b1b185a634566cea4f989ceb7dac8094b17f807a2",
          "dweb:/ipfs/QmeNsCgQQif5w4Yuz3L7oddxsMXSzmECFgesdEHQ5Nca9P"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IWaves.sol": {
        "keccak256": "0x5a318f5ff6701f3371425a37f40db5dfc5a960a197602bb561ca084b305d12b5",
        "urls": [
          "bzz-raw://f23abde1abc61d913d90bef65a3c421f2c037151304f61ac27585ad02d310c34",
          "dweb:/ipfs/QmeK8VZ9LR2JhXSNBotFjoEsXdjBfgrt6QfdMDuPnTL1rq"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439",
        "urls": [
          "bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c",
          "dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/StakingPoolTest.t.sol": {
        "keccak256": "0x35430881d9855878a96ea440237646d92c9b46a79a365d75f415094bc3af6035",
        "urls": [
          "bzz-raw://48111b20135f4a47ef3498d2a707c0f3b6d03380f42076def1d3254cb516c993",
          "dweb:/ipfs/QmSNEH2xnpULwN823qxBqB9R5BScNmFzhAjkW9sQxSpA9V"
        ],
        "license": "UNLICENSED"
      },
      "test/foundry/TestHelper.sol": {
        "keccak256": "0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4",
        "urls": [
          "bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f",
          "dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/StakingPoolTest.t.sol",
    "id": 34273,
    "exportedSymbols": {
      "AccessControl": [
        27123
      ],
      "Address": [
        29196
      ],
      "Base64": [
        30577
      ],
      "BoolGetter": [
        34308
      ],
      "Context": [
        29226
      ],
      "DSTest": [
        5367
      ],
      "ERC165": [
        29479
      ],
      "ERC721": [
        28320
      ],
      "ERC721Enumerable": [
        28808
      ],
      "FrensArt": [
        159
      ],
      "FrensLogo": [
        224
      ],
      "FrensMetaHelper": [
        503
      ],
      "FrensOracle": [
        580
      ],
      "FrensPoolShare": [
        911
      ],
      "FrensPoolShareTokenURI": [
        1171
      ],
      "FrensStorage": [
        1479
      ],
      "IAccessControl": [
        27196
      ],
      "IDepositContract": [
        3060
      ],
      "IENS": [
        3197
      ],
      "IERC165": [
        29491
      ],
      "IERC20": [
        27393
      ],
      "IERC721": [
        28436
      ],
      "IERC721Enumerable": [
        28839
      ],
      "IERC721Metadata": [
        28866
      ],
      "IERC721Receiver": [
        28454
      ],
      "IFrensArt": [
        3207
      ],
      "IFrensLogo": [
        3215
      ],
      "IFrensMetaHelper": [
        3248
      ],
      "IFrensOracle": [
        3265
      ],
      "IFrensPoolShare": [
        3316
      ],
      "IFrensPoolShareTokenURI": [
        3326
      ],
      "IFrensStorage": [
        3416
      ],
      "IMaliciousProxyInterface": [
        34284
      ],
      "IPmFont": [
        3424
      ],
      "IReverseResolver": [
        3434
      ],
      "IStakingPool": [
        3559
      ],
      "IStakingPoolFactory": [
        3572
      ],
      "IWaves": [
        3580
      ],
      "Math": [
        30357
      ],
      "NftReceiver": [
        34357
      ],
      "Ownable": [
        27309
      ],
      "PmFont": [
        1502
      ],
      "Script": [
        5630
      ],
      "SignedMath": [
        30462
      ],
      "StakingPool": [
        2784
      ],
      "StakingPoolFactory": [
        2892
      ],
      "StakingPoolTest": [
        34272
      ],
      "StdStorage": [
        8658
      ],
      "Strings": [
        29455
      ],
      "Test": [
        8560
      ],
      "Vm": [
        10679
      ],
      "Waves": [
        3041
      ],
      "console": [
        18743
      ],
      "console2": [
        26807
      ],
      "stdError": [
        8630
      ],
      "stdJson": [
        5990
      ],
      "stdMath": [
        9899
      ],
      "stdStorage": [
        9760
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:24863:53",
    "nodes": [
      {
        "id": 31912,
        "nodeType": "PragmaDirective",
        "src": "39:24:53",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 31913,
        "nodeType": "ImportDirective",
        "src": "181:28:53",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 9900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31914,
        "nodeType": "ImportDirective",
        "src": "229:38:53",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 160,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31915,
        "nodeType": "ImportDirective",
        "src": "268:39:53",
        "nodes": [],
        "absolutePath": "contracts/FrensLogo.sol",
        "file": "../../contracts/FrensLogo.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 225,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31916,
        "nodeType": "ImportDirective",
        "src": "308:36:53",
        "nodes": [],
        "absolutePath": "contracts/PmFont.sol",
        "file": "../../contracts/PmFont.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 1503,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31917,
        "nodeType": "ImportDirective",
        "src": "345:35:53",
        "nodes": [],
        "absolutePath": "contracts/Waves.sol",
        "file": "../../contracts/Waves.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 3042,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31918,
        "nodeType": "ImportDirective",
        "src": "381:45:53",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31919,
        "nodeType": "ImportDirective",
        "src": "427:52:53",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 1172,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31920,
        "nodeType": "ImportDirective",
        "src": "480:42:53",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 1480,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31921,
        "nodeType": "ImportDirective",
        "src": "523:41:53",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 2785,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31922,
        "nodeType": "ImportDirective",
        "src": "565:48:53",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 2893,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31923,
        "nodeType": "ImportDirective",
        "src": "614:44:53",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 912,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31924,
        "nodeType": "ImportDirective",
        "src": "659:41:53",
        "nodes": [],
        "absolutePath": "contracts/FrensOracle.sol",
        "file": "../../contracts/FrensOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 581,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31925,
        "nodeType": "ImportDirective",
        "src": "701:60:53",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 3573,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31926,
        "nodeType": "ImportDirective",
        "src": "762:57:53",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 3061,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31927,
        "nodeType": "ImportDirective",
        "src": "820:50:53",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensArt.sol",
        "file": "../../contracts/interfaces/IFrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 3208,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31928,
        "nodeType": "ImportDirective",
        "src": "871:26:53",
        "nodes": [],
        "absolutePath": "test/foundry/TestHelper.sol",
        "file": "./TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34273,
        "sourceUnit": 34358,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34272,
        "nodeType": "ContractDefinition",
        "src": "900:24001:53",
        "nodes": [
          {
            "id": 31933,
            "nodeType": "VariableDeclaration",
            "src": "939:24:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "955:8:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$159",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 31932,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31931,
                "name": "FrensArt",
                "nameLocations": [
                  "939:8:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 159,
                "src": "939:8:53"
              },
              "referencedDeclaration": 159,
              "src": "939:8:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$159",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31936,
            "nodeType": "VariableDeclaration",
            "src": "969:38:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "992:15:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 31935,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31934,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "969:15:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 503,
                "src": "969:15:53"
              },
              "referencedDeclaration": 503,
              "src": "969:15:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31939,
            "nodeType": "VariableDeclaration",
            "src": "1013:52:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "1043:22:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 31938,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31937,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "1013:22:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1171,
                "src": "1013:22:53"
              },
              "referencedDeclaration": 1171,
              "src": "1013:22:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31942,
            "nodeType": "VariableDeclaration",
            "src": "1071:32:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "1091:12:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$1479",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 31941,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31940,
                "name": "FrensStorage",
                "nameLocations": [
                  "1071:12:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1479,
                "src": "1071:12:53"
              },
              "referencedDeclaration": 1479,
              "src": "1071:12:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$1479",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31945,
            "nodeType": "VariableDeclaration",
            "src": "1109:44:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "1135:18:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 31944,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31943,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "1109:18:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2892,
                "src": "1109:18:53"
              },
              "referencedDeclaration": 2892,
              "src": "1109:18:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31948,
            "nodeType": "VariableDeclaration",
            "src": "1159:30:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1178:11:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2784",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 31947,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31946,
                "name": "StakingPool",
                "nameLocations": [
                  "1159:11:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2784,
                "src": "1159:11:53"
              },
              "referencedDeclaration": 2784,
              "src": "1159:11:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2784",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31951,
            "nodeType": "VariableDeclaration",
            "src": "1195:31:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "5f583c1d",
            "mutability": "mutable",
            "name": "stakingPool2",
            "nameLocation": "1214:12:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2784",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 31950,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31949,
                "name": "StakingPool",
                "nameLocations": [
                  "1195:11:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2784,
                "src": "1195:11:53"
              },
              "referencedDeclaration": 2784,
              "src": "1195:11:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2784",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31954,
            "nodeType": "VariableDeclaration",
            "src": "1232:36:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1254:14:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$911",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 31953,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31952,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1232:14:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 911,
                "src": "1232:14:53"
              },
              "referencedDeclaration": 911,
              "src": "1232:14:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31957,
            "nodeType": "VariableDeclaration",
            "src": "1274:30:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "edc91a92",
            "mutability": "mutable",
            "name": "frensOracle",
            "nameLocation": "1293:11:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensOracle_$580",
              "typeString": "contract FrensOracle"
            },
            "typeName": {
              "id": 31956,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31955,
                "name": "FrensOracle",
                "nameLocations": [
                  "1274:11:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 580,
                "src": "1274:11:53"
              },
              "referencedDeclaration": 580,
              "src": "1274:11:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensOracle_$580",
                "typeString": "contract FrensOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31960,
            "nodeType": "VariableDeclaration",
            "src": "1310:26:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "ca413fdc",
            "mutability": "mutable",
            "name": "frensLogo",
            "nameLocation": "1327:9:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensLogo_$224",
              "typeString": "contract FrensLogo"
            },
            "typeName": {
              "id": 31959,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31958,
                "name": "FrensLogo",
                "nameLocations": [
                  "1310:9:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 224,
                "src": "1310:9:53"
              },
              "referencedDeclaration": 224,
              "src": "1310:9:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensLogo_$224",
                "typeString": "contract FrensLogo"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31963,
            "nodeType": "VariableDeclaration",
            "src": "1342:20:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "cae72da3",
            "mutability": "mutable",
            "name": "pmFont",
            "nameLocation": "1356:6:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PmFont_$1502",
              "typeString": "contract PmFont"
            },
            "typeName": {
              "id": 31962,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31961,
                "name": "PmFont",
                "nameLocations": [
                  "1342:6:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1502,
                "src": "1342:6:53"
              },
              "referencedDeclaration": 1502,
              "src": "1342:6:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PmFont_$1502",
                "typeString": "contract PmFont"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31966,
            "nodeType": "VariableDeclaration",
            "src": "1368:18:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "875d5012",
            "mutability": "mutable",
            "name": "waves",
            "nameLocation": "1381:5:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Waves_$3041",
              "typeString": "contract Waves"
            },
            "typeName": {
              "id": 31965,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31964,
                "name": "Waves",
                "nameLocations": [
                  "1368:5:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3041,
                "src": "1368:5:53"
              },
              "referencedDeclaration": 3041,
              "src": "1368:5:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Waves_$3041",
                "typeString": "contract Waves"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31972,
            "nodeType": "VariableDeclaration",
            "src": "1407:84:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1430:7:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 31967,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1407:15:53",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 31970,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1448:42:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 31969,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1440:8:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 31968,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1440:8:53",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 31971,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1440:51:53",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31975,
            "nodeType": "VariableDeclaration",
            "src": "1612:70:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "faf7772e",
            "mutability": "mutable",
            "name": "SSVNetwork",
            "nameLocation": "1627:10:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31973,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1612:7:53",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844443942433335614539343265463063466137363933303935346131353642336646333061344531",
              "id": 31974,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1640:42:53",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xDD9BC35aE942eF0cFa76930954a156B3fF30a4E1"
            },
            "visibility": "public"
          },
          {
            "id": 31978,
            "nodeType": "VariableDeclaration",
            "src": "1688:68:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "7bf5d908",
            "mutability": "mutable",
            "name": "SSVToken",
            "nameLocation": "1703:8:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31976,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1688:7:53",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839443635664638316133633438386435383562426662304266653363373730376337393137663534",
              "id": 31977,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1714:42:53",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x9D65fF81a3c488d585bBfb0Bfe3c7707c7917f54"
            },
            "visibility": "public"
          },
          {
            "id": 31981,
            "nodeType": "VariableDeclaration",
            "src": "1762:70:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "10d04858",
            "mutability": "mutable",
            "name": "ssvNetwork",
            "nameLocation": "1777:10:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31979,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1762:7:53",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843334344394130614538394666663833623731623538623635313244343346386134316633363344",
              "id": 31980,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1790:42:53",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC3CD9A0aE89Fff83b71b58b6512D43F8a41f363D"
            },
            "visibility": "public"
          },
          {
            "id": 31984,
            "nodeType": "VariableDeclaration",
            "src": "1848:70:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "1863:10:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31982,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1848:7:53",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 31983,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1876:42:53",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 31990,
            "nodeType": "VariableDeclaration",
            "src": "1925:60:53",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "1942:15:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$3060",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 31986,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31985,
                "name": "IDepositContract",
                "nameLocations": [
                  "1925:16:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3060,
                "src": "1925:16:53"
              },
              "referencedDeclaration": 3060,
              "src": "1925:16:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$3060",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 31988,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 31972,
                  "src": "1977:7:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 31987,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3060,
                "src": "1960:16:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$3060_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 31989,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1960:25:53",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$3060",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31993,
            "nodeType": "VariableDeclaration",
            "src": "1992:69:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "2007:9:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31991,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1992:7:53",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 31992,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2019:42:53",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 31999,
            "nodeType": "VariableDeclaration",
            "src": "2067:82:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "2090:5:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 31994,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2067:15:53",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 31997,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2106:42:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 31996,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2098:8:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 31995,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2098:8:53",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 31998,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2098:51:53",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32005,
            "nodeType": "VariableDeclaration",
            "src": "2155:80:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "2178:3:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 32000,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2155:15:53",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 32003,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2192:42:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 32002,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2184:8:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 32001,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2184:8:53",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 32004,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2184:51:53",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32011,
            "nodeType": "VariableDeclaration",
            "src": "2241:89:53",
            "nodes": [],
            "constant": false,
            "functionSelector": "46904840",
            "mutability": "mutable",
            "name": "feeRecipient",
            "nameLocation": "2264:12:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 32006,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2241:15:53",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030363934323030303030303031333337",
                  "id": 32009,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2287:42:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000694200000001337"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 32008,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2279:8:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 32007,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2279:8:53",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 32010,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2279:51:53",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32014,
            "nodeType": "VariableDeclaration",
            "src": "2337:116:53",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "2343:6:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 32012,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2337:5:53",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575",
              "id": 32013,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2352:101:53",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_21dcdee5842ff0f482197d6a15db2c021a867314be6d63d4bb4246bbaafd3909",
                "typeString": "literal_string hex\"ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32017,
            "nodeType": "VariableDeclaration",
            "src": "2459:100:53",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "2465:22:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 32015,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2459:5:53",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2",
              "id": 32016,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2490:69:53",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_15e0678a74c943adbbbd50fdf9fc6ac3c93162a3c810614e1c98914f8980a59e",
                "typeString": "literal_string hex\"0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32020,
            "nodeType": "VariableDeclaration",
            "src": "2565:215:53",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2571:9:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 32018,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2565:5:53",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9",
              "id": 32019,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2583:197:53",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d36984ec5b61d40bef1c5fbe334dfcbf8cb40ea4c1dee515b99a6e9ce042c56e",
                "typeString": "literal_string hex\"92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32023,
            "nodeType": "VariableDeclaration",
            "src": "2786:94:53",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2794:17:53",
            "scope": 34272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 32021,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2786:7:53",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834303933313830323032303633623065363663643861656635613933346266616263663332393139653439343036343534326235663161333838396266353136",
              "id": 32022,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2814:66:53",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_29207914523896875400091520570111070750124087433100064560086113879594058380566_by_1",
                "typeString": "int_const 2920...(69 digits omitted)...0566"
              },
              "value": "0x4093180202063b0e66cd8aef5a934bfabcf32919e494064542b5f1a3889bf516"
            },
            "visibility": "internal"
          },
          {
            "id": 32383,
            "nodeType": "FunctionDefinition",
            "src": "2887:4025:53",
            "nodes": [],
            "body": {
              "id": 32382,
              "nodeType": "Block",
              "src": "2911:4001:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32026,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31942,
                      "src": "2942:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1479",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2957:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$1479_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 32028,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32027,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "2961:12:53"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1479,
                            "src": "2961:12:53"
                          },
                          "referencedDeclaration": 1479,
                          "src": "2961:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 32030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2957:18:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1479",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "2942:33:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$1479",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 32032,
                  "nodeType": "ExpressionStatement",
                  "src": "2942:33:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 32039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3096:27:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "5353564e6574776f726b",
                                "id": 32040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3125:12:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_6d920d9dc9e52b0fc68fda8f2431c669b391e8052a81f28faa58a1893dc05174",
                                  "typeString": "literal_string \"SSVNetwork\""
                                },
                                "value": "SSVNetwork"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6d920d9dc9e52b0fc68fda8f2431c669b391e8052a81f28faa58a1893dc05174",
                                  "typeString": "literal_string \"SSVNetwork\""
                                }
                              ],
                              "expression": {
                                "id": 32037,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3079:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3083:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3079:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3079:59:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32036,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3052:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3052:100:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32043,
                        "name": "SSVNetwork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31975,
                        "src": "3166:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32033,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "3015:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3028:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3015:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3015:171:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32045,
                  "nodeType": "ExpressionStatement",
                  "src": "3015:171:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 32052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3308:27:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "535356546f6b656e",
                                "id": 32053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3337:10:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_cf7cad2040951f81d9f0ea44b3ed1709114ed61101e40b635889acce5817a1ab",
                                  "typeString": "literal_string \"SSVToken\""
                                },
                                "value": "SSVToken"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cf7cad2040951f81d9f0ea44b3ed1709114ed61101e40b635889acce5817a1ab",
                                  "typeString": "literal_string \"SSVToken\""
                                }
                              ],
                              "expression": {
                                "id": 32050,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3291:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3295:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3291:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3291:57:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32049,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3264:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3264:98:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32056,
                        "name": "SSVToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31978,
                        "src": "3376:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32046,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "3227:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3240:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3227:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3227:167:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32058,
                  "nodeType": "ExpressionStatement",
                  "src": "3227:167:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 32065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3484:27:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "5353564e6574776f726b",
                                "id": 32066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3513:12:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_6d920d9dc9e52b0fc68fda8f2431c669b391e8052a81f28faa58a1893dc05174",
                                  "typeString": "literal_string \"SSVNetwork\""
                                },
                                "value": "SSVNetwork"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6d920d9dc9e52b0fc68fda8f2431c669b391e8052a81f28faa58a1893dc05174",
                                  "typeString": "literal_string \"SSVNetwork\""
                                }
                              ],
                              "expression": {
                                "id": 32063,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3467:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3471:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3467:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3467:59:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32062,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3457:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3457:70:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32069,
                        "name": "ssvNetwork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31981,
                        "src": "3529:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32059,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "3433:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3446:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3433:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3433:107:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32071,
                  "nodeType": "ExpressionStatement",
                  "src": "3433:107:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 32078,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3635:27:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "4465706f736974436f6e7472616374",
                                "id": 32079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3664:17:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                },
                                "value": "DepositContract"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                }
                              ],
                              "expression": {
                                "id": 32076,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3618:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3622:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3618:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3618:64:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32075,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3608:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3608:75:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32082,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31972,
                        "src": "3685:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 32072,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "3584:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3597:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3584:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3584:109:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32084,
                  "nodeType": "ExpressionStatement",
                  "src": "3584:109:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 32091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3776:27:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "454e53",
                                "id": 32092,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3805:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                },
                                "value": "ENS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                }
                              ],
                              "expression": {
                                "id": 32089,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3759:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3763:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3759:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3759:52:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32088,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3749:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3749:63:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32095,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31984,
                        "src": "3814:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32085,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "3725:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3738:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3725:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3725:100:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32097,
                  "nodeType": "ExpressionStatement",
                  "src": "3725:100:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "70726f746f636f6c2e6665652e726563697069656e74",
                                "id": 32104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3906:24:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a7383de6a675e1f7707d2a4203dfe5b10ebd3f64934351a03f6389c17278502d",
                                  "typeString": "literal_string \"protocol.fee.recipient\""
                                },
                                "value": "protocol.fee.recipient"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_a7383de6a675e1f7707d2a4203dfe5b10ebd3f64934351a03f6389c17278502d",
                                  "typeString": "literal_string \"protocol.fee.recipient\""
                                }
                              ],
                              "expression": {
                                "id": 32102,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3889:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3893:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3889:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3889:42:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32101,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3879:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3879:53:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32107,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32011,
                        "src": "3934:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 32098,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "3855:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3868:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3855:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3855:92:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32109,
                  "nodeType": "ExpressionStatement",
                  "src": "3855:92:53"
                },
                {
                  "expression": {
                    "id": 32116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32110,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31954,
                      "src": "3983:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32114,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31942,
                          "src": "4019:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4000:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3416_$returns$_t_contract$_FrensPoolShare_$911_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 32112,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32111,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "4004:14:53"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 911,
                            "src": "4004:14:53"
                          },
                          "referencedDeclaration": 911,
                          "src": "4004:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 32115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4000:32:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "3983:49:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 32117,
                  "nodeType": "ExpressionStatement",
                  "src": "3983:49:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4123:18:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265",
                                "id": 32125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4143:16:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                },
                                "value": "FrensPoolShare"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                }
                              ],
                              "expression": {
                                "id": 32122,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4106:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4110:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4106:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4106:54:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32121,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4096:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4096:65:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32130,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31954,
                            "src": "4171:14:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 32129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4163:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32128,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4163:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4163:23:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32118,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "4072:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4085:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "4072:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:115:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32133,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:115:53"
                },
                {
                  "expression": {
                    "id": 32140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32134,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31945,
                      "src": "4218:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32138,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31942,
                          "src": "4262:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4239:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3416_$returns$_t_contract$_StakingPoolFactory_$2892_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 32136,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32135,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "4243:18:53"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2892,
                            "src": "4243:18:53"
                          },
                          "referencedDeclaration": 2892,
                          "src": "4243:18:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 32139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4239:36:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "4218:57:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 32141,
                  "nodeType": "ExpressionStatement",
                  "src": "4218:57:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4361:18:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "5374616b696e67506f6f6c466163746f7279",
                                "id": 32149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4381:20:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                },
                                "value": "StakingPoolFactory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                }
                              ],
                              "expression": {
                                "id": 32146,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4344:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4348:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4344:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4344:58:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32145,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4334:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4334:69:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32154,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31945,
                            "src": "4413:18:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 32153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4405:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32152,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4405:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4405:27:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32142,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "4310:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4323:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "4310:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4310:123:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32157,
                  "nodeType": "ExpressionStatement",
                  "src": "4310:123:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783030",
                            "id": 32163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4474:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 32162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4466:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 32161,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4466:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4466:13:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32167,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31945,
                            "src": "4490:18:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 32166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4482:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32165,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4482:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4482:27:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32158,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31954,
                        "src": "4441:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 32160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4456:9:53",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26974,
                      "src": "4441:24:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4441:69:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32170,
                  "nodeType": "ExpressionStatement",
                  "src": "4441:69:53"
                },
                {
                  "expression": {
                    "id": 32177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32171,
                      "name": "frensOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31957,
                      "src": "4545:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$580",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32175,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31942,
                          "src": "4575:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4559:15:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3416_$returns$_t_contract$_FrensOracle_$580_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensOracle)"
                        },
                        "typeName": {
                          "id": 32173,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32172,
                            "name": "FrensOracle",
                            "nameLocations": [
                              "4563:11:53"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 580,
                            "src": "4563:11:53"
                          },
                          "referencedDeclaration": 580,
                          "src": "4563:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensOracle_$580",
                            "typeString": "contract FrensOracle"
                          }
                        }
                      },
                      "id": 32176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4559:29:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$580",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "src": "4545:43:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensOracle_$580",
                      "typeString": "contract FrensOracle"
                    }
                  },
                  "id": 32178,
                  "nodeType": "ExpressionStatement",
                  "src": "4545:43:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4678:18:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734f7261636c65",
                                "id": 32186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4698:13:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                },
                                "value": "FrensOracle"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                }
                              ],
                              "expression": {
                                "id": 32183,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4661:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4665:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4661:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4661:51:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32182,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4651:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4651:62:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32191,
                            "name": "frensOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31957,
                            "src": "4723:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensOracle_$580",
                              "typeString": "contract FrensOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensOracle_$580",
                              "typeString": "contract FrensOracle"
                            }
                          ],
                          "id": 32190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4715:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32189,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4715:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4715:20:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32179,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "4627:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4640:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "4627:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:109:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32194,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:109:53"
                },
                {
                  "expression": {
                    "id": 32201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32195,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31936,
                      "src": "4770:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32199,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31942,
                          "src": "4808:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4788:19:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3416_$returns$_t_contract$_FrensMetaHelper_$503_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 32197,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32196,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "4792:15:53"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 503,
                            "src": "4792:15:53"
                          },
                          "referencedDeclaration": 503,
                          "src": "4792:15:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 32200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4788:33:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "4770:51:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 32202,
                  "nodeType": "ExpressionStatement",
                  "src": "4770:51:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4910:18:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734d65746148656c706572",
                                "id": 32210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4930:17:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                },
                                "value": "FrensMetaHelper"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                }
                              ],
                              "expression": {
                                "id": 32207,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4893:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4897:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4893:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4893:55:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32206,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4883:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4883:66:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32215,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31936,
                            "src": "4959:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 32214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4951:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32213,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4951:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4951:24:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32203,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "4859:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4872:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "4859:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4859:117:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32218,
                  "nodeType": "ExpressionStatement",
                  "src": "4859:117:53"
                },
                {
                  "expression": {
                    "id": 32225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32219,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31939,
                      "src": "5008:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32223,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31942,
                          "src": "5060:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5033:26:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3416_$returns$_t_contract$_FrensPoolShareTokenURI_$1171_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 32221,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32220,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "5037:22:53"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1171,
                            "src": "5037:22:53"
                          },
                          "referencedDeclaration": 1171,
                          "src": "5037:22:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 32224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5033:40:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "5008:65:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 32226,
                  "nodeType": "ExpressionStatement",
                  "src": "5008:65:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5160:18:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                                "id": 32234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5180:24:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                },
                                "value": "FrensPoolShareTokenURI"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                }
                              ],
                              "expression": {
                                "id": 32231,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5143:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5147:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "5143:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5143:62:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32230,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5133:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5133:73:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32239,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31939,
                            "src": "5216:22:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 32238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5208:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32237,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5208:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5208:31:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32227,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "5109:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5122:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "5109:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5109:131:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32242,
                  "nodeType": "ExpressionStatement",
                  "src": "5109:131:53"
                },
                {
                  "expression": {
                    "id": 32249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32243,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31933,
                      "src": "5266:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32247,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31942,
                          "src": "5290:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5277:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3416_$returns$_t_contract$_FrensArt_$159_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 32245,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32244,
                            "name": "FrensArt",
                            "nameLocations": [
                              "5281:8:53"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 159,
                            "src": "5281:8:53"
                          },
                          "referencedDeclaration": 159,
                          "src": "5281:8:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$159",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 32248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5277:26:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "5266:37:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$159",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 32250,
                  "nodeType": "ExpressionStatement",
                  "src": "5266:37:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5385:18:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73417274",
                                "id": 32258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5405:10:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                                  "typeString": "literal_string \"FrensArt\""
                                },
                                "value": "FrensArt"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                                  "typeString": "literal_string \"FrensArt\""
                                }
                              ],
                              "expression": {
                                "id": 32255,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5368:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5372:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "5368:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5368:48:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32254,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5358:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5358:59:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32263,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31933,
                            "src": "5427:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$159",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$159",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 32262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5419:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32261,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5419:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5419:17:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32251,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "5334:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5347:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "5334:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5334:103:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32266,
                  "nodeType": "ExpressionStatement",
                  "src": "5334:103:53"
                },
                {
                  "expression": {
                    "id": 32272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32267,
                      "name": "frensLogo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31960,
                      "src": "5469:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensLogo_$224",
                        "typeString": "contract FrensLogo"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5481:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensLogo_$224_$",
                          "typeString": "function () returns (contract FrensLogo)"
                        },
                        "typeName": {
                          "id": 32269,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32268,
                            "name": "FrensLogo",
                            "nameLocations": [
                              "5485:9:53"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 224,
                            "src": "5485:9:53"
                          },
                          "referencedDeclaration": 224,
                          "src": "5485:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensLogo_$224",
                            "typeString": "contract FrensLogo"
                          }
                        }
                      },
                      "id": 32271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5481:15:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensLogo_$224",
                        "typeString": "contract FrensLogo"
                      }
                    },
                    "src": "5469:27:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensLogo_$224",
                      "typeString": "contract FrensLogo"
                    }
                  },
                  "id": 32273,
                  "nodeType": "ExpressionStatement",
                  "src": "5469:27:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5590:18:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734c6f676f",
                                "id": 32281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5610:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_da154728a3a6686dafabf1e5b55d292bc9ceede9ff4329d0cbd0d57ba0dd16df",
                                  "typeString": "literal_string \"FrensLogo\""
                                },
                                "value": "FrensLogo"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_da154728a3a6686dafabf1e5b55d292bc9ceede9ff4329d0cbd0d57ba0dd16df",
                                  "typeString": "literal_string \"FrensLogo\""
                                }
                              ],
                              "expression": {
                                "id": 32278,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5573:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5577:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "5573:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5573:49:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32277,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5563:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5563:60:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32286,
                            "name": "frensLogo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31960,
                            "src": "5643:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensLogo_$224",
                              "typeString": "contract FrensLogo"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensLogo_$224",
                              "typeString": "contract FrensLogo"
                            }
                          ],
                          "id": 32285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5635:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32284,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5635:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5635:18:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32274,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "5528:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5541:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "5528:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5528:133:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32289,
                  "nodeType": "ExpressionStatement",
                  "src": "5528:133:53"
                },
                {
                  "expression": {
                    "id": 32295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32290,
                      "name": "pmFont",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31963,
                      "src": "5689:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PmFont_$1502",
                        "typeString": "contract PmFont"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5698:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PmFont_$1502_$",
                          "typeString": "function () returns (contract PmFont)"
                        },
                        "typeName": {
                          "id": 32292,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32291,
                            "name": "PmFont",
                            "nameLocations": [
                              "5702:6:53"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1502,
                            "src": "5702:6:53"
                          },
                          "referencedDeclaration": 1502,
                          "src": "5702:6:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PmFont_$1502",
                            "typeString": "contract PmFont"
                          }
                        }
                      },
                      "id": 32294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5698:12:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PmFont_$1502",
                        "typeString": "contract PmFont"
                      }
                    },
                    "src": "5689:21:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PmFont_$1502",
                      "typeString": "contract PmFont"
                    }
                  },
                  "id": 32296,
                  "nodeType": "ExpressionStatement",
                  "src": "5689:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5804:18:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "506d466f6e74",
                                "id": 32304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5824:8:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a1596b96415ae17a1302419cd438f61b6db79a3ba20e11c0c5b4e512ccac7bb4",
                                  "typeString": "literal_string \"PmFont\""
                                },
                                "value": "PmFont"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a1596b96415ae17a1302419cd438f61b6db79a3ba20e11c0c5b4e512ccac7bb4",
                                  "typeString": "literal_string \"PmFont\""
                                }
                              ],
                              "expression": {
                                "id": 32301,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5787:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5791:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "5787:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5787:46:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32300,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5777:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5777:57:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32309,
                            "name": "pmFont",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31963,
                            "src": "5854:6:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PmFont_$1502",
                              "typeString": "contract PmFont"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PmFont_$1502",
                              "typeString": "contract PmFont"
                            }
                          ],
                          "id": 32308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5846:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32307,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5846:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5846:15:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32297,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "5742:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5755:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "5742:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5742:127:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32312,
                  "nodeType": "ExpressionStatement",
                  "src": "5742:127:53"
                },
                {
                  "expression": {
                    "id": 32318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32313,
                      "name": "waves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31966,
                      "src": "5898:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Waves_$3041",
                        "typeString": "contract Waves"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5906:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Waves_$3041_$",
                          "typeString": "function () returns (contract Waves)"
                        },
                        "typeName": {
                          "id": 32315,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32314,
                            "name": "Waves",
                            "nameLocations": [
                              "5910:5:53"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3041,
                            "src": "5910:5:53"
                          },
                          "referencedDeclaration": 3041,
                          "src": "5910:5:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Waves_$3041",
                            "typeString": "contract Waves"
                          }
                        }
                      },
                      "id": 32317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5906:11:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Waves_$3041",
                        "typeString": "contract Waves"
                      }
                    },
                    "src": "5898:19:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Waves_$3041",
                      "typeString": "contract Waves"
                    }
                  },
                  "id": 32319,
                  "nodeType": "ExpressionStatement",
                  "src": "5898:19:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6011:18:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "5761766573",
                                "id": 32327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6031:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_3f4e8d360a255d8b6d452e8197aa4eea6c2e102e0a735349071c1f520423fabf",
                                  "typeString": "literal_string \"Waves\""
                                },
                                "value": "Waves"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3f4e8d360a255d8b6d452e8197aa4eea6c2e102e0a735349071c1f520423fabf",
                                  "typeString": "literal_string \"Waves\""
                                }
                              ],
                              "expression": {
                                "id": 32324,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5994:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5998:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "5994:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5994:45:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32323,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5984:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5984:56:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32332,
                            "name": "waves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31966,
                            "src": "6060:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Waves_$3041",
                              "typeString": "contract Waves"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Waves_$3041",
                              "typeString": "contract Waves"
                            }
                          ],
                          "id": 32331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6052:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32330,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6052:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6052:14:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32320,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "5949:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5962:10:53",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "5949:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5949:125:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32335,
                  "nodeType": "ExpressionStatement",
                  "src": "5949:125:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "70726f746f636f6c2e6665652e70657263656e74",
                                "id": 32342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6167:22:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0d723a48edd74c03c4a97b981d154e10fa870f2dd14a5459bc155a4fa264e11e",
                                  "typeString": "literal_string \"protocol.fee.percent\""
                                },
                                "value": "protocol.fee.percent"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_0d723a48edd74c03c4a97b981d154e10fa870f2dd14a5459bc155a4fa264e11e",
                                  "typeString": "literal_string \"protocol.fee.percent\""
                                }
                              ],
                              "expression": {
                                "id": 32340,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "6150:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6154:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "6150:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6150:40:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32339,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "6140:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6140:51:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 32345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6193:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 32336,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31942,
                        "src": "6119:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6132:7:53",
                      "memberName": "setUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1379,
                      "src": "6119:20:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256) external"
                      }
                    },
                    "id": 32346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6119:76:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32347,
                  "nodeType": "ExpressionStatement",
                  "src": "6119:76:53"
                },
                {
                  "assignments": [
                    32349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32349,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "6269:4:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 32382,
                      "src": "6261:12:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 32348,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6261:7:53",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32355,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32352,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31993,
                        "src": "6303:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 32353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6314:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 32350,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31945,
                        "src": "6277:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 32351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6296:6:53",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2891,
                      "src": "6277:25:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 32354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6277:79:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6260:96:53"
                },
                {
                  "expression": {
                    "id": 32363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32356,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31948,
                      "src": "6396:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2784",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32360,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32349,
                              "src": "6430:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6422:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 32358,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6422:8:53",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6422:13:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 32357,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2784,
                        "src": "6410:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2784_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 32362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6410:26:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2784",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "6396:40:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 32364,
                  "nodeType": "ExpressionStatement",
                  "src": "6396:40:53"
                },
                {
                  "assignments": [
                    32366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32366,
                      "mutability": "mutable",
                      "name": "pool2",
                      "nameLocation": "6623:5:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 32382,
                      "src": "6615:13:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 32365,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6615:7:53",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32372,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32369,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31993,
                        "src": "6658:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 32370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6669:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 32367,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31945,
                        "src": "6632:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2892",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 32368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6651:6:53",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2891,
                      "src": "6632:25:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 32371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6632:79:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6614:97:53"
                },
                {
                  "expression": {
                    "id": 32380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32373,
                      "name": "stakingPool2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31951,
                      "src": "6751:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2784",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32377,
                              "name": "pool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32366,
                              "src": "6786:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6778:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 32375,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6778:8:53",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6778:14:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 32374,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2784,
                        "src": "6766:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2784_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 32379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6766:27:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2784",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "6751:42:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 32381,
                  "nodeType": "ExpressionStatement",
                  "src": "6751:42:53"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2896:5:53",
            "parameters": {
              "id": 32024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2901:2:53"
            },
            "returnParameters": {
              "id": 32025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2911:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32401,
            "nodeType": "FunctionDefinition",
            "src": "6918:143:53",
            "nodes": [],
            "body": {
              "id": 32400,
              "nodeType": "Block",
              "src": "6946:115:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32387,
                      "mutability": "mutable",
                      "name": "stakingPoolOwner",
                      "nameLocation": "6962:16:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 32400,
                      "src": "6954:24:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 32386,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6954:7:53",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32391,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32388,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "6981:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 32389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6993:5:53",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2677,
                      "src": "6981:17:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 32390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6981:19:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6954:46:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32393,
                        "name": "stakingPoolOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32387,
                        "src": "7017:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32396,
                            "name": "contOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31993,
                            "src": "7043:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7035:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32394,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7035:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7035:18:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 32392,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6748,
                        6773,
                        6786,
                        6802,
                        6844,
                        6886,
                        6928,
                        6965,
                        7002,
                        7039,
                        3901,
                        3926,
                        3956,
                        3981,
                        4040,
                        4065,
                        4095,
                        4120,
                        5220,
                        5255
                      ],
                      "referencedDeclaration": 3901,
                      "src": "7008:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 32398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7008:46:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32399,
                  "nodeType": "ExpressionStatement",
                  "src": "7008:46:53"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "6927:9:53",
            "parameters": {
              "id": 32384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6936:2:53"
            },
            "returnParameters": {
              "id": 32385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6946:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32507,
            "nodeType": "FunctionDefinition",
            "src": "7067:761:53",
            "nodes": [],
            "body": {
              "id": 32506,
              "nodeType": "Block",
              "src": "7105:723:53",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 32412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 32408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32406,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32403,
                        "src": "7116:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7120:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7116:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 32411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32409,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32403,
                        "src": "7125:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 32410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7130:8:53",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "7125:13:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7116:22:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 32467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32465,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32403,
                        "src": "7527:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7532:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7527:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 32503,
                      "nodeType": "Block",
                      "src": "7670:152:53",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 32489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7696:43:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 32486,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5398,
                                "src": "7680:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10679",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7683:12:53",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10165,
                              "src": "7680:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7680:60:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32491,
                          "nodeType": "ExpressionStatement",
                          "src": "7680:60:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32493,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "7760:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32492,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6186,
                                6207,
                                6231,
                                6255
                              ],
                              "referencedDeclaration": 6186,
                              "src": "7750:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7750:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32495,
                          "nodeType": "ExpressionStatement",
                          "src": "7750:16:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32496,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "7776:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7788:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "7776:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32499,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32403,
                                  "src": "7809:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "7776:35:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7776:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32502,
                          "nodeType": "ExpressionStatement",
                          "src": "7776:37:53"
                        }
                      ]
                    },
                    "id": 32504,
                    "nodeType": "IfStatement",
                    "src": "7524:298:53",
                    "trueBody": {
                      "id": 32485,
                      "nodeType": "Block",
                      "src": "7535:129:53",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7561:20:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32468,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5398,
                                "src": "7545:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10679",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7548:12:53",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10165,
                              "src": "7545:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7545:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32473,
                          "nodeType": "ExpressionStatement",
                          "src": "7545:37:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32475,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "7602:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32474,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6186,
                                6207,
                                6231,
                                6255
                              ],
                              "referencedDeclaration": 6186,
                              "src": "7592:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7592:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32477,
                          "nodeType": "ExpressionStatement",
                          "src": "7592:16:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32478,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "7618:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7630:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "7618:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32481,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32403,
                                  "src": "7651:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "7618:35:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7618:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32484,
                          "nodeType": "ExpressionStatement",
                          "src": "7618:37:53"
                        }
                      ]
                    }
                  },
                  "id": 32505,
                  "nodeType": "IfStatement",
                  "src": "7113:709:53",
                  "trueBody": {
                    "id": 32464,
                    "nodeType": "Block",
                    "src": "7139:379:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32414,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31999,
                              "src": "7159:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32413,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6186,
                              6207,
                              6231,
                              6255
                            ],
                            "referencedDeclaration": 6186,
                            "src": "7149:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7149:16:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32416,
                        "nodeType": "ExpressionStatement",
                        "src": "7149:16:53"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32417,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "7175:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7187:13:53",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1997,
                              "src": "7175:25:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32420,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32403,
                                "src": "7208:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "7175:35:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7175:37:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32423,
                        "nodeType": "ExpressionStatement",
                        "src": "7175:37:53"
                      },
                      {
                        "assignments": [
                          32425
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32425,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "7227:2:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32464,
                            "src": "7222:7:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32424,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7222:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32431,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32428,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31999,
                              "src": "7267:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 32429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7274:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 32426,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31954,
                              "src": "7232:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 32427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7247:19:53",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28532,
                            "src": "7232:34:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7232:44:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7222:54:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 32435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 32433,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32425,
                                "src": "7297:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 32434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7303:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7297:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "66697273742069642069732030",
                              "id": 32436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7306:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              },
                              "value": "first id is 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              }
                            ],
                            "id": 32432,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3850,
                              3871
                            ],
                            "referencedDeclaration": 3871,
                            "src": "7286:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 32437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7286:36:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32438,
                        "nodeType": "ExpressionStatement",
                        "src": "7286:36:53"
                      },
                      {
                        "assignments": [
                          32440
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32440,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "7337:6:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32464,
                            "src": "7332:11:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32439,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7332:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32445,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32443,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32425,
                              "src": "7371:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32441,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "7346:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7358:12:53",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "7346:24:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7346:28:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7332:42:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32447,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32403,
                              "src": "7393:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 32448,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32440,
                              "src": "7396:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "78203d20646570416d74",
                              "id": 32449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7404:12:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5149c7fe061070960194931258e2ce631d0b9783fa1c2a8619430b1c6b5003c",
                                "typeString": "literal_string \"x = depAmt\""
                              },
                              "value": "x = depAmt"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5149c7fe061070960194931258e2ce631d0b9783fa1c2a8619430b1c6b5003c",
                                "typeString": "literal_string \"x = depAmt\""
                              }
                            ],
                            "id": 32446,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4120,
                            "src": "7384:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 32450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7384:33:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32451,
                        "nodeType": "ExpressionStatement",
                        "src": "7384:33:53"
                      },
                      {
                        "assignments": [
                          32453
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32453,
                            "mutability": "mutable",
                            "name": "totDep",
                            "nameLocation": "7432:6:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32464,
                            "src": "7427:11:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32452,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7427:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32457,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 32454,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "7441:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7453:13:53",
                            "memberName": "totalDeposits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1653,
                            "src": "7441:25:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 32456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7441:27:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7427:41:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32459,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32403,
                              "src": "7487:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 32460,
                              "name": "totDep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32453,
                              "src": "7490:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "783d746f74446570",
                              "id": 32461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7498:10:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_341dec35a82d9dcb6818ce9d849bdbe1faee3490d7c4bf48d2976d53ad08cbcb",
                                "typeString": "literal_string \"x=totDep\""
                              },
                              "value": "x=totDep"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_341dec35a82d9dcb6818ce9d849bdbe1faee3490d7c4bf48d2976d53ad08cbcb",
                                "typeString": "literal_string \"x=totDep\""
                              }
                            ],
                            "id": 32458,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4120,
                            "src": "7478:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 32462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7478:31:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32463,
                        "nodeType": "ExpressionStatement",
                        "src": "7478:31:53"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4ccd89c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "7076:11:53",
            "parameters": {
              "id": 32404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32403,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "7095:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 32507,
                  "src": "7088:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 32402,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "7088:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7087:10:53"
            },
            "returnParameters": {
              "id": 32405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7105:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32683,
            "nodeType": "FunctionDefinition",
            "src": "7834:1316:53",
            "nodes": [],
            "body": {
              "id": 32682,
              "nodeType": "Block",
              "src": "7887:1263:53",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 32528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 32516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32514,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32509,
                        "src": "7898:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7902:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7898:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 32519,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32509,
                              "src": "7912:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 32518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7907:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32517,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7907:4:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7907:7:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 32523,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32511,
                              "src": "7922:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 32522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7917:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32521,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7917:4:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7917:7:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7907:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 32526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7928:8:53",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "7907:29:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7898:38:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 32627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32625,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32509,
                        "src": "8658:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8663:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8658:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 32679,
                      "nodeType": "Block",
                      "src": "8801:343:53",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32647,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "8900:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32646,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6186,
                                6207,
                                6231,
                                6255
                              ],
                              "referencedDeclaration": 6186,
                              "src": "8890:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8890:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32649,
                          "nodeType": "ExpressionStatement",
                          "src": "8890:16:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32650,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "8916:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8928:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "8916:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32653,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32509,
                                  "src": "8949:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "8916:35:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8916:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32656,
                          "nodeType": "ExpressionStatement",
                          "src": "8916:37:53"
                        },
                        {
                          "assignments": [
                            32658
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 32658,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "8968:2:53",
                              "nodeType": "VariableDeclaration",
                              "scope": 32679,
                              "src": "8963:7:53",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 32657,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8963:4:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 32664,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 32661,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "9008:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 32662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9015:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 32659,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31954,
                                "src": "8973:14:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 32660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8988:19:53",
                              "memberName": "tokenOfOwnerByIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28532,
                              "src": "8973:34:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view external returns (uint256)"
                              }
                            },
                            "id": 32663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8973:44:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8963:54:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 32668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9043:43:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 32665,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5398,
                                "src": "9027:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10679",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9030:12:53",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10165,
                              "src": "9027:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9027:60:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32670,
                          "nodeType": "ExpressionStatement",
                          "src": "9027:60:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32676,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32658,
                                "src": "9132:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 32671,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "9097:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9109:12:53",
                                "memberName": "addToDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2037,
                                "src": "9097:24:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) payable external"
                                }
                              },
                              "id": 32675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32674,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32511,
                                  "src": "9129:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "9097:34:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9097:38:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32678,
                          "nodeType": "ExpressionStatement",
                          "src": "9097:38:53"
                        }
                      ]
                    },
                    "id": 32680,
                    "nodeType": "IfStatement",
                    "src": "8655:489:53",
                    "trueBody": {
                      "id": 32645,
                      "nodeType": "Block",
                      "src": "8666:129:53",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8692:20:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32628,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5398,
                                "src": "8676:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10679",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8679:12:53",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10165,
                              "src": "8676:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8676:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32633,
                          "nodeType": "ExpressionStatement",
                          "src": "8676:37:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32635,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "8733:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32634,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6186,
                                6207,
                                6231,
                                6255
                              ],
                              "referencedDeclaration": 6186,
                              "src": "8723:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8723:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32637,
                          "nodeType": "ExpressionStatement",
                          "src": "8723:16:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32638,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "8749:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8761:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "8749:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32641,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32509,
                                  "src": "8782:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "8749:35:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8749:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32644,
                          "nodeType": "ExpressionStatement",
                          "src": "8749:37:53"
                        }
                      ]
                    }
                  },
                  "id": 32681,
                  "nodeType": "IfStatement",
                  "src": "7895:1249:53",
                  "trueBody": {
                    "id": 32624,
                    "nodeType": "Block",
                    "src": "7937:712:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32530,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31999,
                              "src": "7957:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32529,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6186,
                              6207,
                              6231,
                              6255
                            ],
                            "referencedDeclaration": 6186,
                            "src": "7947:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7947:16:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32532,
                        "nodeType": "ExpressionStatement",
                        "src": "7947:16:53"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32533,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "7973:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7985:13:53",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1997,
                              "src": "7973:25:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32536,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32509,
                                "src": "8006:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "7973:35:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7973:37:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32539,
                        "nodeType": "ExpressionStatement",
                        "src": "7973:37:53"
                      },
                      {
                        "assignments": [
                          32541
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32541,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "8025:2:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32624,
                            "src": "8020:7:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32540,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8020:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32547,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32544,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31999,
                              "src": "8065:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 32545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8072:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 32542,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31954,
                              "src": "8030:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 32543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8045:19:53",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28532,
                            "src": "8030:34:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8030:44:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8020:54:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 32551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 32549,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32541,
                                "src": "8095:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 32550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8101:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8095:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "66697273742069642069732030",
                              "id": 32552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8104:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              },
                              "value": "first id is 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              }
                            ],
                            "id": 32548,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3850,
                              3871
                            ],
                            "referencedDeclaration": 3871,
                            "src": "8084:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 32553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8084:36:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32554,
                        "nodeType": "ExpressionStatement",
                        "src": "8084:36:53"
                      },
                      {
                        "assignments": [
                          32556
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32556,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "8135:6:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32624,
                            "src": "8130:11:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32555,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8130:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32561,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32559,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32541,
                              "src": "8169:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32557,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "8144:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8156:12:53",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "8144:24:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8144:28:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8130:42:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32563,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32509,
                              "src": "8191:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 32564,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32556,
                              "src": "8194:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32562,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4095,
                            "src": "8182:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8182:19:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32566,
                        "nodeType": "ExpressionStatement",
                        "src": "8182:19:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "77726f6e67207374616b696e6720706f6f6c20666f72206964",
                              "id": 32570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8270:27:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8a0e49f187b287866cfd14d78201efb65845407b44cc98ad9bfcd726884d8866",
                                "typeString": "literal_string \"wrong staking pool for id\""
                              },
                              "value": "wrong staking pool for id"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8a0e49f187b287866cfd14d78201efb65845407b44cc98ad9bfcd726884d8866",
                                "typeString": "literal_string \"wrong staking pool for id\""
                              }
                            ],
                            "expression": {
                              "id": 32567,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5398,
                              "src": "8254:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10679",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 32569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8257:12:53",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10165,
                            "src": "8254:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 32571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8254:44:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32572,
                        "nodeType": "ExpressionStatement",
                        "src": "8254:44:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "3639",
                              "id": 32578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8343:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_69_by_1",
                                "typeString": "int_const 69"
                              },
                              "value": "69"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_69_by_1",
                                "typeString": "int_const 69"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_69_by_1",
                                  "typeString": "int_const 69"
                                }
                              ],
                              "expression": {
                                "id": 32573,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "8308:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8320:12:53",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2037,
                              "src": "8308:24:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32576,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32511,
                                "src": "8340:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "8308:34:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 32579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8308:38:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32580,
                        "nodeType": "ExpressionStatement",
                        "src": "8308:38:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32586,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32541,
                              "src": "8430:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 32581,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "8395:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8407:12:53",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2037,
                              "src": "8395:24:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32584,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32511,
                                "src": "8427:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "8395:34:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 32587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8395:38:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32588,
                        "nodeType": "ExpressionStatement",
                        "src": "8395:38:53"
                      },
                      {
                        "assignments": [
                          32590
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32590,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "8448:7:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32624,
                            "src": "8443:12:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32589,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8443:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32595,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32593,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32541,
                              "src": "8483:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32591,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "8458:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8470:12:53",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "8458:24:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8458:28:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8443:43:53"
                      },
                      {
                        "assignments": [
                          32597
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32597,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "8501:3:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32624,
                            "src": "8496:8:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32596,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8496:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32607,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 32600,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32509,
                                "src": "8512:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8507:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32598,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8507:4:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8507:7:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 32604,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32511,
                                "src": "8522:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8517:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32602,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8517:4:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8517:7:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8507:17:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8496:28:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32609,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32597,
                              "src": "8543:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32610,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32590,
                              "src": "8548:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32608,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4095,
                            "src": "8534:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8534:22:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32612,
                        "nodeType": "ExpressionStatement",
                        "src": "8534:22:53"
                      },
                      {
                        "assignments": [
                          32614
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32614,
                            "mutability": "mutable",
                            "name": "totDeps",
                            "nameLocation": "8571:7:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32624,
                            "src": "8566:12:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32613,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8566:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32618,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 32615,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "8581:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8593:13:53",
                            "memberName": "totalDeposits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1653,
                            "src": "8581:25:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 32617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8581:27:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8566:42:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32620,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32597,
                              "src": "8627:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32621,
                              "name": "totDeps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32614,
                              "src": "8632:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32619,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4095,
                            "src": "8618:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8618:22:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32623,
                        "nodeType": "ExpressionStatement",
                        "src": "8618:22:53"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "020f12da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddToDeposit",
            "nameLocation": "7843:16:53",
            "parameters": {
              "id": 32512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32509,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "7867:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 32683,
                  "src": "7860:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 32508,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7860:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32511,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "7877:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 32683,
                  "src": "7870:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 32510,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7870:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7859:20:53"
            },
            "returnParameters": {
              "id": 32513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7887:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32849,
            "nodeType": "FunctionDefinition",
            "src": "9156:1282:53",
            "nodes": [],
            "body": {
              "id": 32848,
              "nodeType": "Block",
              "src": "9218:1220:53",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 32704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 32692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32690,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32685,
                        "src": "9229:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9233:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9229:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 32695,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32685,
                              "src": "9243:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 32694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9238:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32693,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9238:4:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9238:7:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 32699,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32687,
                              "src": "9253:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 32698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9248:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32697,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9248:4:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9248:7:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9238:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 32702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9259:8:53",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "9238:29:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9229:38:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 32793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32791,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32685,
                        "src": "9946:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9951:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9946:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 32845,
                      "nodeType": "Block",
                      "src": "10089:343:53",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32813,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "10188:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32812,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6186,
                                6207,
                                6231,
                                6255
                              ],
                              "referencedDeclaration": 6186,
                              "src": "10178:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10178:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32815,
                          "nodeType": "ExpressionStatement",
                          "src": "10178:16:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32816,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "10204:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10216:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "10204:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32819,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32685,
                                  "src": "10237:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "10204:35:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10204:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32822,
                          "nodeType": "ExpressionStatement",
                          "src": "10204:37:53"
                        },
                        {
                          "assignments": [
                            32824
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 32824,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "10256:2:53",
                              "nodeType": "VariableDeclaration",
                              "scope": 32845,
                              "src": "10251:7:53",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 32823,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "10251:4:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 32830,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 32827,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "10296:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 32828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10303:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 32825,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31954,
                                "src": "10261:14:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 32826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10276:19:53",
                              "memberName": "tokenOfOwnerByIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28532,
                              "src": "10261:34:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view external returns (uint256)"
                              }
                            },
                            "id": 32829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10261:44:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10251:54:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 32834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10331:43:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 32831,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5398,
                                "src": "10315:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10679",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10318:12:53",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10165,
                              "src": "10315:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10315:60:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32836,
                          "nodeType": "ExpressionStatement",
                          "src": "10315:60:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32842,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32824,
                                "src": "10420:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 32837,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "10385:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10397:12:53",
                                "memberName": "addToDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2037,
                                "src": "10385:24:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) payable external"
                                }
                              },
                              "id": 32841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32840,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32687,
                                  "src": "10417:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "10385:34:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10385:38:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32844,
                          "nodeType": "ExpressionStatement",
                          "src": "10385:38:53"
                        }
                      ]
                    },
                    "id": 32846,
                    "nodeType": "IfStatement",
                    "src": "9943:489:53",
                    "trueBody": {
                      "id": 32811,
                      "nodeType": "Block",
                      "src": "9954:129:53",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9980:20:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32794,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5398,
                                "src": "9964:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10679",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9967:12:53",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10165,
                              "src": "9964:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9964:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32799,
                          "nodeType": "ExpressionStatement",
                          "src": "9964:37:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32801,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "10021:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32800,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6186,
                                6207,
                                6231,
                                6255
                              ],
                              "referencedDeclaration": 6186,
                              "src": "10011:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10011:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32803,
                          "nodeType": "ExpressionStatement",
                          "src": "10011:16:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32804,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "10037:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10049:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "10037:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32807,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32685,
                                  "src": "10070:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "10037:35:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10037:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32810,
                          "nodeType": "ExpressionStatement",
                          "src": "10037:37:53"
                        }
                      ]
                    }
                  },
                  "id": 32847,
                  "nodeType": "IfStatement",
                  "src": "9226:1206:53",
                  "trueBody": {
                    "id": 32790,
                    "nodeType": "Block",
                    "src": "9268:669:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32706,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31999,
                              "src": "9288:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32705,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6186,
                              6207,
                              6231,
                              6255
                            ],
                            "referencedDeclaration": 6186,
                            "src": "9278:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9278:16:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32708,
                        "nodeType": "ExpressionStatement",
                        "src": "9278:16:53"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32709,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "9304:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9316:13:53",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1997,
                              "src": "9304:25:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32712,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32685,
                                "src": "9337:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "9304:35:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9304:37:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32715,
                        "nodeType": "ExpressionStatement",
                        "src": "9304:37:53"
                      },
                      {
                        "assignments": [
                          32717
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32717,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "9356:2:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32790,
                            "src": "9351:7:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32716,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9351:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32723,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32720,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31999,
                              "src": "9396:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 32721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9403:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 32718,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31954,
                              "src": "9361:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 32719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9376:19:53",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28532,
                            "src": "9361:34:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9361:44:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9351:54:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 32727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 32725,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32717,
                                "src": "9426:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 32726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9432:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9426:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "66697273742069642069732030",
                              "id": 32728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9435:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              },
                              "value": "first id is 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              }
                            ],
                            "id": 32724,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3850,
                              3871
                            ],
                            "referencedDeclaration": 3871,
                            "src": "9415:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 32729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9415:36:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32730,
                        "nodeType": "ExpressionStatement",
                        "src": "9415:36:53"
                      },
                      {
                        "assignments": [
                          32732
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32732,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "9466:6:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32790,
                            "src": "9461:11:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32731,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9461:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32737,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32735,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32717,
                              "src": "9500:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32733,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "9475:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9487:12:53",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "9475:24:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9475:28:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9461:42:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32739,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32685,
                              "src": "9522:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 32740,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32732,
                              "src": "9525:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "78203d20646570416d74",
                              "id": 32741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9533:12:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5149c7fe061070960194931258e2ce631d0b9783fa1c2a8619430b1c6b5003c",
                                "typeString": "literal_string \"x = depAmt\""
                              },
                              "value": "x = depAmt"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5149c7fe061070960194931258e2ce631d0b9783fa1c2a8619430b1c6b5003c",
                                "typeString": "literal_string \"x = depAmt\""
                              }
                            ],
                            "id": 32738,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4120,
                            "src": "9513:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 32742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9513:33:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32743,
                        "nodeType": "ExpressionStatement",
                        "src": "9513:33:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "77726f6e67207374616b696e6720706f6f6c20666f72206964",
                              "id": 32747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9610:27:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8a0e49f187b287866cfd14d78201efb65845407b44cc98ad9bfcd726884d8866",
                                "typeString": "literal_string \"wrong staking pool for id\""
                              },
                              "value": "wrong staking pool for id"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8a0e49f187b287866cfd14d78201efb65845407b44cc98ad9bfcd726884d8866",
                                "typeString": "literal_string \"wrong staking pool for id\""
                              }
                            ],
                            "expression": {
                              "id": 32744,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5398,
                              "src": "9594:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10679",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 32746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9597:12:53",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10165,
                            "src": "9594:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 32748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9594:44:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32749,
                        "nodeType": "ExpressionStatement",
                        "src": "9594:44:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32755,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32717,
                              "src": "9684:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 32750,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31951,
                                "src": "9648:12:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9661:12:53",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2037,
                              "src": "9648:25:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32753,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32687,
                                "src": "9681:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "9648:35:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 32756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9648:39:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32757,
                        "nodeType": "ExpressionStatement",
                        "src": "9648:39:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32763,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32717,
                              "src": "9802:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 32758,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "9767:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9779:12:53",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2037,
                              "src": "9767:24:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32761,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32687,
                                "src": "9799:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "9767:34:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 32764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9767:38:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32765,
                        "nodeType": "ExpressionStatement",
                        "src": "9767:38:53"
                      },
                      {
                        "assignments": [
                          32767
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32767,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "9820:7:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32790,
                            "src": "9815:12:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32766,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9815:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32772,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32770,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32717,
                              "src": "9855:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32768,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "9830:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9842:12:53",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "9830:24:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9830:28:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9815:43:53"
                      },
                      {
                        "assignments": [
                          32774
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32774,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "9873:3:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32790,
                            "src": "9868:8:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32773,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9868:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32784,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 32777,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32685,
                                "src": "9884:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9879:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32775,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9879:4:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9879:7:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 32781,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32687,
                                "src": "9894:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9889:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32779,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9889:4:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9889:7:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9879:17:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9868:28:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32786,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32774,
                              "src": "9915:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32787,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32767,
                              "src": "9920:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32785,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4095,
                            "src": "9906:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9906:22:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32789,
                        "nodeType": "ExpressionStatement",
                        "src": "9906:22:53"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b7ab10ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddToDepositWrongPool",
            "nameLocation": "9165:25:53",
            "parameters": {
              "id": 32688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32685,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "9198:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 32849,
                  "src": "9191:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 32684,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9191:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32687,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "9208:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 32849,
                  "src": "9201:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 32686,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9201:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9190:20:53"
            },
            "returnParameters": {
              "id": 32689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9218:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33031,
            "nodeType": "FunctionDefinition",
            "src": "10444:1205:53",
            "nodes": [],
            "body": {
              "id": 33030,
              "nodeType": "Block",
              "src": "10493:1156:53",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 32869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 32862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 32858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32856,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32851,
                          "src": "10504:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 32857,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32853,
                          "src": "10509:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "src": "10504:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 32861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32859,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32851,
                          "src": "10514:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 32860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10518:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10514:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "10504:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 32865,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32851,
                            "src": "10528:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          ],
                          "id": 32864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10523:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 32863,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "10523:4:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10523:7:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 32867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10534:8:53",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "10523:19:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10504:38:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 32944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32942,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32851,
                        "src": "11041:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11046:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "11041:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 32965,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32851,
                              "src": "11192:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "id": 32964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11187:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32963,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11187:4:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11187:7:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 32967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11197:8:53",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32"
                        },
                        "src": "11187:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 33026,
                        "nodeType": "Block",
                        "src": "11365:278:53",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 32988,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31999,
                                  "src": "11385:5:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 32987,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  6186,
                                  6207,
                                  6231,
                                  6255
                                ],
                                "referencedDeclaration": 6186,
                                "src": "11375:9:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 32989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11375:16:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32990,
                            "nodeType": "ExpressionStatement",
                            "src": "11375:16:53"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 32991,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31948,
                                    "src": "11401:11:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 32993,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11413:13:53",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1997,
                                  "src": "11401:25:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 32995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 32994,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32851,
                                    "src": "11434:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "11401:35:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11401:37:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32997,
                            "nodeType": "ExpressionStatement",
                            "src": "11401:37:53"
                          },
                          {
                            "assignments": [
                              32999
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 32999,
                                "mutability": "mutable",
                                "name": "id",
                                "nameLocation": "11453:2:53",
                                "nodeType": "VariableDeclaration",
                                "scope": 33026,
                                "src": "11448:7:53",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 32998,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11448:4:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 33005,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 33002,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31999,
                                  "src": "11493:5:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 33003,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11500:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 33000,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31954,
                                  "src": "11458:14:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 33001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11473:19:53",
                                "memberName": "tokenOfOwnerByIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 28532,
                                "src": "11458:34:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 33004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11458:44:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "11448:54:53"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 33009,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 33007,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32999,
                                    "src": "11523:2:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 33008,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11529:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "11523:7:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "66697273742069642069732030",
                                  "id": 33010,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11532:15:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                    "typeString": "literal_string \"first id is 0\""
                                  },
                                  "value": "first id is 0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                    "typeString": "literal_string \"first id is 0\""
                                  }
                                ],
                                "id": 33006,
                                "name": "assertTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  3850,
                                  3871
                                ],
                                "referencedDeclaration": 3871,
                                "src": "11512:10:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory)"
                                }
                              },
                              "id": 33011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11512:36:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33012,
                            "nodeType": "ExpressionStatement",
                            "src": "11512:36:53"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "6e6f7420656e6f756768206465706f7369746564",
                                  "id": 33016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11574:22:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  },
                                  "value": "not enough deposited"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  }
                                ],
                                "expression": {
                                  "id": 33013,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5398,
                                  "src": "11558:2:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$10679",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 33015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11561:12:53",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10165,
                                "src": "11558:15:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 33017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11558:39:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33018,
                            "nodeType": "ExpressionStatement",
                            "src": "11558:39:53"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33022,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32999,
                                  "src": "11628:2:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 33023,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32853,
                                  "src": "11632:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                ],
                                "expression": {
                                  "id": 33019,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "11607:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11619:8:53",
                                "memberName": "withdraw",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2321,
                                "src": "11607:20:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256,uint256) external"
                                }
                              },
                              "id": 33024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11607:27:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33025,
                            "nodeType": "ExpressionStatement",
                            "src": "11607:27:53"
                          }
                        ]
                      },
                      "id": 33027,
                      "nodeType": "IfStatement",
                      "src": "11184:459:53",
                      "trueBody": {
                        "id": 32986,
                        "nodeType": "Block",
                        "src": "11207:152:53",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                  "id": 32972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11233:43:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  },
                                  "value": "total deposits cannot be more than 32 Eth"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  }
                                ],
                                "expression": {
                                  "id": 32969,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5398,
                                  "src": "11217:2:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$10679",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 32971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11220:12:53",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10165,
                                "src": "11217:15:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 32973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11217:60:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32974,
                            "nodeType": "ExpressionStatement",
                            "src": "11217:60:53"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 32976,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31999,
                                  "src": "11297:5:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 32975,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  6186,
                                  6207,
                                  6231,
                                  6255
                                ],
                                "referencedDeclaration": 6186,
                                "src": "11287:9:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 32977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11287:16:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32978,
                            "nodeType": "ExpressionStatement",
                            "src": "11287:16:53"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 32979,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31948,
                                    "src": "11313:11:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 32981,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11325:13:53",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1997,
                                  "src": "11313:25:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 32983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 32982,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32851,
                                    "src": "11346:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "11313:35:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11313:37:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32985,
                            "nodeType": "ExpressionStatement",
                            "src": "11313:37:53"
                          }
                        ]
                      }
                    },
                    "id": 33028,
                    "nodeType": "IfStatement",
                    "src": "11038:605:53",
                    "trueBody": {
                      "id": 32962,
                      "nodeType": "Block",
                      "src": "11049:129:53",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32948,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11075:20:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32945,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5398,
                                "src": "11059:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10679",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11062:12:53",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10165,
                              "src": "11059:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11059:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32950,
                          "nodeType": "ExpressionStatement",
                          "src": "11059:37:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32952,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "11116:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32951,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6186,
                                6207,
                                6231,
                                6255
                              ],
                              "referencedDeclaration": 6186,
                              "src": "11106:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11106:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32954,
                          "nodeType": "ExpressionStatement",
                          "src": "11106:16:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32955,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "11132:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11144:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "11132:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32958,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32851,
                                  "src": "11165:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "11132:35:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11132:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32961,
                          "nodeType": "ExpressionStatement",
                          "src": "11132:37:53"
                        }
                      ]
                    }
                  },
                  "id": 33029,
                  "nodeType": "IfStatement",
                  "src": "10501:1142:53",
                  "trueBody": {
                    "id": 32941,
                    "nodeType": "Block",
                    "src": "10543:489:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32871,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31999,
                              "src": "10563:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32870,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6186,
                              6207,
                              6231,
                              6255
                            ],
                            "referencedDeclaration": 6186,
                            "src": "10553:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10553:16:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32873,
                        "nodeType": "ExpressionStatement",
                        "src": "10553:16:53"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32874,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "10579:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10591:13:53",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1997,
                              "src": "10579:25:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32877,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32851,
                                "src": "10612:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "10579:35:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10579:37:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32880,
                        "nodeType": "ExpressionStatement",
                        "src": "10579:37:53"
                      },
                      {
                        "assignments": [
                          32882
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32882,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "10631:2:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32941,
                            "src": "10626:7:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32881,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10626:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32888,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32885,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31999,
                              "src": "10671:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 32886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10678:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 32883,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31954,
                              "src": "10636:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 32884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10651:19:53",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28532,
                            "src": "10636:34:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10636:44:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10626:54:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 32892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 32890,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32882,
                                "src": "10701:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 32891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10707:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10701:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "66697273742069642073686f756c642062652030",
                              "id": 32893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10710:22:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f634d6dfa91abdb9a8ea9f887107aaedb4d64d303182534e0f779f901ce2eea8",
                                "typeString": "literal_string \"first id should be 0\""
                              },
                              "value": "first id should be 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f634d6dfa91abdb9a8ea9f887107aaedb4d64d303182534e0f779f901ce2eea8",
                                "typeString": "literal_string \"first id should be 0\""
                              }
                            ],
                            "id": 32889,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3850,
                              3871
                            ],
                            "referencedDeclaration": 3871,
                            "src": "10690:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 32894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10690:43:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32895,
                        "nodeType": "ExpressionStatement",
                        "src": "10690:43:53"
                      },
                      {
                        "assignments": [
                          32897
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32897,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "10748:6:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32941,
                            "src": "10743:11:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32896,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10743:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32902,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32900,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32882,
                              "src": "10782:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32898,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "10757:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10769:12:53",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "10757:24:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10757:28:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10743:42:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32904,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32851,
                              "src": "10804:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 32905,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32897,
                              "src": "10807:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "6465706f73697420616d6f756e742073686f756c642062652078",
                              "id": 32906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10815:28:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_57454a5fb6f82784e3c7ccdcc153f71cbe3984c5f4580c5bddb74dce64e9be3b",
                                "typeString": "literal_string \"deposit amount should be x\""
                              },
                              "value": "deposit amount should be x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_57454a5fb6f82784e3c7ccdcc153f71cbe3984c5f4580c5bddb74dce64e9be3b",
                                "typeString": "literal_string \"deposit amount should be x\""
                              }
                            ],
                            "id": 32903,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4120,
                            "src": "10795:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 32907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10795:49:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32908,
                        "nodeType": "ExpressionStatement",
                        "src": "10795:49:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32912,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32882,
                              "src": "10875:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32913,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32853,
                              "src": "10879:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "expression": {
                              "id": 32909,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "10854:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10866:8:53",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2321,
                            "src": "10854:20:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 32914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10854:27:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32915,
                        "nodeType": "ExpressionStatement",
                        "src": "10854:27:53"
                      },
                      {
                        "assignments": [
                          32917
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32917,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "10896:7:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32941,
                            "src": "10891:12:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32916,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10891:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32922,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32920,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32882,
                              "src": "10931:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32918,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "10906:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10918:12:53",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "10906:24:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10906:28:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10891:43:53"
                      },
                      {
                        "assignments": [
                          32924
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32924,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "10949:3:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 32941,
                            "src": "10944:8:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32923,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10944:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32934,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 32927,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32851,
                                "src": "10960:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 32926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10955:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32925,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "10955:4:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10955:7:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 32931,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32853,
                                "src": "10970:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 32930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10965:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32929,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "10965:4:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10965:7:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10955:17:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10944:28:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32936,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32924,
                              "src": "10991:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32937,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32917,
                              "src": "10996:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "78202d207920732f62203d20746f74",
                              "id": 32938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11005:17:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5815aca85cc061142d1cbb42b2da86103f93e77a20ff6b31c861ff7a8a2f1ab9",
                                "typeString": "literal_string \"x - y s/b = tot\""
                              },
                              "value": "x - y s/b = tot"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5815aca85cc061142d1cbb42b2da86103f93e77a20ff6b31c861ff7a8a2f1ab9",
                                "typeString": "literal_string \"x - y s/b = tot\""
                              }
                            ],
                            "id": 32935,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4120,
                            "src": "10982:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 32939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10982:41:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32940,
                        "nodeType": "ExpressionStatement",
                        "src": "10982:41:53"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "90f805d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "10453:12:53",
            "parameters": {
              "id": 32854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32851,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "10473:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 33031,
                  "src": "10466:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 32850,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "10466:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32853,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "10483:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 33031,
                  "src": "10476:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 32852,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "10476:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10465:20:53"
            },
            "returnParameters": {
              "id": 32855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10493:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33052,
            "nodeType": "FunctionDefinition",
            "src": "11655:158:53",
            "nodes": [],
            "body": {
              "id": 33051,
              "nodeType": "Block",
              "src": "11696:117:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33035,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31999,
                        "src": "11710:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33034,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6096,
                        6117,
                        6141,
                        6165
                      ],
                      "referencedDeclaration": 6096,
                      "src": "11705:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11705:11:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33037,
                  "nodeType": "ExpressionStatement",
                  "src": "11705:11:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d757374206465706f736974206574686572",
                        "id": 33041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11740:20:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                          "typeString": "literal_string \"must deposit ether\""
                        },
                        "value": "must deposit ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                          "typeString": "literal_string \"must deposit ether\""
                        }
                      ],
                      "expression": {
                        "id": 33038,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5398,
                        "src": "11724:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11727:12:53",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10165,
                      "src": "11724:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11724:37:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33043,
                  "nodeType": "ExpressionStatement",
                  "src": "11724:37:53"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33044,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31948,
                          "src": "11769:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11781:13:53",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1997,
                        "src": "11769:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "30",
                          "id": 33047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11802:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "src": "11769:35:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11769:37:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33050,
                  "nodeType": "ExpressionStatement",
                  "src": "11769:37:53"
                }
              ]
            },
            "functionSelector": "5176a102",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEmptyStakeModifier",
            "nameLocation": "11664:22:53",
            "parameters": {
              "id": 33032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11686:2:53"
            },
            "returnParameters": {
              "id": 33033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11696:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33073,
            "nodeType": "FunctionDefinition",
            "src": "11819:195:53",
            "nodes": [],
            "body": {
              "id": 33072,
              "nodeType": "Block",
              "src": "11856:158:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33056,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31999,
                        "src": "11869:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33055,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6096,
                        6117,
                        6141,
                        6165
                      ],
                      "referencedDeclaration": 6096,
                      "src": "11864:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11864:11:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33058,
                  "nodeType": "ExpressionStatement",
                  "src": "11864:11:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                        "id": 33062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11899:43:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                          "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                        },
                        "value": "total deposits cannot be more than 32 Eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                          "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                        }
                      ],
                      "expression": {
                        "id": 33059,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5398,
                        "src": "11883:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11886:12:53",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10165,
                      "src": "11883:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11883:60:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33064,
                  "nodeType": "ExpressionStatement",
                  "src": "11883:60:53"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33065,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31948,
                          "src": "11951:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11963:13:53",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1997,
                        "src": "11951:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3333303030303030303030303030303030303030",
                          "id": 33068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11984:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_33000000000000000000_by_1",
                            "typeString": "int_const 33000000000000000000"
                          },
                          "value": "33000000000000000000"
                        }
                      ],
                      "src": "11951:54:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11951:56:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33071,
                  "nodeType": "ExpressionStatement",
                  "src": "11951:56:53"
                }
              ]
            },
            "functionSelector": "8d299cc4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTooMuchDeposit",
            "nameLocation": "11828:18:53",
            "parameters": {
              "id": 33053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11846:2:53"
            },
            "returnParameters": {
              "id": 33054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11856:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33178,
            "nodeType": "FunctionDefinition",
            "src": "12020:1261:53",
            "nodes": [],
            "body": {
              "id": 33177,
              "nodeType": "Block",
              "src": "12048:1233:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33077,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "12097:14:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 33177,
                      "src": "12092:19:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33076,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12092:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33083,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 33080,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31948,
                          "src": "12122:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        ],
                        "id": 33079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12114:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 33078,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12114:7:53",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12114:20:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12135:7:53",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "12114:28:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12092:50:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33085,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31999,
                        "src": "12205:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33084,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6096,
                        6117,
                        6141,
                        6165
                      ],
                      "referencedDeclaration": 6096,
                      "src": "12200:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12200:11:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33087,
                  "nodeType": "ExpressionStatement",
                  "src": "12200:11:53"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33088,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31948,
                          "src": "12219:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12231:13:53",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1997,
                        "src": "12219:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12252:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "12219:54:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12219:56:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33094,
                  "nodeType": "ExpressionStatement",
                  "src": "12219:56:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33096,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33077,
                          "src": "12292:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12309:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        },
                        "src": "12292:37:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33101,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "12339:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 33100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12331:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33099,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12331:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12331:20:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12352:7:53",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "12331:28:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33095,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6748,
                        6773,
                        6786,
                        6802,
                        6844,
                        6886,
                        6928,
                        6965,
                        7002,
                        7039,
                        3901,
                        3926,
                        3956,
                        3981,
                        4040,
                        4065,
                        4095,
                        4120,
                        5220,
                        5255
                      ],
                      "referencedDeclaration": 4095,
                      "src": "12283:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12283:77:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33105,
                  "nodeType": "ExpressionStatement",
                  "src": "12283:77:53"
                },
                {
                  "assignments": [
                    33107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33107,
                      "mutability": "mutable",
                      "name": "deposit_count_hash",
                      "nameLocation": "12376:18:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 33177,
                      "src": "12368:26:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 33106,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12368:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33113,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 33109,
                            "name": "depositContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31990,
                            "src": "12407:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDepositContract_$3060",
                              "typeString": "contract IDepositContract"
                            }
                          },
                          "id": 33110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12423:17:53",
                          "memberName": "get_deposit_count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3059,
                          "src": "12407:33:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view external returns (bytes memory)"
                          }
                        },
                        "id": 33111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12407:35:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33108,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12397:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 33112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12397:46:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12368:75:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33115,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31993,
                        "src": "12456:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33114,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6096,
                        6117,
                        6141,
                        6165
                      ],
                      "referencedDeclaration": 6096,
                      "src": "12451:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12451:15:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33117,
                  "nodeType": "ExpressionStatement",
                  "src": "12451:15:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33121,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32014,
                        "src": "12795:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33122,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32017,
                        "src": "12803:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33123,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32020,
                        "src": "12827:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33124,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32023,
                        "src": "12838:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33118,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "12777:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12789:5:53",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2077,
                      "src": "12777:17:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12777:79:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33126,
                  "nodeType": "ExpressionStatement",
                  "src": "12777:79:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33128,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33077,
                        "src": "12873:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33131,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "12897:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 33130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12889:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33129,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12889:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12889:20:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12910:7:53",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "12889:28:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33127,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6748,
                        6773,
                        6786,
                        6802,
                        6844,
                        6886,
                        6928,
                        6965,
                        7002,
                        7039,
                        3901,
                        3926,
                        3956,
                        3981,
                        4040,
                        4065,
                        4095,
                        4120,
                        5220,
                        5255
                      ],
                      "referencedDeclaration": 4095,
                      "src": "12864:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12864:54:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33135,
                  "nodeType": "ExpressionStatement",
                  "src": "12864:54:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 33143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33138,
                                  "name": "depositContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31990,
                                  "src": "12948:15:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDepositContract_$3060",
                                    "typeString": "contract IDepositContract"
                                  }
                                },
                                "id": 33139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12964:17:53",
                                "memberName": "get_deposit_count",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3059,
                                "src": "12948:33:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () view external returns (bytes memory)"
                                }
                              },
                              "id": 33140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12948:35:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 33137,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "12938:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 33141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12938:46:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 33142,
                          "name": "deposit_count_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33107,
                          "src": "12988:18:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12938:68:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33136,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6698,
                        6712
                      ],
                      "referencedDeclaration": 6698,
                      "src": "12926:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 33144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12926:81:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33145,
                  "nodeType": "ExpressionStatement",
                  "src": "12926:81:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33147,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31999,
                        "src": "13080:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33146,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6186,
                        6207,
                        6231,
                        6255
                      ],
                      "referencedDeclaration": 6186,
                      "src": "13070:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13070:16:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33149,
                  "nodeType": "ExpressionStatement",
                  "src": "13070:16:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 33153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13110:24:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 33150,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5398,
                        "src": "13094:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13097:12:53",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10165,
                      "src": "13094:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13094:41:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33155,
                  "nodeType": "ExpressionStatement",
                  "src": "13094:41:53"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33156,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31948,
                          "src": "13143:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13155:13:53",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1997,
                        "src": "13143:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 33159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13176:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "13143:35:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13143:37:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33162,
                  "nodeType": "ExpressionStatement",
                  "src": "13143:37:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 33166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13204:24:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 33163,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5398,
                        "src": "13188:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13191:12:53",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10165,
                      "src": "13188:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13188:41:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33168,
                  "nodeType": "ExpressionStatement",
                  "src": "13188:41:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 33174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13272:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 33169,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31948,
                          "src": "13237:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13249:12:53",
                        "memberName": "addToDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2037,
                        "src": "13237:24:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 33173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 33172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13269:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "13237:34:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 33175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13237:37:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33176,
                  "nodeType": "ExpressionStatement",
                  "src": "13237:37:53"
                }
              ]
            },
            "functionSelector": "3a1143da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStake",
            "nameLocation": "12029:9:53",
            "parameters": {
              "id": 33074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12038:2:53"
            },
            "returnParameters": {
              "id": 33075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12048:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33257,
            "nodeType": "FunctionDefinition",
            "src": "13287:1002:53",
            "nodes": [],
            "body": {
              "id": 33256,
              "nodeType": "Block",
              "src": "13322:967:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33182,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "13336:14:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 33256,
                      "src": "13331:19:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33181,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13331:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33188,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 33185,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31948,
                          "src": "13361:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        ],
                        "id": 33184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13353:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 33183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13353:7:53",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13353:20:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13374:7:53",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "13353:28:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13331:50:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33190,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31999,
                        "src": "13444:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33189,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6096,
                        6117,
                        6141,
                        6165
                      ],
                      "referencedDeclaration": 6096,
                      "src": "13439:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13439:11:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33192,
                  "nodeType": "ExpressionStatement",
                  "src": "13439:11:53"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33193,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31948,
                          "src": "13458:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13470:13:53",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1997,
                        "src": "13458:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13491:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "13458:54:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13458:56:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33199,
                  "nodeType": "ExpressionStatement",
                  "src": "13458:56:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33201,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33182,
                          "src": "13531:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13548:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        },
                        "src": "13531:37:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33206,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "13578:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 33205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13570:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33204,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13570:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13570:20:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13591:7:53",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "13570:28:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33200,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6748,
                        6773,
                        6786,
                        6802,
                        6844,
                        6886,
                        6928,
                        6965,
                        7002,
                        7039,
                        3901,
                        3926,
                        3956,
                        3981,
                        4040,
                        4065,
                        4095,
                        4120,
                        5220,
                        5255
                      ],
                      "referencedDeclaration": 4095,
                      "src": "13522:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13522:77:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33210,
                  "nodeType": "ExpressionStatement",
                  "src": "13522:77:53"
                },
                {
                  "assignments": [
                    33212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33212,
                      "mutability": "mutable",
                      "name": "deposit_count_hash",
                      "nameLocation": "13615:18:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 33256,
                      "src": "13607:26:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 33211,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13607:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33218,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 33214,
                            "name": "depositContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31990,
                            "src": "13646:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDepositContract_$3060",
                              "typeString": "contract IDepositContract"
                            }
                          },
                          "id": 33215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13662:17:53",
                          "memberName": "get_deposit_count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3059,
                          "src": "13646:33:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view external returns (bytes memory)"
                          }
                        },
                        "id": 33216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13646:35:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33213,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "13636:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 33217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13636:46:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13607:75:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33220,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31993,
                        "src": "13700:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33219,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6186,
                        6207,
                        6231,
                        6255
                      ],
                      "referencedDeclaration": 6186,
                      "src": "13690:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13690:20:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33222,
                  "nodeType": "ExpressionStatement",
                  "src": "13690:20:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33226,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32014,
                        "src": "14043:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33227,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32017,
                        "src": "14051:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33228,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32020,
                        "src": "14075:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33229,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32023,
                        "src": "14086:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33223,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "14021:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14033:9:53",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2169,
                      "src": "14021:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14021:83:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33231,
                  "nodeType": "ExpressionStatement",
                  "src": "14021:83:53"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33232,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "14112:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14124:5:53",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2087,
                      "src": "14112:17:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 33235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14112:19:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33236,
                  "nodeType": "ExpressionStatement",
                  "src": "14112:19:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33238,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33182,
                        "src": "14148:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33241,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "14172:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 33240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14164:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33239,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14164:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14164:20:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14185:7:53",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "14164:28:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33237,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6748,
                        6773,
                        6786,
                        6802,
                        6844,
                        6886,
                        6928,
                        6965,
                        7002,
                        7039,
                        3901,
                        3926,
                        3956,
                        3981,
                        4040,
                        4065,
                        4095,
                        4120,
                        5220,
                        5255
                      ],
                      "referencedDeclaration": 4095,
                      "src": "14139:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14139:54:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33245,
                  "nodeType": "ExpressionStatement",
                  "src": "14139:54:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 33253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33248,
                                  "name": "depositContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31990,
                                  "src": "14223:15:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDepositContract_$3060",
                                    "typeString": "contract IDepositContract"
                                  }
                                },
                                "id": 33249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14239:17:53",
                                "memberName": "get_deposit_count",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3059,
                                "src": "14223:33:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () view external returns (bytes memory)"
                                }
                              },
                              "id": 33250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14223:35:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 33247,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "14213:9:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 33251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14213:46:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 33252,
                          "name": "deposit_count_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33212,
                          "src": "14263:18:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "14213:68:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33246,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6698,
                        6712
                      ],
                      "referencedDeclaration": 6698,
                      "src": "14201:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 33254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14201:81:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33255,
                  "nodeType": "ExpressionStatement",
                  "src": "14201:81:53"
                }
              ]
            },
            "functionSelector": "5dcf6be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStakeTwoStep",
            "nameLocation": "13296:16:53",
            "parameters": {
              "id": 33179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13312:2:53"
            },
            "returnParameters": {
              "id": 33180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13322:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33589,
            "nodeType": "FunctionDefinition",
            "src": "14293:3116:53",
            "nodes": [],
            "body": {
              "id": 33588,
              "nodeType": "Block",
              "src": "14339:3070:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33265,
                      "mutability": "mutable",
                      "name": "maxUint32",
                      "nameLocation": "14352:9:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 33588,
                      "src": "14347:14:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33264,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14347:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33267,
                  "initialValue": {
                    "hexValue": "34323934393637323935",
                    "id": 33266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14364:10:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "4294967295"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14347:27:53"
                },
                {
                  "assignments": [
                    33269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33269,
                      "mutability": "mutable",
                      "name": "aliceDeposit",
                      "nameLocation": "14387:12:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 33588,
                      "src": "14382:17:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33268,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14382:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33278,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 33272,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33259,
                            "src": "14407:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 33271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14402:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 33270,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "14402:4:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14402:7:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3331393939393939393939393939393939393939",
                        "id": 33274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14412:20:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31999999999999999999_by_1",
                          "typeString": "int_const 31999999999999999999"
                        },
                        "value": "31999999999999999999"
                      },
                      "src": "14402:30:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 33276,
                      "name": "maxUint32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33265,
                      "src": "14435:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14402:42:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14382:62:53"
                },
                {
                  "assignments": [
                    33280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33280,
                      "mutability": "mutable",
                      "name": "bobDeposit",
                      "nameLocation": "14457:10:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 33588,
                      "src": "14452:15:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33279,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14452:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33284,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3332303030303030303030303030303030303030",
                      "id": 33281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14470:20:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32000000000000000000_by_1",
                        "typeString": "int_const 32000000000000000000"
                      },
                      "value": "32000000000000000000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 33282,
                      "name": "aliceDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33269,
                      "src": "14493:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14470:35:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14452:53:53"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33285,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33259,
                        "src": "14516:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14521:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "14516:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33288,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33261,
                        "src": "14526:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 33289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14530:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "14526:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14516:17:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33509,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33259,
                        "src": "16839:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16844:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "16839:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 33585,
                      "nodeType": "Block",
                      "src": "16982:420:53",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33531,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "16997:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33530,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6096,
                                6117,
                                6141,
                                6165
                              ],
                              "referencedDeclaration": 6096,
                              "src": "16992:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16992:11:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33533,
                          "nodeType": "ExpressionStatement",
                          "src": "16992:11:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33534,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "17013:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17025:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "17013:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33537,
                                  "name": "aliceDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33269,
                                  "src": "17046:12:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "17013:46:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17013:48:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33540,
                          "nodeType": "ExpressionStatement",
                          "src": "17013:48:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33542,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32005,
                                "src": "17076:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33541,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6096,
                                6117,
                                6141,
                                6165
                              ],
                              "referencedDeclaration": 6096,
                              "src": "17071:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17071:9:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33544,
                          "nodeType": "ExpressionStatement",
                          "src": "17071:9:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33545,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "17090:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17102:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "17090:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33548,
                                  "name": "bobDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33280,
                                  "src": "17123:10:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "17090:44:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17090:46:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33551,
                          "nodeType": "ExpressionStatement",
                          "src": "17090:46:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33553,
                                "name": "contOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31993,
                                "src": "17156:9:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 33552,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6186,
                                6207,
                                6231,
                                6255
                              ],
                              "referencedDeclaration": 6186,
                              "src": "17146:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17146:20:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33555,
                          "nodeType": "ExpressionStatement",
                          "src": "17146:20:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33559,
                                "name": "pubkey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32014,
                                "src": "17194:6:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 33560,
                                "name": "withdrawal_credentials",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32017,
                                "src": "17202:22:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 33561,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32020,
                                "src": "17226:9:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 33562,
                                "name": "deposit_data_root",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32023,
                                "src": "17237:17:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 33556,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "17176:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17188:5:53",
                              "memberName": "stake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2077,
                              "src": "17176:17:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                              }
                            },
                            "id": 33563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17176:79:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33564,
                          "nodeType": "ExpressionStatement",
                          "src": "17176:79:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33570,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33261,
                                "src": "17295:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33567,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31948,
                                    "src": "17273:11:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33566,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "17265:8:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 33565,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17265:8:53",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17265:20:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 33569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17286:8:53",
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "17265:29:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 33571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17265:32:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33572,
                          "nodeType": "ExpressionStatement",
                          "src": "17265:32:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                "id": 33576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17323:39:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                },
                                "value": "must be greater than 100 wei to claim"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                }
                              ],
                              "expression": {
                                "id": 33573,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5398,
                                "src": "17307:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10679",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17310:12:53",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10165,
                              "src": "17307:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17307:56:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33578,
                          "nodeType": "ExpressionStatement",
                          "src": "17307:56:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 33582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17391:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 33579,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "17373:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17385:5:53",
                              "memberName": "claim",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2490,
                              "src": "17373:17:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) external"
                              }
                            },
                            "id": 33583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17373:20:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33584,
                          "nodeType": "ExpressionStatement",
                          "src": "17373:20:53"
                        }
                      ]
                    },
                    "id": 33586,
                    "nodeType": "IfStatement",
                    "src": "16836:566:53",
                    "trueBody": {
                      "id": 33529,
                      "nodeType": "Block",
                      "src": "16847:129:53",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 33515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16873:20:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 33512,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5398,
                                "src": "16857:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10679",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16860:12:53",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10165,
                              "src": "16857:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16857:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33517,
                          "nodeType": "ExpressionStatement",
                          "src": "16857:37:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33519,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "16914:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33518,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6186,
                                6207,
                                6231,
                                6255
                              ],
                              "referencedDeclaration": 6186,
                              "src": "16904:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16904:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33521,
                          "nodeType": "ExpressionStatement",
                          "src": "16904:16:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33522,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "16930:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16942:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "16930:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33525,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33259,
                                  "src": "16963:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "src": "16930:35:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16930:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33528,
                          "nodeType": "ExpressionStatement",
                          "src": "16930:37:53"
                        }
                      ]
                    }
                  },
                  "id": 33587,
                  "nodeType": "IfStatement",
                  "src": "14513:2889:53",
                  "trueBody": {
                    "id": 33508,
                    "nodeType": "Block",
                    "src": "14534:2296:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33293,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31999,
                              "src": "14549:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33292,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6096,
                              6117,
                              6141,
                              6165
                            ],
                            "referencedDeclaration": 6096,
                            "src": "14544:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14544:11:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33295,
                        "nodeType": "ExpressionStatement",
                        "src": "14544:11:53"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33296,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "14565:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14577:13:53",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1997,
                              "src": "14565:25:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33299,
                                "name": "aliceDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33269,
                                "src": "14598:12:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "14565:46:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14565:48:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33302,
                        "nodeType": "ExpressionStatement",
                        "src": "14565:48:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33304,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32005,
                              "src": "14628:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33303,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6096,
                              6117,
                              6141,
                              6165
                            ],
                            "referencedDeclaration": 6096,
                            "src": "14623:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14623:9:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33306,
                        "nodeType": "ExpressionStatement",
                        "src": "14623:9:53"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33307,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "14642:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14654:13:53",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1997,
                              "src": "14642:25:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33310,
                                "name": "bobDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33280,
                                "src": "14675:10:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "14642:44:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14642:46:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33313,
                        "nodeType": "ExpressionStatement",
                        "src": "14642:46:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33319,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33261,
                              "src": "14728:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33316,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "14706:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14698:8:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 33314,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14698:8:53",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14698:20:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 33318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14719:8:53",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "14698:29:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 33320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14698:32:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33321,
                        "nodeType": "ExpressionStatement",
                        "src": "14698:32:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "757365207769746864726177207768656e206e6f74207374616b6564",
                              "id": 33325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14756:30:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              },
                              "value": "use withdraw when not staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              }
                            ],
                            "expression": {
                              "id": 33322,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5398,
                              "src": "14740:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10679",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14743:12:53",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10165,
                            "src": "14740:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 33326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14740:47:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33327,
                        "nodeType": "ExpressionStatement",
                        "src": "14740:47:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 33331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14815:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 33328,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "14797:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14809:5:53",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2490,
                            "src": "14797:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 33332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14797:20:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33333,
                        "nodeType": "ExpressionStatement",
                        "src": "14797:20:53"
                      },
                      {
                        "assignments": [
                          33335
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33335,
                            "mutability": "mutable",
                            "name": "aliceGetShare",
                            "nameLocation": "14832:13:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 33508,
                            "src": "14827:18:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33334,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14827:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33340,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14869:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33336,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "14848:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14860:8:53",
                            "memberName": "getShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2515,
                            "src": "14848:20:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14848:23:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14827:44:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33342,
                              "name": "aliceGetShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33335,
                              "src": "14890:13:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 33343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14905:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "616c69636547657453686172653d30",
                              "id": 33344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14908:17:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eabc20dd64a59debd059fb8384ce8ceb182218cd0505a83b470face57311fbb4",
                                "typeString": "literal_string \"aliceGetShare=0\""
                              },
                              "value": "aliceGetShare=0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_eabc20dd64a59debd059fb8384ce8ceb182218cd0505a83b470face57311fbb4",
                                "typeString": "literal_string \"aliceGetShare=0\""
                              }
                            ],
                            "id": 33341,
                            "name": "assertGt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4274,
                              4299,
                              4329,
                              4354
                            ],
                            "referencedDeclaration": 4299,
                            "src": "14881:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 33345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14881:45:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33346,
                        "nodeType": "ExpressionStatement",
                        "src": "14881:45:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33348,
                              "name": "contOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31993,
                              "src": "14941:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33347,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6096,
                              6117,
                              6141,
                              6165
                            ],
                            "referencedDeclaration": 6096,
                            "src": "14936:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14936:15:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33350,
                        "nodeType": "ExpressionStatement",
                        "src": "14936:15:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33354,
                              "name": "pubkey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32014,
                              "src": "14979:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33355,
                              "name": "withdrawal_credentials",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32017,
                              "src": "14987:22:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33356,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32020,
                              "src": "15011:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33357,
                              "name": "deposit_data_root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32023,
                              "src": "15022:17:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 33351,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "14961:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14973:5:53",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2077,
                            "src": "14961:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                            }
                          },
                          "id": 33358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14961:79:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33359,
                        "nodeType": "ExpressionStatement",
                        "src": "14961:79:53"
                      },
                      {
                        "assignments": [
                          33361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33361,
                            "mutability": "mutable",
                            "name": "aliceBalance",
                            "nameLocation": "15055:12:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 33508,
                            "src": "15050:17:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33360,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15050:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33367,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33364,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "15078:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15070:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33362,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15070:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15070:14:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15085:7:53",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "15070:22:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15050:42:53"
                      },
                      {
                        "assignments": [
                          33369
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33369,
                            "mutability": "mutable",
                            "name": "bobBalance",
                            "nameLocation": "15107:10:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 33508,
                            "src": "15102:15:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33368,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15102:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33375,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33372,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32005,
                                "src": "15128:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15120:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33370,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15120:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15120:12:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15133:7:53",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "15120:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15102:38:53"
                      },
                      {
                        "assignments": [
                          33377
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33377,
                            "mutability": "mutable",
                            "name": "aliceShare",
                            "nameLocation": "15155:10:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 33508,
                            "src": "15150:15:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33376,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15150:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33390,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 33380,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 31948,
                                          "src": "15177:11:53",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 33379,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "15169:7:53",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 33378,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "15169:7:53",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 33381,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15169:20:53",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 33382,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15190:7:53",
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "15169:28:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 33383,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "15168:30:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3935",
                                "id": 33384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15201:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_95_by_1",
                                  "typeString": "int_const 95"
                                },
                                "value": "95"
                              },
                              "src": "15168:35:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 33386,
                              "name": "aliceDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33269,
                              "src": "15206:12:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15168:50:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "33323030303030303030303030303030303030303030",
                            "id": 33388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15221:22:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3200000000000000000000_by_1",
                              "typeString": "int_const 3200000000000000000000"
                            },
                            "value": "3200000000000000000000"
                          },
                          "src": "15168:75:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15150:93:53"
                      },
                      {
                        "assignments": [
                          33392
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33392,
                            "mutability": "mutable",
                            "name": "bobShare",
                            "nameLocation": "15273:8:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 33508,
                            "src": "15268:13:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33391,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15268:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33405,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 33395,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 31948,
                                          "src": "15293:11:53",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 33394,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "15285:7:53",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 33393,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "15285:7:53",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 33396,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15285:20:53",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 33397,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15306:7:53",
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "15285:28:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 33398,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "15284:30:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3935",
                                "id": 33399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15316:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_95_by_1",
                                  "typeString": "int_const 95"
                                },
                                "value": "95"
                              },
                              "src": "15284:34:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 33401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15321:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "15284:40:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 33403,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33377,
                            "src": "15327:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15284:53:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15268:69:53"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33406,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33377,
                            "src": "15750:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15764:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "15750:15:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33413,
                        "nodeType": "IfStatement",
                        "src": "15747:34:53",
                        "trueBody": {
                          "expression": {
                            "id": 33411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33409,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33377,
                              "src": "15767:10:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15780:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "15767:14:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33412,
                          "nodeType": "ExpressionStatement",
                          "src": "15767:14:53"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33414,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33392,
                            "src": "15794:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15806:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "15794:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33421,
                        "nodeType": "IfStatement",
                        "src": "15791:29:53",
                        "trueBody": {
                          "expression": {
                            "id": 33419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33417,
                              "name": "bobShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33392,
                              "src": "15809:8:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15819:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "15809:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33420,
                          "nodeType": "ExpressionStatement",
                          "src": "15809:11:53"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15857:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33422,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "15839:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15851:5:53",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2490,
                            "src": "15839:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 33426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15839:20:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33427,
                        "nodeType": "ExpressionStatement",
                        "src": "15839:20:53"
                      },
                      {
                        "assignments": [
                          33429
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33429,
                            "mutability": "mutable",
                            "name": "aliceBalanceExpected",
                            "nameLocation": "15874:20:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 33508,
                            "src": "15869:25:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33428,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15869:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33433,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33430,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33361,
                            "src": "15897:12:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33431,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33377,
                            "src": "15912:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15897:25:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15869:53:53"
                      },
                      {
                        "expression": {
                          "id": 33440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33434,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33361,
                            "src": "15932:12:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33437,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31999,
                                  "src": "15955:5:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 33436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15947:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33435,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15947:7:53",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15947:14:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15962:7:53",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "15947:22:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15932:37:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33441,
                        "nodeType": "ExpressionStatement",
                        "src": "15932:37:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33443,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33361,
                              "src": "16109:12:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33444,
                              "name": "aliceBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33429,
                              "src": "16123:20:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 33445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16145:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "616c69636542616c616e636520706f73742d636c61696d2077726f6e67",
                              "id": 33446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16148:31:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              },
                              "value": "aliceBalance post-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              }
                            ],
                            "id": 33442,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7108,
                              7144,
                              7194,
                              7230
                            ],
                            "referencedDeclaration": 7144,
                            "src": "16091:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 33447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16091:89:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33448,
                        "nodeType": "ExpressionStatement",
                        "src": "16091:89:53"
                      },
                      {
                        "assignments": [
                          33450
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33450,
                            "mutability": "mutable",
                            "name": "bobBalanceExpected",
                            "nameLocation": "16202:18:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 33508,
                            "src": "16197:23:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33449,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "16197:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33454,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33451,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33369,
                            "src": "16223:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33452,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33392,
                            "src": "16236:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16223:21:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16197:47:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33456,
                              "name": "bobBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33369,
                              "src": "16294:10:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33459,
                                    "name": "bob",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32005,
                                    "src": "16314:3:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "16306:7:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33457,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "16306:7:53",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16306:12:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16319:7:53",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "16306:20:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "626f6242616c616e6365207072652d636c61696d2077726f6e67",
                              "id": 33462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16328:28:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              },
                              "value": "bobBalance pre-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              }
                            ],
                            "id": 33455,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4120,
                            "src": "16285:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 33463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16285:72:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33464,
                        "nodeType": "ExpressionStatement",
                        "src": "16285:72:53"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33467,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "16378:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16370:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33465,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16370:7:53",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16370:20:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16391:7:53",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "16370:28:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 33470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16402:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "16370:35:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 33506,
                          "nodeType": "Block",
                          "src": "16524:297:53",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 33488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16554:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "id": 33485,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31948,
                                    "src": "16536:11:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33487,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16548:5:53",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2490,
                                  "src": "16536:17:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 33489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16536:20:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33490,
                              "nodeType": "ExpressionStatement",
                              "src": "16536:20:53"
                            },
                            {
                              "expression": {
                                "id": 33497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 33491,
                                  "name": "bobBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33369,
                                  "src": "16568:10:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 33494,
                                        "name": "bob",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 32005,
                                        "src": "16589:3:53",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 33493,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "16581:7:53",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 33492,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "16581:7:53",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 33495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16581:12:53",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 33496,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16594:7:53",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "16581:20:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16568:33:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33498,
                              "nodeType": "ExpressionStatement",
                              "src": "16568:33:53"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33500,
                                    "name": "bobBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33369,
                                    "src": "16745:10:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 33501,
                                    "name": "bobBalanceExpected",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33450,
                                    "src": "16757:18:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "32",
                                    "id": 33502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16777:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  {
                                    "hexValue": "626f6242616c616e636520706f73742d636c61696d2077726f6e67",
                                    "id": 33503,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16780:29:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    },
                                    "value": "bobBalance post-claim wrong"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    }
                                  ],
                                  "id": 33499,
                                  "name": "assertApproxEqAbs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    7108,
                                    7144,
                                    7194,
                                    7230
                                  ],
                                  "referencedDeclaration": 7144,
                                  "src": "16727:17:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256,string memory)"
                                  }
                                },
                                "id": 33504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16727:83:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33505,
                              "nodeType": "ExpressionStatement",
                              "src": "16727:83:53"
                            }
                          ]
                        },
                        "id": 33507,
                        "nodeType": "IfStatement",
                        "src": "16367:454:53",
                        "trueBody": {
                          "id": 33484,
                          "nodeType": "Block",
                          "src": "16407:111:53",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                    "id": 33475,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16435:39:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    },
                                    "value": "must be greater than 100 wei to claim"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 33472,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5398,
                                    "src": "16419:2:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$10679",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 33474,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16422:12:53",
                                  "memberName": "expectRevert",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10165,
                                  "src": "16419:15:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) external"
                                  }
                                },
                                "id": 33476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16419:56:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33477,
                              "nodeType": "ExpressionStatement",
                              "src": "16419:56:53"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 33481,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16505:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "id": 33478,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31948,
                                    "src": "16487:11:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33480,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16499:5:53",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2490,
                                  "src": "16487:17:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 33482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16487:20:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33483,
                              "nodeType": "ExpressionStatement",
                              "src": "16487:20:53"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "5c97929d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaim",
            "nameLocation": "14302:9:53",
            "parameters": {
              "id": 33262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33259,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "14319:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 33589,
                  "src": "14312:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33258,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14312:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33261,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "14329:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 33589,
                  "src": "14322:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33260,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14322:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14311:20:53"
            },
            "returnParameters": {
              "id": 33263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14339:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33627,
            "nodeType": "FunctionDefinition",
            "src": "17415:393:53",
            "nodes": [],
            "body": {
              "id": 33626,
              "nodeType": "Block",
              "src": "17455:353:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33593,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31993,
                        "src": "17473:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33592,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6186,
                        6207,
                        6231,
                        6255
                      ],
                      "referencedDeclaration": 6186,
                      "src": "17463:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17463:20:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33595,
                  "nodeType": "ExpressionStatement",
                  "src": "17463:20:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7769746864726177616c2063726564656e7469616c206d69736d61746368",
                        "id": 33599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17507:32:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        },
                        "value": "withdrawal credential mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 33596,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5398,
                        "src": "17491:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17494:12:53",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10165,
                      "src": "17491:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17491:49:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33601,
                  "nodeType": "ExpressionStatement",
                  "src": "17491:49:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33605,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32014,
                        "src": "17570:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "01000000000000000000000000dead",
                        "id": 33606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17578:35:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        "value": "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ޭ"
                      },
                      {
                        "id": 33607,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32020,
                        "src": "17615:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33608,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32023,
                        "src": "17626:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33602,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "17548:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17560:9:53",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2169,
                      "src": "17548:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17548:96:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33610,
                  "nodeType": "ExpressionStatement",
                  "src": "17548:96:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7769746864726177616c2063726564656e7469616c206d69736d61746368",
                        "id": 33614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17668:32:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        },
                        "value": "withdrawal credential mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 33611,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5398,
                        "src": "17652:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17655:12:53",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10165,
                      "src": "17652:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17652:49:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33616,
                  "nodeType": "ExpressionStatement",
                  "src": "17652:49:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33620,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32014,
                        "src": "17727:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "01000000000000000000000000dead",
                        "id": 33621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17735:35:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        "value": "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ޭ"
                      },
                      {
                        "id": 33622,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32020,
                        "src": "17772:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33623,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32023,
                        "src": "17783:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33617,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "17709:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17721:5:53",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2077,
                      "src": "17709:17:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17709:92:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33625,
                  "nodeType": "ExpressionStatement",
                  "src": "17709:92:53"
                }
              ]
            },
            "functionSelector": "8adcff77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBadWithdrawalCred",
            "nameLocation": "17424:21:53",
            "parameters": {
              "id": 33590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17445:2:53"
            },
            "returnParameters": {
              "id": 33591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17455:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33659,
            "nodeType": "FunctionDefinition",
            "src": "17814:295:53",
            "nodes": [],
            "body": {
              "id": 33658,
              "nodeType": "Block",
              "src": "17851:258:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33631,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31993,
                        "src": "17869:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33630,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6186,
                        6207,
                        6231,
                        6255
                      ],
                      "referencedDeclaration": 6186,
                      "src": "17859:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17859:20:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33633,
                  "nodeType": "ExpressionStatement",
                  "src": "17859:20:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33637,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32014,
                        "src": "17909:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33638,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32017,
                        "src": "17917:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33639,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32020,
                        "src": "17941:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33640,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32023,
                        "src": "17952:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33634,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "17887:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17899:9:53",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2169,
                      "src": "17887:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17887:83:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33642,
                  "nodeType": "ExpressionStatement",
                  "src": "17887:83:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7075624b6579206d69736d61746368",
                        "id": 33646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17994:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2714402f8c3b573b64268d127ae315c0053fe45c201e45c87cf1244c19f77ab9",
                          "typeString": "literal_string \"pubKey mismatch\""
                        },
                        "value": "pubKey mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2714402f8c3b573b64268d127ae315c0053fe45c201e45c87cf1244c19f77ab9",
                          "typeString": "literal_string \"pubKey mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 33643,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5398,
                        "src": "17978:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17981:12:53",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10165,
                      "src": "17978:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17978:34:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33648,
                  "nodeType": "ExpressionStatement",
                  "src": "17978:34:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "dead",
                        "id": 33652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18038:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3905d344717efd562447a4960eea941c1244adc31f53525d0ec1397ff6951c9c",
                          "typeString": "literal_string hex\"dead\""
                        },
                        "value": "ޭ"
                      },
                      {
                        "id": 33653,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32017,
                        "src": "18049:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33654,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32020,
                        "src": "18073:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33655,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32023,
                        "src": "18084:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3905d344717efd562447a4960eea941c1244adc31f53525d0ec1397ff6951c9c",
                          "typeString": "literal_string hex\"dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33649,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "18020:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18032:5:53",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2077,
                      "src": "18020:17:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18020:82:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33657,
                  "nodeType": "ExpressionStatement",
                  "src": "18020:82:53"
                }
              ]
            },
            "functionSelector": "94892dda",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testPubKeyMismatch",
            "nameLocation": "17823:18:53",
            "parameters": {
              "id": 33628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17841:2:53"
            },
            "returnParameters": {
              "id": 33629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17851:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34086,
            "nodeType": "FunctionDefinition",
            "src": "19554:3850:53",
            "nodes": [],
            "body": {
              "id": 34085,
              "nodeType": "Block",
              "src": "19599:3805:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33667,
                      "mutability": "mutable",
                      "name": "maxUint32",
                      "nameLocation": "19612:9:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 34085,
                      "src": "19607:14:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33666,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19607:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33669,
                  "initialValue": {
                    "hexValue": "34323934393637323935",
                    "id": 33668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19624:10:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "4294967295"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19607:27:53"
                },
                {
                  "assignments": [
                    33671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33671,
                      "mutability": "mutable",
                      "name": "aliceDeposit",
                      "nameLocation": "19647:12:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 34085,
                      "src": "19642:17:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33670,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19642:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33680,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 33674,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33661,
                            "src": "19667:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 33673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19662:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 33672,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "19662:4:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19662:7:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3331393939393939393939393939393939393939",
                        "id": 33676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19672:20:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31999999999999999999_by_1",
                          "typeString": "int_const 31999999999999999999"
                        },
                        "value": "31999999999999999999"
                      },
                      "src": "19662:30:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 33678,
                      "name": "maxUint32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33667,
                      "src": "19695:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19662:42:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19642:62:53"
                },
                {
                  "assignments": [
                    33682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33682,
                      "mutability": "mutable",
                      "name": "bobDeposit",
                      "nameLocation": "19717:10:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 34085,
                      "src": "19712:15:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33681,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19712:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33686,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3332303030303030303030303030303030303030",
                      "id": 33683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19730:20:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32000000000000000000_by_1",
                        "typeString": "int_const 32000000000000000000"
                      },
                      "value": "32000000000000000000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 33684,
                      "name": "aliceDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33671,
                      "src": "19753:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19730:35:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19712:53:53"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33687,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33661,
                        "src": "19776:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19781:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "19776:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33690,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33663,
                        "src": "19786:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 33691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19790:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "19786:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19776:17:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 34008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 34006,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33661,
                        "src": "22834:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 34007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22839:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "22834:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 34082,
                      "nodeType": "Block",
                      "src": "22977:420:53",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34028,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "22992:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 34027,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6096,
                                6117,
                                6141,
                                6165
                              ],
                              "referencedDeclaration": 6096,
                              "src": "22987:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22987:11:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34030,
                          "nodeType": "ExpressionStatement",
                          "src": "22987:11:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 34031,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "23008:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 34033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "23020:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "23008:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 34035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 34034,
                                  "name": "aliceDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33671,
                                  "src": "23041:12:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "23008:46:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 34036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23008:48:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34037,
                          "nodeType": "ExpressionStatement",
                          "src": "23008:48:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34039,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32005,
                                "src": "23071:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 34038,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6096,
                                6117,
                                6141,
                                6165
                              ],
                              "referencedDeclaration": 6096,
                              "src": "23066:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23066:9:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34041,
                          "nodeType": "ExpressionStatement",
                          "src": "23066:9:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 34042,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "23085:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 34044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "23097:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "23085:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 34046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 34045,
                                  "name": "bobDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33682,
                                  "src": "23118:10:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "23085:44:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 34047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23085:46:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34048,
                          "nodeType": "ExpressionStatement",
                          "src": "23085:46:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34050,
                                "name": "contOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31993,
                                "src": "23151:9:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34049,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6186,
                                6207,
                                6231,
                                6255
                              ],
                              "referencedDeclaration": 6186,
                              "src": "23141:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23141:20:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34052,
                          "nodeType": "ExpressionStatement",
                          "src": "23141:20:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34056,
                                "name": "pubkey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32014,
                                "src": "23189:6:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 34057,
                                "name": "withdrawal_credentials",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32017,
                                "src": "23197:22:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 34058,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32020,
                                "src": "23221:9:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 34059,
                                "name": "deposit_data_root",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32023,
                                "src": "23232:17:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 34053,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "23171:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 34055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23183:5:53",
                              "memberName": "stake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2077,
                              "src": "23171:17:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                              }
                            },
                            "id": 34060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23171:79:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34061,
                          "nodeType": "ExpressionStatement",
                          "src": "23171:79:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34067,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33663,
                                "src": "23290:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 34064,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31948,
                                    "src": "23268:11:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 34063,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23260:8:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 34062,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23260:8:53",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23260:20:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 34066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23281:8:53",
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "23260:29:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 34068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23260:32:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34069,
                          "nodeType": "ExpressionStatement",
                          "src": "23260:32:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                "id": 34073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23318:39:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                },
                                "value": "must be greater than 100 wei to claim"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                }
                              ],
                              "expression": {
                                "id": 34070,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5398,
                                "src": "23302:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10679",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 34072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23305:12:53",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10165,
                              "src": "23302:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 34074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23302:56:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34075,
                          "nodeType": "ExpressionStatement",
                          "src": "23302:56:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 34079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23386:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 34076,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "23368:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 34078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23380:5:53",
                              "memberName": "claim",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2490,
                              "src": "23368:17:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) external"
                              }
                            },
                            "id": 34080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23368:20:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34081,
                          "nodeType": "ExpressionStatement",
                          "src": "23368:20:53"
                        }
                      ]
                    },
                    "id": 34083,
                    "nodeType": "IfStatement",
                    "src": "22831:566:53",
                    "trueBody": {
                      "id": 34026,
                      "nodeType": "Block",
                      "src": "22842:129:53",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 34012,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22868:20:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 34009,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5398,
                                "src": "22852:2:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10679",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 34011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22855:12:53",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10165,
                              "src": "22852:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 34013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22852:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34014,
                          "nodeType": "ExpressionStatement",
                          "src": "22852:37:53"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34016,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "22909:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 34015,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6186,
                                6207,
                                6231,
                                6255
                              ],
                              "referencedDeclaration": 6186,
                              "src": "22899:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22899:16:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34018,
                          "nodeType": "ExpressionStatement",
                          "src": "22899:16:53"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 34019,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "22925:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 34021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "22937:13:53",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1997,
                                "src": "22925:25:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 34023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 34022,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33661,
                                  "src": "22958:1:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "src": "22925:35:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 34024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22925:37:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34025,
                          "nodeType": "ExpressionStatement",
                          "src": "22925:37:53"
                        }
                      ]
                    }
                  },
                  "id": 34084,
                  "nodeType": "IfStatement",
                  "src": "19773:3624:53",
                  "trueBody": {
                    "id": 34005,
                    "nodeType": "Block",
                    "src": "19794:3031:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33695,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31999,
                              "src": "19809:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33694,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6096,
                              6117,
                              6141,
                              6165
                            ],
                            "referencedDeclaration": 6096,
                            "src": "19804:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19804:11:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33697,
                        "nodeType": "ExpressionStatement",
                        "src": "19804:11:53"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33698,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "19825:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19837:13:53",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1997,
                              "src": "19825:25:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33701,
                                "name": "aliceDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33671,
                                "src": "19858:12:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "19825:46:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19825:48:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33704,
                        "nodeType": "ExpressionStatement",
                        "src": "19825:48:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33706,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32005,
                              "src": "19888:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33705,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6096,
                              6117,
                              6141,
                              6165
                            ],
                            "referencedDeclaration": 6096,
                            "src": "19883:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19883:9:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33708,
                        "nodeType": "ExpressionStatement",
                        "src": "19883:9:53"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33709,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31948,
                                "src": "19902:11:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2784",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19914:13:53",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1997,
                              "src": "19902:25:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33712,
                                "name": "bobDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33682,
                                "src": "19935:10:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "19902:44:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19902:46:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33715,
                        "nodeType": "ExpressionStatement",
                        "src": "19902:46:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33721,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33663,
                              "src": "19988:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33718,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "19966:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "19958:8:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 33716,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "19958:8:53",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19958:20:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 33720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19979:8:53",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "19958:29:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 33722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19958:32:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33723,
                        "nodeType": "ExpressionStatement",
                        "src": "19958:32:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "757365207769746864726177207768656e206e6f74207374616b6564",
                              "id": 33727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20016:30:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              },
                              "value": "use withdraw when not staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              }
                            ],
                            "expression": {
                              "id": 33724,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5398,
                              "src": "20000:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10679",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20003:12:53",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10165,
                            "src": "20000:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 33728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20000:47:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33729,
                        "nodeType": "ExpressionStatement",
                        "src": "20000:47:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 33733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20075:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 33730,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "20057:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20069:5:53",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2490,
                            "src": "20057:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 33734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20057:20:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33735,
                        "nodeType": "ExpressionStatement",
                        "src": "20057:20:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33737,
                              "name": "contOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31993,
                              "src": "20092:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33736,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6096,
                              6117,
                              6141,
                              6165
                            ],
                            "referencedDeclaration": 6096,
                            "src": "20087:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20087:15:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33739,
                        "nodeType": "ExpressionStatement",
                        "src": "20087:15:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33743,
                              "name": "pubkey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32014,
                              "src": "20130:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33744,
                              "name": "withdrawal_credentials",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32017,
                              "src": "20138:22:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33745,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32020,
                              "src": "20162:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33746,
                              "name": "deposit_data_root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32023,
                              "src": "20173:17:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 33740,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "20112:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20124:5:53",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2077,
                            "src": "20112:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                            }
                          },
                          "id": 33747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20112:79:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33748,
                        "nodeType": "ExpressionStatement",
                        "src": "20112:79:53"
                      },
                      {
                        "assignments": [
                          33750
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33750,
                            "mutability": "mutable",
                            "name": "poolBalance",
                            "nameLocation": "20206:11:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 34005,
                            "src": "20201:16:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33749,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20201:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33757,
                        "initialValue": {
                          "components": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33753,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31948,
                                    "src": "20229:11:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33752,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "20221:7:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33751,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20221:7:53",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20221:20:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "20242:7:53",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "20221:28:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 33756,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "20220:30:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20201:49:53"
                      },
                      {
                        "assignments": [
                          33759
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33759,
                            "mutability": "mutable",
                            "name": "fees",
                            "nameLocation": "20265:4:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 34005,
                            "src": "20260:9:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33758,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20260:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33765,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 33760,
                              "name": "poolBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33750,
                              "src": "20272:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 33761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20286:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "20272:15:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 33763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20290:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "20272:21:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20260:33:53"
                      },
                      {
                        "assignments": [
                          33767
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33767,
                            "mutability": "mutable",
                            "name": "poolBalanceMinusFees",
                            "nameLocation": "20308:20:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 34005,
                            "src": "20303:25:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33766,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20303:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33771,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33768,
                            "name": "poolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33750,
                            "src": "20331:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 33769,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33759,
                            "src": "20345:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20331:18:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20303:46:53"
                      },
                      {
                        "assignments": [
                          33773
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33773,
                            "mutability": "mutable",
                            "name": "aliceBalance",
                            "nameLocation": "20364:12:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 34005,
                            "src": "20359:17:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33772,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20359:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33779,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33776,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31999,
                                "src": "20387:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20379:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33774,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20379:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20379:14:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20394:7:53",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "20379:22:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20359:42:53"
                      },
                      {
                        "assignments": [
                          33781
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33781,
                            "mutability": "mutable",
                            "name": "bobBalance",
                            "nameLocation": "20416:10:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 34005,
                            "src": "20411:15:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33780,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20411:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33787,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33784,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32005,
                                "src": "20437:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20429:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33782,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20429:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20429:12:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20442:7:53",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "20429:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20411:38:53"
                      },
                      {
                        "assignments": [
                          33789
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33789,
                            "mutability": "mutable",
                            "name": "aliceShare",
                            "nameLocation": "20464:10:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 34005,
                            "src": "20459:15:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33788,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20459:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33795,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 33790,
                              "name": "poolBalanceMinusFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33767,
                              "src": "20477:20:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 33791,
                              "name": "aliceDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33671,
                              "src": "20500:12:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "20477:35:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3332303030303030303030303030303030303030",
                            "id": 33793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20515:20:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32000000000000000000_by_1",
                              "typeString": "int_const 32000000000000000000"
                            },
                            "value": "32000000000000000000"
                          },
                          "src": "20477:58:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20459:76:53"
                      },
                      {
                        "assignments": [
                          33797
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33797,
                            "mutability": "mutable",
                            "name": "bobShare",
                            "nameLocation": "20550:8:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 34005,
                            "src": "20545:13:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33796,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20545:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33801,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33798,
                            "name": "poolBalanceMinusFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33767,
                            "src": "20561:20:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 33799,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33789,
                            "src": "20584:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20561:33:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20545:49:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "706f6f6c2062616c616e6365",
                              "id": 33805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20616:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_779319e71ef35324697aba13ac9186fe57f31aef12ecc53ff2cf215113745e48",
                                "typeString": "literal_string \"pool balance\""
                              },
                              "value": "pool balance"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33808,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31948,
                                    "src": "20640:11:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "20632:7:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33806,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20632:7:53",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33809,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20632:20:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "20653:7:53",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "20632:28:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_779319e71ef35324697aba13ac9186fe57f31aef12ecc53ff2cf215113745e48",
                                "typeString": "literal_string \"pool balance\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33802,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18743,
                              "src": "20604:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$18743_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 33804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20612:3:53",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11387,
                            "src": "20604:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256) view"
                            }
                          },
                          "id": 33811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20604:57:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33812,
                        "nodeType": "ExpressionStatement",
                        "src": "20604:57:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "616c696365207368617265",
                              "id": 33816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20683:13:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd18234c0b169b2c2eca24e96f5caa5d0d193e8133ade8f9036441a2fd02ffb8",
                                "typeString": "literal_string \"alice share\""
                              },
                              "value": "alice share"
                            },
                            {
                              "id": 33817,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33789,
                              "src": "20698:10:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_dd18234c0b169b2c2eca24e96f5caa5d0d193e8133ade8f9036441a2fd02ffb8",
                                "typeString": "literal_string \"alice share\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33813,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18743,
                              "src": "20671:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$18743_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 33815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20679:3:53",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11387,
                            "src": "20671:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256) view"
                            }
                          },
                          "id": 33818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20671:38:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33819,
                        "nodeType": "ExpressionStatement",
                        "src": "20671:38:53"
                      },
                      {
                        "assignments": [
                          33821
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33821,
                            "mutability": "mutable",
                            "name": "aliceDistShare",
                            "nameLocation": "20724:14:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 34005,
                            "src": "20719:19:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33820,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20719:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33826,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20775:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33822,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "20741:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20753:21:53",
                            "memberName": "getDistributableShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2627,
                            "src": "20741:33:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20741:36:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20719:58:53"
                      },
                      {
                        "assignments": [
                          33828
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33828,
                            "mutability": "mutable",
                            "name": "bobDistShare",
                            "nameLocation": "20792:12:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 34005,
                            "src": "20787:17:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33827,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20787:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33833,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 33831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20841:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 33829,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "20807:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20819:21:53",
                            "memberName": "getDistributableShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2627,
                            "src": "20807:33:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20807:36:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20787:56:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33835,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33789,
                              "src": "20871:10:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33836,
                              "name": "aliceDistShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33821,
                              "src": "20883:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "33",
                              "id": 33837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20899:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            {
                              "hexValue": "616c69636520736861726520646f6573206e6f74206d6174636820646973746962757461626c65207368617265",
                              "id": 33838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20902:47:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94ead52456c306a0ee8ea015866a6efc4924f1673533c3c6eef33531ca69933d",
                                "typeString": "literal_string \"alice share does not match distibutable share\""
                              },
                              "value": "alice share does not match distibutable share"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94ead52456c306a0ee8ea015866a6efc4924f1673533c3c6eef33531ca69933d",
                                "typeString": "literal_string \"alice share does not match distibutable share\""
                              }
                            ],
                            "id": 33834,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7108,
                              7144,
                              7194,
                              7230
                            ],
                            "referencedDeclaration": 7144,
                            "src": "20853:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 33839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20853:97:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33840,
                        "nodeType": "ExpressionStatement",
                        "src": "20853:97:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33842,
                              "name": "bobShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33797,
                              "src": "20978:8:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33843,
                              "name": "bobDistShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33828,
                              "src": "20988:12:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "33",
                              "id": 33844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21002:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            {
                              "hexValue": "626f6220736861726520646f6573206e6f74206d6174636820626f622064697374726962757461626c65207368617265",
                              "id": 33845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21005:50:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a481e1280f095d129acbaddd13d4ff35eacdbf80c751f741f12c1906050e14b4",
                                "typeString": "literal_string \"bob share does not match bob distributable share\""
                              },
                              "value": "bob share does not match bob distributable share"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a481e1280f095d129acbaddd13d4ff35eacdbf80c751f741f12c1906050e14b4",
                                "typeString": "literal_string \"bob share does not match bob distributable share\""
                              }
                            ],
                            "id": 33841,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7108,
                              7144,
                              7194,
                              7230
                            ],
                            "referencedDeclaration": 7144,
                            "src": "20960:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 33846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20960:96:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33847,
                        "nodeType": "ExpressionStatement",
                        "src": "20960:96:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "666565526563697069656e742e62616c616e6365",
                              "id": 33851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21078:22:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f76582784778f46f3bed3fcb7a150312e048bdb09582c48e016494f237918c49",
                                "typeString": "literal_string \"feeRecipient.balance\""
                              },
                              "value": "feeRecipient.balance"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33854,
                                    "name": "feeRecipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32011,
                                    "src": "21110:12:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21102:7:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33852,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21102:7:53",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21102:21:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21124:7:53",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "21102:29:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f76582784778f46f3bed3fcb7a150312e048bdb09582c48e016494f237918c49",
                                "typeString": "literal_string \"feeRecipient.balance\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33848,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18743,
                              "src": "21066:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$18743_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 33850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21074:3:53",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11387,
                            "src": "21066:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256) view"
                            }
                          },
                          "id": 33857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21066:66:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33858,
                        "nodeType": "ExpressionStatement",
                        "src": "21066:66:53"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33859,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33789,
                            "src": "21353:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21367:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "21353:15:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33866,
                        "nodeType": "IfStatement",
                        "src": "21350:34:53",
                        "trueBody": {
                          "expression": {
                            "id": 33864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33862,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33789,
                              "src": "21370:10:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21383:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "21370:14:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33865,
                          "nodeType": "ExpressionStatement",
                          "src": "21370:14:53"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33867,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33797,
                            "src": "21397:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21409:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "21397:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33874,
                        "nodeType": "IfStatement",
                        "src": "21394:29:53",
                        "trueBody": {
                          "expression": {
                            "id": 33872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33870,
                              "name": "bobShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33797,
                              "src": "21412:8:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21422:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "21412:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33873,
                          "nodeType": "ExpressionStatement",
                          "src": "21412:11:53"
                        }
                      },
                      {
                        "assignments": [
                          33876
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33876,
                            "mutability": "mutable",
                            "name": "aliceBalanceExpected",
                            "nameLocation": "21447:20:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 34005,
                            "src": "21442:25:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33875,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21442:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33880,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33877,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33773,
                            "src": "21470:12:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33878,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33789,
                            "src": "21485:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21470:25:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21442:53:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33882,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33773,
                              "src": "21590:12:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33885,
                                    "name": "alice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31999,
                                    "src": "21612:5:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33884,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21604:7:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33883,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21604:7:53",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21604:14:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21619:7:53",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "21604:22:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "616c69636542616c616e6365207072652d636c61696d2077726f6e67",
                              "id": 33888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21628:30:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_02de6246c7759ee4954d513dce217e7eebe13abc69149dc3ad46356b81057684",
                                "typeString": "literal_string \"aliceBalance pre-claim wrong\""
                              },
                              "value": "aliceBalance pre-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_02de6246c7759ee4954d513dce217e7eebe13abc69149dc3ad46356b81057684",
                                "typeString": "literal_string \"aliceBalance pre-claim wrong\""
                              }
                            ],
                            "id": 33881,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4120,
                            "src": "21581:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 33889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21581:78:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33890,
                        "nodeType": "ExpressionStatement",
                        "src": "21581:78:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33894,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31999,
                              "src": "21678:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 33891,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5398,
                              "src": "21669:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10679",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21672:5:53",
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10124,
                            "src": "21669:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 33895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21669:15:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33896,
                        "nodeType": "ExpressionStatement",
                        "src": "21669:15:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "7374616b696e6720506f6f6c2062616c616e6365",
                              "id": 33900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21706:22:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6607f890064ef28da9da8fd2c9c0382afac42c27c3a3ad066efbdd719c7e5a79",
                                "typeString": "literal_string \"staking Pool balance\""
                              },
                              "value": "staking Pool balance"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33903,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31948,
                                    "src": "21738:11:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33902,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21730:7:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33901,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21730:7:53",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21730:20:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21751:7:53",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "21730:28:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6607f890064ef28da9da8fd2c9c0382afac42c27c3a3ad066efbdd719c7e5a79",
                                "typeString": "literal_string \"staking Pool balance\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33897,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18743,
                              "src": "21694:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$18743_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 33899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21702:3:53",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11387,
                            "src": "21694:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256) view"
                            }
                          },
                          "id": 33906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21694:65:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33907,
                        "nodeType": "ExpressionStatement",
                        "src": "21694:65:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21787:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33908,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31948,
                              "src": "21769:11:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2784",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21781:5:53",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2490,
                            "src": "21769:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 33912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21769:20:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33913,
                        "nodeType": "ExpressionStatement",
                        "src": "21769:20:53"
                      },
                      {
                        "expression": {
                          "id": 33920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33914,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33773,
                            "src": "21799:12:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33917,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31999,
                                  "src": "21822:5:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 33916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21814:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33915,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21814:7:53",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21814:14:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21829:7:53",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "21814:22:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21799:37:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33921,
                        "nodeType": "ExpressionStatement",
                        "src": "21799:37:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33923,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33773,
                              "src": "21976:12:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33924,
                              "name": "aliceBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33876,
                              "src": "21990:20:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 33925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22012:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "616c69636542616c616e636520706f73742d636c61696d2077726f6e67",
                              "id": 33926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22015:31:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              },
                              "value": "aliceBalance post-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              }
                            ],
                            "id": 33922,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7108,
                              7144,
                              7194,
                              7230
                            ],
                            "referencedDeclaration": 7144,
                            "src": "21958:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 33927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21958:89:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33928,
                        "nodeType": "ExpressionStatement",
                        "src": "21958:89:53"
                      },
                      {
                        "assignments": [
                          33930
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33930,
                            "mutability": "mutable",
                            "name": "bobBalanceExpected",
                            "nameLocation": "22069:18:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 34005,
                            "src": "22064:23:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33929,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "22064:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33934,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33931,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33781,
                            "src": "22090:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33932,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33797,
                            "src": "22103:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22090:21:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22064:47:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33936,
                              "name": "bobBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33781,
                              "src": "22161:10:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33939,
                                    "name": "bob",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32005,
                                    "src": "22181:3:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33938,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "22173:7:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33937,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22173:7:53",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22173:12:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22186:7:53",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "22173:20:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "626f6242616c616e6365207072652d636c61696d2077726f6e67",
                              "id": 33942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22195:28:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              },
                              "value": "bobBalance pre-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              }
                            ],
                            "id": 33935,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6748,
                              6773,
                              6786,
                              6802,
                              6844,
                              6886,
                              6928,
                              6965,
                              7002,
                              7039,
                              3901,
                              3926,
                              3956,
                              3981,
                              4040,
                              4065,
                              4095,
                              4120,
                              5220,
                              5255
                            ],
                            "referencedDeclaration": 4120,
                            "src": "22152:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 33943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22152:72:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33944,
                        "nodeType": "ExpressionStatement",
                        "src": "22152:72:53"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33948,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32005,
                              "src": "22243:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 33945,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5398,
                              "src": "22234:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10679",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22237:5:53",
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10124,
                            "src": "22234:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 33949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22234:13:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33950,
                        "nodeType": "ExpressionStatement",
                        "src": "22234:13:53"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33953,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31948,
                                  "src": "22268:11:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2784",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22260:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33951,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22260:7:53",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22260:20:53",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22281:7:53",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "22260:28:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 33956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22292:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "22260:35:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 33992,
                          "nodeType": "Block",
                          "src": "22414:298:53",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 33974,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22444:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "id": 33971,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31948,
                                    "src": "22426:11:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33973,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "22438:5:53",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2490,
                                  "src": "22426:17:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 33975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22426:20:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33976,
                              "nodeType": "ExpressionStatement",
                              "src": "22426:20:53"
                            },
                            {
                              "expression": {
                                "id": 33983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 33977,
                                  "name": "bobBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33781,
                                  "src": "22458:10:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 33980,
                                        "name": "bob",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 32005,
                                        "src": "22479:3:53",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 33979,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "22471:7:53",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 33978,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "22471:7:53",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 33981,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22471:12:53",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 33982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "22484:7:53",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "22471:20:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22458:33:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33984,
                              "nodeType": "ExpressionStatement",
                              "src": "22458:33:53"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33986,
                                    "name": "bobBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33781,
                                    "src": "22635:10:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 33987,
                                    "name": "bobBalanceExpected",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33930,
                                    "src": "22647:18:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "33",
                                    "id": 33988,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22667:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  {
                                    "hexValue": "626f6242616c616e636520706f73742d636c61696d2077726f6e67",
                                    "id": 33989,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22670:29:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    },
                                    "value": "bobBalance post-claim wrong"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    }
                                  ],
                                  "id": 33985,
                                  "name": "assertApproxEqAbs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    7108,
                                    7144,
                                    7194,
                                    7230
                                  ],
                                  "referencedDeclaration": 7144,
                                  "src": "22617:17:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256,string memory)"
                                  }
                                },
                                "id": 33990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22617:83:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33991,
                              "nodeType": "ExpressionStatement",
                              "src": "22617:83:53"
                            }
                          ]
                        },
                        "id": 33993,
                        "nodeType": "IfStatement",
                        "src": "22257:455:53",
                        "trueBody": {
                          "id": 33970,
                          "nodeType": "Block",
                          "src": "22297:111:53",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                    "id": 33961,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22325:39:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    },
                                    "value": "must be greater than 100 wei to claim"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 33958,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5398,
                                    "src": "22309:2:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$10679",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 33960,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "22312:12:53",
                                  "memberName": "expectRevert",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10165,
                                  "src": "22309:15:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) external"
                                  }
                                },
                                "id": 33962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22309:56:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33963,
                              "nodeType": "ExpressionStatement",
                              "src": "22309:56:53"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 33967,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22395:1:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "id": 33964,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31948,
                                    "src": "22377:11:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2784",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33966,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "22389:5:53",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2490,
                                  "src": "22377:17:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 33968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22377:20:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33969,
                              "nodeType": "ExpressionStatement",
                              "src": "22377:20:53"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33995,
                              "name": "fees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33759,
                              "src": "22739:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33998,
                                    "name": "feeRecipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32011,
                                    "src": "22753:12:53",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33997,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "22745:7:53",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33996,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22745:7:53",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22745:21:53",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 34000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22767:7:53",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "22745:29:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "3130",
                              "id": 34001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22776:2:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            {
                              "hexValue": "66656520726563697069656e742062616c616e636520696e636f7272656374",
                              "id": 34002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22780:33:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_395214c4be5535de3e0f29b75fce788733289f427fd8855be09d70ee263532e7",
                                "typeString": "literal_string \"fee recipient balance incorrect\""
                              },
                              "value": "fee recipient balance incorrect"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_395214c4be5535de3e0f29b75fce788733289f427fd8855be09d70ee263532e7",
                                "typeString": "literal_string \"fee recipient balance incorrect\""
                              }
                            ],
                            "id": 33994,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7108,
                              7144,
                              7194,
                              7230
                            ],
                            "referencedDeclaration": 7144,
                            "src": "22721:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 34003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22721:93:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34004,
                        "nodeType": "ExpressionStatement",
                        "src": "22721:93:53"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "5efae371",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFees",
            "nameLocation": "19563:8:53",
            "parameters": {
              "id": 33664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33661,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "19579:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 34086,
                  "src": "19572:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33660,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19572:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33663,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "19589:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 34086,
                  "src": "19582:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33662,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19582:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19571:20:53"
            },
            "returnParameters": {
              "id": 33665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19599:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34205,
            "nodeType": "FunctionDefinition",
            "src": "23410:1046:53",
            "nodes": [],
            "body": {
              "id": 34204,
              "nodeType": "Block",
              "src": "23437:1019:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34090,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31999,
                        "src": "23450:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 34089,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6096,
                        6117,
                        6141,
                        6165
                      ],
                      "referencedDeclaration": 6096,
                      "src": "23445:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23445:11:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34092,
                  "nodeType": "ExpressionStatement",
                  "src": "23445:11:53"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 34093,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31948,
                          "src": "23464:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 34095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23476:13:53",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1997,
                        "src": "23464:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 34097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332",
                          "id": 34096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23497:8:53",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32"
                        }
                      ],
                      "src": "23464:42:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 34098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23464:44:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34099,
                  "nodeType": "ExpressionStatement",
                  "src": "23464:44:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34103,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31993,
                        "src": "23525:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34100,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5398,
                        "src": "23516:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23519:5:53",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10124,
                      "src": "23516:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23516:19:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34105,
                  "nodeType": "ExpressionStatement",
                  "src": "23516:19:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34109,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32014,
                        "src": "23561:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34110,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32017,
                        "src": "23569:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34111,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32020,
                        "src": "23593:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34112,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32023,
                        "src": "23604:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 34106,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "23543:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23555:5:53",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2077,
                      "src": "23543:17:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 34113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23543:79:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34114,
                  "nodeType": "ExpressionStatement",
                  "src": "23543:79:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d75737420626520677561726469616e",
                        "id": 34118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23733:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06c186a7f228984c160e264b8e18583eb31f00eea2d76d4e90ba0553b56e30a",
                          "typeString": "literal_string \"must be guardian\""
                        },
                        "value": "must be guardian"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f06c186a7f228984c160e264b8e18583eb31f00eea2d76d4e90ba0553b56e30a",
                          "typeString": "literal_string \"must be guardian\""
                        }
                      ],
                      "expression": {
                        "id": 34115,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5398,
                        "src": "23717:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23720:12:53",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10165,
                      "src": "23717:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 34119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23717:35:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34120,
                  "nodeType": "ExpressionStatement",
                  "src": "23717:35:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34124,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31999,
                        "src": "23769:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 34121,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5398,
                        "src": "23760:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23763:5:53",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10124,
                      "src": "23760:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23760:15:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34126,
                  "nodeType": "ExpressionStatement",
                  "src": "23760:15:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34130,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32014,
                        "src": "23806:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23814:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34127,
                        "name": "frensOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31957,
                        "src": "23783:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensOracle_$580",
                          "typeString": "contract FrensOracle"
                        }
                      },
                      "id": 34129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23795:10:53",
                      "memberName": "setExiting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 579,
                      "src": "23783:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (bytes memory,bool) external"
                      }
                    },
                    "id": 34132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23783:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34133,
                  "nodeType": "ExpressionStatement",
                  "src": "23783:36:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34139,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "23844:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$34272",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$34272",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 34138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23836:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23836:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23836:13:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34143,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "23859:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$34272",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$34272",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 34142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23851:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34141,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23851:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23851:13:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34134,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5398,
                        "src": "23827:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10679",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23830:5:53",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10136,
                      "src": "23827:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 34145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23827:38:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34146,
                  "nodeType": "ExpressionStatement",
                  "src": "23827:38:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34150,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32014,
                        "src": "23896:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23904:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34147,
                        "name": "frensOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31957,
                        "src": "23873:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensOracle_$580",
                          "typeString": "contract FrensOracle"
                        }
                      },
                      "id": 34149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23885:10:53",
                      "memberName": "setExiting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 579,
                      "src": "23873:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (bytes memory,bool) external"
                      }
                    },
                    "id": 34152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23873:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34153,
                  "nodeType": "ExpressionStatement",
                  "src": "23873:36:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030303030303030",
                        "id": 34159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24012:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34156,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31948,
                            "src": "23990:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$2784",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$2784",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 34155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23982:8:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 34154,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23982:8:53",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23982:20:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 34158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24003:8:53",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "23982:29:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23982:44:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34161,
                  "nodeType": "ExpressionStatement",
                  "src": "23982:44:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 34165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24131:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 34162,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "24113:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24125:5:53",
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2490,
                      "src": "24113:17:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 34166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24113:20:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34167,
                  "nodeType": "ExpressionStatement",
                  "src": "24113:20:53"
                },
                {
                  "assignments": [
                    34169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34169,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "24155:5:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 34204,
                      "src": "24141:19:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 34168,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "24141:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34173,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34170,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "24163:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24175:8:53",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2664,
                      "src": "24163:20:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 34172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24163:22:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24141:44:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "657869746564",
                                "id": 34178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24229:8:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a12a7ae4132c3f93fcc4fb46e9e900a1d1105abfd1ce8bcec1c533b1cd0a973c",
                                  "typeString": "literal_string \"exited\""
                                },
                                "value": "exited"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_a12a7ae4132c3f93fcc4fb46e9e900a1d1105abfd1ce8bcec1c533b1cd0a973c",
                                  "typeString": "literal_string \"exited\""
                                }
                              ],
                              "expression": {
                                "id": 34176,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "24212:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 34177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "24216:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "24212:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 34179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24212:26:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 34175,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "24202:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 34180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24202:37:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34184,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34169,
                                "src": "24268:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 34182,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "24251:3:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 34183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "24255:12:53",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "24251:16:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 34185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24251:23:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 34181,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "24241:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 34186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24241:34:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "6e6f7420657869746564",
                        "id": 34187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24276:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99c9d5bc62a5b3ac5fc5b3159df6dc8b50db32c0e245e1c9c901ce20d2ef2cd1",
                          "typeString": "literal_string \"not exited\""
                        },
                        "value": "not exited"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99c9d5bc62a5b3ac5fc5b3159df6dc8b50db32c0e245e1c9c901ce20d2ef2cd1",
                          "typeString": "literal_string \"not exited\""
                        }
                      ],
                      "id": 34174,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6748,
                        6773,
                        6786,
                        6802,
                        6844,
                        6886,
                        6928,
                        6965,
                        7002,
                        7039,
                        3901,
                        3926,
                        3956,
                        3981,
                        4040,
                        4065,
                        4095,
                        4120,
                        5220,
                        5255
                      ],
                      "referencedDeclaration": 3981,
                      "src": "24193:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 34188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24193:96:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34189,
                  "nodeType": "ExpressionStatement",
                  "src": "24193:96:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030303030303030",
                        "id": 34195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24328:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34192,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31948,
                            "src": "24306:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$2784",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$2784",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 34191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24298:8:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 34190,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24298:8:53",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24298:20:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 34194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24319:8:53",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "24298:29:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24298:44:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34197,
                  "nodeType": "ExpressionStatement",
                  "src": "24298:44:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 34201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24447:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 34198,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "24429:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24441:5:53",
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2490,
                      "src": "24429:17:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 34202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24429:20:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34203,
                  "nodeType": "ExpressionStatement",
                  "src": "24429:20:53"
                }
              ]
            },
            "functionSelector": "456f30ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExit",
            "nameLocation": "23419:8:53",
            "parameters": {
              "id": 34087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23427:2:53"
            },
            "returnParameters": {
              "id": 34088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23437:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34234,
            "nodeType": "FunctionDefinition",
            "src": "24463:183:53",
            "nodes": [],
            "body": {
              "id": 34233,
              "nodeType": "Block",
              "src": "24492:154:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34212,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "24514:1:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 34233,
                      "src": "24500:15:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 34210,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "24500:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34211,
                        "nodeType": "ArrayTypeName",
                        "src": "24500:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34216,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34213,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "24518:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24530:16:53",
                      "memberName": "getIdsInThisPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2499,
                      "src": "24518:28:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (uint256[] memory)"
                      }
                    },
                    "id": 34215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24518:30:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24500:48:53"
                },
                {
                  "assignments": [
                    34221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34221,
                      "mutability": "mutable",
                      "name": "q",
                      "nameLocation": "24570:1:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 34233,
                      "src": "24556:15:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 34219,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "24556:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34220,
                        "nodeType": "ArrayTypeName",
                        "src": "24556:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34225,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34222,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "24574:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24586:16:53",
                      "memberName": "getIdsInThisPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2499,
                      "src": "24574:28:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (uint256[] memory)"
                      }
                    },
                    "id": 34224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24574:30:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24556:48:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34227,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34212,
                          "src": "24621:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 34228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "24623:6:53",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "24621:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 34229,
                          "name": "q",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34221,
                          "src": "24630:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 34230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "24632:6:53",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "24630:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34226,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6748,
                        6773,
                        6786,
                        6802,
                        6844,
                        6886,
                        6928,
                        6965,
                        7002,
                        7039,
                        3901,
                        3926,
                        3956,
                        3981,
                        4040,
                        4065,
                        4095,
                        4120,
                        5220,
                        5255
                      ],
                      "referencedDeclaration": 4095,
                      "src": "24612:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24612:27:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34232,
                  "nodeType": "ExpressionStatement",
                  "src": "24612:27:53"
                }
              ]
            },
            "functionSelector": "3c20ae96",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetIds",
            "nameLocation": "24472:10:53",
            "parameters": {
              "id": 34206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24482:2:53"
            },
            "returnParameters": {
              "id": 34207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24492:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34271,
            "nodeType": "FunctionDefinition",
            "src": "24652:246:53",
            "nodes": [],
            "body": {
              "id": 34270,
              "nodeType": "Block",
              "src": "24681:217:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34238,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31999,
                        "src": "24694:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 34237,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6096,
                        6117,
                        6141,
                        6165
                      ],
                      "referencedDeclaration": 6096,
                      "src": "24689:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24689:11:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34240,
                  "nodeType": "ExpressionStatement",
                  "src": "24689:11:53"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 34241,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31948,
                          "src": "24708:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2784",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 34243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "24720:13:53",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1997,
                        "src": "24708:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 34245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130303030303030303030303030",
                          "id": 34244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24741:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000_by_1",
                            "typeString": "int_const 10000000000000"
                          },
                          "value": "10000000000000"
                        }
                      ],
                      "src": "24708:48:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 34246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24708:50:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34247,
                  "nodeType": "ExpressionStatement",
                  "src": "24708:50:53"
                },
                {
                  "assignments": [
                    34250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34250,
                      "mutability": "mutable",
                      "name": "newFrensArt",
                      "nameLocation": "24776:11:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 34270,
                      "src": "24766:21:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensArt_$3207",
                        "typeString": "contract IFrensArt"
                      },
                      "typeName": {
                        "id": 34249,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34248,
                          "name": "IFrensArt",
                          "nameLocations": [
                            "24766:9:53"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3207,
                          "src": "24766:9:53"
                        },
                        "referencedDeclaration": 3207,
                        "src": "24766:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensArt_$3207",
                          "typeString": "contract IFrensArt"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34257,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34254,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31933,
                            "src": "24808:8:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$159",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$159",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 34253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24800:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34252,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24800:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24800:17:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34251,
                      "name": "IFrensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3207,
                      "src": "24790:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IFrensArt_$3207_$",
                        "typeString": "type(contract IFrensArt)"
                      }
                    },
                    "id": 34256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24790:28:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensArt_$3207",
                      "typeString": "contract IFrensArt"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24766:52:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34259,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31993,
                        "src": "24831:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34258,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6096,
                        6117,
                        6141,
                        6165
                      ],
                      "referencedDeclaration": 6096,
                      "src": "24826:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24826:15:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34261,
                  "nodeType": "ExpressionStatement",
                  "src": "24826:15:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34266,
                            "name": "newFrensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34250,
                            "src": "24878:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFrensArt_$3207",
                              "typeString": "contract IFrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFrensArt_$3207",
                              "typeString": "contract IFrensArt"
                            }
                          ],
                          "id": 34265,
                          "name": "IFrensArt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3207,
                          "src": "24868:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFrensArt_$3207_$",
                            "typeString": "type(contract IFrensArt)"
                          }
                        },
                        "id": 34267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24868:22:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensArt_$3207",
                          "typeString": "contract IFrensArt"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFrensArt_$3207",
                          "typeString": "contract IFrensArt"
                        }
                      ],
                      "expression": {
                        "id": 34262,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31948,
                        "src": "24849:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2784",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24861:6:53",
                      "memberName": "setArt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2742,
                      "src": "24849:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IFrensArt_$3207_$returns$__$",
                        "typeString": "function (contract IFrensArt) external"
                      }
                    },
                    "id": 34268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24849:42:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34269,
                  "nodeType": "ExpressionStatement",
                  "src": "24849:42:53"
                }
              ]
            },
            "functionSelector": "f1759a8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetArt",
            "nameLocation": "24661:10:53",
            "parameters": {
              "id": 34235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24671:2:53"
            },
            "returnParameters": {
              "id": 34236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24681:0:53"
            },
            "scope": 34272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31929,
              "name": "Test",
              "nameLocations": [
                "928:4:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8560,
              "src": "928:4:53"
            },
            "id": 31930,
            "nodeType": "InheritanceSpecifier",
            "src": "928:4:53"
          }
        ],
        "canonicalName": "StakingPoolTest",
        "contractDependencies": [
          159,
          224,
          503,
          580,
          911,
          1171,
          1479,
          1502,
          2892,
          3041
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34272,
          8560,
          5630,
          5367
        ],
        "name": "StakingPoolTest",
        "nameLocation": "909:15:53",
        "scope": 34273,
        "usedErrors": [],
        "usedEvents": [
          3586,
          3590,
          3594,
          3598,
          3602,
          3606,
          3610,
          3614,
          3620,
          3626,
          3634,
          3642,
          3648,
          3654,
          3660,
          3666,
          6014,
          6019,
          6024,
          6031,
          6038,
          6045
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 53
}