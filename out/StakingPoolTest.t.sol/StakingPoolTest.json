{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SSVNetwork",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SSVToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRecipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensLogo",
      "outputs": [
        {
          "internalType": "contract FrensLogo",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensOracle",
      "outputs": [
        {
          "internalType": "contract FrensOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "funToken",
      "outputs": [
        {
          "internalType": "contract FunToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pmFont",
      "outputs": [
        {
          "internalType": "contract PmFont",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool2",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolImplementation",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "x",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "y",
          "type": "uint64"
        }
      ],
      "name": "testAddToDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "x",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "y",
          "type": "uint64"
        }
      ],
      "name": "testAddToDepositWrongPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBadWithdrawalCred",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "x",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "y",
          "type": "uint32"
        }
      ],
      "name": "testClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        }
      ],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEmptyStakeModifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "x",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "y",
          "type": "uint32"
        }
      ],
      "name": "testFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetIds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testPubKeyMismatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSSVTokenAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetArt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStakeTwoStep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTooMuchDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        },
        {
          "internalType": "uint72",
          "name": "y",
          "type": "uint72"
        }
      ],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "waves",
      "outputs": [
        {
          "internalType": "contract Waves",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234620002c75760006201000162ff00ff198254161781556706942000000013376f219ab540356cbb839cbe05303d7705fa60018060a01b0319908082601654161760165573dd9bc35ae942ef0cfa76930954a156b3ff30a4e1826017541617601755739d65ff81a3c488d585bbfb0bfe3c7707c7917f548260185416176018556e0c2e074ec69a0dfb2997ba6c7d2e1e82601954161760195581601a541617601a55630111173881601b541617601b55620a11ce81601c541617601c55610b0b81601d541617601d55601e541617601e55601f90620000e48254620002cc565b82811162000298575b5060618255818152602090818120927fac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f4988455600193846f99b7103c35b26289035de4227e1cc57560801b910155620001468354620002cc565b81811162000269575b50604183558282527f0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e28383205562000189602154620002cc565b9080821162000242575b7f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae96002867f0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f878760c16021556021815220917f92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b835582015501557f4093180202063b0e66cd8aef5a934bfabcf32919e494064542b5f1a3889bf51660225560405162017ec890816200030a8239f35b60218352838320910160051c8101906003015b818110156200019357828155840162000255565b838352848083868620930160051c830192015b8281106200028c5750506200014f565b8481550185906200027c565b82825260028360208420920160051c820191015b818110620002bb5750620000ed565b828155600101620002ac565b600080fd5b90600182811c92168015620002fe575b6020831014620002e857565b634e487b7160e01b600052602260045260246000fd5b91607f1691620002dc56fe608060405260043610156200001357600080fd5b6000803560e01c8063020f12da14620057315780630a9254e4146200484b5780630c56ae3b146200482057806316599bf51462004659578063223e6be4146200462e5780632aa8195e146200460357806330dbf88714620045d85780633a1143da14620042795780633a768463146200424d5780633c20ae96146200418c578063456f30ca1462003b87578063469048401462003b5c5780634ccd89c4146200389b5780635176a10214620037d3578063591167c714620037a85780635c97929d146200304a5780635dcf6be51462002e0b5780635efae37114620020695780635f583c1d146200203e57806363c72d6014620020135780637bf5d9081462001fe8578063845380a21462001fbd578063875d50121462001f925780638adcff771462001dac5780638d299cc41462001cdb57806390f805d9146200173257806394892dda146200141957806394cd95e314620013ee5780639e535c69146200136d578063a1b8adcb1462001342578063b3ec6b8e1462000f75578063b672b4d41462000b69578063b7ab10ee1462000542578063ba414fa61462000519578063bc073b1814620004ee578063bc48e94714620004c3578063c09cec771462000498578063ca413fdc146200046d578063cae72da31462000442578063cc91c4361462000417578063edc91a9214620003ec578063f1759a8b14620002e9578063f8ccbf4714620002c2578063fa7626d4146200029e578063faf7772e14620002735763fb47e3a2146200024657600080fd5b346200027057806003193601126200027057601c546040516001600160a01b039091168152602090f35b80fd5b503462000270578060031936011262000270576017546040516001600160a01b039091168152602090f35b5034620002705780600319360112620002705760ff60209154166040519015158152f35b5034620002705780600319360112620002705760ff6020915460101c166040519015158152f35b50346200027057806003193601126200027057601c5481906001600160a01b039062000317908216620064a0565b80600e5416803b15620003c257826509184e72a00091600460405180948193633e7ea84160e21b83525af1908115620003e1578391620003c6575b50508060085416906200036981601b5416620064a0565b600e541690813b15620003c2578291602483926040519485938492637358d1d760e11b845260048401525af18015620003b757620003a45750f35b620003af9062005cbf565b620002705780f35b6040513d84823e3d90fd5b5050fd5b620003d19062005cbf565b620003de57813862000352565b50fd5b6040513d85823e3d90fd5b503462000270578060031936011262000270576011546040516001600160a01b039091168152602090f35b503462000270578060031936011262000270576016546040516001600160a01b039091168152602090f35b503462000270578060031936011262000270576013546040516001600160a01b039091168152602090f35b503462000270578060031936011262000270576012546040516001600160a01b039091168152602090f35b50346200027057806003193601126200027057601d546040516001600160a01b039091168152602090f35b503462000270578060031936011262000270576009546040516001600160a01b039091168152602090f35b50346200027057806003193601126200027057600a546040516001600160a01b039091168152602090f35b5034620002705780600319360112620002705760206200053862005db9565b6040519015158152f35b50346200027057604036600319011262000270576200056062005c50565b6200056a62005c67565b6001600160401b0380921683811580158062000b48575b15620008ed575050601c546001600160a01b039390620005a3908516620063b2565b8484600e5416803b156200081a57818491600460405180948193633e7ea84160e21b83525af18015620003b757620008d1575b505083601054169284601c5416604051948591632f745c5960e01b8352600483015287602483015281604460209788935afa908115620008c657879162000893575b506200062f62000627620060e7565b821562006193565b85600e5416926040518681602481632daad61d60e01b988982528760048301525afa80156200088857899062000852575b6200067891506200067062006112565b908762006221565b8760008051602062017e33833981519152803b156200081a5760405163f28dceb360e01b81526020600482015260196024820152781ddc9bdb99c81cdd185ada5b99c81c1bdbdb08199bdc881a59603a1b60448201529082908290606490829084905af18015620003b7576200083a575b505086600f5416921695823b1562000836578760405181816024818c632188224760e21b998a83528960048401525af18015620003b7576200081e575b5081600e541693843b156200081a57889460248392604051978893849283528860048401525af19384156200080d578794620007ec575b5050602490600e5416936040519485938492835260048301525afa928315620007e1578593620007a3575b5050620007a0926200079a916200646e565b620063a6565b80f35b9080929350813d8311620007d9575b620007be818362005d21565b81010312620007d4575190826200079a62000788565b600080fd5b503d620007b2565b6040513d87823e3d90fd5b620007fa9192945062005cbf565b6200080957849187386200075d565b8680fd5b50604051903d90823e3d90fd5b5080fd5b620008299062005cbf565b6200083657873862000726565b8780fd5b620008459062005cbf565b62000836578738620006e9565b508681813d831162000880575b6200086b818362005d21565b81010312620007d45762000678905162000660565b503d6200085f565b6040513d8b823e3d90fd5b90508481813d8311620008be575b620008ad818362005d21565b81010312620007d457513862000618565b503d620008a1565b6040513d89823e3d90fd5b620008dc9062005cbf565b620008e9578438620005d6565b8480fd5b9093929015620009ae5750905060008051602062017e33833981519152803b15620003c25782604051809263f28dceb360e01b82528183816200093360048201620060ba565b03925af1908115620003e157839162000996575b5050601c546001600160a01b039062000962908216620063b2565b600e5416803b15620003c2578290600460405180948193633e7ea84160e21b83525af18015620003b757620003a457505080f35b620009a19062005cbf565b620003de57813862000947565b601c546001600160a01b039290620009c8908416620063b2565b82600e5416803b1562000aeb578590600460405180948193633e7ea84160e21b83525af1908115620007e157859162000b2b575b5050816010541691602081601c5416604460405180968193632f745c5960e01b835260048301528960248301525afa928315620007e157859362000aef575b5060008051602062017e33833981519152803b1562000aeb5785604051809263f28dceb360e01b825281838162000a756004820162006070565b03925af190811562000ae057869162000ac8575b5050600e5416803b15620008e95784926024916040519586948593632188224760e21b8552600485015216905af18015620003b757620003a457505080f35b62000ad39062005cbf565b620008e957843862000a89565b6040513d88823e3d90fd5b8580fd5b945091506020843d821162000b22575b8162000b0e6020938362005d21565b81010312620007d457849351913862000a3b565b3d915062000aff565b62000b369062005cbf565b62000b43578338620009fc565b505050fd5b506801bc16d674ec80000062000b61868616856200646e565b111562000581565b5034620002705780600319360112620002705760158054600e546040516370a0823160e01b8082526001600160a01b039283166004830152919360209390929160249185908290849082908a165afa8015620008c657879062000f3f575b62000bd391506200625d565b848354168486601b5416836040518094819388835260048301525afa8015620008c657879062000f09575b62000c0a91506200625d565b858584541686600e5416813b1562000f0557604051906340c10f1960e01b8252600482015282816044818362bc614e96878a8401525af1908115620003e157839162000eed575b5050868554168688600e541685604051809481938a835260048301525afa908115620003e157839162000eb2575b5062000c8b90620062fd565b868554168688601b541685604051809481938a835260048301525afa908115620003e157839162000e77575b5062000cc3906200625d565b86601b541660008051602062017e3383398151915290813b1562000e73578391858392604051948593849263ca669fa760e01b845260048401525af1908115620003e157839162000e5b575b505086600e5416878654169088601b541690803b15620008e9578492836064926040519687958694637aa9bf6f60e11b865260048601528a85015260448401525af18015620003b75762000e43575b5050848354168486600e5416836040518094819388835260048301525afa938415620008c65785948792899162000e08575b5062000d9c906200625d565b541694601b5416916040519586938492835260048301525afa908115620003e157839162000dd1575b83620007a083620062fd565b905081813d831162000e00575b62000dea818362005d21565b81010312620007d457620007a090513862000dc5565b503d62000dde565b9250509381813d831162000e3b575b62000e23818362005d21565b81010312620007d457518493869162000d9c62000d90565b503d62000e17565b62000e4e9062005cbf565b62000aeb57853862000d5e565b62000e669062005cbf565b6200081a57813862000d0f565b8380fd5b809350878092503d831162000eaa575b62000e93818362005d21565b81010312620007d45762000cc38892519062000cb7565b503d62000e87565b809350878092503d831162000ee5575b62000ece818362005d21565b81010312620007d45762000c8b8892519062000c7f565b503d62000ec2565b62000ef89062005cbf565b6200081a57813862000c51565b8280fd5b508481813d831162000f37575b62000f22818362005d21565b81010312620007d45762000c0a905162000bfe565b503d62000f16565b508481813d831162000f6d575b62000f58818362005d21565b81010312620007d45762000bd3905162000bc7565b503d62000f4c565b50346200027057806003193601126200027057601b5460008051602062017e33833981519152906001600160a01b0390811690823b1562000e735760405163ca669fa760e01b9283825260048201528460249181818481838a5af18015620003b7576200132a575b505081600e541693604051946336f370b360e21b9187602097848982015283868201528581526200100e8162005ce9565b833b156200081a5781620010438a95829360405194858094819363735a531360e01b9b8c845260048401528d8301906200613a565b03925af18015620003b75762001312575b5050604051610110808201908282106001600160401b03831117620012ff579180918b96959493620170458339039085f0968715620012dc5786600b541697876040518b8101907865787465726e616c2e636f6e74726163742e6164647265737360381b8252695353564e6574776f726b60b01b603982015260238152620010dc8162005ce9565b519020911698803b15620008095760405163ca446dd960e01b815260048101929092526001600160a01b038a16602483015286908290604490829084905af190811562000ae0578691620012e7575b505086601b5416823b1562000aeb57868692836040519586948593845260048401525af1908115620012dc578491620012c4575b505084600e54169160405190888201528285820152848152620011828162005ce9565b823b1562000e7357620011ad9284928360405180968195829483528d60048401528a8301906200613a565b03925af18015620003b757620012ac575b50508382600e5416936040519283809263d78162e960e01b82528760048301525afa918215620007e1578391869362001276575b507f6665655265636970206e6f742073657420696e2066616b6520636f6e7472616360405195620012238762005ce9565b60218752860152601d60fa1b604086015282160362001240578380f35b60008051602062017e53833981519152620012666200126f946040519182918262006161565b0390a162005ee5565b3880808380f35b6200129c919350853d8711620012a4575b62001293818362005d21565b81019062005e8a565b9138620011f2565b503d62001287565b620012b79062005cbf565b620008e9578438620011be565b620012cf9062005cbf565b62000f055782386200115f565b6040513d86823e3d90fd5b620012f29062005cbf565b620008e95784386200112b565b634e487b7160e01b8b526041600452868bfd5b6200131d9062005cbf565b6200083657873862001054565b620013359062005cbf565b620008e957843862000fdd565b50346200027057806003193601126200027057600c546040516001600160a01b039091168152602090f35b50346200027057806003193601126200027057600e54604051638da5cb5b60e01b8152906001600160a01b03906020908390600490829085165afa908115620003e157620007a0928492620013c9575b50601b54169062005ee5565b620013e691925060203d8111620012a45762001293818362005d21565b9038620013bd565b503462000270578060031936011262000270576008546040516001600160a01b039091168152602090f35b503462000270576003199080823601126200027057601b546001600160a01b039062001447908216620063b2565b80600e5416602254813b1562000e73576200147c849283926040519485809481936303a483bb60e61b835260048301620066a0565b03925af18015620003e1579083916200171a575b505060008051602062017e3383398151915290813b1562000f055760405163f28dceb360e01b8152838160648183602097886004840152600f60248401526e0e0eac496caf240dad2e6dac2e8c6d608b1b60448401525af18015620012dc5790849162001702575b5050600e541692602254843b1562000e7357604051632595a71b60e11b8152608060048201526002608482015261dead60f01b60a482015260c060248201528354909360009390916001919080831c908381168015620016f7575b85831081146200165b578260c48a01529081600014620016d857506001146200167a575b508585030160448601526000936021549182811c9281811680156200166f575b85851081146200165b578484529081156200163d5750600114620015db575b50505050839483858181958195606483015203925af18015620003b757620003a45750f35b929794509060216000527f3a6357012c1a3ae0a17d304c9920310382d968ebcc4b1771f41c6b304205b570926000935b828510620016295750949791909201019250859050838581620015b6565b80548486018b01529389019381016200160b565b60ff191683860152505090151560051b0101915084838581620015b6565b634e487b7160e01b88526022600452602488fd5b93607f169362001597565b909450826000527fc97bfaf2f8ee708c303a06d134f5ecd8389ae0432af62dc132a24118292866bb83836000925b848410620016c25750505060e49150860101933862001577565b805460e4858c01015201910190838591620016a8565b905060e492965060ff191682880152151560051b860101933862001577565b91607f169162001553565b6200170d9062005cbf565b62000f05578238620014f8565b620017259062005cbf565b6200081a57813862001490565b50346200027057604036600319011262000270576200175062005c7e565b6024803568ffffffffffffffffff80821693848303620007d4571684848210158062001cd1575b8062001cbd575b1562001a6057601c546001600160a01b03906200179d908216620063b2565b80600e5416803b1562000f0557828491600460405180948193633e7ea84160e21b83525af1908115620003e157839162001a48575b505080601054169481601c541691604051968793632f745c5960e01b8552600485015284838501528360446020998a935afa928315620012dc57849362001a10575b506200184f604051620018278162005d05565b6014815273066697273742069642073686f756c6420626520360641b89820152841562006193565b80600e54169560405188818581632daad61d60e01b9b8c82528960048301525afa90811562000ae0578691620019d5575b50604051620018c491620018948262005d05565b601a82527f6465706f73697420616d6f756e742073686f756c6420626520780000000000008b8301528862006221565b81600e5416803b1562000aeb57604051630441a3e760e41b81526004810186905268ffffffffffffffffff92909216602483015290949081908690604490829084905af19485156200080d578895620019b8575b5050600e5416946040519586938492835260048301525afa918215620007e157859262001980575b50620007a093620019519162006492565b6e1e080b481e481ccbd8880f481d1bdd608a1b60405193620019738562005d05565b600f855284015262006221565b9091508281813d8311620019b0575b6200199b818362005d21565b81010312620007d4575190620007a062001940565b503d6200198f565b620019c69192955062005cbf565b62000836578592883862001918565b809650898092503d831162001a08575b620019f1818362005d21565b81010312620007d457620018c48a95519062001880565b503d620019e5565b935091508583813d811162001a40575b62001a2c818362005d21565b81010312620007d457879251913862001814565b503d62001a20565b62001a539062005cbf565b6200081a578138620017d2565b9350918262001aa457505060008051602062017e33833981519152803b15620003c25782604051809263f28dceb360e01b82528183816200093360048201620060ba565b6801bc16d674ec80000083111562001af157505060008051602062017e33833981519152803b15620003c25782604051809263f28dceb360e01b8252818381620009336004820162006070565b909160018060a01b039062001b0a82601c5416620063b2565b81600e5416803b1562000aeb578590600460405180948193633e7ea84160e21b83525af1908115620007e157859162001ca5575b5050806010541691602082601c5416604460405180968193632f745c5960e01b8352600483015289868301525afa928315620007e157859362001c69575b5062001b9362001b8b620060e7565b841562006193565b60008051602062017e3383398151915290813b1562000aeb5760146064879283604051958694859363f28dceb360e01b855260206004860152840152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b60448401525af1908115620007e157859162001c51575b5050600e541691823b1562000b4357604051630441a3e760e41b8152600481019290925268ffffffffffffffffff1660248201529082908290604490829084905af18015620003b757620003a457505080f35b62001c5c9062005cbf565b62000b4357833862001bfe565b945091506020843d821162001c9c575b8162001c886020938362005d21565b81010312620007d457849351913862001b7c565b3d915062001c79565b62001cb09062005cbf565b62000b4357833862001b3e565b506801bc16d674ec8000008211156200177e565b5081151562001777565b50346200027057806003193601126200027057601c5481906001600160a01b039062001d09908216620064a0565b60008051602062017e33833981519152803b15620003c25782604051809263f28dceb360e01b825281838162001d426004820162006070565b03925af1908115620003e157839162001d94575b5050600e5416803b15620003de57816801c9f78d2893e4000091600460405180948193633e7ea84160e21b83525af18015620003b757620003a45750f35b62001d9f9062005cbf565b620003de57813862001d56565b50346200027057806003193601126200027057601b5481906001600160a01b039062001dda908216620063b2565b60008051602062017e33833981519152803b15620003c25760405163f28dceb360e01b80825260206004830152601e60248301527f7769746864726177616c2063726564656e7469616c206d69736d617463680000604483015290848160648183875af1908115620007e157859162001f7a575b505082600e541660225490803b1562000aeb576040516303a483bb60e61b8152918691839182908490829062001e88906004830162006c3e565b03925af1908115620007e157859162001f62575b5050813b1562000b435760405190815260206004820152601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d61746368000060448201529083908290606490829084905af1908115620003e157839162001f4a575b5050600e541660225490803b15620003c257604051632595a71b60e11b8152918391839182908490829062001f37906004830162006c3e565b03925af18015620003b757620003a45750f35b62001f559062005cbf565b620003de57813862001efe565b62001f6d9062005cbf565b62000b4357833862001e9c565b62001f859062005cbf565b62000b4357833862001e4e565b503462000270578060031936011262000270576014546040516001600160a01b039091168152602090f35b503462000270578060031936011262000270576015546040516001600160a01b039091168152602090f35b503462000270578060031936011262000270576018546040516001600160a01b039091168152602090f35b50346200027057806003193601126200027057601b546040516001600160a01b039091168152602090f35b50346200027057806003193601126200027057600f546040516001600160a01b039091168152602090f35b50346200027057604036600319011262000270576200208762005c97565b6200209162005cab565b63ffffffff809216906801bc16d674ec7fffff808302928015918185041482171562002b00578484046801bc16d674ec80000003916801bc16d674ec800000831162002df757908187949392158062002dea575b1562002b96575050601c5462002104906001600160a01b0316620064a0565b600e546001600160a01b0316803b1562000e73576040518481600481633e7ea84160e21b958682528b8b04905af1908115620007e157859162002b7e575b5050601d546200215b906001600160a01b0316620064a0565b600e546001600160a01b0316803b15620008e95760048592604051948593849283525af1908115620003e157839162002b66575b50600e549091829182918716906001600160a01b031682821562002b5c575bf115620003b75760008051602062017e338339815191523b1562000f055760405163f28dceb360e01b815260206004820152601c60248201527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152839081816064818360008051602062017e338339815191525af18015620003b75762002b44575b50600e546001600160a01b0316803b156200081a5781809160246040518094819363379607f560e01b8352600160048401525af18015620003b75762002b2c575b5050601b546200228e906001600160a01b0316620064a0565b600e5460225484916001600160a01b0316803b1562000f0557604051632595a71b60e11b81529183918391829084908290620022ce9060048301620066a0565b03925af18015620003b75762002b14575b505060018060a01b03600e541680319260058402938085046005148115171562002b00576200231390606486049062006492565b601c54601d546001600160a01b0390811631959116319262002350916801bc16d674ec800000916200234791048462006869565b04809262006492565b92620023848131604051620023658162005d05565b600c81526b706f6f6c2062616c616e636560a01b602082015262006e18565b620023b582604051620023978162005d05565b600b81526a616c69636520736861726560a81b602082015262006e18565b6040516333c7180560e11b81526004810188905290602082602481845afa91821562002aba57889262002ac5575b50906020602492604051938480926333c7180560e11b8252600160048301525afa91821562002aba57889262002a7d575b509062002475620024ce92604051906200242e8262005ce9565b602d82527f616c69636520736861726520646f6573206e6f74206d6174636820646973746960208301526c62757461626c6520736861726560981b60408301528562006ace565b60405190620024848262005ce9565b603082527f626f6220736861726520646f6573206e6f74206d6174636820626f622064697360208301526f74726962757461626c6520736861726560801b60408301528562006ace565b601e5460405162002516916001600160a01b03163190620024ef8162005d05565b6014815273666565526563697069656e742e62616c616e636560601b602082015262006e18565b6001811462002a75575b6001831462002a6c575b6200253a6200258691836200646e565b9160018060a01b03601c54163160405191620025568362005d05565b601c83527f616c69636542616c616e6365207072652d636c61696d2077726f6e6700000000602084015262006221565b601c5485906001600160a01b031660008051602062017e338339815191523b156200081a576040519063ca669fa760e01b8252600482015281816024818360008051602062017e338339815191525af18015620003b75762002a54575b5060018060a01b03600e54166200262a8131604051620026038162005d05565b60148152737374616b696e6720506f6f6c2062616c616e636560601b602082015262006e18565b803b156200081a5781809160246040518094819363379607f560e01b83528160048401525af18015620003b75762002a3c575b5050620026b3916200268b620026929260018060a01b03601c5416319062002684620068c3565b9162006974565b836200646e565b601d549092906001600160a01b031631620026ac620068fe565b9162006221565b601d5483906001600160a01b031660008051602062017e338339815191523b156200081a576040519063ca669fa760e01b8252600482015281816024818360008051602062017e338339815191525af18015620003b75762002a24575b50600e546001600160a01b03166064813111620029aa5750505060008051602062017e338339815191523b156200081a5760405163f28dceb360e01b8152829081818062002761600482016200687d565b03818360008051602062017e338339815191525af18015620003b75762002992575b50600e546001600160a01b0316803b156200081a5781809160246040518094819363379607f560e01b8352600160048401525af18015620003b7576200297a575b50505b60018060a01b03601e541631604051620027e18162005d05565b601f81527f66656520726563697069656e742062616c616e636520696e636f7272656374006020820152600a6200281c836064860462006c1e565b1162002829575b50505080f35b6200284b60008051602062017e53833981519152916040519182918262006161565b0390a16200285d816064840462006c1e565b600a811115620028235760809160008051602062017e138339815191528360405160208152602260208201527f4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b6060820152a160405193849160408352620028d36040840162005eab565b90602084015260008051602062017e7383398151915295869384920390a160405180916040825260646200290a6040840162005ec8565b910460208301520390a1828260405160408152600a604082015269204d61782044656c746160b01b6060820152600a6020820152a16040519060408252600a604083015269202020202044656c746160b01b60608301526020820152a16200297162005fbf565b38808062002823565b620029859062005cbf565b6200081a578138620027c4565b6200299d9062005cbf565b6200081a57813862002783565b803b156200081a5781809160246040518094819363379607f560e01b8352600160048401525af18015620003b75762002a0c575b5050601d5462002a06916001600160a01b039091163190620029ff62006939565b9162006ace565b620027c7565b62002a179062005cbf565b62000f05578238620029de565b62002a2f9062005cbf565b62000f0557823862002710565b62002a479062005cbf565b620008e95784386200265d565b62002a5f9062005cbf565b620008e9578438620025e3565b8592506200252a565b508462002520565b91506020823d60201162002ab1575b8162002a9b6020938362005d21565b81010312620007d4579051906200247562002414565b3d915062002a8c565b6040513d8a823e3d90fd5b91506020823d60201162002af7575b8162002ae36020938362005d21565b81010312620007d4579051906020620023e3565b3d915062002ad4565b634e487b7160e01b86526011600452602486fd5b62002b1f9062005cbf565b62000f05578238620022df565b62002b379062005cbf565b62000f0557823862002275565b62002b4f9062005cbf565b62000f0557823862002234565b506108fc620021ae565b62002b719062005cbf565b6200081a5781386200218f565b62002b899062005cbf565b62000e7357833862002142565b95919094939560001462002be1575050505060008051602062017e33833981519152803b15620003c25782604051809263f28dceb360e01b82528183816200093360048201620060ba565b909192935060018060a01b039362002bfd85601c5416620064a0565b84600e5416803b156200080957866004916040519283809288633e7ea84160e21b9788845204905af1908115620008c657879162002dd2575b505062002c4785601d5416620064a0565b84600e5416803b15620008095760048792604051948593849283525af1908115620007e157859162002dba575b505062002c8583601b5416620063b2565b82600e54169060225491803b1562000aeb57604051632595a71b60e11b8152928691849182908490829062002cbe9060048301620066a0565b03925af1918215620007e157859262002d9e575b50818093819286600e54169083921691821562002d94575bf1156200080d5760008051602062017e33833981519152803b15620003c25782604051809263f28dceb360e01b825281838162002d2a600482016200687d565b03925af1908115620003e157839162002d7c575b5050600e5416803b15620003de5781809160246040518094819363379607f560e01b8352600160048401525af18015620003b757620003a457505080f35b62002d879062005cbf565b620003de57813862002d3e565b506108fc62002cea565b62002dac9092919262005cbf565b62000b435783903862002cd2565b62002dc59062005cbf565b62000b4357833862002c74565b62002ddd9062005cbf565b62000aeb57853862002c36565b50606487851611620020e5565b634e487b7160e01b87526011600452602487fd5b50346200027057806003193601126200027057600e8054601c546001600160a01b0391821631919062002e40908216620064a0565b80835416803b15620008e95784604051633e7ea84160e21b815281816004816801bc16d674ec80000080975af18015620003b75762003032575b505082018083116200301e579062002e998592828654163190620063a6565b80601a5416936040518381600481630621fd1360e41b998a82525afa908115620012dc57849162003000575b50602081519101209362002edd83601b5416620063b2565b8282541660225490803b1562000aeb576040516303a483bb60e61b8152918691839182908490829062002f149060048301620066a0565b03925af1908115620007e157859162002fe8575b505082825416803b15620008e957848091600460405180948193633a4b66f160e01b83525af18015620007e1578491869162002fcd575b505062002f709254163190620063a6565b601a54169260046040518095819382525afa8015620003e157620007a092849162002fa6575b50602081519101201415620061c8565b62002fc691503d8086833e62002fbd818362005d21565b81019062006584565b3862002f96565b62002fda91925062005cbf565b62000e735782843862002f5f565b62002ff39062005cbf565b62000e7357833862002f28565b6200301791503d8086833e62002fbd818362005d21565b3862002ec5565b634e487b7160e01b85526011600452602485fd5b6200303d9062005cbf565b620008e957843862002e7a565b50346200027057604036600319011262000270576200306862005c97565b6200307262005cab565b9163ffffffff809216916801bc16d674ec7fffff93848402841595858204148617156200379457829004936801bc16d674ec800000958587039687116200301e5780158062003787575b15620036d7575050601c546001600160a01b039290620030de908416620064a0565b600e9583875416803b1562000aeb5760405186816004818b633e7ea84160e21b968783525af18015620008c657908791620036bf575b50506200312585601d5416620064a0565b8488541690813b1562000809579060048792604051948593849283525af18015620007e15790859291620036a3575b508180938192868a54169083921691821562003699575bf1156200080d5760008051602062017e3383398151915290813b1562000f055760405163f28dceb360e01b80825260206004830152601c60248301527f757365207769746864726177207768656e206e6f74207374616b65640000000060448301529590848160648183885af18015620007e15790859162003681575b50508181541692833b15620008e957849596604051868163379607f560e01b97888252600160048301528160249a8b925af1801562002aba5790889162003669575b50508383541660405180916319f6b4bf60e31b8252896004830152818960209485935afa9081156200088857899162003636575b506040516200326d8162005d05565b600f81526e0616c69636547657453686172653d3608c1b83820152811590816200353f575b50505050620032a584601b5416620064a0565b83835416602254813b156200353b57620032d989928392604051948580948193632595a71b60e11b835260048301620066a0565b03925af1801562002aba5790889162003523575b505083601c5416319784601d5416319085855416908131605f810290808204605f1490151715620035105768ad78ebc5ac62000000916200332e9162006869565b049080319a605f8c029b808d04605f14901517156200351057620033578360648d9e0462006492565b916001841462003507575b60018314620034fe575b803b15620034fa578b80918c8c604051948593849283528160048401525af1908115620034ef578c91620034cf575b5050906200268b620033b6620033d894620033c7946200646e565b89601c5416319062002684620068c3565b9186601d541631620026ac620068fe565b8354851660648131116200346b575050813b156200080957869060405192839182528183816200340b600482016200687d565b03925af190811562000ae057869162003453575b50505416803b1562000b43578392839260405194859384928352600160048401525af18015620003b757620003a457505080f35b6200345e9062005cbf565b620008e95784386200341f565b925095939694925050803b1562000e73578392839260405194859384928352600160048401525af18015620003b757620034b7575b5050620007a091601d541631906200268462006939565b620034c29062005cbf565b62000f05578238620034a0565b620034dd9093929362005cbf565b620034eb57908a386200339b565b8a80fd5b6040513d8e823e3d90fd5b8b80fd5b8b92506200336c565b8b935062003362565b634e487b7160e01b8b526011600452898bfd5b6200352e9062005cbf565b62000809578638620032ed565b8880fd5b6200356160008051602062017e53833981519152916040519182918262006161565b0390a162003572575b808062003292565b608091829160008051602062017e13833981519152836040518481526021858201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b6060820152a160405190604082526009604083015268202056616c7565206160b81b60608301528282015260008051602062017e73833981519152938491a1896040519160408352600960408401526810102b30b63ab2903160b91b6060840152820152a16200362e62005fbf565b38806200356a565b90508181813d831162003661575b62003650818362005d21565b81010312620007d45751386200325e565b503d62003644565b620036749062005cbf565b620008095786386200322a565b6200368c9062005cbf565b62000e73578338620031e8565b506108fc6200316b565b620036b19092919262005cbf565b62000e735783903862003154565b620036ca9062005cbf565b62000aeb57853862003114565b958496959391949560001462003724575050505060008051602062017e33833981519152803b15620003c25782604051809263f28dceb360e01b82528183816200093360048201620060ba565b909192935060018060a01b03936200374085601c5416620064a0565b84600e541690813b1562000809578660049160405192838092633e7ea84160e21b968783525af1908115620008c657879162002dd257505062002c4785601d5416620064a0565b50606484841611620030bc565b634e487b7160e01b84526011600452602484fd5b503462000270578060031936011262000270576010546040516001600160a01b039091168152602090f35b50346200027057806003193601126200027057601c5481906001600160a01b039062003801908216620064a0565b60008051602062017e33833981519152803b15620003c25782604051809263f28dceb360e01b82528183816200383a60048201620060ba565b03925af1908115620003e157839162003883575b5050600e5416803b15620003de57818091600460405180948193633e7ea84160e21b83525af18015620003b757620003a45750f35b6200388e9062005cbf565b620003de5781386200384e565b503462000270576020806003193601126200081a5768ffffffffffffffffff620038c462005c7e565b169082821580158062003b48575b1562003acc575050601c546001600160a01b039290620038f4908416620063b2565b8383600e5416803b156200081a57818391600460405180948193633e7ea84160e21b83525af18015620003b75762003ab4575b505082601054168284601c5416604460405180948193632f745c5960e01b835260048301528960248301525afa908115620007e157859162003a81575b506200397362000627620060e7565b8284600e541691602460405180948193632daad61d60e01b835260048301525afa908115620007e157859162003a4d575b50600493620039c08492620039b862006112565b908562006221565b600e541660405194858092637d88209760e01b82525afa908115620012dc57849162003a15575b620007a09350670783d746f744465760c41b6040519362003a088562005d05565b6008855284015262006221565b90508183813d831162003a45575b62003a2f818362005d21565b81010312620007d457620007a0925190620039e7565b503d62003a23565b90508281813d831162003a79575b62003a67818362005d21565b81010312620007d457516004620039a4565b503d62003a5b565b90508281813d831162003aac575b62003a9b818362005d21565b81010312620007d457513862003964565b503d62003a8f565b62003abf9062005cbf565b62000e7357833862003927565b909291501562003b0f5760008051602062017e33833981519152803b15620003c25782604051809263f28dceb360e01b82528183816200093360048201620060ba565b60008051602062017e33833981519152803b15620003c25782604051809263f28dceb360e01b8252818381620009336004820162006070565b506801bc16d674ec800000841115620038d2565b50346200027057806003193601126200027057601e546040516001600160a01b039091168152602090f35b50346200027057806003193601126200027057601c5481906001600160a01b039062003bb5908216620064a0565b600e9080825416803b1562000b4357836801bc16d674ec80000091600460405180948193633e7ea84160e21b83525af1908115620012dc57849162004174575b505080601b54169060008051602062017e3383398151915292833b15620008e9576040519363ca669fa760e01b9384865260048601526024948681878183865af1908115620008c65787916200415c575b50508282541660225490803b156200083657604051632595a71b60e11b8152918891839182908490829062003c7f9060048301620066a0565b03925af1908115620008c657879162004144575b5050803b1562000aeb5760405163f28dceb360e01b81526020600482018190526010878301526f36bab9ba1031329033bab0b93234b0b760811b60448301529490878160648183875af190811562002aba5788916200412c575b505083601c5416823b15620008365760405191825260048201528681878183865af1908115620008c657879162004114575b5050826011541690813b15620008095760405187816369d8a87360e11b94858252604060048301528183818c600162003d5b60448401620065bf565b9183015203925af190811562002aba578891620040fc575b5050803b1562000809576040516323f2866760e11b8152306004820181905260248201529087908290604490829084905af1908115620008c6578791620040e4575b5050826011541690813b156200080957869060405192839182526040600483015281838162003de760448201620065bf565b60018c83015203925af190811562000ae0578691620040cc575b505064e8d4a5100085808080848787541682f115620007e1578282541693843b156200080957604051878188818363379607f560e01b9a8b83528160048401525af190811562002aba578891620040b4575b50906004918585541660405193848092631865c57d60e01b82525afa90811562002aba57889283926200404a575b508293839283926040518181019065195e1a5d195960d21b82526006815262003eaa8162005d05565b5190209160405162003edb83828162003ecd818301968781519384920162005d43565b810103808452018262005d21565b5190209160405162003eed8162005d05565b600a8152691b9bdd08195e1a5d195960b21b8382015283821415908162003f4f575b50505050508686541682f115620012dc575416803b1562000b435783928392604051948593849283528160048401525af18015620003b757620003a45750f35b62003f7160008051602062017e53833981519152916040519182918262006161565b0390a162003f82575b808062003f0f565b60008051602062017e1383398151915260806040518481526025858201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b6060820152a1604051926040845262003feb6040850162005eab565b9083850152837fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999485920390a160405191829160408352620040306040840162005ec8565b918301520390a16200404162005fbf565b38808062003f7a565b915091503d8089833e6200405f818362005d21565b81019082818303126200353b578051906001600160401b038211620040b057019080601f830112156200353b57889383620040a586959385879695879651910162006548565b935091509362003e81565b8980fd5b620040bf9062005cbf565b6200080957863862003e53565b620040d79062005cbf565b620008e957843862003e01565b620040ef9062005cbf565b62000aeb57853862003db5565b620041079062005cbf565b6200080957863862003d73565b6200411f9062005cbf565b62000aeb57853862003d1f565b620041379062005cbf565b6200080957863862003ced565b6200414f9062005cbf565b62000aeb57853862003c93565b620041679062005cbf565b62000aeb57853862003c46565b6200417f9062005cbf565b620003c257823862003bf5565b50346200027057806003193601126200027057600e5460405163116d63f960e21b8082526001600160a01b039092169183908183600481875afa928315620003b75782936200422d575b5060046040518095819382525afa908115620003e157620007a092849262004204575b5051905190620063a6565b620042259192503d8086833e6200421c818362005d21565b81019062006e74565b9038620041f9565b620042459193503d8084833e6200421c818362005d21565b9138620041d6565b50346200027057806003193601126200027057602060405160008051602062017e338339815191528152f35b50346200027057806003193601126200027057600e8054601c546001600160a01b0391821631939290620042af908316620064a0565b81815416803b1562000e735760405190633e7ea84160e21b9182815285816004816801bc16d674ec80000080965af1801562000ae057908691620045c0575b50508501948581116200301e576200430d8596858554163190620063a6565b83601a5416906040518681600481630621fd1360e41b968782525afa908115620008c6578791620045a2575b5060208151910120906200435186601b5416620064a0565b8585541660225490803b156200353b57604051632595a71b60e11b81529189918391829084908290620043889060048301620066a0565b03925af190811562002aba5788916200458a575b5050620043af90868654163190620063a6565b8585601a54169260046040518095819382525afa801562000ae057620043e6928791620045735750602081519101201415620061c8565b620043f583601c5416620063b2565b60008051602062017e3383398151915290813b15620008e95760405163f28dceb360e01b8082526020600483015260166024830152756e6f7420616363657074696e67206465706f7369747360501b60448301529190868160648183885af1908115620008c65787916200455b575b50508484541690813b15620008095760019160048892604051948593849283525af190811562000ae057869162004543575b5050813b15620008e9576040519081526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b60448201529084908290606490829084905af1908115620012dc5784916200452b575b50505416803b15620003de5781600191602460405180948193632188224760e21b83528160048401525af18015620003b757620003a45750f35b620045369062005cbf565b620003c2578238620044f1565b6200454e9062005cbf565b620008e957843862004496565b620045669062005cbf565b62000aeb57853862004464565b62002fc691503d8089833e62002fbd818362005d21565b620045959062005cbf565b620008095786386200439c565b620045b991503d8089833e62002fbd818362005d21565b3862004339565b620045cb9062005cbf565b620008e9578438620042ee565b50346200027057806003193601126200027057600b546040516001600160a01b039091168152602090f35b50346200027057806003193601126200027057600d546040516001600160a01b039091168152602090f35b503462000270578060031936011262000270576019546040516001600160a01b039091168152602090f35b50346200027057806003193601126200027057601854600e54601754604051636eb1769f60e11b81526001600160a01b039283166004820152908216602482015291602091829184916044918391165afa918215620003e1578392620047eb575b5060405191620046ca8362005d05565b601f83527f6e6f7420636f72726563742073737620746f6b656e20616c6c6f77616e636500828401526000199281841415908162004706578580f35b6200472860008051602062017e53833981519152916040519182918262006161565b0390a162004737575b80808580f35b60008051602062017e1383398151915260806040518481526022858201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b6060820152a160405192604084526200479d6040850162005eab565b90838501528360008051602062017e738339815191529485920390a160405191829160408352620047d16040840162005ec8565b918301520390a1620047e262005fbf565b38808062004731565b9080925081813d831162004818575b62004806818362005d21565b81010312620007d457519038620046ba565b503d620047fa565b50346200027057806003193601126200027057600e546040516001600160a01b039091168152602090f35b50346200027057806003193601126200027057604051610652908181016001600160401b0392828210848311176200571d579082916200e16a8339039083f08015620003b75760018060a01b03809116600b8054906bffffffffffffffffffffffff60a01b9483868416178255866040516020958682017865787465726e616c2e636f6e74726163742e6164647265737360381b92838252695353564e6574776f726b60b01b603982015260238152620049058162005ce9565b5190209588601754169682858316173b15620008e95760405163ca446dd960e01b80825260048201929092526001600160a01b03989098166024890152969184918391604491839185918216175af1908115620003e157839162005705575b505086845416604051878101908382526729a9ab2a37b5b2b760c11b603982015260218152620049948162005ce9565b5190208860185416823b15620008e95760405188815260048101929092526001600160a01b031660248201529083908290604490829084905af1908115620003e1578391620056ed575b50508684541660405187810190838252695353564e6574776f726b60b01b60398201526023815262004a108162005ce9565b5190208860175416823b15620008e95760405188815260048101929092526001600160a01b031660248201529083908290604490829084905af1908115620003e1578391620056d5575b505086845416604051878101908382526e11195c1bdcda5d10dbdb9d1c9858dd608a1b60398201526028815262004a918162005ce9565b5190208860165416823b15620008e95760405188815260048101929092526001600160a01b031660248201529083908290604490829084905af1908115620003e1578391620056bd575b5050868454169060405187810191825262454e5360e81b6039820152601c815262004b068162005d05565b5190208760195416823b1562000e735760405187815260048101929092526001600160a01b031660248201529082908290604490829084905af18015620003b757620056a5575b508583541660405186810190751c1c9bdd1bd8dbdb0b9999594b9c9958da5c1a595b9d60521b82526016815262004b848162005d05565b51902087601e5416823b1562000e735760405187815260048101929092526001600160a01b031660248201529082908290604490829084905af18015620003b7576200568d575b505084825416604051906128bb908183019183831085841117620056795791839188936200a7aa8439815203019088f08015620008c657851660105490808883161760105588878554169160405193888501936f636f6e74726163742e6164647265737360801b948581526030966d4672656e73506f6f6c536861726560901b88820152601e815262004c5e8162005d05565b51902090803b15620008e9576040518a81526004810192909252918416929092176001600160a01b03166024830152829082908183816044810103925af18015620003b75762005661575b505086845416604051906104e39081830191838310878411176200564d579280928a928e95620136518439815203019082f080156200080d578816600c54818b821617600c55898754166040518a810190868252715374616b696e67506f6f6c466163746f727960701b888201526022815262004d268162005ce9565b51902090803b15620008e9576040518a81526004810192909252918416929092176001600160a01b03166024830152829082908183816044810103925af18015620003b75762005635575b50508660105416948988600c541696803b156200081a57818091604460405180948193632f2ff15d60e01b835281600484015260249d8e8401525af18015620003b7576200561d575b50508785541660405190610457908183019183831088841117620055c2579280928b928f956200a3538439815203019082f080156200080d578916601154818c8216176011558a885416916040518b8101908782526a4672656e734f7261636c6560a81b89820152601b815262004e318162005d05565b51902092803b15620008e9576040518681526004810194909452918416176001600160a01b03166024830152829082908183816044810103925af18015620003b75762005605575b50508785541660405190610c4b908183019183831088841117620055c2579280928b928f95620097088439815203019082f080156200080d578916600954818c8216176009558a885416916040518b8101908782526e233932b739a6b2ba30a432b63832b960891b89820152601f815262004ef48162005d05565b51902092803b15620008e9576040518681526004810194909452918416176001600160a01b03166024830152829082908183816044810103925af18015620003b757620055ed575b50508785541660405190611105908183019183831088841117620055c2579280928b928f956200d0658439815203019082f080156200080d578916600a54818c821617600a558a885416916040518b810190878252754672656e73506f6f6c5368617265546f6b656e55524960501b898201526026815262004fbe8162005ce9565b51902092803b15620008e9576040518681526004810194909452918416176001600160a01b03166024830152829082908183816044810103925af18015620003b757620055d5575b50508785541660405190610acf908183019183831088841117620055c2579280928b928f9562006ef98439815203019082f080156200080d578916600854818c8216176008558a885416916040518b81019087825267119c995b9cd05c9d60c21b89820152601881526200507a8162005d05565b51902092803b15620008e9576040518681526004810194909452918416176001600160a01b03166024830152829082908183816044810103925af18015620003b757620055aa575b5050604051611d4080820190828210878311176200554f579180918d93620079c88339039082f080156200080d578916601254818c8216176012558a885416916040518b810190878252684672656e734c6f676f60b81b89820152601981526200512c8162005d05565b51902092803b15620008e9576040518681526004810194909452918416176001600160a01b03166024830152829082908183816044810103925af18015620003b75762005592575b5050604051611e4580820190828210878311176200554f579180918d936200e7bc8339039082f080156200080d578916601354818c8216176013558a885416916040518b81019087825265141b519bdb9d60d21b8982015260168152620051db8162005d05565b51902092803b15620008e9576040518681526004810194909452918416176001600160a01b03166024830152829082908183816044810103925af18015620003b7576200557a575b505060405161351180820190828210878311176200554f579180918d9362013b348339039082f080156200080d578916601454818c8216176014558a885416916040518b81019087825264576176657360d81b8982015260158152620052898162005d05565b51902092803b15620008e9576040518681526004810194909452918416176001600160a01b03166024830152829082908183816044810103925af18015620003b75762005562575b505060405161305080820190828210878311176200554f579180918d96959493620106018339039085f08015620012dc57891692600d5492848c851617600d558a885416916a14dd185ada5b99d41bdbdb60aa1b604051918c8301938452820152601b8152620053418162005d05565b51902092813b1562000aeb576040519283526004830193909352918416929092176001600160a01b03166024830152829082908183816044810103925af18015620003b75762005537575b505060405190610cbe808301918211838310176200552457918091899493620171558339039083f0908115620003b75785809216876015541617601555541660405184810190731c1c9bdd1bd8dbdb0b9999594b9c195c98d95b9d60621b825260148152620053fb8162005d05565b519020813b1562000f05578291604483926040519485938492637152429d60e11b845260048401526005898401525af18015620003b7576200550c575b5083600c54168385601b541691604460405180958193630319e90960e41b96878452600484015281898401525af1918215620008c657849286918991620054ea575b501686600e541617600e55604485600c5416918887601b541693816040519788968795865260048601528401525af1918215620007e1578592620054c8575b50501690600f541617600f5580f35b620054e29250803d10620012a45762001293818362005d21565b3880620054b9565b620055059150843d8611620012a45762001293818362005d21565b386200547a565b620055179062005cbf565b620008e957843862005438565b634e487b7160e01b895260416004528489fd5b620055429062005cbf565b620008095786386200538c565b634e487b7160e01b8d526041600452888dfd5b6200556d9062005cbf565b620040b0578938620052d1565b620055859062005cbf565b620040b057893862005223565b6200559d9062005cbf565b620040b057893862005174565b620055b59062005cbf565b620040b0578938620050c2565b634e487b7160e01b8e526041600452898efd5b620055e09062005cbf565b620040b057893862005006565b620055f89062005cbf565b620040b057893862004f3c565b620056109062005cbf565b620040b057893862004e79565b620056289062005cbf565b620040b057893862004dba565b620056409062005cbf565b6200353b57883862004d71565b634e487b7160e01b8d52604160045260248dfd5b6200566c9062005cbf565b6200353b57883862004ca9565b634e487b7160e01b8b52604160045260248bfd5b620056989062005cbf565b6200080957863862004bcb565b620056b09062005cbf565b6200080957863862004b4d565b620056c89062005cbf565b6200081a57813862004adb565b620056e09062005cbf565b6200081a57813862004a5a565b620056f89062005cbf565b6200081a578138620049de565b620057109062005cbf565b6200081a57813862004964565b634e487b7160e01b85526041600452602485fd5b50346200027057604036600319011262000270576200574f62005c50565b6200575962005c67565b6001600160401b0380921691821580158062005c2f575b1562005b0b5750601c546001600160a01b039062005790908216620063b2565b600e8582825416803b156200081a57818791600460405180948193633e7ea84160e21b83525af18015620003b75762005af3575b505081601054169482601c541694604051968796632f745c5960e01b8852600488015288602488015286604460209889935afa96871562002aba57889762005abe575b506200581e62005816620060e7565b881562006193565b83835416946040518781602481632daad61d60e01b9a8b82528d60048301525afa801562005ab3578a9062005a7d575b6200585b915084620063a6565b8860008051602062017e33833981519152803b156200081a5760405163f28dceb360e01b81526020600482015260196024820152781ddc9bdb99c81cdd185ada5b99c81c1bdbdb08199bdc881a59603a1b60448201529082908290606490829084905af18015620003b75762005a65575b505084845416911696813b156200353b578860405181816024818d632188224760e21b98898352604560048401525af18015620003b75762005a4d575b508585541692833b156200081a57899360248392604051968793849283528760048401525af19283156200080d57889362005a30575b5050602485855416966040519788938492835260048301525afa938415620008c6578794620059f2575b5090620059876200597f6004978795946200646e565b9485620063a6565b541660405194858092637d88209760e01b82525afa918215620012dc578492620059b9575b50620007a09250620063a6565b90915082813d8311620059ea575b620059d3818362005d21565b81010312620007d457620007a091519038620059ac565b503d620059c7565b92919093508483813d831162005a28575b62005a0f818362005d21565b81010312620007d4579151929091906200598762005969565b503d62005a03565b62005a3e9192935062005cbf565b6200083657859088386200593f565b62005a589062005cbf565b6200353b57883862005909565b62005a709062005cbf565b6200353b578838620058cc565b508781813d831162005aab575b62005a96818362005d21565b81010312620007d4576200585b90516200584e565b503d62005a8a565b6040513d8c823e3d90fd5b9096508581813d831162005aeb575b62005ad9818362005d21565b81010312620007d45751953862005807565b503d62005acd565b62005afe9062005cbf565b62000aeb578538620057c4565b9293929091901562005b54575050809160008051602062017e33833981519152803b15620003c25782604051809263f28dceb360e01b82528183816200093360048201620060ba565b601c546001600160a01b03919062005b6e908316620063b2565b81600e5416803b15620008e9578490600460405180988193633e7ea84160e21b83525af18015620012dc5762005c18575b839450816010541691602081601c5416604460405180968193632f745c5960e01b835260048301528960248301525afa928315620007e157859362000aef575060008051602062017e33833981519152803b1562000aeb5785604051809263f28dceb360e01b825281838162000a756004820162006070565b92909362005c269062005cbf565b91839062005b9f565b506801bc16d674ec80000062005c48838516866200646e565b111562005770565b600435906001600160401b0382168203620007d457565b602435906001600160401b0382168203620007d457565b6004359068ffffffffffffffffff82168203620007d457565b6004359063ffffffff82168203620007d457565b6024359063ffffffff82168203620007d457565b6001600160401b03811162005cd357604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111762005cd357604052565b604081019081106001600160401b0382111762005cd357604052565b90601f801991011681019081106001600160401b0382111762005cd357604052565b60005b83811062005d575750506000910152565b818101518382015260200162005d46565b6001600160401b03811162005cd357601f01601f191660200190565b3d1562005db4573d9062005d988262005d68565b9162005da8604051938462005d21565b82523d6000602084013e565b606090565b6000805460081c60ff161562005dd3575460081c60ff1690565b8060008051602062017e33833981519152803b62005df057505090565b819250819060405182602082018381526519985a5b195960d21b60408401526040835262005e1e8362005ce9565b62005e5a6024604051809362005e496020830197630667f9d760e41b89525180928585019062005d43565b810103600481018452018262005d21565b51925af15062005e6962005d84565b6020818051810103126200081a576020015190811515820362000270575090565b90816020910312620007d457516001600160a01b0381168103620007d45790565b600a8152690808115e1c1958dd195960b21b602082015260400190565b600a815269080808081058dd1d585b60b21b602082015260400190565b6001600160a01b03918216911681810362005efe575050565b62005faa9060409060008051602062017e138339815191526080835160208152602560208201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b6164648582015264726573735d60d81b6060820152a181519382855262005f6c83860162005eab565b906020860152847f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9586920390a18151928284938452830162005ec8565b9060208301520390a162005fbd62005fbf565b565b60008051602062017e33833981519152803b62005fe9575b5061010061ff00196000541617600055565b6040519060208201908082526519985a5b195960d21b6040840152600160608401526060835260808301918383106001600160401b0384111762005cd3576000836200605960248397849760405260a08101956370ca10bb60e01b875262005e498251809260a485019062005d43565b51925af1506200606862005d84565b503862005fd7565b60809060208152602960208201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686040820152680c2dc406664408ae8d60bb1b60608201520190565b60609060208152601260208201527136bab9ba103232b837b9b4ba1032ba3432b960711b60408201520190565b60405190620060f68262005d05565b600d82526c06669727374206964206973203609c1b6020830152565b60405190620061218262005d05565b600a8252691e080f4819195c105b5d60b21b6020830152565b90602091620061558151809281855285808601910162005d43565b601f01601f1916010190565b906080620061909260408152600560408201526422b93937b960d91b606082015281602082015201906200613a565b90565b80156200619e575050565b60008051602062017e53833981519152620061c462005fbd936040519182918262006161565b0390a15b15620061d057565b60008051602062017e13833981519152606060405160208152601760208201527f4572726f723a20417373657274696f6e204661696c65640000000000000000006040820152a162005fbd62005fbf565b8181036200622e57505050565b60008051602062017e538339815191526200625462005fbd946040519182918262006161565b0390a1620063a6565b80620062665750565b62005faa604060008051602062017e138339815191526080825160208152602260208201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e8482015261745d60f01b6060820152a1805192818452620062cf82850162005eab565b600060208601528460008051602062017e738339815191529586920390a18151928284938452830162005ec8565b62bc614e908181036200630e575050565b62005faa9060409060008051602062017e138339815191526080835160208152602260208201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e8582015261745d60f01b6060820152a18151938285526200637983860162005eab565b9060208601528460008051602062017e738339815191529586920390a18151928284938452830162005ec8565b8181036200630e575050565b60008051602062017e33833981519152803b15620007d45760405163c88a5e6d60e01b81526001600160a01b0390921660048301819052600160801b6024840152600092838160448183875af18015620012dc5762006458575b50813b1562000f055782916024839260405194859384926303223eab60e11b845260048401525af18015620003b75762006444575050565b62006450829162005cbf565b620002705750565b620064669093919362005cbf565b91386200640c565b919082018092116200647c57565b634e487b7160e01b600052601160045260246000fd5b919082039182116200647c57565b60008051602062017e33833981519152803b15620007d45760405163c88a5e6d60e01b81526001600160a01b0390921660048301819052600160801b6024840152600092838160448183875af18015620012dc5762006532575b50813b1562000f0557829160248392604051948593849263ca669fa760e01b845260048401525af18015620003b75762006444575050565b620065409093919362005cbf565b9138620064fa565b90929192620065578162005d68565b9162006567604051938462005d21565b829482845282820111620007d457602062005fbd93019062005d43565b602081830312620007d4578051906001600160401b038211620007d457019080601f83011215620007d4578151620061909260200162006548565b90600091601f549060019082821c9180841693841562006695575b60209485851081146200667f5784845290811562006661575060011462006602575b50505050565b9293945090601f6000527fa03837a25210ee280c2113ff4b77ca23440b19d4866cca721c801278fd08d80792846000945b8386106200664c575050505001019038808080620065fc565b80548587018301529401938590820162006633565b60ff191685840152505090151560051b0101915038808080620065fc565b634e487b7160e01b600052602260045260246000fd5b92607f1692620065da565b919060808352620066b460808401620065bf565b60209084810382860152600090825460019181831c9183811680156200685e575b8684108114620067c35783835290869082156200683e575050600114620067e2575b505085820360408701526000916021549182811c928181168015620067d7575b8685108114620067c357848452908115620067a0575060011462006742575b50505060609150930152565b9193925060216000527f3a6357012c1a3ae0a17d304c9920310382d968ebcc4b1771f41c6b304205b570936000925b8184106200678a57505060609350010138808062006736565b8554848401860152948501949284019262006771565b915050606094935060ff929192191683830152151560051b010138808062006736565b634e487b7160e01b86526022600452602486fd5b93607f169362006717565b84809394506000527fc97bfaf2f8ee708c303a06d134f5ecd8389ae0432af62dc132a24118292866bb91846000935b82851062006827575050500101903880620066f7565b805485850187015287959094019386910162006811565b60ff19168382015292151560051b909101909101925038905080620066f7565b92607f1692620066d5565b818102929181159184041417156200647c57565b60809060208152602560208201527f6d7573742062652067726561746572207468616e203130302077656920746f20604082015264636c61696d60d81b60608201520190565b60405190620068d28262005d05565b601d82527f616c69636542616c616e636520706f73742d636c61696d2077726f6e670000006020830152565b604051906200690d8262005d05565b601a82527f626f6242616c616e6365207072652d636c61696d2077726f6e670000000000006020830152565b60405190620069488262005d05565b601b82527f626f6242616c616e636520706f73742d636c61696d2077726f6e6700000000006020830152565b91600262006983838562006c1e565b116200698e57505050565b60008051602062017e53833981519152620069b160409283519182918262006161565b0390a1620069c0828462006c1e565b60028111620069cf5750505050565b60809282519060008051602062017e13833981519152856020938481526022858201527f4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e8782015261745d60f01b6060820152a1835195869185835262006a3886840162005eab565b908484015260008051602062017e7383398151915297889384920390a18451809186825262006a6987830162005ec8565b90858301520390a184848451858152600a8682015269204d61782044656c746160b01b6060820152600284820152a1600a83519380855284015269202020202044656c746160b01b6060840152820152a162006ac462005fbf565b38808080620065fc565b91600362006add838562006c1e565b1162006ae857505050565b60008051602062017e5383398151915262006b0b60409283519182918262006161565b0390a162006b1a828462006c1e565b6003811162006b295750505050565b60809282519060008051602062017e13833981519152856020938481526022858201527f4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e8782015261745d60f01b6060820152a1835195869185835262006b9286840162005eab565b908484015260008051602062017e7383398151915297889384920390a18451809186825262006bc387830162005ec8565b90858301520390a184848451858152600a8682015269204d61782044656c746160b01b6060820152600384820152a1600a83519380855284015269202020202044656c746160b01b6060840152820152a162006ac462005fbf565b8181111562006c335790620061909162006492565b620061909162006492565b9190608083526000601f5460019181831c83831692831562006e0d575b602093848310811462006df9578260808a0152908160001462006ddc575060011462006d7f575b5060408682038084890152600f83526e01000000000000000000000000dead60881b848401520160408701526000916021549384811c94818116801562006d74575b8387108114620067c357866040860152908160001462006d51575060011462006cf35750505060609150930152565b60216000908152949293507f3a6357012c1a3ae0a17d304c9920310382d968ebcc4b1771f41c6b304205b5705b83861062006d3c57505050506060918291010138808062006736565b80548587016060015294820194810162006d20565b915050606094915084935060ff191683830152151560051b010138808062006736565b95607f169562006cc4565b9050601f6000527fa03837a25210ee280c2113ff4b77ca23440b19d4866cca721c801278fd08d80782846000925b84841062006dc65750505060a091508601013862006c82565b805460a0858c0101520191019084849162006dad565b905060a0925060ff191682880152151560051b8601013862006c82565b634e487b7160e01b84526022600452602484fd5b90607f169062006c5b565b60009190829162006e61604051809262006e4c60208301956309710a9d60e41b87526040602485015260648401906200613a565b90604483015203601f19810183528262005d21565b51906a636f6e736f6c652e6c6f675afa50565b906020908183820312620007d45782516001600160401b0393848211620007d4570181601f82011215620007d457805193841162005cd3578360051b906040519462006ec38584018762005d21565b85528380860192820101928311620007d4578301905b82821062006ee8575050505090565b8151815290830190830162006ed956fe60803461007457601f610acf38819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b031916919091179055604051610a3f90816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b6000803560e01c63a2d6c6da1461002c57600080fd5b346108ff57602093846003193601126108fb5781546f636f6e74726163742e6164647265737360801b8685018181526e233932b739a6b2ba30a432b63832b960891b6030870152601f86526001600160a01b039584359493871693919061009281610925565b519020928751936321f8a72160e01b90818652838601526024948a818781865afa90811561088c5790899189916108de575b50169589518b81019086825265141b519bdb9d60d21b6030820152601681526100ec81610925565b519020918a5192818452858401528b838881875afa9283156108535789936108bf575b508a518c81019087825264576176657360d81b60308201526015815261013481610925565b519020958b5196828852868801528c878981885afa9687156108b5578d929189918c99610896575b508d51848101918252684672656e734c6f676f60b81b60308201526019815261018481610925565b519020918d5196879384928352898301525afa92831561088c57889361085d575b50895163ef21184f60e01b815284810182905295888782818b5afa96871561085357908992918398610837575b508b51809981936324a8b96b60e21b8352888301525afa9586156107ed578895949392918891829861081b575b50838b51809b81936378bf42b960e11b8352165afa9788156107ed5787986107f7575b509086859392828b51809881936305b3806b60e11b8352165afa9485156107ed579087929183966107d1575b5089516354ea17bf60e11b81529384928391165afa9485156107c65792887f3c7465787420666f6e742d73697a653d2231352e352220783d2232303022207997969361076c9693866103829796610796575b50506401022aa24160dd1b908a51998a968488019a651e3232b3399f60d11b8c527f3c6c696e6561724772616469656e742069643d226772616431222078313d223060268a01527f25222079313d223025222078323d2231303025222079323d2231303025223e0060468a01527f3c73746f70206f66667365743d22302522207374796c653d2273746f702d636f60658a01527f6c6f723a233366313965653b73746f702d6f7061636974793a3122202f3e000060858a01527f3c73746f70206f66667365743d223130302522207374796c653d2273746f702d60a38a01527f636f6c6f723a233534646165303b73746f702d6f7061636974793a3122202f3e60c38a0152701e17b634b732b0b923b930b234b2b73a1f60791b60e38a01526103d2815180928860f48d019101610902565b88017f3c72656374206865696768743d22343030222077696474683d2234303022206660f48201527334b6361e913ab9361411b3b930b218949110179f60611b61011482015286519061042e8261012899898b85019101610902565b0161044182518093888a85019101610902565b01948501527f3d223136332220746578742d616e63686f723d226d6964646c652220666f6e746101488501527f2d66616d696c793d2253616e732c417269616c22206c65747465722d737061636101688501527434b7339e911b11103334b6361e913bb434ba32911f60591b6101888501526611115413d4d25560ca1b61019d850152661e17ba32bc3a1f60c91b93846101a48201527f3c7465787420666f6e742d73697a653d2234352220783d223230302220793d226101ab8201527f3231322220746578742d616e63686f723d226d6964646c65222020666f6e742d6101cb8201527f7765696768743d223931302220666f6e742d66616d696c793d2253616e732c416101eb8201527f7269616c22206c65747465722d73706163696e673d222d31222066696c6c3d2261020b820152663bb434ba32911f60c91b61022b82015261059982518093610232968785019101610902565b0191820152816102378201527f3c7465787420666f6e742d73697a653d2231382e372220783d2232303022207961023e8201527f3d223234332220746578742d616e63686f723d226d6964646c652220666f6e7461025e8201527f2d66616d696c793d225065726d616e656e74204d61726b6572222066696c6c3d61027e82015267113bb434ba32911f60c11b61029e8201526f4652454e5320504f4f4c205354414b4560801b6102a6820152816102b68201527f3c7265637420783d2232372220793d2233343522206865696768743d223330226102bd8201527f2077696474683d22333436222066696c6c3d222334353534454122206f7061636102dd8201526a34ba3c9e91171a1110179f60a91b6102fd8201527f3c7465787420666f6e742d73697a653d2231302220783d223230302220793d226103088201527f3336352220746578742d616e63686f723d226d6964646c652220666f6e742d776103288201527f65696768743d22626f6c642220666f6e742d66616d696c793d2253616e732c41610348820152723934b0b611103334b6361e913bb434ba32911f60691b6103688201528251906107588261037b958d8785019101610902565b019182015203610362810185520183610957565b6107888351948593818552519283809286015285850190610902565b601f01601f19168101030190f35b6401022aa24160dd1b929650906107be913d8091833e6107b68183610957565b81019061099d565b9490386102a0565b8751903d90823e3d90fd5b6107e69196503d8085833e6107b68183610957565b943861024e565b89513d89823e3d90fd5b85939291985061081188913d8084833e6107b68183610957565b9891929350610222565b6108309198503d8084833e6107b68183610957565b96386101ff565b61084c9198503d8085833e6107b68183610957565b96386101d2565b8b513d8b823e3d90fd5b61087e9193508b3d8d11610885575b6108768183610957565b810190610979565b91386101a5565b503d61086c565b8a513d8a823e3d90fd5b6108ae919950843d8611610885576108768183610957565b973861015c565b8c513d8c823e3d90fd5b6108d79193508c8d3d10610885576108768183610957565b913861010f565b6108f591508c8d3d10610885576108768183610957565b386100c4565b5080fd5b80fd5b60005b8381106109155750506000910152565b8181015183820152602001610905565b6040810190811067ffffffffffffffff82111761094157604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761094157604052565b9081602091031261099857516001600160a01b03811681036109985790565b600080fd5b60208183031261099857805167ffffffffffffffff9182821161099857019082601f8301121561099857815190811161094157604051926109e8601f8301601f191660200185610957565b8184526020828401011161099857610a069160208085019101610902565b9056fea2646970667358221220e5907ab2e8e9cd0e43bb67e90013ca8e518988b81059065fe637464a100f99d164736f6c634300081400336080806040523461001657611d24908161001c8239f35b600080fdfe6080600436101561000f57600080fd5b6000803560e01c630b6700d61461002557600080fd5b34611ceb5780600319360112611ceb577f3c67206f7061636974793d22302e3235222066696c6c3d2223303046464646226020838101919091527f207472616e73666f726d3d226d6174726978282e34302c302c302c2e34302c30604084015264161814911f60d91b60608401527f3c706174682020643d224d3731342e322c3531362e3263312e382d312c332e3360658401527f2d322c332e392d342e316c302d302e396c2d302e362d31632d302e342d302e3760858401527f2d302e382d312e332d312e322d32632d362e372d31302e352d31332e332d323060a5840152690b8e4b4c8c0b4ccc4b8d60b21b60c58401527f6331302e342d31362e352c31382e382d33332e362c31382e382d35372e36633060cf8401527f2d31342e332d322e352d32342e332d372e362d33302e37632d342e322d352e3360ef8401527f2d31302e332d372e392d31382d372e39632d31392e372c302d32382e352c313461010f8401527f2e392d33352e332c33302e326c2d35342e382d38362e3100000000000000000061012f8401527f632d31322e312d31392d32342e322d33372e392d33362e322d35362e39632d316101468401527f302e312d31352e392d32302e332d33312e392d33302e342d34372e386c2d32336101668401527f2e312d33362e32632d302e382d312e332d322e312d322d332e352d326c302c306101868401527f632d312e342c302d322e372c302e382d332e352c322e310000000000000000006101a68401527f632d302e312c302e322d302e322c302e342d302e332c302e35632d302e312c306101bd8401527f2e322d302e322c302e342d302e332c302e366c2d31352e362c32342e35632d316101dd8401527f302c31352e372d32302c33312e342d33302c34372e316c2d38382e332c3133386101fd8401527f2e36632d31302e392d352e322d32332d382e312d33352d382e3100000000000061021d8401527f632d32332e382c302d35312e362c382e362d35312e362c33322e3963302c392e6102378401527f332c372e392c31362c32322e312c32382e3363352e382c352c31322e362c31306102578401527f2e382c31392e352c31372e35632d332e352c352e342d362e392c31302e392d31610277840152700605c6858626c5c66d85a625c7058645c7607b1b6102978401527f632d352e312c382d31302e332c31362e322d31352e352c32342e33632d302e386102a88401527f2c312e332d312e312c322e352d302e392c332e3663302e332c312e312c312c326102c88401527f2c322e332c322e376c37342e342c34322e3363302e322c322e392c302e332c356102e88401527f2e392c302e332c3963302c332e352c302e312c362e392c302e342c31302e32006103088401527f6c2d35312e352d3330632d362e332d332e372d31322e392d372e352d31392e336103278401527f2d31312e32632d302e372d302e342d322e312d312e312d332e342d302e39632d6103478401527f312e342c302e322d322e352c312d332c322e32632d302e352c312e322d302e346103678401526b058645c6e58605c6a58665c760a31b6103878401527f63312e332c312e392c322e372c332e372c342e312c352e3563302e352c302e376103938401527f2c312e312c312e342c312e362c322e316c382e372c31312e366331312e392c316103b38401527f352e382c32332e382c33312e362c33352e372c34372e346c32322e382c33302e6103d38401527f3263392e332c31322e332c31382e362c32342e372c32372e392c3337000000006103f38401527f6331302e382c31342e332c32312e362c32382e372c33322e342c34336c37342e61040f8401527f322c39382e3563302e392c312e322c322e312c312e392c332e342c312e396c3061042f8401527f2c3063312e332c302c322e352d302e372c332e342d312e396c322e352d332e3361044f8401527f63322e372d332e362c352e342d372e322c382e312d31302e380000000000000061046f8401527f6c322e382d332e376331362e382d32322e322c33332e352d34342e352c35302e6104888401527f332d36362e376331352e352d32302e352c33302e392d34312c34362e342d36316104a88401527f2e356c37362e352d3130312e3563362e382d392c31332e362d31382c32302e336104c88401527f2d323763302e342d302e362c302e372d312e322c312d312e38000000000000006104e88401527f63302e312d302e332c302e322d302e352c302e342d302e386c302e312d302e326105018401527f6c302d302e32632d302e332d312e392d312e322d332d322e382d332e37632d316105218401527f2e362d302e372d322e392c302e312d342c302e376c2d382e322c342e38632d3161054184015275382e392c31312d33372e392c32322d35362e382c333360501b6105618401527f63332e342d382c362e372d31362e312c392e382d32342e33433637352e342c356105778401527f33382e332c3639342e382c3532372e332c3731342e322c3531362e324c3731346105978401527f2e322c3531362e327a204d3636302e362c3533372e3663302d302e312c302e316105b78401526b0b4c0b8ccb0c0b8c8b4c0b8d60a21b6105d78401527f63352e312d31332e332c31322e322d32342e392c31392e352d33366c32342e386105e38401527f2c31312e314c3636302e362c3533372e364c3636302e362c3533372e367a204d6106038401527f3730332e352c3530322e386c2d332e322d312e34632d332e322d312e342d362e61062384015275332d322e382d392e342d342e326c2d362e312d322e3760501b6106438401527f63302e312d302e322c302e332d302e342c302e342d302e3663312e312d312e366106598401527f2c322e322d332e322c332e322d342e3863312e312d312e362c322e322d332e336106798401527f2c332e332d342e394c3730332e352c3530322e384c3730332e352c3530322e386106998401527f7a204d3531302e322c3139392e336c3134302e332c3232302e330000000000006106b98401527f632d322e332c352e342d342e372c31302e392d372e362c3136632d342e352c376106d38401527f2e392d31302e332c31362e332d31352e322c32322e39632d352e362d352e392d6106f38401527f31332e312d392e312d32322e312d392e35632d302e392c302d312e392d302e316107138401527f2d322e382d302e31632d322e352c302d342e392c302e322d372e322c302e35006107338401527f632d302e382d31342e342d342d32352e382d392e372d33332e38632d362e362d6107528401527f392e332d31362e332d31342e332d32392d31342e38632d302e362c302d312e326107728401527f2c302d312e382c30632d352e352c302d31302e352c312e312d31352c332e32636107928401527f2d382e322d31322e312d32312e352d31352d33302d31352e38000000000000006107b28401527f63302d35352c302d3130392e392c302d3136342e384c3531302e322c3139392e6107cb8401527f334c3531302e322c3139392e337a204d3438372e352c3433382e34632d312e326107eb8401527f2c312e342d33352e312c32322e372d34312e332c35332e36632d332e342d362d61080b8401527f372e382d31312e362d31332e352d31362e316c302e372c302e3400000000000061082b8401527f63302e312d302e322c382e372d31382e362c32322e312d33362e366c302c30636108458401527f302c302c302c302c302d302e3163302e382d312c312e352d322c322e342d332e6108658401527f316c302c306331312e342d31342e352c32372e352d33302e312c34342e342d336108858401527f302e366c302c3063302e372c302c312e332c302c322c300000000000000000006108a58401527f63312c302c322c302e312c332c302e3263302c302c302c302c302c3063312c306108bc8401527f2e312c322c302e312c322e392c302e336c302c306331312e372c312e332c32316108dc8401527f2e312c362e322c32302e322c32372e33632d312e342c33332e312d34312e322c6108fc8401526938352e362d35352c383560b01b61091c8401527f632d382e322d302e332d31372e382d332e382d31372e322d31382e3463312e326109268401527f2d32392e352c32392e362d36322c32392e392d36322e334c3438372e352c34336109468401527f382e344c3438372e352c3433382e347a204d3530302e322c3531382e366332306109668401527f2e382d32302e332c34312e372d35382e312c34322e382d38342e3500000000006109868401527f63302e322d332e392c302d372e342d302e332d31302e3663312e322d312e342c6109a18401527f352d352c31332e342d342e3663372e392c302e332c32342e352c312c32322e376109c18401527f2c34332e3463302c302e322c302c302e332c302c302e35632d302e322c302e346109e18401527f2d302e332c302e362d302e342c302e386c302e342c302e320000000000000000610a018401527f632d322e362c33392e312d34312e342c38342e342d35392e372c38332e37632d610a198401527f372e322d302e332d31322e332d322e372d31352e342d372e31433439382e352c610a398401527f3533332c3439392e382c3532312e372c3530302e322c3531382e364c3530302e610a598401527419161a989c171b3d10269a9a9a971b161a9a18171960591b610a798401527f63332e332d332e352c362e342d372e322c392e312d31302e386331342e362d31610a8e8401527f392e312c32332e392d34302e372c32362e332d36302e3163322d312e312c362e610aae8401527f312d322e352c31332e382d322e3263342e342c302e322c31372e382c302e372c610ace8401526831362e372c32362e3360b81b610aee8401527f632d312e322c32392e332d33302e312c37312e382d34382e322c37312e31632d610af78401527f382e332d302e332d31332e382d322e382d31362e352d372e32433535332e352c610b178401527f3535322c3535342e362c3534342e312c3535352e362c3534302e324c3535352e610b378401527f362c3534302e327a204d3530322e322c3139392e357632322e31000000000000610b578401527f63302c35352e342c302c3131302e382c302c3136362e31632d31392e312c302e610b718401527f342d33382e342c31332e312d35372e362c33372e37632d31322c31352e342d32610b918401527f302e362c33312e342d32342e342c33382e38632d342e352d312e382d392e342d610bb18401526b332e312d31342e352d332e3960a01b610bd18401527f63302e342d332e342c302e362d362e392c302e362d31302e3563302d31372e35610bdd8401527f2d382e342d33332e372d32332e362d34352e37632d322e342d312e392d342e39610bfd8401527f2d332e362d372e352d352e324c3530322e322c3139392e354c3530322e322c31610c1d8401526f39392e357a204d3332392c3437312e3560801b610c3d8401527f63342e382c342e392c392e362c31302e332c31342e312c31362e316c2d33332e610c4d8401527f372c3135632d302e312c302e312d302e332c302e312d302e342c302e314c3332610c6d8401527f392c3437312e354c3332392c3437312e357a204d3330372e352c3531322e336c610c8d84015266068605c6a5a62760cb1b610cad8401527f6331302e352c31352c31392c33322e372c32322e332c35332e384c3330372e35610cb48401527f2c3531322e334c3330372e352c3531322e337a204d3530322e332c3737392e39610cd48401527f7632322e354c3331332e372c3535322e3163302e352c302e332c302e392c302e610cf484015272352c312e342c302e386c32352e362c31342e3960681b610d148401527f6331302e382c362e332c32312e382c31322e372c33322e372c313963392e312c610d278401527f35352c35352e352c38302e312c38392e352c38302e316331322e342c302c3233610d478401527f2e362d322e392c33332e342d382e3663312e342c302e382c322e372c312e362c610d678401527f342e312c322e3463312e352c302e392c322c312e372c322c332e350000000000610d878401527f433530322e332c3730322e382c3530322e332c3734322c3530322e332c373739610da28401527f2e394c3530322e332c3737392e397a204d3637322e382c3536372e336c32362d610dc28401527f31352e3163302c302c302c302c302c304c3531302e332c3830322e3263302d30610de28401527305c6458605a605c6858605a605c6cec5a66645c760631b610e028401527f63302d33352e322c302d37302e342c302d3130352e3663302d302e332c302d30610e168401527f2e362c302e312d302e3863392e332c322e392c32312e372c342e342c33372c34610e368401527f2e346332382e342c302c35322d31342c37322e322d34322e3963382d31312e35610e568401527105862685c725a64685c685864625c645a66760731b610e768401527f433635312e342c3537392e372c3636322e312c3537332e352c3637322e382c35610e888401527f36372e334c3637322e382c3536372e337a204d3632302e352c3538382e354c36610ea88401527f32302e352c3538382e35632d302e352c312e312d312e312c322e322d312e372c610ec88401527f332e32632d302e312c302e322d302e322c302e332d302e332c302e3500000000610ee88401527f632d302e352c312d312c322d312e352c322e3963302c302e312d302e312c302e610f048401527f322d302e312c302e32632d312e322c322e322d322e342c342e332d332e362c36610f248401527f2e34632d31372e312c32392e362d33372e322c34382e332d36362c34382e3363610f448401527f2d362e322c302d31312e342d302e322d31352e382d302e376c302c3000000000610f648401527f632d352d302e352d392e312d312e322d31322e332d312e396c302c30632d352e610f808401527f392d312e342d392e312d332e312d31302e382d342e336332302e322d32322e35610fa08401527f2c32342e332d35382e392c31372e342d38305635363363302c302e322d302e35610fc08401526d05864645c705a705c725868685c760931b610fe08401527f632d312e392c352d342e312c392e372d362e352c31332e38632d312e322c322d610fee8401527f322e342c332e392d332e372c352e3763302c302c302c302e312d302e312c302e61100e8401527f31632d312e332c312e382d322e362c332e352d342c352e31632d342e342c352d61102e840152700725c6658705c725a62685c6e5862625c7607b1b61104e8401527f632d302e372c302e342d312e342c302e372d322e312c31632d302e312c302d3061105f8401527f2e322c302e312d302e332c302e32632d302e362c302e332d312e322c302e352d61107f8401527f312e392c302e38632d302e312c302e312d302e332c302e312d302e342c302e3261109f8401527f632d302e362c302e322d312e322c302e352d312e392c302e37000000000000006110bf8401527f632d302e312c302d302e332c302e312d302e342c302e31632d302e382c302e326110d88401527f2d312e352c302e352d322e332c302e37632d342e392c312e342d31302e312c326110f88401527f2e312d31352e362c322e31632d31392e362c302d35362d31332e332d36392e326111188401527f2d35312e356c302c30632d312e322d332e342d322e322d372d332d31302e39006111388401527f632d312e332d362e342d322d31332e332d322d32302e3963302d312e342c302d6111578401527f322e372d302e312d3463302d302e322c302d302e342c302d302e36632d312d336111778401527f322e312d31322e342d35372e372d32372d37382e32632d302e312d302e312d306111978401526d171896981719169817191698171960911b6111b78401527f632d302e382d312e312d312e352d322e312d322e332d332e326c302c306c302c6111c58401527f30632d362e362d382e382d31332e372d31362e372d32302e382d32332e366c306111e58401527f2c30632d312d312d312e392d312e392d322e392d322e3863302c302c302c302c6112058401527f302c30632d312d302e392d312e392d312e382d322e392d322e376c302c3000006112258401527f6c302c30632d362e332d352e392d31322e342d31312e312d31372e382d31352e6112438401527f38632d362e382d352e382d31352e322d31332e312d31362e332d31352e3863306112638401527f2e332d31322e352c32322e392d31352e382c33342e382d31352e3863392e362c6112838401526e0c0b0c4e0b8d0b0c8b0c8d8b0d4b8d608a1b6112a38401527f63312e312c302e352c322e322c312c332e332c312e3663302e322c302e312c306112b28401527f2e342c302e322c302e362c302e3363312e312c302e362c322e312c312e322c336112d28401527f2e322c312e386331352e312c392e322c32342e322c32332e392c32342e322c336112f28401527f372e3763302c32342e392d322e362c34332e312d322e362c34332e31000000006113128401527f63302e352d302e372c362d362e322c31302d31372e346332352e342c322c333961132e8401527f2e382c31362e372c34372e392c33322e3863302e392c342e352c322e352c382e61134e8401527f352c342e392c31312e3863352e352c31362e352c352e372c33312e372c352e3761136e8401527f2c33332e3163302d302e332c312e352d31322e322c302d32372e32000000000061138e8401527f63342e382c332e362c31312c352e382c31382e322c362e3163332e382c302e326113a98401527f2c382d312e322c31322e352d332e3863302e342c362e332c322c31332e382c366113c98401527f2e332c323063352e352c372e392c31332e392c31322e322c32352c31322e36636113e98401527f372e352c302e332c31352e372d332e352c32332e362d392e33000000000000006114098401527f63302e342c342e322c312e362c382e372c342c31322e3863352e312c382e342c6114228401527f31342c31332c32362e362c31332e356332362e392c312e312c36302e322d35306114428401527f2e332c36312e362d38342e3763302e322d352e362d302e312d31302e362d312d61146284015263189a971960e11b6114828401527f63352e372d372e322c31362e362d32312e352c32342e322d33342e3963322e326114868401527f2d332e382c342d372e362c352e372d31312e3463302e312d302e312c302e312d6114a68401527f302e332c302e322d302e3463302e362d312e342c312e322d322e372c312e382d6114c6840152720342e3163302c302c302c302c302c306c302c3606c1b6114e68401527f63302e362d312e342c312e322d322e372c312e372d342e3163372e322d31362e6114f98401527f392c31312e382d32362e342c32322e372d32362e3463332e322c302c382e382d6115198401527f302e352c382e382c32312e3863302c31362e382d342e392c32392e342d31322e6115398401527f312c34312e39632d302e372c312e322d312e352c322e352d322e322c332e37006115598401527f6c302c30632d302e382c312e322d312e352c322e352d322e332c332e37632d336115788401527f2e332c352e312d362e392c31302e332d31302e362c31352e39632d392e342c316115988401527f342e312d31392e322c32382e372d32362e312c34362e37632d322e362c362e386115b8840152712d352e322c31332e332d372e382c31392e3760701b6115d88401527f632d312e362c342d332e332c382d342e392c31312e396c302c30433632382e346115ea8401527f2c3537312e392c3632342e362c3538302e352c3632302e352c3538382e354c3661160a8401526d1918171a961a9c1c171abd11179f60911b61162a840152631e17b39f60e11b61163884015261161c83529161164081019167ffffffffffffffff831182841017611cd7578260405283835281519081611660840152805b828110611cc257508282016116800152601f01601f19168101036040019150f35b80869185016116808382015191015201611ca1565b634e487b7160e01b81526041600452602490fd5b80fdfea264697066735822122074a46eecd6f3aac9165dfb59f2cf6d4d24108ff554f84b56d454b2aa16424fef64736f6c634300081400336080604090808252346101535780610c4b803803809161001f8285610158565b833960209283918101031261015357516001600160a01b0380821692909183900361015357600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b0384118585101761013d5760248484938193828c52885190206321f8a72160e01b835260448901525afa928315610132576000936100f5575b5050501690600054161760005551610acf908161017c8239f35b813d831161012b575b6101088185610158565b81010312610127575190828216820361012457503880806100db565b80fd5b5080fd5b503d6100fe565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761013d5760405256fe6080604052600436101561001257600080fd5b60003560e01c806392a2e5ac14610057578063de1c7f7014610052578063edd148a21461004d5763ef21184f1461004857600080fd5b6101db565b6101ae565b61016a565b346100e657610065366100eb565b6020608060248160018060a01b0394856000541690630178b36760e31b83526084525afa80156100e1576100b1916100a5916000906100b5575b16610a13565b60405191829182610145565b0390f35b5060203d81116100da575b806100cd6100d5926102f8565b608001610342565b61009f565b503d6100c0565b61036f565b600080fd5b60209060031901126100e65760043590565b60005b8381106101105750506000910152565b8181015183820152602001610100565b90602091610139815180928185528580860191016100fd565b601f01601f1916010190565b906020610156928181520190610120565b90565b6001600160a01b038116036100e657565b346100e65760203660031901126100e65761018f60043561018a81610159565b61052f565b906100b160405192839215158352604060208401526040830190610120565b346100e6576100b16101c76101c2366100eb565b6103c4565b604051918291602083526020830190610120565b346100e6576101e9366100eb565b600054610206906001600160a01b03165b6001600160a01b031690565b604051630178b36760e31b8152600481018390526020918290829060249082905afa9283156100e15761025e9383926000916102b5575b506040518080968194632daad61d60e01b8352600483019190602083019252565b03916001600160a01b03165afa80156100e1576100b1926100a592600092610288575b50506103c4565b6102a79250803d106102ae575b61029f8183610320565b81019061037b565b3880610281565b503d610295565b6102d59150833d85116102db575b6102cd8183610320565b81019061035a565b3861023d565b503d6102c3565b634e487b7160e01b600052604160045260246000fd5b601f80199101166080016080811067ffffffffffffffff82111761031b57604052565b6102e2565b90601f8019910116810190811067ffffffffffffffff82111761031b57604052565b602090607f1901126100e65760805161015681610159565b908160209103126100e6575161015681610159565b6040513d6000823e3d90fd5b908160209103126100e6575190565b906103c260216040518094600360fc1b60208301526103b281518092602086860191016100fd565b8101036001810185520183610320565b565b66038d7ea4c68000670de0b6b3a76400006103e0818404610836565b920604906103ed82610836565b9160648110610464575b600a1161044c575b602161015691604051938161041e8693518092602080870191016100fd565b8201601760f91b602082015261043d82518093602087850191016100fd565b01036001810184520182610320565b90602161045b6101569261038a565b929150506103ff565b91610470600a9161038a565b9290506103f7565b67ffffffffffffffff811161031b57601f01601f191660200190565b604051906020820182811067ffffffffffffffff82111761031b5760405260008252565b908160209103126100e6575180151581036100e65790565b6020818303126100e65780519067ffffffffffffffff82116100e6570181601f820112156100e657805161050381610478565b926105116040519485610320565b818452602082840101116100e65761015691602080850191016100fd565b6001549091906105ce9061054b906001600160a01b03166101fa565b926040516020948186809301906105aa8161059c61058d856019907f65787465726e616c2e636f6e74726163742e616464726573730000000000000081520190565b62454e5360e81b815260030190565b03601f198101835282610320565b5190209060405180809681946321f8a72160e01b8352600483019190602083019252565b03915afa9182156100e157600092610719575b506001600160a01b03918216906105f790610738565b604051630178b8bf60e01b8152600481018290529092908581602481865afa9081156100e1576000916106fc575b50169182156106ec57604051631ef3fca760e31b815260048101829052918590839060249082905afa9182156100e157610687956000936106ba575b505060009192604051808097819463691f343160e01b8352600483019190602083019252565b03915afa9283156100e15760009361069e57509190565b61015691933d8091833e6106b28183610320565b8101906104d0565b6000935090816106de92903d106106e5575b6106d68183610320565b8101906104b8565b9138610661565b503d6106cc565b5050509050600090610156610494565b6107139150863d88116102db576102cd8183610320565b38610625565b610731919250843d86116102db576102cd8183610320565b90386105e1565b6028805b61079b575050602860002060405160208101917f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e283526040820152604081526060810181811067ffffffffffffffff82111761031b5760405251902090565b6f181899199a1a9b1b9c1cb0b131b232b360811b91600f9182821684901a600019820153600119019283928260041c161a825360081c9161073c565b604051906060820182811067ffffffffffffffff82111761031b57604052602a8252604082602036910137565b9061080e82610478565b61081b6040519182610320565b828152809261082c601f1991610478565b0190602036910137565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008082101561096b575b506d04ee2d6d415b85acef81000000008083101561095c575b50662386f26fc100008083101561094d575b506305f5e1008083101561093e575b506127108083101561092f575b50606482101561091f575b600a80921015610915575b6001908160216108cd828701610804565b95860101905b6108df575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215610910579190826108d3565b6108d8565b91600101916108bc565b91906064600291049101916108b1565b600491939204910191386108a6565b60089193920491019138610899565b6010919392049101913861088a565b60209193920491019138610878565b60409350810491503861085f565b634e487b7160e01b600052603260045260246000fd5b9081518110156109a0570160200190565b610979565b80156109b2576000190190565b634e487b7160e01b600052601160045260246000fd5b156109cf57565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b610a1b6107d7565b908151156109a0576030602083015381516001908110156109a05790607860218401536029915b808311610a5557506101569150156109c8565b90600f81169060108210156109a057610a92916f181899199a1a9b1b9c1cb0b131b232b360811b901a610a88858761098f565b5360041c926109a5565b9190610a4256fea26469706673582212208c55bd1b391cc91a450ad99808b2a1c929e5c520ace2d5e2e37c72a94b42b17d64736f6c6343000814003360803461007457601f61045738819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600180546001600160a01b0319169190911790556040516103c790816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163809bef62146101d457508063d3b150e6146100ab5763d6e65cb91461004457600080fd5b346100a75760203660031901126100a757803567ffffffffffffffff81116100a3576020809461007c60ff9461008f94369101610322565b908286519483868095519384920161036e565b820190815203019020541690519015158152f35b8380fd5b8280fd5b50346100a757816003193601126100a757803567ffffffffffffffff81116100a3576100da9036908301610322565b602435928315158094036101d05760015481516353adc3e960e11b8152602094916001600160a01b039190869082908590829086165afa9081156101c657889161018c575b501633036101585750908261013f9392519382858094519384920161036e565b8101858152030190209060ff8019835416911617905580f35b83606492519162461bcd60e51b8352820152601060248201526f36bab9ba1031329033bab0b93234b0b760811b6044820152fd5b90508581813d83116101bf575b6101a381836102ce565b810103126101bb575181811681036101bb573861011f565b8780fd5b503d610199565b84513d8a823e3d90fd5b8480fd5b83858492346102ca57602093846003193601126100a75780356001600160a01b038116908190036100a35763ac2a5dfd60e01b83528391839182905afa9081156102c057908491839161023d575b509061008f9160ff938286519483868095519384920161036e565b9150503d8083833e61024f81836102ce565b81019084818303126100a75780519067ffffffffffffffff82116100a3570181601f820112156100a75780519061028582610306565b92610292865194856102ce565b8284528683830101116100a35792826102b7879360ff96858061008f9801910161036e565b91925092610222565b83513d84823e3d90fd5b5080fd5b90601f8019910116810190811067ffffffffffffffff8211176102f057604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116102f057601f01601f191660200190565b81601f820112156103695780359061033982610306565b9261034760405194856102ce565b8284526020838301011161036957816000926020809301838601378301015290565b600080fd5b60005b8381106103815750506000910152565b818101518382015260200161037156fea2646970667358221220185108fbb3a849eb1f9e326676b85ffeb46107459f7af7c8f23fa0e77839804c64736f6c634300081400336080346200046657620028bb90813803601f1991601f91838382011682019460018060401b0391838710838811176200045057808492604098895283396020938491810103126200046657516001600160a01b0380821692909183900362000466576200006b6200046b565b94600b86526a4652454e5320536861726560a81b858701526200008d6200046b565b60058152644652454e5360d81b8682015286519783891162000450576000988954986001998a81811c9116801562000445575b8a8210146200043157908186849311620003de575b5089908683116001146200037d578c9262000371575b5050600019600383901b1c191690891b1789555b81519384116200035d5787548881811c9116801562000352575b888210146200033e579081848695949311620002e7575b508792841160011462000286575088926200027a575b5050600019600383901b1c191690851b1784555b600b8054336001600160a01b03198083168217909355885192939091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08880a38215620002245750600c541617600c55828052600a8152838320338452815260ff848420541615620001d7575b835161242f90816200048c8239f35b828052600a815283832090338452528282209060ff19825416179055339033907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4388080620001c8565b62461bcd60e51b815260048101849052602b60248201527f4652454e5320636f6e7472616374206572726f72206e6f2073746f726167652060448201526a1859191c995cdcc81cd95d60aa1b6064820152608490fd5b01519050388062000146565b888a52878a20899590939291168a5b89828210620002d05750508411620002b6575b505050811b0184556200015a565b015160001960f88460031b161c19169055388080620002a8565b8385015186558b9790950194938401930162000295565b9091929350888a52878a208480870160051c8201928a881062000334575b9187968c92969594930160051c01915b8281106200032557505062000130565b8c81558796508b910162000315565b9250819262000305565b634e487b7160e01b8a52602260045260248afd5b90607f169062000119565b634e487b7160e01b89526041600452602489fd5b015190503880620000eb565b908c91858d95168380528c8420935b8d828210620003c75750508411620003ad575b505050811b018955620000ff565b015160001960f88460031b161c191690553880806200039f565b8385015186558f979095019493840193016200038c565b9091508b8052898c208680850160051c8201928c861062000427575b918d91869594930160051c01915b82811062000418575050620000d5565b8e81558594508d910162000408565b92508192620003fa565b634e487b7160e01b8c52602260045260248cfd5b90607f1690620000c0565b634e487b7160e01b600052604160045260246000fd5b600080fd5b60408051919082016001600160401b03811183821017620004505760405256fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146114ef5750806306fdde0314611424578063081812fc14611404578063095ea7b3146112975780630bc59b381461124657806318160ddd146112785780631dc82a751461124657806323b872dd14611221578063248a9ca3146111f75780632f2ff15d1461114b5780632f745c591461109f57806330dbf8871461107657806336568abe14610fe457806342842e0e14610fb057806342966c6814610c6b5780634f558e7914610c2c5780634f6ccce714610b995780636352211e14610b685780636a6278421461091e57806370a08231146108f1578063715018a6146108945780638da5cb5b1461086b57806391d148541461082557806395d89b411461070f578063a217fddf146106f4578063a22cb46514610625578063a2d6c6da1461055e578063b88d4fde146104ab578063c87b56dd14610322578063d5391393146102e7578063d547741f146102a9578063e985e9c5146102575763f2fde38b1461018e57600080fd5b34610253576020366003190112610253576101a76115d7565b906101b0611bb8565b6001600160a01b03918216928315610201575050600b54826001600160601b0360a01b821617600b55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346102a557806003193601126102a55760ff816020936102776115d7565b61027f6115f2565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b5090346102535780600319360112610253576102e491356102df60016102cd6115f2565b93838752600a6020528620015461180c565b611b42565b80f35b5050346102a557816003193601126102a557602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b50903461025357602091826003193601126104a757600c5482516f636f6e74726163742e6164647265737360801b858201908152754672656e73506f6f6c5368617265546f6b656e55524960501b6030830152602682526001600160a01b0393919260608401919085169067ffffffffffffffff831185841017610494578260248180948b948d9998978c52885190206321f8a72160e01b835260648901525afa92831561048a578790859461044f575b5050506024908551948593849263c87b56dd60e01b8452803590840152165afa93841561044457809461041a575b505061041690519282849384528301906115b2565b0390f35b6104169294509061043c913d8091833e610434818361166f565b8101906117aa565b929038610401565b8251903d90823e3d90fd5b9080929394503d8311610483575b610467818561166f565b81010312610253575183811681036102535790602486386103d3565b503d61045d565b86513d86823e3d90fd5b634e487b7160e01b895260418452602489fd5b8380fd5b509034610253576080366003190112610253576104c66115d7565b906104cf6115f2565b604435906064359467ffffffffffffffff861161055a573660238701121561055a578501359361050a61050186611691565b9451948561166f565b848452863660248789010111610557576020866105529760246102e49a01838901378601015261054261053d8433611dcb565b611cf6565b61054d838383611edf565b612314565b611dab565b80fd5b8680fd5b50903461025357602091826003193601126104a757838135808252600d85528260018060a01b0386818786205416875196878092638ae578fd60e01b82525afa94851561048a5784956105ea575b50906024918651958694859363516b636d60e11b8552840152165afa93841561044457809461041a57505061041690519282849384528301906115b2565b9094508681813d831161061e575b610602818361166f565b810103126104a757519084821682036104a757909360246105ac565b503d6105f8565b50903461025357806003193601126102535761063f6115d7565b90602435918215158093036106f0576001600160a01b0316923384146106ae5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b5050346102a557816003193601126102a55751908152602090f35b5091346105575780600319360112610557578151918160019283549384811c9181861695861561081b575b6020968785108114610808578899509688969785829a5291826000146107e1575050600114610786575b505050610416929161077791038561166f565b519282849384528301906115b2565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106107c95750505082010181610777610416610764565b8054848a0186015288955087949093019281016107b0565b60ff19168782015293151560051b8601909301935084925061077791506104169050610764565b634e487b7160e01b835260228a52602483fd5b92607f169261073a565b50346102535781600319360112610253578160209360ff926108456115f2565b90358252600a86528282206001600160a01b039091168252855220549151911615158152f35b5050346102a557816003193601126102a557600b5490516001600160a01b039091168152602090f35b83346105575780600319360112610557576108ad611bb8565b600b80546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102a55760203660031901126102a5576020906109176109126115d7565b611c10565b9051908152f35b508290346102a557602090816003193601126102535761093c6115d7565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68452600a8352848420338552835260ff858520541615610b265760085491828552600d84528585206001600160601b0360a01b9033828254161790558651946109a58661163d565b8686526001600160a01b038416928315610ae6576000868152600260205260409020546109de906001600160a01b031615155b15611e39565b6008549086895260098352818a8a2055600160401b821015610ad3575091836102e49899600288979694610a3a89610a218960016105529f9e9b0160085561239b565b90919082549060031b91821b91600019901b1916179055565b8c83610a458a611c10565b8683526006845281832081845284528183208a905589835260078452912055600d8152600087815260026020526040902054610a8b906001600160a01b031615156109d8565b838d5260038152828d2060018154019055868d52528a2091825416179055877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46121fa565b634e487b7160e01b895260419052602488fd5b816064928a519262461bcd60e51b845283015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b5060649184519162461bcd60e51b8352820152601b60248201527f796f7520617265206e6f7420616c6c6f77656420746f206d696e7400000000006044820152fd5b5091346105575760203660031901126105575750610b8860209235611cd3565b90516001600160a01b039091168152f35b5082346105575760203660031901126105575750803590600854821015610bd457602083610bc68461239b565b91905490519160031b1c8152f35b608490602084519162461bcd60e51b8352820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152fd5b5091346105575760203660031901126105575750610c6260209235600052600260205260018060a01b0360406000205416151590565b90519015158152f35b508290346102a55760209283600319360112610253578135808452600d85528184205490926001600160a01b0392909183163303610f6257610cac84611cd3565b838116801597918815610ee1575050600854858752600982528083882055600160401b811015610ece5785610a21826001610cea940160085561239b565b6008546000199490858101908111610ebb5786885260098352610d10848920549161239b565b90549060031b1c610d2481610a218461239b565b885260098352838820558587528683812055600854978815610ea85785889998979801610d508161239b565b8882549160031b1b19169055600855878752600d8352818488205416901580610ea1575b610de8575b5090600291610d8788611cd3565b948888528252838720946001600160601b0360a01b958681541690551694858752600382528387209081540190558686525283209081541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a480f35b8394959650916024919281945192838092635a2d1e0760e11b82528b8a8301525afa908115610e97578891610e5e575b50610e295790869493929188610d79565b50905162461bcd60e51b815291820152601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508281813d8311610e90575b610e75818361166f565b81010312610e8c57610e86906116ad565b88610e18565b8780fd5b503d610e6b565b84513d8a823e3d90fd5b5086610d74565b634e487b7160e01b885260318552602488fd5b634e487b7160e01b885260118552602488fd5b634e487b7160e01b875260418452602487fd5b610eea90611c10565b600019810191908211610ebb578688526007835283882054828103610f2b575b50868852878481205587526006825282872090875281528582812055610cea565b81895260068452848920838a52845284892054828a5260068552858a20828b52855280868b20558952600784528489205589610f0a565b5162461bcd60e51b8152908101859052602360248201527f63616e6e6f74206275726e207368617265732066726f6d206f7468657220706f6044820152626f6c7360e81b6064820152608490fd5b5050346102a5576105526102e491610fc736611608565b91925192610fd48461163d565b86845261054261053d8433611dcb565b508290346102a557826003193601126102a557610fff6115f2565b90336001600160a01b0383160361101b57906102e49135611b42565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b5050346102a557816003193601126102a557600c5490516001600160a01b039091168152602090f35b5091346105575781600319360112610557576110b96115d7565b602435906110c681611c10565b8210156110f4576001600160a01b031682526006602090815283832091835290815290829020548251908152f35b835162461bcd60e51b8152602081870152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b503461025357816003193601126102535735906111666115f2565b90828452600a60205261117e6001828620015461180c565b828452600a60209081528185206001600160a01b039093168086529290528084205460ff16156111ac578380f35b828452600a6020528084208285526020528320600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a43880808380f35b50346102535760203660031901126102535781602093600192358152600a85522001549051908152f35b8334610557576102e461123336611608565b9161124161053d8433611dcb565b611edf565b503461025357602036600319011261025357358252600d6020908152918190205490516001600160a01b039091168152f35b5050346102a557816003193601126102a5576020906008549051908152f35b50346102535781600319360112610253576112b06115d7565b6024359290916001600160a01b03919082806112cb87611cd3565b169416938085146113b757803314908115611398575b501561133057848652602052842080546001600160a01b0319168317905561130883611cd3565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff8287205416386112e1565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b5091346105575760203660031901126105575750610b88602092356116ba565b50913461055757806003193601126105575781519181825492600184811c918186169586156114e5575b6020968785108114610808578899509688969785829a5291826000146107e157505060011461148a57505050610416929161077791038561166f565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106114cd5750505082010181610777610416610764565b8054848a0186015288955087949093019281016114b4565b92607f169261144e565b92505034610253576020366003190112610253573563ffffffff60e01b81168091036102535760209250637965db0b60e01b8114908115611532575b5015158152f35b63780e9d6360e01b81149150811561154c575b503861152b565b6380ac58cd60e01b81149150811561157e575b811561156d575b5038611545565b6301ffc9a760e01b14905038611566565b635b5e139f60e01b8114915061155f565b60005b8381106115a25750506000910152565b8181015183820152602001611592565b906020916115cb8151809281855285808601910161158f565b601f01601f1916010190565b600435906001600160a01b03821682036115ed57565b600080fd5b602435906001600160a01b03821682036115ed57565b60609060031901126115ed576001600160a01b039060043582811681036115ed579160243590811681036115ed579060443590565b6020810190811067ffffffffffffffff82111761165957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761165957604052565b67ffffffffffffffff811161165957601f01601f191660200190565b519081151582036115ed57565b6000818152600260205260409020546116dd906001600160a01b03161515611c87565b6000818152600d60205260018060a01b03908160408220541692604051637e01dd6960e11b8152816004820152606081602481885afa90811561179f578391611763575b501561172d5750505090565b600081815260026020526040908190205493945092611756906001600160a01b03161515611c87565b8152600460205220541690565b90506060813d8211611797575b8161177d6060938361166f565b8101031261025357604061179191016116ad565b38611721565b3d9150611770565b6040513d85823e3d90fd5b6020818303126115ed5780519067ffffffffffffffff82116115ed570181601f820112156115ed5780516117dd81611691565b926117eb604051948561166f565b818452602082840101116115ed57611809916020808501910161158f565b90565b600090808252602090600a8252604092838120338252835260ff8482205416156118365750505050565b83519167ffffffffffffffff90336060850183811186821017611b2e578752602a85528585019187368437855115611b1a5760308353855191600192831015611b06576078602188015360295b838111611a9c5750611a5a5790875193608085019085821090821117611a4657885260428452868401946060368737845115611a3257603086538451821015611a325790607860218601536041915b8183116119c4575050506119825761197e9386936119629361195360489461192a9a519a8b957f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008c880152518092603788019061158f565b8401917001034b99036b4b9b9b4b733903937b6329607d1b60378401525180938684019061158f565b0103602881018752018561166f565b5192839262461bcd60e51b8452600484015260248301906115b2565b0390fd5b60648587519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015611a1e576f181899199a1a9b1b9c1cb0b131b232b360811b901a6119f485886123e8565b5360041c928015611a0a576000190191906118d2565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b86526041600452602486fd5b60648789519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b90600f81166010811015611af2576f181899199a1a9b1b9c1cb0b131b232b360811b901a611aca838a6123e8565b5360041c908015611ade5760001901611883565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b90600091808352600a602052604083209160018060a01b03169182845260205260ff604084205416611b7357505050565b808352600a602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b600b546001600160a01b03163303611bcc57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b03168015611c3057600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b15611c8e57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152600260205260409020546001600160a01b0316611809811515611c87565b15611cfd57565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15611db257565b60405162461bcd60e51b81528061197e60048201611d58565b906001600160a01b038080611ddf84611cd3565b16931691838314938415611e12575b508315611dfc575b50505090565b611e08919293506116ba565b1614388080611df6565b909350600052600560205260406000208260005260205260ff604060002054169238611dee565b15611e4057565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b15611e8c57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b611f0391611eec84611cd3565b6001600160a01b0393848416939185168414611e85565b8382169384156121a95783801592836000146120f65750506008549286600052600960205283604060002055600160401b84101561165957611f5087610a2186600189980160085561239b565b8386036120c3575b5084600092878452602092600d84526040918183872054169015806120bb575b612003575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95611fb491611fad8b611cd3565b1614611e85565b878452600483526002818520936001600160601b0360a01b94858154169055878652600381528286206000198154019055838652828620600181540190558986525283209182541617905580a4565b8495965082602493959294505192838092635a2d1e0760e11b82528c60048301525afa9081156120b157859161207c575b506120455784939291869138611f7d565b815162461bcd60e51b815260048101849052601060248201526f6e6f74207472616e7366657261626c6560801b6044820152606490fd5b90508381813d83116120aa575b612093818361166f565b810103126106f0576120a4906116ad565b38612034565b503d612089565b83513d87823e3d90fd5b506001611f78565b6120cc90611c10565b60406000878152600660205281812083825260205288828220558881526007602052205538611f58565b8682959203612106575b50611f50565b612111919450611c10565b600019810193908411612193578493600090888252602090600782526040918284205482810361215c575b508a84528383812055878452600681528284209184525281205538612100565b888552600682528385208386528252838520548986526006835284862082875283528085872055855260078252838520553861213c565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b91929091803b1561230b57612247936040519081630a85bd0160e11b9384825233600483015260009687602484015260448301526080606483015281878160209a8b9660848301906115b2565b03926001600160a01b03165af18491816122cb575b506122ba575050503d6000146122b2573d61227681611691565b90612284604051928361166f565b81528091833d92013e5b805191826122af5760405162461bcd60e51b81528061197e60048201611d58565b01fd5b50606061228e565b6001600160e01b0319161492509050565b9091508581813d8311612304575b6122e3818361166f565b810103126106f057516001600160e01b0319811681036106f057903861225c565b503d6122d9565b50915050600190565b92939190803b1561239157612366946040518092630a85bd0160e11b9485835233600484015260018060a01b03809816602484015260448301526080606483015281806020998a9560848301906115b2565b03916000988991165af18491816122cb57506122ba575050503d6000146122b2573d61227681611691565b5050915050600190565b6008548110156123d25760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b9081518110156123d257016020019056fea26469706673582212203c4b76e9a844c02614cf619c18b9a47223cfc1bbeaa2a1f4ba46a919465ebea264736f6c6343000814003360806040908082523462000164578062001105803803809162000023828562000169565b83396020928391810103126200016457516001600160a01b038082169290918390036200016457600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b038411858510176200014e5760248484938193828c52885190206321f8a72160e01b835260448901525afa9283156200014357600093620000ff575b5050501690600054161760005551610f7790816200018e8239f35b813d83116200013b575b62000115818562000169565b81010312620001375751908282168203620001345750388080620000e4565b80fd5b5080fd5b503d62000109565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200014e5760405256fe6040608081526004908136101561001557600080fd5b600091823560e01c63c87b56dd1461002c57600080fd5b3461077657602092836003193601126107735780548235929061005f906001600160a01b03165b6001600160a01b031690565b91634f558e7960e01b608052856080607f1961007e879060a491608452565b0181865afa8015610677578190610743575b61009990610855565b600154610131906100b2906001600160a01b0316610053565b9487875196818801886100fa6100df836010906f636f6e74726163742e6164647265737360801b81520190565b6e233932b739a6b2ba30a432b63832b960891b8152600f0190565b039861010e601f199a8b8101835282610807565b51902089516321f8a72160e01b8152878101918252948592918391829160200190565b03915afa918215610677578392610724575b508651630178b36760e31b81528481018281526001600160a01b03938416968a918391908290819060200103915afa80156106775783918591610707575b501691875191631865c57d60e01b835284838781875afa9283156106775785936106eb575b5088519063ef21184f60e01b82528582806101c8848b83019190602083019252565b03818b5afa9182156106775786926106cf575b5089516333c7180560e11b81528781018281528c90829081906020010381895afa8015610677576102319988928e84936106a0575b50508c516376e8a45160e11b81528a81019283529a8b928391829160200190565b03915afa928315610677578b98879461067c575b5061024f86610d62565b9661025983610b4c565b988c51809a8c820161028390601190706672656e20706f6f6c207368617265202360781b81520190565b61028c91610941565b038c81018b5261029c908b610807565b8c51809b81016102d090601b907f74686973206672656e206861732061206465706f736974206f6620000000000081520190565b6102da9087610941565b6c01022ba341034b7103837b7b61609d1b8152600d016102fa908b610941565b7f2c207769746820636c61696d61626c652062616c616e6365206f6620000000008152601c0161032a9088610941565b630408ae8d60e31b8152600401038c81018c52610347908c610807565b8d8d518092638da5cb5b60e01b8252818b5afa918215610677579161064a575b501661037290610d62565b9461037c91610958565b61038590610e58565b9489519788978c89016103a890600990683d913730b6b2911d1160b91b81520190565b6103b191610941565b71111610113232b9b1b934b83a34b7b7111d1160711b81526012016103d591610941565b7f222c202265787465726e616c5f75726c223a2268747470733a2f2f6170702e6681526d72656e732e66756e2f706f6f6c2f60901b6020820152602e0161041c9082610941565b7f222c202261747472696275746573223a205b7b2274726169745f74797065223a81527110113837b7b6111610113b30b63ab2911d1160711b602082015260320161046691610941565b7f227d2c7b2274726169745f74797065223a20226465706f736974222c20227661815266363ab2911d101160c91b60208201526027016104a591610941565b630408ae8d60e31b81526004017f227d2c7b2274726169745f74797065223a2022636c61696d61626c65222c20228152683b30b63ab2911d101160b91b60208201526029016104f391610941565b630408ae8d60e31b81526004017f227d2c7b2274726169745f74797065223a2022706f6f6c207374617465222c20815269113b30b63ab2911d101160b11b6020820152602a0161054291610941565b7f227d2c7b2274726169745f74797065223a2022706f6f6c2063726561746f722281526b1610113b30b63ab2911d101160a11b6020820152602c0161058691610941565b6e113eae96101134b6b0b3b2911d101160891b8152600f017f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000008152601a016105cd91610941565b61227d60f01b81526002010382810182526105e89082610807565b6105f190610e58565b82517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000094810194855293849190601d0161062a91610941565b03908101835261063a9083610807565b5161064681928261079d565b0390f35b61066a91508d803d10610670575b6106628183610807565b810190610895565b38610367565b503d610658565b610849565b6106999194503d8089833e6106918183610807565b8101906108d0565b9238610245565b6106c0929350803d106106c8575b6106b88183610807565b810190610932565b90388e610210565b503d6106ae565b6106e49192503d8088833e6106918183610807565b90386101db565b6107009193503d8087833e6106918183610807565b91386101a6565b61071e91508a3d8c11610670576106628183610807565b38610181565b61073c919250883d8a11610670576106628183610807565b9038610143565b50853d871161076c575b6107658161075d610099936107df565b608001610829565b9050610090565b503d61074d565b80fd5b8280fd5b60005b83811061078d5750506000910152565b818101518382015260200161077d565b604091602082526107bd815180928160208601526020868601910161077a565b601f01601f1916010190565b634e487b7160e01b600052604160045260246000fd5b601f80199101166080016080811067ffffffffffffffff82111761080257604052565b6107c9565b90601f8019910116810190811067ffffffffffffffff82111761080257604052565b602090607f1901126108445760805180151581036108445790565b600080fd5b6040513d6000823e3d90fd5b1561085c57565b60405162461bcd60e51b81526020600482015260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b9081602091031261084457516001600160a01b03811681036108445790565b67ffffffffffffffff811161080257601f01601f191660200190565b6020818303126108445780519067ffffffffffffffff8211610844570181601f82011215610844578051610903816108b4565b926109116040519485610807565b818452602082840101116108445761092f916020808501910161077a565b90565b90816020910312610844575190565b906109546020928281519485920161077a565b0190565b604051638ae578fd60e01b81526001600160a01b03926020908290600490829087165afa8015610677576000926109b2928492610aa9575b5060405194858094819363516b636d60e11b8352600483019190602083019252565b0392165afa90811561067757610a709161092f91600091610a90575b50610a82604051938492610a6a60208501606c907f3c7376672077696474683d2234303022206865696768743d223430302220786d81527f6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f7376672260208201527f20786d6c6e733a786c696e6b3d22687474703a2f2f7777772e77332e6f72672f60408201526b189c9c9c97bc3634b735911f60a11b60608201520190565b90610941565b651e17b9bb339f60d11b815260060190565b03601f198101835282610807565b610aa3913d8091833e6106918183610807565b386109ce565b610ac291925060203d8111610670576106628183610807565b9038610990565b604051906020820182811067ffffffffffffffff8211176108025760405260008252565b604051906060820182811067ffffffffffffffff82111761080257604052602a8252604082602036910137565b90610b24826108b4565b610b316040519182610807565b8281528092610b42601f19916108b4565b0190602036910137565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015610c81575b506d04ee2d6d415b85acef810000000080831015610c72575b50662386f26fc1000080831015610c63575b506305f5e10080831015610c54575b5061271080831015610c45575b506064821015610c35575b600a80921015610c2b575b600190816021610be3828701610b1a565b95860101905b610bf5575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215610c2657919082610be9565b610bee565b9160010191610bd2565b9190606460029104910191610bc7565b60049193920491019138610bbc565b60089193920491019138610baf565b60109193920491019138610ba0565b60209193920491019138610b8e565b604093508104915038610b75565b634e487b7160e01b600052601160045260246000fd5b600281901b91906001600160fe1b03811603610cbd57565b610c8f565b9060028201809211610cbd57565b9060208201809211610cbd57565b634e487b7160e01b600052603260045260246000fd5b908151811015610d05570160200190565b610cde565b8015610cbd576000190190565b15610d1e57565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b610d6a610aed565b90815115610d0557603060208301538151600190811015610d055790607860218401536029915b808311610da4575061092f915015610d17565b90600f8116906010821015610d0557610de1916f181899199a1a9b1b9c1cb0b131b232b360811b901a610dd78587610cf4565b5360041c92610d0a565b9190610d91565b604051906060820182811067ffffffffffffffff82111761080257604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b805115610f3857610e67610de8565b610e83610e7e610e778451610cc2565b6003900490565b610ca5565b91610e95610e9084610cd0565b610b1a565b92835280815182019060208501935b828210610ee657505050600390510680600114610ed557600214610ec6575090565b603d60f81b6000199091015290565b50613d3d60f01b6001199091015290565b9091936004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301939190610ea4565b5061092f610ac956fea264697066735822122056325601517fe3298e678101265f3f392f3f557f8950bbaabb12e6a26cad430b64736f6c634300081400336080806040523461002857600380546001600160a01b03191633179055610624908161002e8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80630e14a376146105455780631e0ea61e1461046e57806321f8a7211461043c5780632c62ff2d1461040057806367a6a917146103405780637ae1cfca146103145780638a0dac4a146102cb578063a75b87d2146102a2578063abfdcced1461024f578063adb353dc1461020f578063bd02d0f5146101e9578063ca446dd91461018f578063e2a4853a1461015857838163e2b202bf1461011e575063ebb9d8c9146100c857600080fd5b3461011a576100d636610587565b92906100ed60018060a01b036003541633146105a2565b845283602052832090815492830392831161010757505580f35b634e487b7160e01b845260119052602483fd5b8280fd5b808484346101545760203660031901126101545761014760018060a01b036003541633146105a2565b3582528160205281205580f35b5050fd5b50503461018b5761016836610587565b919061017f60018060a01b036003541633146105a2565b83528260205282205580f35b5080fd5b50903461011a578060031936011261011a576024356001600160a01b0381811693918490036101e5576101c7906003541633146105a2565b3583526001602052822080546001600160a01b031916909117905580f35b8480fd5b503461011a57602036600319011261011a57602092829135815280845220549051908152f35b503461011a5761021e36610587565b929061023560018060a01b036003541633146105a2565b845283602052832090815492830180931161010757505580f35b50903461011a578060031936011261011a576024359182151580930361029e5761028460018060a01b036003541633146105a2565b358352600260205282209060ff8019835416911617905580f35b8380fd5b50503461018b578160031936011261018b5760035490516001600160a01b039091168152602090f35b83823461018b57602036600319011261018b5780356001600160a01b038181169182900361029e57610302906003541633146105a2565b81546001600160a01b03191617905580f35b503461011a57602036600319011261011a578160209360ff923581526002855220541690519015158152f35b5091903461018b578160031936011261018b57600354926001600160a01b03808516919061036f3384146105a2565b8154166103bd57507fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e96792936bffffffffffffffffffffffff60a01b166003558151908152836020820152a180f35b606490602084519162461bcd60e51b8352820152601f60248201527f6d7573742073657420677561726469616e20746f2030783030206669727374006044820152fd5b503461011a57602036600319011261011a5761042760018060a01b036003541633146105a2565b35825260026020528120805460ff1916905580f35b503461011a57602036600319011261011a5735825260016020908152918190205490516001600160a01b039091168152f35b5091903461018b578160031936011261018b5782546001600160a01b0380821690338290036104e9577fa14fc14d8620a708a896fd11392a235647d99385500a295f0d7da2a258b2e9679495600354936bffffffffffffffffffffffff60a01b9084828716176003551690558351921682526020820152a180f35b835162461bcd60e51b8152602081880152603060248201527f436f6e6669726d6174696f6e206d75737420636f6d652066726f6d206e65772060448201526f677561726469616e206164647265737360801b6064820152608490fd5b503461011a57602036600319011261011a5761056c60018060a01b036003541633146105a2565b3582526001602052812080546001600160a01b031916905580f35b604090600319011261059d576004359060243590565b600080fd5b156105a957565b60405162461bcd60e51b815260206004820152601960248201527f4163636f756e74206973206e6f74206120677561726469616e000000000000006044820152606490fdfea264697066735822122057b73efffb12a522c4e08ecd95bc0fbfd455582875bb420fc94dccd7762d499664736f6c634300081400336080806040523461001657611e29908161001c8239f35b600080fdfe6080600436101561000f57600080fd5b6000803560e01c63f17e85721461002557600080fd5b34611df05780600319360112611df057602091661e39ba3cb6329f60c91b838201526a40666f6e742d666163657b60a81b60278201527f666f6e742d66616d696c793a225065726d616e656e74204d61726b6572223b0060328201527f7372633a75726c28646174613a6170706c69636174696f6e2f666f6e742d776f60518201527f66663b636861727365743d7574662d383b6261736536342c643039475267414260718201527f414141414142466741413041414141414759414141514243414141414141414160918201527f414141414141414141414141414141414141425055793879414141424d41414160b18201527f414538414141426759624c6a6f324e745958414141414741414141416277414160d18201527f41576f575378366759335a30494141414166414141414143414141414167415660f18201527f4141426d63476474414141423941414141506341414146686b6b48612b6d64736101118201527f6557594141414c734141414c30514141455367536f783064614756685a4141416101318201527f4473414141414132414141414e6769565777646f614756684141414f2b4141416101518201527f414230414141416b42486342354768746448674141413859414141414e4141416101718201527f41445166306741626247396a595141414430774141414163414141414842686d6101918201527f48585a74595868774141415061414141414234414141416741686f43475735686101b18201527f6257554141412b4941414142757741414131525157384d396347397a644141416101d18201527f45555141414141554141414149502b3241454277636d567741414152574141416101f18201527f41416341414141486141614d68586963593242684b6d4b63774d444b774d43306102118201527f68366d4c675947684230497a336d55775a6752796d5268676f494742515632416102318201527f415146635050324347427759464268436d504c2b483261775a536c676441554b6102518201527f677a51784d42557966514e534367774d41475836444a4141654a786a594742676102718201527f5a6f426747515a47426842494166495977587757426738677a636641776344456102918201527f774d6167774f4449344d62677778444145504c2f503141637848646c384762776102b18201527f59776a362f2f2f2f772f38482f2b2f37762b762f7a7638376f4f5967415559326102d18201527f6442464d674b454a48544342334d6b43597247794d62427a63444a7763664d516102f18201527f4e6e62514141444976784d5241414156414142346e463251505537454d4243466103118201527f5978495763674d6b43386b6a61796c5774756970556a6952554a71776f6641306103318201527f2f45693745746b37494b57686363465a336e5970637a454533675257514f50786103518201527f65365035394761516d427035342f644376504d6750742f674c7664352b7668676103718201527f495978535a6563676e69784f444d534b4c464b6a4b71544c61753031713644436103918201527f3753616f537230386235417470786f6232384458436b6e72752f6a6565304c426103b18201527f38766a644d7439595a41644d4e6d454352384475473743624148482b772b4c556103d18201527f314172705665507650486f6e55546957524b72453248694d54684b7a78654b596103f18201527f4d646258376d4a4f6532617757466d637a3454576f3542494f49525a615549666104118201527f67677878677838392f745744535034627857386a58714163524e394d6e5636546104318201527f504269614e4d5745374378795537652b6a42474a3752666c59477463414869636104518201527f6456644c6a79545a576333376673614e52305a47354b73694b353952575631646104718201527f5656315a6c546c643356336a6d7066614d75345a6a3741745754416a445167516104918201527f6b7355494934546b4255755145507741784a594e43336241487061736b4542736104b18201527f57434a766a47794d6b6231416f6a6b334b33734749644631757971654e2b37396104d18201527f766e504f6437354f352f2f3552312f2f3450585036542f534833542b74504d586104f18201527f6e5537374e726b6a4f347a563957352f384461703738696d33683830635578496105118201527f637a694b343672657676336c3659536f514e542b5541576d7a6b6d37756943376105318201527f37616f394a786478736e596c38634238646b4776343758647167306b706548776105518201527f336e37303468385a4c3837336238553557694c5639697175423266782f6a41686105718201527f6735736a307a5745686c7962587159634e367159626f592b453558766e5468426105918201527f47655753434d4f46743562364c4f465538697756564e4c437573646a536967586105b18201527f7a49365735344f51434330537a6a434a354f57304b656e674f4b7650686e6e586105d18201527f4d5546463449707751586c434765455737315046343779707370796c69564f4a6105f18201527f5436336b6c464a4f4c6b4f69456a562f507464644a77626e36616532392b4c7a6106118201527f5a393156795930736a2f50797047734a5a53783965704a624a726c496e4847466106318201527f3661304835626f3875756b545159686e6b68477358784456375a306b797576796106518201527f555431635433754561533670544c573354504861364d477855467761504532786106718201527f72544a31587163716f5652545a78696e7272525a6b795a614d783758546f6e486106918201527f506a58574a306933724169685569322f3374725233546a696748514d6350426e6106b18201527f3946383766396a707844696673393064612b2b516672593778304538335656586106d18201527f6d32707a7662713561736932525a3672514d6f36434c554b464b6c556c6179726106f18201527f37613653765962743968426f54306b7256326f3132392b396f3844524c74356a6107118201527f4f384244727559422b58314c5939464b4d55614e77543659566c6e5231586d4b6107318201527f3366725a2b6e4a302b51737658323249344577547167516e666c566a385452626107518201527f6e323975746b4f64684e7a726e684f456e66376145384a4e6c686465634647756107718201527f3170646a6f5953647572414d7862466662793833793848393249596b4f4d47596107918201527f314e324c5a313939374649392f7671726c7a4e647162526472334f54705a6c476107b18201527f524b7656596c6c6e79315662466e56715a4a6f37593567434869686c6f6a65796107d18201527f5269756a5230326d545a5942463577717956796c756148347543787952327a6c6107f18201527f6b784543424a674a49595a506a3545385354796d79584d5057486c46327450616108118201527f615371457063552b42362f2f37665850364c2f514833662b2b6945486948676b6108318201527f316f475232336870466f6e7a774b6674646274366d327a664d42626a617276626108518201527f376a6c62625464586279685a675445705763336d7334424634716553653437566108718201527f4b684a762f2b497a6f6d70316f485a4b3231556b36514d686b614f5a504a437a6108918201527f6c7557386a4365393675485747344a476a7362766e6a58486c485748347951566108b18201527f546c6a455745734332676b4a714b6447674756655573346f746354576c3356396108d18201527f3264646472547a4c732b617a467a3370355856754d7955303030374a6f4a496b6108f18201527f306332484837383630676d5479446768704163636749706c57343266546c726a6109118201527f4a484344467769376b4c616236384c306a374e715854684f62576b694a3555676109318201527f6873536b576347724e457331317556424a474535386b6635332b6433342f346f6109518201527f4e306952356a7a54726e496d434548774d53424465364539734a6c496e31414c6109718201527f36756c4d4b67626c6b46785834436f3568676f495258572f396b414155556e586109918201527f5355453465436963484d7773423173703871384d7951427779784a6e6e3275476109b18201527f466533336f5251686b75465269455a42695136535331625533534d4e486b42756109d18201527f724d5374594f5958745134486a763655585543722f775434754875492b7036586109f18201527f44647367646273476e4836674a464d7873577933726572744b6b496a676f4856610a118201527f59612f4c4741394a78577662316548365070305136506151554641576a353354610a318201527f39767163517169332b4c31646c51514a74554a4d6c6b756635486c646d6a526b610a518201527f686b74524a4b57324262534e75774c41506e7031564d385862576e4253303379610a718201527f5557724c58414c326844766566374b3547636d696d7775456b61657375483335610a918201527f693438466b576b4a3174444e36653233546b457a5853717a7a6e747479707959610ab18201527f5835773957626f73424f4f63304d36714744524f2f6f5a44737a6c392f697566610ad18201527f66507057736c6a4f484246525567567a302f6e5553436b454e364f6d535a7272610af18201527f4f6a73613143452b7a725149306731496b766938304e3151545a766a6e6f456b610b118201527f57454b303165304a30674441684377334638384b616e4e694961364d6a33302b610b318201527f4c51577237743939686d4a6a61526a30536d756b386a37525242357938352f30610b518201527f642b67504f39383936436439494f4e7554343344694966493143595753506c46610b718201527f7a667479524e704748694e646d3176794a594e4c74552f52664b594f66487967610b918201527f35337947564431465651675a6473366f734a5a626f4a33343270584c56454e78610bb18201527f654f39706d5364646842714d30674663704a4168494433307162654a58337a7a610bd18201527f644e35596f46714b4d457954675463614b653536624c4c734e597477464e496d610bf18201527f3956624d506a783574754238795a334a7a79347565395a316c39344e59345763610c118201527f337a653733337775555646644e30326e513050726556597368736f4b6d59684a610c318201527f3235322f66385a34415a59433774426534637a47635330543147776958565255610c518201527f2f48645659325455774a2b382f6d2f367a346a6a397842485642425a3158414e610c718201527f7145445831655a42456f4658314a534779424a33326972514773714776365371610c918201527f33374168526d34503950714e6a4c576f545a674e4d775132442b79764c4a6470610cb18201527f4678774d337453544f6a65516471474f336e6e3333636e34356d775362514a45610cd18201527f41416a4330414c49415162694b74576a6d306c7558474b4d4c675a5676776839610cf18201527f4c6f454378377a567846536957336c676c78695244796672365a4e5874625661610d118201527f6f79426238596b6539484d51582b4e484c632f4f63303773514e2f3977522f39610d318201527f38587432744c686f77415567566973384572496b546641394d727a5a33553447610d518201527f483333322b6130376e7330447a5873464b3565313766644c3156786662592b50610d718201527f58677a5473347044354954587730723578536466595756566d44524652614564610d918201527f38666f2f454d762f366e797a382f314f70355a67382b714f376c434944377078610db18201527f457a46353961552b58473050616c42576452574e6e47776f696a783967314347610dd18201527f4f73345132415a3159334f39655144314f626d4a5959316a466830646f763254610df18201527f7335645031346b5a6239382f566b5a4269624568595650517243714453774b71610e118201527f62446f4c784963513152464f44494b6f765965366a4d2b50614351593562354d610e318201527f73737379484f664a5972564b462b394e37576a594a6558753972625770793962610e518201527f6b52484268717342395972354e4a587a39386559534a616e7439503366757554610e718201527f6a31644d7776635a37377968466f3470736630756f586c6d4e51732b63643778610e918201527f794865722f416a6c417975382b50574c4d426f4f6b37786454485135794c5743610eb18201527f696e74464530742b743136754868336c38424b477436557663754e426d355777610ed18201527f79696f707874647a526d4f7346362f2f6e66346c2f56486e67383476647a7264610ef18201527f62625576344b534f4163664a48626e5a687877474b557031564772454d595932610f118201527f6f70767339585631553231576432533132306634414f5a7a4b68385436426258610f318201527f4e4d7058586a74347a77796f62575a6c6550546b75734b75727a346364326464610f518201527f6d73312f395876667677554e653058354b4e657067394d5149627247784d6766610f718201527f77355a414c54304e342f45594e44317558486a722f70344d4f5a52765a49516c610f918201527f31576f327a564578335367626273366d7870654f5347726b654e43382f375750610fb18201527f54733575356c557965764869646b425141517a78773848417170515856302f57610fd18201527f5033553531466d43436e436b53686d62754b5155735762526a6e3339542f4356610ff18201527f502b72387870375259434c32434c70696e2b31446759714d335774644c7a4b376110118201527f6f543173763778536b63567348366871572b2f74496a78702b774245784178676110318201527f52747755346b59657174303547634e684f4957734b43455949556e715578386d6110518201527f596e4c35354f36382f37797255783236615443556f44643438653350546778746110718201527f706b667a7957512b506836354943465052696872453776342f4e75507469657a6110918201527f6968463476544a7a476979326a736b454c7a4c796a6552343068656e763751576110b18201527f703938697561365738326e42584e36566b3366755834796f302f3333377139456110d18201527f336837424261584a7644334a7054464f333979766a33497569797246416733386110f18201527f724775616b55623052516965684f45304777364f53694c4a79645751515555456111118201527f334b4c4a69514659795439304a394e324a4a62353876472b316c6a556d7239466111318201527f54483866534c754c4d497568764a3546664f33463778436a6779325831554d776111518201527f5979432f614d3557636866643937354a32383676556178696854386e327a66796111718201527f67485077656e3465486679444b63437a6941444d457a584c73387565707476766111918201527f2f76627676634e44366f6d483565736e6a372b7a634d33304f4c6746396b46566111b18201527f6631437959676a68522f664434576d597a622f796a652b636363644d50526f6c6111d18201527f4f6f467743556f3467654643395a4a682f6458375a324f5742423839466f63776111f18201527f4447394c33383950767a616e30716d552f46336164566d52445265444850584f6112118201527f72687256395657766447375130796a4c6b6e7469514863466479574e6b6768636112318201527f33683835574c3130326d307536374d5062746f45545153436a693470633854426112518201527f747a4d4770545744596131354e703447744163704c714e6e496a51706e4e61676112718201527f54436f786152376a336e6e395133614d3276546e6950732b4a44665262572f516112918201527f466e316876534f676f7978757271704471357a43323543446a5934322f5038576112b18201527f2f705345427a6451533758333134642b756f7156583837623152744c646b47326112d18201527f4e2f2f4c62754e62752b75397563435538415a4939534d36553666784e3537466112f18201527f714242574562306b6647697556782b646e7438677a7134757848423764504a786113118201527f6d7a66426333534e5278774273383561785745357657342b6d5062504370735a6113318201527f6b796c30314e4275726c6a4d42344c435565645273644547533671566c586c786113518201527f476b41634830736d586962614d4a525332685332554537684574706e704362786113718201527f68757341762b525651422b4172685965587a68367252507478313172574547696113918201527f2b3055534a556c6b374c465242497a7930692f6d4668307337444e365742334c6113b18201527f7866436b4c4e65445974724c54304b71304c74373466416947676a6c554b356c6113d18201527f724e50454c3871614b4a515752614d746c5a6137595843462b754454782f32726113f18201527f6f634e4842676e735043486f336b6873427831686e63372f41456b6b644f59416114118201527f414141414151414141414541516a4a6542557066447a7a3143417345414141416114318201527f4141444a4e556f6741414141414e55727a4e662f35762f56417938432b7741416114518201527f41416b414167414141414141414869635932426b594741702b4c6562515a355a6114718201527f2b76387a426842675a454146764142304d4152664141414141587341414146376114918201527f414141437a2f2f6d416f494143514a4e2f2b77444777414a416f674143514b396114b18201527f2f2f45432b674146416f38414a414b5741416f435467414b416d3441414141416114d18201527f41415941444145514164494334674f77424651452b675777426a7747356765696114f18201527f434a52346e474e675a474267344758597a73444541414b4d594a4b4c4163686c6115118201527f544151784152596c41546341414869636c56484e61747441455037576356494b6115318201527f72656d7470616568703654452b7648524f67586241644845474b666b7269694c6115518201527f4c4b4a49597158592b4e496e7941766b4c666f4d506651682b686839676e35656115718201527f4c3847596c464974752f764e7a44666637497741764d4e504b47792f6948754c6115918201527f466632527778323877686548442f414a633465372b49445734554f38786150446115b18201527f523369504a3464372b497a767a464c64313753572b4f57776771695a777833306115d18201527f564f3377416362716d384e64424f7148773466347148343766415376383862686115f18201527f4872353268714f7158707338573752796e4a37494941674475566e4c655657326116118201527f4d73354c6255346c4c6c4e507a6f70434c4b30526f7874746c7672576d326c7a6116318201527f6e3553617a4d764533476b7a31396c446b5a6a5143344977477366546566544d6116518201527f32424c366a7247664b4d352f725532545636565968622f6b4c7471324876722b6116718201527f617258796b6a704a46397172544f59586561724c526a662b52547961544b386d6116918201527f2f5945585949514b4e645977794a466877586b4c6a7048696850634141554a756116b18201527f7751305a676e4e79533873596b3131434d2b7555566b796377694d365138456c6116d18201527f4f32714e745454764458764a3835624d6d6258756b5669567265596c4c594d376116f18201527f47356e7a7a504241725930765a455a6733784b78636f77703439454c4772734b6117118201527f2f54324e66315755506636313954627359394f7a374c7a682f2b70755a7442796117318201527f776b50345843753750455a7137705252546173694c324f30594c5855616a5a326117518201527f596a3475324f304945335a387862505050384a582f414863714b5162414869636117718201527f5932426d4149502f6d786d4d475441424c774173746748327541482f686241456117918201527503528a09e94903337b936b0ba14113bb7b33311149d960551b6117b182015272666f6e742d7765696768743a6e6f726d616c3b60681b6117c782015272666f6e742d7374796c653a6e6f726d616c3b7d60681b6117da820152671e17b9ba3cb6329f60c11b6117ed820152661e17b232b3399f60c91b6117f58201526117dc815261180081019181831067ffffffffffffffff841117611ddc578260405283835281519081611820840152805b828110611dc757508282016118400152601f01601f19168101036040019150f35b80869185016118408382015191015201611da6565b634e487b7160e01b81526041600452602490fd5b80fdfea264697066735822122031a42859519de4126671c41d952da86d1fc0e2e7af130641160da144c8ab04a764736f6c634300081400336080806040523461001657613034908161001c8239f35b600080fdfe608080604052600436101561001a575b50361561001857005b005b600090813560e01c9081630c3f6acf14611f3d5750806312686aae14611f175780631865c57d14611efb5780632cf2cd4814611ed15780632daad61d14611ea757806330dbf88714611e7e578063379607f514611a7c5780633a4b66f114611a6357806341c6138314611a45578063441a3e701461183557806345b58fe41461178157806346904840146117585780634888a7d114610d9b5780634b2b4e3614610cea57806351ff484714610cc6578063591167c714610c9d578063678e300a14610c7e578063715018a614610c14578063735a531314610ad25780637d88209714610ab45780637fd6f15c14610a965780638620891c146108f5578063888e9cf8146108bc5780638ae578fd146108935780638da5cb5b1461085d5780639426e22614610837578063ac2a5dfd14610813578063b45a3c0e146107e4578063cfb5a5f814610747578063e2d9ae3e14610729578063e3f05d8314610706578063e4a50276146106c3578063e6b1a3ae1461058d578063e920eec014610567578063e94ad65b1461053e578063f2fde38b14610511578063f5537ede1461046c578063f9faa104146102195763fc03bad20361000f5734610216576020366003190112610216576040606091600435815260046020522080549060ff600260018301549201541690604051928352602083015215156040820152f35b80fd5b50806003193601126102165734156104325760ff815416600481101561041e57600161024591146123bb565b6102656801bc16d674ec80000061025e60055434612400565b1115612423565b600f546040516318160ddd60e01b81526020916001600160a01b039083908390600490829085165afa9182156103c85784926103eb575b50818452600183523460408520556102b634600554612400565b600555600754680100000000000000008110156103d757906102df826001879401600755612337565b81549060031b9085821b91600019901b1916179055828252600284526001604083205560ff60095460081c1660038552604083209060ff801983541691151516179055600f5416803b156103d35781906024604051809481936335313c2160e11b83523360048401525af180156103c857610390575b507fd91527a40417d48f76ba016aaa9157e2ddaca6cb5b660432901659cb075058fc916060916040519134835233908301526040820152a180f35b91606091936103bf7fd91527a40417d48f76ba016aaa9157e2ddaca6cb5b660432901659cb075058fc94612260565b93915091610355565b6040513d86823e3d90fd5b5080fd5b634e487b7160e01b85526041600452602485fd5b9091508281813d8311610417575b61040381836122c2565b810103126104135751903861029c565b8380fd5b503d6103f9565b634e487b7160e01b82526021600452602482fd5b60405162461bcd60e51b815260206004820152601260248201527136bab9ba103232b837b9b4ba1032ba3432b960711b6044820152606490fd5b503461021657606036600319011261021657610486611fc1565b6001600160a01b039060243582811691908290036104135760446020926104ab612f00565b85604051958694859363a9059cbb60e01b8552600485015284356024850152165af18015610506576104db575080f35b6104fb9060203d81116104ff575b6104f381836122c2565b8101906123a3565b5080f35b503d6104e9565b6040513d84823e3d90fd5b50346102165760203660031901126102165761053b61052e611fc1565b610536612f00565b612ecd565b80f35b50346102165780600319360112610216576012546040516001600160a01b039091168152602090f35b50346102165761053b6105793661200a565b95610588959195949294612f00565b612706565b5034610216576020806003193601126103d3576004356001600160a01b03811691908290036106bf576105be612f00565b60405163516b636d60e11b8152600481018490528381602481865afa9081156103c8578491610641575b50511561060657506001600160601b0360a01b601054161760105580f35b6064906040519062461bcd60e51b8252600482015260146024820152731a5b9d985b1a5908185c9d0818dbdb9d1c9858dd60621b6044820152fd5b90503d8085833e61065281836122c2565b81019082818303126106bb5780519067ffffffffffffffff82116106b7570181601f820112156106bb578051610687816122e4565b9261069560405194856122c2565b8184528482840101116106b7576106b191848085019101611f79565b386105e8565b8580fd5b8480fd5b8280fd5b50346102165780600319360112610216576107026040516106ee816106e7816121d9565b03826122c2565b604051918291602083526020830190611f9c565b0390f35b5034610216578060031936011261021657602060ff600954166040519015158152f35b50346102165780600319360112610216576020600d54604051908152f35b503461021657602036600319011261021657600435602460018060a01b03602081600f541660405193848092631dc82a7560e01b82528760048301525afa9182156103c857916107a8916107ad9493602096926107b5575b50163014612481565b612cde565b604051908152f35b6107d6919250863d81116107dd575b6107ce81836122c2565b810190612384565b903861079f565b503d6107c4565b50346102165760203660031901126102165760ff60406020926004358152600384522054166040519015158152f35b50346102165780600319360112610216576107026040516106ee816106e7816120ae565b5034610216578060031936011261021657602060ff60095460101c166040519015158152f35b5034610216578060031936011261021657600080516020612fbf833981519152546040516001600160a01b039091168152602090f35b50346102165780600319360112610216576010546040516001600160a01b039091168152602090f35b503461021657602036600319011261021657600435906007548210156102165760206108e783612337565b90546040519160031b1c8152f35b506020806003193601126103d3576004359060ff8354166004811015610a8257600161092191146123bb565b61093a6801bc16d674ec80000061025e60055434612400565b600f54604051631dc82a7560e01b815260048101849052906001600160a01b039081168383602481845afa928315610a77576024938593610984928992610a5f5750163014612481565b60405192838092634f558e7960e01b82528760048301525afa9081156103c8578491610a42575b5015610a0a57816040917f2e4d11c40e9ddf229c2807835f88a91899498f9e8531757e8489a824b1bdc119938552600181528285206109eb348254612400565b90556109f934600554612400565b60055582519182523490820152a180f35b6064906040519062461bcd60e51b8252600482015260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152fd5b610a599150823d84116104ff576104f381836122c2565b386109ab565b6107d6919250853d87116107dd576107ce81836122c2565b6040513d88823e3d90fd5b634e487b7160e01b84526021600452602484fd5b50346102165780600319360112610216576020600854604051908152f35b50346102165780600319360112610216576020600554604051908152f35b5034610216576020806003193601126103d3578160043567ffffffffffffffff81116103d357366023820112156103d357610b17903690602481600401359101612300565b610b1f612f00565b60018060a01b03601154169083604051818101907865787465726e616c2e636f6e74726163742e6164647265737360381b8252695353564e6574776f726b60b01b603982015260238152610b72816122a6565b5190206024604051809581936321f8a72160e01b835260048301525afa8015610c095783928391610bec575b50828583519301915af1610bb0612c9b565b5015610bba575080f35b6064906040519062461bcd60e51b82526004820152600b60248201526a10d85b1b0819985a5b195960aa1b6044820152fd5b610c039150853d87116107dd576107ce81836122c2565b38610b9e565b6040513d85823e3d90fd5b5034610216578060031936011261021657610c2d612f00565b600080516020612fbf83398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346102165760203660031901126102165760206107ad600435612d51565b5034610216578060031936011261021657600f546040516001600160a01b039091168152602090f35b50346102165780600319360112610216576107026040516106ee816106e781612152565b503461021657610cf93661200a565b959493610d07939193612f00565b60095460101c60ff1615610d885750505050610d2592503691612300565b60208151910120604051610d3c816106e7816120ae565b6020815191012003610d51575b61053b612507565b60405162461bcd60e51b815260206004820152600f60248201526e0e0eac496caf240dad2e6dac2e8c6d608b1b6044820152606490fd5b90919293610d969695612706565b610d49565b503461021657606036600319011261021657610db5611fc1565b6024358015158091036106bf57604435916001600160a01b038316830361041357600080516020612fdf833981519152549167ffffffffffffffff831680159081611748575b600114908161173e575b159081611735575b5061172357600167ffffffffffffffff19841617600080516020612fdf8339815191525560ff8360401c16156116f6575b6001600160a01b0382161561169f57610e55612f8f565b610e5d612f8f565b610e6682612ecd565b6001600160a01b0384161561164657601180546001600160a01b0319166001600160a01b0386161790556040516f636f6e74726163742e6164647265737360801b6020820181815267119c995b9cd05c9d60c21b6030840152601883529091610ece8161228a565b5190206040516321f8a72160e01b815260048101919091526020816024816001600160a01b038a165afa90811561152f578791611627575b506001600160a01b031680156115d2576001600160601b0360a01b6010541617601055604051602081019182526d4672656e73506f6f6c536861726560901b6030820152601e8152610f578161228a565b5190206040516321f8a72160e01b815260048101919091526020816024816001600160a01b0389165afa908115610a775786916115b3575b5060018060a01b03166001600160601b0360a01b600f541617600f5560405193602085017865787465726e616c2e636f6e74726163742e6164647265737360381b958682526e11195c1bdcda5d10dbdb9d1c9858dd608a1b603982015260288152610ff9816122a6565b5190206040516321f8a72160e01b815260048101919091526020816024816001600160a01b0386165afa90811561152f578791611594575b506001600160a01b0316801561153a576001600160601b0360a01b60125416176012556040516020810190731c1c9bdd1bd8dbdb0b9999594b9c195c98d95b9d60621b8252601481526110838161228a565b51902060405163bd02d0f560e01b815260048101919091526020816024816001600160a01b0386165afa801561152f5787906114f8575b600a915080600855116114a957602060405181810190751c1c9bdd1bd8dbdb0b9999594b9c9958da5c1a595b9d60521b8252601681526110f98161228a565b5190206040516321f8a72160e01b8152600481019190915291829060249082906001600160a01b03165afa908115610a7757869161148a575b50600e80546001600160a01b0319166001600160a01b03929092169182179055156114335760ff199060ff826009541691168091176009556000146114265784541684555b60018060a01b036011541660405160208101908582526729a9ab2a37b5b2b760c11b6039820152602181526111ab816122a6565b519020604051906321f8a72160e01b82526004820152602081602481855afa908115610a77578691611407575b506001600160a01b03169384156113ab57602090604051828101918252695353564e6574776f726b60b01b603982015260238152611215816122a6565b5190206024604051809481936321f8a72160e01b835260048301525afa9081156113a0578591611381575b506001600160a01b031680156113165784936044602092604051968793849263095ea7b360e01b8452600484015260001960248401525af19081156103c85760ff93611291926112f7575b50612f39565b60401c161561129d5780f35b68ff000000000000000019600080516020612fdf8339815191525416600080516020612fdf833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b61130f9060203d6020116104ff576104f381836122c2565b503861128b565b60405162461bcd60e51b815260206004820152603860248201527f4652454e5320636f6e7472616374206572726f72206e6f20535356206e65747760448201527f6f726b20636f6e747261637420616464726573732073657400000000000000006064820152608490fd5b61139a915060203d6020116107dd576107ce81836122c2565b38611240565b6040513d87823e3d90fd5b60405162461bcd60e51b815260206004820152602e60248201527f4652454e5320636f6e7472616374206572726f72206e6f2053535620746f6b6560448201526d1b8818dbdb9d1c9858dd081cd95d60921b6064820152608490fd5b611420915060203d6020116107dd576107ce81836122c2565b386111d8565b8454166001178455611177565b60405162461bcd60e51b815260206004820152602960248201527f4652454e5320636f6e7472616374206572726f72206e6f2066656520726563696044820152681c1a595b9d081cd95d60ba1b6064820152608490fd5b6114a3915060203d6020116107dd576107ce81836122c2565b38611132565b60405162461bcd60e51b815260206004820152602160248201527f4652454e5320636f6e7472616374206572726f722066656520746f6f206869676044820152600d60fb1b6064820152608490fd5b506020813d602011611527575b81611512602093836122c2565b8101031261152357600a90516110ba565b8680fd5b3d9150611505565b6040513d89823e3d90fd5b60405162461bcd60e51b815260206004820152602c60248201527f4652454e5320636f6e7472616374206572726f72206e6f204465706f7369742060448201526b18dbdb9d1c9858dd081cd95d60a21b6064820152608490fd5b6115ad915060203d6020116107dd576107ce81836122c2565b38611031565b6115cc915060203d6020116107dd576107ce81836122c2565b38610f8f565b60405162461bcd60e51b815260206004820152602760248201527f4652454e5320636f6e7472616374206572726f72206e6f206172742061646472604482015266195cdcc81cd95d60ca1b6064820152608490fd5b611640915060203d6020116107dd576107ce81836122c2565b38610f06565b60405162461bcd60e51b815260206004820152602b60248201527f4652454e5320636f6e7472616374206572726f72206e6f2073746f726167652060448201526a1859191c995cdcc81cd95d60aa1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602960248201527f4652454e5320636f6e7472616374206572726f72206e6f206f776e6572206164604482015268191c995cdcc81cd95d60ba1b6064820152608490fd5b68ffffffffffffffffff1983166801000000000000000117600080516020612fdf83398151915255610e3e565b60405163f92ee8a960e01b8152600490fd5b90501538610e0d565b303b159150610e05565b604085901c60ff16159150610dfb565b5034610216578060031936011261021657600e546040516001600160a01b039091168152602090f35b503461021657806003193601126102165760405180916007549081835260208093018092600783527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890835b81811061182157505050846117e39103856122c2565b60405193838594850191818652518092526040850193925b82811061180a57505050500390f35b8351855286955093810193928101926001016117fb565b8254845292860192600192830192016117cd565b503461021657604036600319011261021657600435602490813560ff8454166004811015611a3257600161186991146123bb565b600f546040516331a9108f60e11b808252600482018590526020959290916001600160a01b0391879082908690829086165afa8015611a275782918991611a0a575b501633036119d657848752600186528360408820541061199b578691869186845260018352604084206118df878254612c8e565b90556118ed86600554612c8e565b600555600f5416936040518095819382528860048301525afa94851561198e578180857f71ef96c43343734b1d843bb85d52ef329f5e9143e4d35827771e3b0dd90c5f84986119519683958492611971575b50505af161194b612c9b565b506126c8565b604080519283526020830191909152339082015280606081015b0390a180f35b6119879250803d106107dd576107ce81836122c2565b388061193f565b50604051903d90823e3d90fd5b60405162461bcd60e51b815260048101879052601481850152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b6044820152606490fd5b60405162461bcd60e51b815260048101879052600d818501526c3737ba103a34329037bbb732b960991b6044820152606490fd5b611a219150883d8a116107dd576107ce81836122c2565b386118ab565b6040513d8a823e3d90fd5b634e487b7160e01b855260216004528385fd5b50346102165780600319360112610216576020600654604051908152f35b5034610216578060031936011261021657610d49612f00565b5034610216576020806003193601126103d357600f54604051631dc82a7560e01b815260048035908201819052916024916001600160a01b0391859082908590829086165afa8015610a7757611add918791611e61575b5082163014612481565b60ff8554166004811015611e4e5760018114611e0a576064471115611db8578593929190600314611daf57806011541685604051818101906f636f6e74726163742e6164647265737360801b82526a4672656e734f7261636c6560a81b6030820152601b8152611b4c8161228a565b51902084604051809481936321f8a72160e01b835260048301525afa80156113a05783839188938891611d92575b5060405163404df7b160e11b81523060048201529788938492165af1938415610a77578694611d73575b508380611d49575b611d39575b611bba83612cde565b938387526002865260408720611bd1868254612400565b9055611bdf85600654612400565b600655600854908115159081611d30575b50611cc0575b508481600f5416604051938480926331a9108f60e11b82528760048301525afa868115611cb4578561196b947fd79254e5daba749baa8ba954e77bbbb18efef113a8070d00df9a188d81932426988394611c8b575b5050818080928596611c6296165af161194b612c9b565b6040805193845260208401949094526001600160a01b0316928201929092529081906060820190565b611c6294508392611cab8493838594903d106107dd576107ce81836122c2565b95509250611c4b565b604051903d90823e3d90fd5b611ccf85606492969396612ccb565b049060018211611ceb575b90611ce491612c8e565b9238611bf6565b600e546000198301908616838211611d1d5788808080611ce4979695611d15955af161194b612c9b565b909150611cda565b634e487b7160e01b895260116004528489fd5b90501538611bf0565b855460ff19166003178655611bb1565b5060ff8654166004811015611d6057600214611bac565b634e487b7160e01b875260216004528287fd5b611d8b919450853d87116104ff576104f381836122c2565b9238611ba4565b611da99150843d86116107dd576107ce81836122c2565b38611b7a565b60019350611bb1565b60405162461bcd60e51b8152600481018690526025818501527f6d7573742062652067726561746572207468616e203130302077656920746f20604482015264636c61696d60d81b6064820152608490fd5b60405162461bcd60e51b815260048101869052601c818501527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152606490fd5b634e487b7160e01b865260216004528286fd5b611e789150863d88116107dd576107ce81836122c2565b38611ad3565b50346102165780600319360112610216576011546040516001600160a01b039091168152602090f35b50346102165760203660031901126102165760406020916004358152600183522054604051908152f35b50346102165760203660031901126102165760406020916004358152600283522054604051908152f35b50346102165780600319360112610216576107026106ee612dca565b5034610216578060031936011261021657602060ff60095460081c166040519015158152f35b9050346103d357816003193601126103d35760ff8254166004811015611f6557602092508152f35b634e487b7160e01b83526021600452602483fd5b60005b838110611f8c5750506000910152565b8181015183820152602001611f7c565b90602091611fb581518092818552858086019101611f79565b601f01601f1916010190565b600435906001600160a01b0382168203611fd757565b600080fd5b9181601f84011215611fd75782359167ffffffffffffffff8311611fd75760208381860195010111611fd757565b906080600319830112611fd75767ffffffffffffffff600435818111611fd7578361203791600401611fdc565b93909392602435838111611fd7578261205291600401611fdc565b93909392604435918211611fd75761206c91600401611fdc565b909160643590565b90600182811c921680156120a4575b602083101461208e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612083565b600a54600092916120be82612074565b8082529160019081811690811561213557506001146120dc57505050565b91929350600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8916000925b84841061211d57505060209250010190565b8054602085850181019190915290930192810161210b565b915050602093945060ff929192191683830152151560051b010190565b600c546000929161216282612074565b80825291600190818116908115612135575060011461218057505050565b91929350600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7916000925b8484106121c157505060209250010190565b805460208585018101919091529093019281016121af565b600b54600092916121e982612074565b80825291600190818116908115612135575060011461220757505050565b91929350600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9916000925b84841061224857505060209250010190565b80546020858501810191909152909301928101612236565b67ffffffffffffffff811161227457604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761227457604052565b6060810190811067ffffffffffffffff82111761227457604052565b90601f8019910116810190811067ffffffffffffffff82111761227457604052565b67ffffffffffffffff811161227457601f01601f191660200190565b92919261230c826122e4565b9161231a60405193846122c2565b829481845281830111611fd7578281602093846000960137010152565b60075481101561236e5760076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880190600090565b634e487b7160e01b600052603260045260246000fd5b90816020910312611fd757516001600160a01b0381168103611fd75790565b90816020910312611fd757518015158103611fd75790565b156123c257565b60405162461bcd60e51b81526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b6044820152606490fd5b9190820180921161240d57565b634e487b7160e01b600052601160045260246000fd5b1561242a57565b60405162461bcd60e51b815260206004820152602960248201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686044820152680c2dc406664408ae8d60bb1b6064820152608490fd5b1561248857565b60405162461bcd60e51b815260206004820152601960248201527f77726f6e67207374616b696e6720706f6f6c20666f72206964000000000000006044820152606490fd5b156124d457565b60405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720737461746560a81b6044820152606490fd5b6801bc16d674ec80000080471061269257806005540361265757600090815460ff81166004811015610a8257600161253f91146124cd565b60ff60095460101c161561261e5760ff19166002178255601254600d546001600160a01b0393918416803b156106bf5790829160405180958180946304512a2360e31b8252608060048301526125bf61259a608484016120ae565b6125b060031991828682030160248701526121d9565b90848203016044850152612152565b90606483015203925af1908115611cb45750916040917f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce1929361260f575b50601254168151908152336020820152a1565b61261890612260565b386125fc565b60405162461bcd60e51b81526020600482015260116024820152701d985b1a59185d1bdc881b9bdd081cd95d607a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260136024820152726e6f7420656e6f756768206465706f7369747360681b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d0dcdee840cadcdeeaced040cae8d60931b6044820152606490fd5b156126cf57565b634e487b7160e01b600052600160045260246000fd5b908060209392818452848401376000828201840152601f01601f1916010190565b949190939695926040519160209283810190600160f81b82526000918260218301523060601b602c83015285825261273d8261228a565b612748368686612300565b8681519101209151902003612c495760095460ff8116612c0f575b5060ff815416906004821015612bfb5761278060018093146124cd565b67ffffffffffffffff908189116129ea5761279c600a54612074565b9189601f93848111612b97575b5082848211600114612b0b578391612b00575b5060001960038c901b1c19168a851b17600a555b808611612aec576127e2600b54612074565b838111612a8a575b508582848211600114612a095783916129fe575b50600019600388901b1c191686851b17600b555b87116129ea57612823600c54612074565b828111612988575b50809187116001146128de579286807ffd84b86d2e47014cef6e8fc5310d3968b38c5998dd6a57a8b68b350628b8f9f89c9d97946128c89997946128ba97936128d3575b501b906000198760031b1c191617600c555b87600d556201000062ff00001960095416176009556128ad6040519a8b9a60808c5260808c01916126e5565b92898403908a01526126e5565b9185830360408701526126e5565b9060608301520390a1565b89013592503861286f565b90601f198716600c83527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7925b8181106129735750928795926128ba95926128c8997ffd84b86d2e47014cef6e8fc5310d3968b38c5998dd6a57a8b68b350628b8f9f89e9f999610612959575b505085811b01600c55612881565b880135600019600389901b60f8161c19169055388061294b565b8d83013584559284019291870191870161290b565b600c82527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c783808a0160051c820192898b106129e1575b0160051c019084905b8281106129d657505061282b565b8381550184906129c8565b925081926129bf565b634e487b7160e01b81526041600452602490fd5b9050850135386127fe565b600b84527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9915087601f198116855b8b89838310612a735750505010612a59575b50508386811b01600b55612812565b860135600019600389901b60f8161c191690553880612a4a565b858c0135875590950194938401938b935001612a38565b600b83527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db98480890160051c8201928a8a10612ae3575b0160051c019085905b828110612ad85750506127ea565b848155018590612aca565b92508192612ac1565b634e487b7160e01b82526041600452602482fd5b90508b0135386127bc565b8c91601f198116600a86527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8938b8988925b848410612b77575050505010612b5d575b5050838a811b01600a556127d0565b8c013560001960038d901b60f8161c191690553880612b4e565b8294955095809791929396013581550194019201908d918f898d91612b3d565b600a8452847fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8918a82850160051c84019410612bf2575b0160051c019085905b828110612be757508b91506127a9565b848155018590612bd7565b92508192612bce565b634e487b7160e01b81526021600452602490fd5b81549060ff82166004811015610a825760ff60019392612c32612c3c93156124cd565b60101c16156126c8565b60ff191617815538612763565b60405162461bcd60e51b815260048101859052601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d6174636800006044820152606490fd5b9190820391821161240d57565b3d15612cc6573d90612cac826122e4565b91612cba60405193846122c2565b82523d6000602084013e565b606090565b8181029291811591840414171561240d57565b4715612d4b576000908152600160205260408120546002602052612d14604083205491612d0e4760065490612400565b90612ccb565b600554908115612d3757048015612d3257612d2f9250612c8e565b90565b505090565b634e487b7160e01b84526012600452602484fd5b50600090565b60ff60005416906004821015612db45760018203612d70575050600090565b612d7990612cde565b90600854908115159081612da8575b50612d91575090565b906064612da182612d2f94612ccb565b0490612c8e565b60039150141538612d88565b634e487b7160e01b600052602160045260246000fd5b60ff600054166004811015612db4578015612e935760028114612e705760018114612e4157600314612e1f57604051612e028161228a565b600d81526c7374617465206661696c75726560981b602082015290565b604051612e2b8161228a565b6006815265195e1a5d195960d21b602082015290565b50604051612e4e8161228a565b6012815271616363657074696e67206465706f7369747360701b602082015290565b50604051612e7d8161228a565b60068152651cdd185ad95960d21b602082015290565b50604051612ea08161228a565b601781527f6177616974696e672076616c696461746f7220696e666f000000000000000000602082015290565b6001600160a01b03811615612ee757612ee590612f39565b565b604051631e4fbdf760e01b815260006004820152602490fd5b600080516020612fbf833981519152546001600160a01b03163303612f2157565b60405163118cdaa760e01b8152336004820152602490fd5b600080516020612fbf83398151915280546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b60ff600080516020612fdf8339815191525460401c1615612fac57565b604051631afcd79f60e31b8152600490fdfe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a264697066735822122027bf447054c5fc603e0091471212c086a785d2c7e11428624efa849e8fd6887764736f6c6343000814003360806040908082523461015357806104e3803803809161001f8285610158565b833960209283918101031261015357516001600160a01b0380821692909183900361015357600180546001600160a01b0319908116851790915584516f636f6e74726163742e6164647265737360801b8382019081526d4672656e73506f6f6c536861726560901b6030830152601e825291949092838701929091906001600160401b0384118585101761013d5760248484938193828c52885190206321f8a72160e01b835260448901525afa928315610132576000936100f5575b5050501690600054161760005551610367908161017c8239f35b813d831161012b575b6101088185610158565b81010312610127575190828216820361012457503880806100db565b80fd5b5080fd5b503d6100fe565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761013d5760405256fe608060048036101561001057600080fd5b6000803560e01c63319e90901461002657600080fd5b346102075760409081600319360112610207576001600160a01b0383358181169490859003610303576024918235958615158097036102ff578160015416602098898101906f636f6e74726163742e6164647265737360801b82526a14dd185ada5b99d41bdbdb60aa1b6030820152601b81528881019267ffffffffffffffff92828510848611176102ed5788858e938193828f52865190206321f8a72160e01b835260448701525afa9182156102e3578892610274575b50506e5af43d82803e903d91602b57fd5bf39150763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c1617875260781b178852816037600987f01696871561023957826001541690883b1561023557875192634888a7d160e01b8452858401528583015260448201528481606481838b5af1801561022b57610218575b50835416803b156102145760448492837f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6938989519788968795632f2ff15d60e01b87528601528401525af1801561020a576101f3575b5050817fb224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e8280513381523087820152a251908152f35b6101fd8291610307565b61020757806101bd565b80fd5b83513d84823e3d90fd5b8380fd5b61022490949194610307565b9238610166565b86513d87823e3d90fd5b8680fd5b865162461bcd60e51b81528085018a905260168187015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606490fd5b9091508a903d8c116102db575b601f8201601f191683018a01908111848210176102c957895281010389136102c5575182811681036102c5576e5af43d82803e903d91602b57fd5bf39038806100de565b8580fd5b634e487b7160e01b8952604187528789fd5b3d9150610281565b89513d8a823e3d90fd5b634e487b7160e01b8a5260418852888afd5b8480fd5b8280fd5b67ffffffffffffffff811161031b57604052565b634e487b7160e01b600052604160045260246000fdfea264697066735822122033fe7ceb970c0e94f03276459775f0d8ae71121665549b88ead2eada9cd631b164736f6c6343000814003360808060405234610016576134f5908161001c8239f35b600080fdfe6080600436101561000f57600080fd5b6000803560e01c63a9d42f7e1461002557600080fd5b346134bc57806003193601126134bc577f3c672066696c6c3d222336423744373722206f7061636974793d22302e3222206020838101919091527f7472616e73666f726d3d226d6174726978282e34302c302c302c2e34302c302c6040840152631814911f60e11b60608401527f3c706174682020643d224d3133332e352c3730352e33632d32332e322d32342e60648401527f362d34362e382d34382e372d37302e352d37322e38632d31382e382d31392e3160848401527f2d34302e352d33312e332d36332d33372e347631322e35206331342e392c342e60a48401527f352c32392e322c31322e352c34322e362c32342e376333302e352c32372e392c60c48401527f35382e312c35382e382c38372e372c38372e366336352e332c36332e362c313360e48401527f362e382c36342c3230362e312c31322e3363392e312d362e382c31372e352d31610104840152740342e342c32352e352d32322e356c2d372e382d313605c1b6101248401527f433239352c3736332e342c3230352e382c3738322c3133332e352c3730352e33610139840152633d11179f60e11b6101598401819052751e3830ba341010321e91269c9a18971c961b1b1a171b60511b61015d8501527f632d31352e322c31372e362d33312e342c33342e342d34372e342c35312e34636101738501527f2d35362e342c36302e322d3134332e332c34372e362d3139302e382c302e34636101938501527f2d31302e372d31302e372d32312e332d32312e362d33312e372d33322e356c2d6101b385015266382e322c392e3960c81b6101d38501527f6331332e392c31342e392c32382e312c32392e342c34332e392c34312e3963356101da8501527f362e342c34352e312c3133392c34382e312c3139342e382d392e366332372e316101fa8501527f2d32382c35332e322d35372e312c38312e332d38342e3163342e372d342e352c61021a850152720e4b8d8b4e0b8d4b0c4d0b8dcb4c4c9d8b4c4d606a1b61023a8501527f433937372e362c3632382e342c3935382e392c3634342e392c3934312e392c3661024d850152671b1a171b3d11179f60c11b61026d850152743c7061746820643d224d3334362e382c3736342e3160581b6102758501527f632d35322e352c35342e332d3133352e382c37312e322d3139392e332c31312e61028a8501527f31632d32372d32352e362d35322e392d35322e362d37382e332d37392e3843346102aa8501527f382e332c3637332e312c32342e352c3635392e372c302c3635332e337631322e6102ca8501527f346331392c352e352c33372e312c31362c35332e312c33322e350000000000006102ea8501527f6332342e332c32352e322c34382e332c35302e362c37332e312c37352e3263326103048501527f342e372c32342e362c35322e372c34352e372c38372e382c35302e356334372c6103248501527f362e342c39302e392d352e312c3132362e352d33372e336331362d31342e342c6103448501527f33312e312d32392e392c34352e372d34352e386c2d382e312d31302e330000006103648501527f433336372e382c3734312e372c3335372e342c3735332e312c3334362e382c37610381850152671b1a1718bd11179f60c11b6103a1850152741e3830ba3410321e91269c981c971c161b9a9b971b60591b6103a98501527f632d32322e342c32342e322d34352e392c34362e342d37392e372c35332e32636103be8501527f2d35382e372c31312e382d3130342e352d31322d3134332e392d35322e38632d6103de8501527f31332e362d31342e312d32372e312d32382e322d34302e332d34322e356c2d376103fe850152652e372c392e3360d01b61041e8501527f6331392e312c32312e342c33392c34322e332c36302e332c36312e336335382e6104248501527f352c35322e322c3135312c35362e362c3230382e372d372e326332332e382d326104448501527f362e332c34372e332d35332e322c37332e352d37372e3163352e352d352c3131610464850152752e352d392e372c31372e382d31332e39762d31342e3760501b6104848501527f433936322e322c3639332e352c3933372e362c3732372e362c3930392e382c3761049a850152671a9b971b3d11179f60c11b6104ba850152750f1c185d1a0808190f48934ccd0e0b8c8b0e0c8c0b8d60521b6104c28501527f632d35342e372c35372e372d3134342e312c37322e332d3230372e332c362e316104d88501527f632d32322e392d32342d34362e332d34372e352d36392e322d37312e34632d326104f88501527f322d32322e392d34352e392d33372e372d37312e372d34342e347631322e39636105188501527f32342c372e312c34372e352c32312e392c36382e352c34362e320000000000006105388501527f6332302e322c32332e332c34312e392c34352e332c36342c36362e376332312e6105528501527f352c32302e382c34362c33392c37362e332c34332e346336312e352c392c31316105728501527f332e322d31302e372c3135342e382d35372e356331352e332d31372e322c33306105928501527f2e362d33342e362c34362e372d35316c2d382e332d31302e36000000000000006105b28501527f433338332e382c3738302e352c3336362e362c3830312c3334382e322c3832306105cb85015265171a3d11179f60d11b6105eb8501819052751e3830ba341010321e91269c9b98171a961b9a99171960511b6105f18601527f632d32352e322c32332e322d34382e342c34382e372d37312e342c37342e31636106078601527f2d35392e392c36362e322d3134372e352c35332e332d3139382e372c322e31636106278601527f2d32332e312d32332d34342e362d34372e362d36372e312d37312e32632d332e6106478601527f392d342e312d382d382d31322e322d31312e366c2d382e382c31302e370000006106678601527f6332352e372c32332e372c34382c35312e322c37332e312c37352e376334372e6106848601527f342c34362e342c3130332e362c36342e352c3136372e332c34312e346332302e6106a48601527f342d372e342c33382e362d32332e352c35342e392d33382e376332352e392d326106c48601527f342e312c34382e312d35322e322c37342e322d37362e310000000000000000006106e48601527f63352e312d342e372c31302e372d392e312c31362e372d31332e31762d31342e6106fb8601527f35433938382e372c3733372c3937392e332c3734342e312c3937302e352c373561071b8601527f322e327a222f3e3c706174682020643d224d3334382e362c373931000000000061073b8601527f632d33392c34302e342d38352e382c35392e372d3134312e392c34372e31632d6107568601527f33332e372d372e352d35372e392d33312e342d38312e332d35352e31632d32316107768601527f2e332d32312e352d34312e362d34342d36332e352d36342e394334332e372c376107968601527f30302e382c32332e352c3638372e362c302c3638312e347631332e35000000006107b68601527f6332322e362c362e352c34342e312c31392e352c36322e342c34302e356332336107d28601527f2e332c32362e372c34392e342c35302e392c37342e362c37352e386337312c376107f28601527f302e342c3136342e322c34342e372c3231322e382d342e346331362e342d31366108128601527f2e362c33322d33342e322c34382e322d35312e316c2d372e332d392e340000006108328601527f433337362e362c3736312e322c3336322e382c3737362e332c3334382e362c3761084f860152651c98bd11179f60d11b61086f860152753c706174682020643d224d3936382e372c3732342e3760501b6108758601527f632d32362e392c32362e362d35312e392c35352e312d37382e382c38312e366361088b8601527f2d32332e312c32322e382d35312e312c33352e382d38342e342c33362e33632d6108ab8601527f34322e362c302e362d37382e332d31352e332d3130372e382d3435632d32312e6108cb8601527f392d32312e392d34322e362d34342e392d36332e382d36372e350000000000006108eb8601527f6c2d372e362c392e3263302c302c302c302c302e312c302e316332332e342c326109058601527f362e372c34372e312c35332e352c37332e382c37362e376333362e382c33322e6109258601527f312c38312c34352e312c3132392e392c33362e346333382e322d362e382c36346109458601526e2e382d33322c39302e372d35382e3760881b6109658601527f6332352e322d32352e392c34392e342d35332e362c37372e382d37352e35762d6109748601527f31362e38433938372e392c3730372e392c3937372e392c3731352e352c3936386109948601526b171b961b991a171bbd11179f60a11b6109b4860152730f1c185d1a0808190f48934d0c0dcb0e0c4ccb8d60621b6109c08601527f632d32322e312c32332e322d34332e312c34372e352d36352e352c37302e33636109d48601527f2d34362e392c34372e352d3133322e322c36362e342d3139322e392c362e38636109f48601527f2d32372d32362e352d35322e372d35342e322d37392e392d38302e35632d3139610a148601527f2e382d31392e312d34312e352d33362d36382e362d34322e327631322e380000610a348601527f63352e352c322c31312c342e342c31362e352c372e336332342e352c31332e32610a528601527f2c34342e382c33342e372c36352e362c35332e396332302e392c31392e332c33610a728601527f392e322c34312e342c36302e332c36302e366335382e342c35332c3133352c34610a928601526c372e362c3139302e332c342e3560981b610ab28601527f6332392d32322e362c35322e382d35322e322c37372e372d37392e3763372e39610abf8601527f2d382e382c31362e342d31362e342c32352e342d32336c2d372e352d392e3643610adf8601527f3432302e382c3830302c3431332e372c3830362e332c3430372c3831332e347a610aff8601526211179f60e91b610b1f8601819052731e3830ba341010321e91269c9b1b161c1899171b60611b610b228701527f632d32322e392c32312e342d34332e362c34352e322d36342e362c36382e3663610b368701527f2d35332e352c35392e372d3132362e372c36332e322d3138352e382c31362e35610b568701527f632d33312e372d32352d35372e372d35372e332d38362e322d38362e33632d31610b768701527f312e382d31322d32342e372d32312e372d33382e342d32392e32000000000000610b968701527f6c2d372e352c392e316331322e362c362e382c32342e352c31352e392c33352e610bb08701527f322c32372e336331372e322c31382e322c33342c33362e372c35302e392c3535610bd08701527f2e336333342e352c33372e392c37342e362c36342e342c3132372e392c36362e610bf08701527f326333332e342c312e322c36342e332d352e372c38382e382d32382e36000000610c108701527f6333332e352d33312e342c36332e362d36362e342c39372e382d393763342e35610c2d8701527f2d342e312c392e342d372e392c31342e352d31312e35762d31352e3343393837610c4d8701527f2e332c3739342e352c3937362e342c3830322e382c3936362c3831322e367a22610c6d87015261179f60f11b610c8d870152753c706174682020643d224d3335382e312c3833382e3560501b610c8f8701527f632d36322e312c37312e312d3135352e342c38382e312d3232382c362e36632d610ca58701527f31362e362d31382e372d33342e322d33362e352d35312e382d35342e34632d32610cc58701527f362e382d32372e332d35312e352d34352d37382e342d35322e357631332e3863610ce58701527f32322e352c362e382c34342c32302e322c36322e392c34312e34000000000000610d058701527f6332352e382c32392c35332e352c35362e382c38322e352c38322e366336322c610d1f8701527f35352e322c3134312e372c34322e392c3139352e342d342e346332372e382d32610d3f8701527f342e352c35312e342d35332e382c37372e352d38302e3163312e342d312e342c610d5f8701527f322e382d322e382c342e322d342e316c2d372e352d392e360000000000000000610d7f8701527f433339342e372c3739362e342c3337362e332c3831372e362c3335382e312c38610d9787015267199c171abd11179f60c11b610db78701819052753c706174682020643d224d3936342e382c3738352e3360501b610dbf8801527f632d32372e372c32352e382d35312e392c35352e322d37392e322c38312e3463610dd58801527f2d32322e392c32322d35302e362c33332e372d38332e362c33332e32632d3439610df58801527f2e382d302e382d38372e322d32342e362d3131392e342d35392e36632d31392e610e158801527f332d32302e392d33372e342d34332e312d35372e382d36322e39000000000000610e358801527f632d352e362d352e352d31312e362d31302e342d31372e382d31342e396c2d38610e4f8801527f2e322c31306331332e332c392e352c32352e352c32312e322c33372e322c3334610e6f8801527f2e326331372e392c32302c33342e362c34312e332c35342e352c35382e396334610e8f8801527f382e322c34322e372c3130332e352c36302c3136362e312c33352e3500000000610eaf8801527f6332392e342d31312e352c34392e332d33362e312c37312e312d35372e386332610ecb8801527f332d32322e392c34352e332d34372e352c37302e382d36372e32762d31362e36610eeb8801527f433938362e372c3736362e382c3937352e342c3737352e352c3936342e382c37610f0b880152671c1a9719bd11179f60c11b610f2b88015275078e0c2e8d04040c87a449a666e6c5c7258706e665c760531b610f338801527f632d31352e332c31362e372d32392e372c33342e392d34372e342c34382e3663610f498801527f2d34342e332c33342e332d39342e352c34382e322d3134352e392c32302e3163610f698801527f2d32372e332d31342e392d34392e352d33392e372d37332e312d36302e39632d610f898801527f32352e352d32322e392d34372e372d35302e332d37352e362d36392e36000000610fa98801527f632d31302e352d372e332d32322e342d31322e352d33342e392d31352e397631610fc68801527f322e376332302c352e382c33392e332c31372e312c35362e312c33352e356332610fe68801527f362e332c32382e372c35342e322c35362e312c38322e342c38336335382e372c6110068801527f35362e312c3133342e312c35332e372c3139332e392c382e33000000000000006110268801527f6333312e362d32342c35372e342d35362c38342e352d38352e356331302d313061103f8801527f2e392c32312e342d31392e392c33332e372d32372e316c2d372e372d392e394361105f8801527f3431372e312c3832382e372c3339372e322c3835312e362c3337362e392c383761107f8801526619971c3d11179f60c91b61109f880152753c706174682020643d224d3936392e372c3833382e3160501b6110a68801527f632d32342e322c32332e362d34362e332c34392e322d36392e382c37332e34636110bc8801527f2d32362e382c32372e362d35382c34362e322d39382e332c34352e38632d34306110dc8801527f2e312d302e342d37332e382d31362e332d3130312e392d34332e32632d32342e6110fc8801527f372d32332e372d34362e362d35302e332d37302e332d37352e3100000000000061111c8801527f632d31362e372d31372e352d33352e352d32392e362d35342e392d33372e316c6111368801527f2d382e332c31306331392e372c372e322c33382e342c31392e342c35342e372c6111568801527f33376332342e312c32362e312c34372e362c35322e392c37332e352c373763356111768801527f362e372c35322e382c3135302e342c36342c3231322e362d34000000000000006111968801527f6332342e332d32362e372c34382e382d35332e342c37352e322d373863342e396111af8801527f2d342e362c31302e342d382e392c31362e332d31322e39762d31352e344339386111cf8801527f382e342c3832312e392c3937382e382c3832392e332c3936392e372c3833382e6111ef8801526418bd11179f60d91b61120f880152753c706174682020643d224d3430352e382c3837312e3760501b6112148801527f632d32312c32312e382d34302e342c34352e312d36312e362c36362e37632d3561122a8801527f342e342c35352e342d3134312e352c36372e392d3230362e322c302e35632d3261124a8801527f352d32362d34392e382d35322e332d37352e382d37372e33632d31372e372d3161126a8801527f372d33372e362d33312e362d36322e322d33362e377631322e3800000000000061128a8801527f6332302c352e372c33392e312c31362e382c35352e342c33342e356332372e336112a48801527f2c32392e342c35352e352c35382e312c38342e382c38352e366333342e382c336112c48801527f322e362c37352e382c34352e312c3132332e392c33362e376335302e362d382e6112e488015273392c38352e382d33392e332c3131372d37362e3560601b6113048801527f6332322e392d32372e332c34352e352d35352e382c37382e342d37302e3863326113188801527f2e342d312e312c342e382d322e312c372e322d332e316c2d382e312d31302e346113388801527f433434302c3834312e382c3432322e332c3835342e342c3430352e382c38373161135888015265171bbd11179f60d11b611378880152731e3830ba341010321e91269c9b99961c1b1a171b60611b61137e8801527f632d32382e382c32372d35352e322c35362e362d38332c38342e37632d33372e6113928801527f352c33382d39352c34372e322d3134332e372c3235632d33382e352d31372e366113b28801527f2d36342e382d34382e372d39312e382d37392e32632d32322e312d32352d34346113d2880152702e312d35312e322d37362e312d36322e3560781b6113f28801527f632d372e392d322e382d31352e382d352e312d32332e352d362e386c2d372e396114038801527f2c392e356332352e312c342e392c34392e382c31372e362c37312e372c34302e6114238801527f336332362e372c32372e362c35322e312c35362e372c38302e312c38322e39636114438801527f33322e312c33302e322c37322e382c34322e322c3131352e382c33392e3600006114638801527f6334302e382d322e342c37322e352d32352e332c3130302d35342e396332352e6114818801527f332d32372e332c34392e372d35362e332c37382e392d37382e3963312e362d316114a18801527f2e332c332e332d322e352c352d332e37762d31352e35433938392e332c3835306114c18801527f2e382c3938302e372c3835372e332c3937332c3836342e367a222f3e000000006114e18801527403c706174682020643d224d3931342e332c3130303605c1b6114fd8801527f6332312e352d32332c34322e362d34362e342c36352e342d36372e3963352e376115128801527f2d352e332c31312e392d31302e342c31382e372d3135762d31352e33632d31316115328801527f2e332c362e392d32322e312c31352e332d33322e322c32352e32632d32322e346115528801527f2c32322d34332e372c34352e332d36342e352c36382e390000000000000000006115728801527f632d312e332c312e342d322e362c322e382d332e392c342e32483931342e337a6115898801526115a9870191909152713c706174682020643d224d302c3839352e3160701b6115ac8701527f6331392e312c352e362c33372e362c31362c35332e362c33322e376332332e346115be8701527f2c32342e342c34362e392c34382e372c37312e322c37322e326831382e38632d6115de8701527f32322e322d31392e322d34322e372d34302e372d36312e382d36322e394335376115fe8701527f2e332c3930382e342c32392c3839312e312c302c3838332e340000000000000061161e870152692b1c1c9a9718bd11179f60b11b6116378701527f3c706174682020643d224d3939382e352c31303030762d31312e3500000000006116418701527f632d352e372c332e352d31312e322c372e342d31362e332c31312e354839393861165c87015265171abd11179f60d11b61167c8701527f3c706174682020643d224d302c3938302e396331332e322c332e392c32362e316116828701526e2c31302e322c33382e312c31392e3160881b6116a28701527f6831392e374333392e372c3938342e382c32302e332c3937342e332c302c39366116b18701526c1c171b2b1c9c18171cbd11179f60991b6116d18701527403c706174682020643d224d3434322e362c3130303605c1b6116de8701527f6334352e342d33302e392c3130372e322d33322e372c3135342e342c306832306116f38701527f2e39632d35382e352d34382e352d3134332e312d34372e312d3139332e312d316117138701527f2e32632d302e342c302e342d302e392c302e382d312e332c312e32483434322e611733870152641b3d11179f60d91b611753870152751e3830ba341010321e91269c9a981719961c9899971b60511b6117588701527f632d32312e352c32332d34322c34372d36352e312c36382e33632d372e392c3761176e8701527f2e332d31362e312c31332e332d32342e352c31382e316832332e3163382e332d61178e8701527f362c31362e342d31332e312c32342e312d32312e336332312e392d32332e342c6117ae87015270034322e352d34382e312c36352e382d373607c1b6117ce8701527f63382d372e352c31362e332d31342e332c32342e392d32302e32762d31342e336117df8701527f433938312c3838342e352c3936352e312c3839372e382c3935302e332c3931336117ff87015265171b3d11179f60d11b61181f870181905274078e0c2e8d04040c87a449a6c725c6c5870726c5c7605b1b6118258801527f4334372e392c3837342e322c32342e322c3836302e322c302c3835332e34763161183a8801527f322e346331352e382c342e372c33302e382c31332c34342c32352e346332312e61185a8801527f352c32302e342c34312e322c34322e382c36332e312c36322e366331372e322c61187a8801527f31352e352c33332e392c33322e372c35322e362c34362e326832312e3300000061189a8801527f632d392e342d352d31382e362d31312e342d32372e332d31392e35433132342e6118b78801527f362c3935332e372c39372c3932352e322c36392e362c3839362e387a222f3e006118d7880152733c706174682020643d224d3432312c3838372e3360601b6118f68801527f632d32372e382c32352e362d35322c35352d37382e362c38312e39632d31322e61190a8801527f312c31322e332d32372e322c32322e392d34342c33302e384833323363372e3361192a8801527f2d342e392c31342e342d31302e342c32312e342d31362e346332392e382d323561194a880152730b8dcb0d4d0b4d4dcb8e4b0e0c8b8d0b4e0d4b8d60621b61196a8801527f6331362e322d31352e382c33362d32362e382c35362e392d33322e366c2d382d61197e8801527f31302e33433435352e392c3836312e372c3433372e312c3837322e342c34323161199e88015269161c1c1b9719bd11179f60b11b6119be880152751e3830ba341010321e91269a9c9b1719161c1c1b171b60511b6119c88801527f6333312e362c32352c35372e392c35362e392c38362e332c38366331302e322c6119de8801527f31302e352c32312e342c31392e362c33332e332c32372e346832342e35632d336119fe8801527f322e312d31352e312d35342e352d34322e332d37382e362d36372e38632d3231611a1e8801527f2e342d32322e372d34332e312d34362e392d36392e312d36332e320000000000611a3e8801527f632d31372e382d31312e312d33372e322d31372e362d35372d31392e396c2d39611a598801527f2e362c31312e36433535312e312c3836312e392c3537352e362c3837302e342c611a798801526e1a9c9b1719161c1c1b171b3d11179f60891b611a998801527f3c706174682020643d224d3934352e322c313030306331322e372d31352e312c611aa88801527032352d33302e372c33392e372d34332e3560781b611ac88801527f63342e332d332e372c382e382d372e332c31332e362d31302e36762d31342e37611ad98801527f632d31302e312c362e332d32302c31332e372d32392e352c32322e33632d3136611af98801527f2e332c31342e362d33312e352c33302e352d34362e342c34362e36483934352e611b1988015264193d11179f60d91b611b3988018190527f3c706174682020643d224d3338332e352c3130303063332e372d342e312c372e611b3e8901526c06a5a705862625c6a5a62625c7609b1b611b5e8901527f6332302e362d31392e342c34302e352d34312e352c36342e382d35342e384335611b6b8901527f31352e372c3930332c3538302c3931382e342c3632362c3936372e3963392e38611b8b8901527f2c31302e362c31392e352c32312e342c32392e322c33322e316831352e39632d611bab8901527f392e382d31312d31392e332d32322e322d32392e312d33332e32000000000000611bcb8901527f632d36392e332d37372e382d3136332e322d38312e362d3233362e382d38632d611be58901527f31332e332c31332e332d32352e382c32372e342d33382e362c34312e32483338611c058901526619971abd11179f60c91b611c258901527f3c706174682020643d224d302c3932332e336331362c342e372c33312e352c31611c2c8901526a332e312c34352c32362e3160a81b611c4c8901527f6331372e332c31362e352c33342c33332e352c35302e372c35302e366831392e611c578901527f36632d31372e332d31372e352d33342e372d33342e392d35322e352d35312e39611c778901527f632d31382e312d31372e332d33382e322d33322d36322e382d33372e37563932611c9789015266199719bd11179f60c91b611cb78901527f3c706174682020643d224d3431322e342c3130303063362e352d362e372c3133611cbe8901526e05a62665c665862725c6a5a62725c7608b1b611cde8901527f6334322e362d34322e362c3133362e392d34332e332c3138312e342c342e3963611ced8901527f342e362c352c392e322c392e392c31332e392c31342e396831382e35632d352e611d0d8901527f372d362e322d31312e352d31322e342d31372e332d31382e35632d35332e362d611d2d8901527f35362e332d3134332d36322e372d3230322e312d31322e310000000000000000611d4d8901527f632d31312e322c392e362d32312e382c32302d33322e312c33302e3648343132611d65890152611d858801939093527f3c706174682020643d224d3937302e312c3130303063382e342d372e392c3137611d8b8801526e2d31352e352c32352e392d32322e3760881b611dab8801527f63302e382d302e372c312e362d312e332c322e352d312e39762d31352e35632d611dba8801527f372e312c342e332d31342c392e312d32302e342c31342e34632d31302e322c38611dda8801527f2e342d32302e312c31372e312d33302e312c32352e38483937302e317a222f3e611dfa8801527f3c706174682020643d224d302c3935332e3263352e312c312e372c31302e322c611e1a8801526919971b16189a971a161b60b11b611e3a8801527f6331392e332c392c33352e362c32342e392c35312e362c34302e386831392e31611e448801527f632d352e362d352e382d31312e312d31312e362d31362e362d31372e34433438611e648801527f2e362c3936302e332c32342e372c3934362e352c302c3933392e39563935332e611e84880152611ea487019290925275078e0c2e8d04040c87a449a626a645c72586c666e5c760531b611ea98701527f632d32392e352d32362e392d35372e322d35352e392d38352d38342e37632d32611ebf8701527f302e352d32312e332d34332e322d33342e382d36382d34312e327631302e3263611edf8701527f31392e382c362c33392e332c31372e352c35372c33366332312e372c32322e37611eff870152732c34332e382c34352e312c36352e322c36382e3160601b611f1f8701527f6336322e372c36372e312c3133382e312c36392e372c3139392c33312e346c2d611f338701527f362e392d382e38433236372e372c3637382e342c3230322e382c3638332e322c611f538701526e189a99171c961b199b971c3d11179f60891b611f73870152751e3830ba341010321e91269c9b9b9719161b1b18171b60511b611f828701527f632d32362e362c32342e332d35312c35312d37352e352c37372e34632d35372e611f988701527f332c36312e372d3133322e352c36322e382d3139322e382c31312e31632d3137611fb88701527f2e372d31352e322d33342e312d33322d34392e392d34392e346c2d382e342c31611fd88701526218171960e91b611ff88701527f6331332e382c31342e392c32372e372c32392e372c34322e362c34332e354337611ffb8701527f34392c3830352c3834302e362c3832302c3930342e372c3735322e366331372e61201b8701527f372d31382e352c33342e392d33372e352c35322e312d35362e346331332d313461203b8701527f2e342c32372d32362e362c34312e362d33362e35762d31352e3500000000000061205b8701527f433939312e312c3634382e392c3938342c3635342e332c3937372e322c363630612075870152612095860191909152753c706174682020643d224d3334332e332c3733382e3560501b61209b8601527f632d34342e382c34372e362d3133312e332c36382e392d3139322e372c31302e6120b18601527f34632d32352e322d32342e312d34392e342d34392e332d37332e372d37342e326120d18601527f4335342e382c3635322c33302e382c3633302e342c302c3632332e387631332e6120f18601527f376331382e322c352c33352e352c31342e362c35302e352c32392e38000000006121118601527f4337372e382c3639352c3130352c3732332c3133322e362c3735302e3763373061212d8601527f2c37302e312c3136312e362c35342c3231382e322d322e3263372e382d372e3761214d8601527f2c31352e342d31352e372c32322e392d32332e376c2d382e312d31302e34000061216d8601527f433335382e322c3732322e352c3335302e382c3733302e352c3334332e332c3761218b8601526121ab85015275078e0c2e8d04040c87a449a726a6c5c68586a6c6a5c760531b6121b38501527f632d32322e372c32342e392d34352e382c34392e372d37302e332c37322e39636121c98501527f2d33382e352c33362e352d39362e332c34322e372d3134342e372c31392e35636121e98501527f2d31312e362d352e362d32322d31322e342d33312e362d32302e316c2d362e39612209850152632c382e3360e01b6122298501527f6334342e332c33362e312c39352e352c34372e322c3135312e332c32362e376361222d8501527f33312e372d31312e362c35322e332d33372e392c37352e312d36316332312e3661224d8501527f2d32312e392c34312e322d34362e382c36352e392d36342e3563312e312d302e61226d8501527f382c322e322d312e352c332e332d322e33762d31342e3400000000000000000061228d8501527f433938332e352c3533392e392c3936392e352c3535312e352c3935362e342c356122a4850152671b1a971c3d11179f60c11b6122c4850152753c706174682020643d224d3637362e322c3637382e3760501b6122cc8501527f63382e322c382e332c31362e372c31362e332c32352e352c32332e396335302e6122e28501527f352c34332e392c3133352c35372e332c3139322e342c312e376332362e332d326123028501527f352e352c35312e322d35322e352c37362e362d37392e3163382e322d382e362c6123228501527f31372e362d31362e342c32372e382d32332e32762d31350000000000000000006123428501527f632d31332e382c382e312d32362e362c31382d33382e312c32392e35632d32346123598501527f2e322c32342e332d34362e342c35302e362d37302e362c37342e39632d35342e6123798501527f392c35352e322d3133382e332c34322e392d3138352e392d33632d362e362d36612399850152752e342d31332e322d31322e392d31392e372d31392e3560501b6123b98501527f6c2d312e322c312e344c3637362e322c3637382e377a222f3e000000000000006123cf850152753c706174682020643d224d3230372e312c3732322e3560501b6123e88501527f632d32312e352d352e352d34322e342d31392e332d35392e352d3334632d32386123fe8501527f2e312d32342e332d35332e382d35312e352d37382e382d37392e314334382e3861241e8501527f2c3538372e332c32352c3537332e392c302c3536372e367631322e376332322e61243e8501527f312c362e362c34312e392c31392e362c36302e322c33382e330000000000000061245e8501527f6332382e352c32392e312c35362e322c35392e332c38362e362c38362e3363366124778501527f322e352c35352e352c3134372e392c34302e312c3230302e362d31302e3763306124978501527f2e352d302e352c312d312c312e352d312e346c2d372e362d392e3700000000006124b78501527f433330332e382c3731392e372c3235382e352c3733352e382c3230372e312c376124d2850152671919171abd11179f60c11b6124f2850152753c706174682020643d224d3834332e382c3730352e3360501b6124fa8501527f6333362e332d31302e322c36302e322d33372e392c38352e362d36332e3963326125108501527f322e322d32322e382c34332e362d34382e332c36392e312d36362e34762d31366125308501527f2e34632d32372e312c31362e332d34382e312c34302d36392e372c3633632d326125508501527f302e332c32312e352d34302e352c34342e332d36342e382c36302e35000000006125708501527f632d34382e382c33322e352d3131382e382c31392e352d3136352e382d32372e61258c8501527f34632d302e342d302e342d302e382d302e382d312e312d312e326c2d382c392e6125ac8501527f376c2d302e342c302e35433733322e312c3730332e392c3738332c3732322e336125cc8501526f161c1a19971c161b981a9719bd11179f60811b6125ec850152730f1c185d1a0808190f48934c4d8d4b8d8b0d8dcd60621b6125fc8501527f632d32382d32322e352d35312e372d35302e312d37382e362d3734632d32322d6126108501527f31392e362d34332e352d34322d36392e342d35342e35632d352e372d322e382d6126308501527f31312e362d352d31372e372d362e38563535316331392e332c352e382c33362e6126508501526f392c31362e372c35322e392c33322e3360801b6126708501527f6332362e372c32362c35312e392c35332e352c37382e322c38306336392e342c6126808501527f37302c3135312e312c35342e362c3230342e382c31336c2d372e392d31302e316126a08501527f433238342c3730312e312c3231372e352c3731352e372c3136352e362c3637346126c08501526126e0840152751e3830ba341010321e91269b191b171c961c9919971960511b6126e48401527f632d32392e312d33322d37332d34362e372d3131352e362d34342e346c2d392e6126fa8401527f322c31312e326c2d372e332d392e34632d32392e352c342e372d35372e352c3161271a8401527f372e382d37382e332c33392e32632d32352e382c32362e352d35302e392c353361273a84015270171b969b9b171b161c181719b4189b971960791b61275a8401527f6332312e312d32302e392c33392e382d34342e342c36312d36352e326336332d61276b8401527f36322e312c3134382e342d35392e322c3230382e332c352e376331382e342c3161278b8401527f392e392c33362e322c34302e362c35352e362c35392e356831372e39632d302e6127ab840152740665a605c665a605c6c5a605c6a5a605c705a605c7605b1b6127cb840152917f433637342e332c3937342e352c3635302e342c3934392c3632362e392c3932336127e08201526517193d11179f60d11b612800820152631e17b39f60e11b6128068201526127ea815261282081019167ffffffffffffffff8311828410176134a8578260405283835281519081612840840152805b82811061349357508282016128600152601f01601f19168101036040019150f35b80869185016128608382015191015201613472565b634e487b7160e01b81526041600452602490fd5b80fdfea2646970667358221220ea24f30c83556544f8b848f9b1f860b280a93739d121f48565073626956b768564736f6c63430008140033608080604052346100155760f5908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c908163d78162e9146083575063dbcdc2cc14603457600080fd5b3460805760203660031901126080576004356001600160a01b03811690819003607c573382528160205260408220906bffffffffffffffffffffffff60a01b82541617905580f35b5080fd5b80fd5b905034607c576020366003190112607c576001600160a01b036004358181169081900360bb5783604091602095528085522054168152f35b8380fdfea26469706673582212200b1045ee49ca2e83d6fefb7664a4837d4bba92fe2bb7d5927d2fd6de225f359964736f6c6343000814003360803462000339576040906001600160401b039080830182811182821017620003235783526009815260209168333ab7103a37b5b2b760b91b838301528351928484018481108382111762000323578552600493848152636675746160e01b828201528351908382116200030e576003928354926001968785811c9516801562000303575b83861014620002ee578190601f9586811162000298575b508390868311600114620002315760009262000225575b505060001982871b1c191690871b1784555b8151948511620002105786548681811c9116801562000205575b82821014620001f057838111620001a5575b50809285116001146200013757509383949184926000956200012b575b50501b92600019911b1c19161790555b5161097f90816200033f8239f35b0151935038806200010d565b92919084601f1981168860005285600020956000905b898383106200018a57505050106200016f575b50505050811b0190556200011d565b01519060f884600019921b161c191690553880808062000160565b8587015189559097019694850194889350908101906200014d565b87600052816000208480880160051c820192848910620001e6575b0160051c019087905b828110620001d9575050620000f0565b60008155018790620001c9565b92508192620001c0565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000de565b604187634e487b7160e01b6000525260246000fd5b015190503880620000b2565b90899350601f1983169188600052856000209260005b8782821062000281575050841162000268575b505050811b018455620000c4565b015160001983891b60f8161c191690553880806200025a565b8385015186558d9790950194938401930162000247565b90915086600052836000208680850160051c820192868610620002e4575b918b91869594930160051c01915b828110620002d45750506200009b565b600081558594508b9101620002c4565b92508192620002b6565b602289634e487b7160e01b6000525260246000fd5b94607f169462000084565b604186634e487b7160e01b6000525260246000fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461056457508163095ea7b31461053a57816318160ddd1461051b57816323b872dd14610451578163313ce5671461043557816339509351146103e557816340c10f191461032257816370a08231146102eb57816395d89b41146101cc578163a457c2d71461012457508063a9059cbb146100f45763dd62ed3e146100a957600080fd5b346100f057806003193601126100f057806020926100c5610685565b6100cd6106a0565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100f057806003193601126100f05760209061011d610113610685565b60243590336106d9565b5160018152f35b905082346101c957826003193601126101c95761013f610685565b918360243592338152600160205281812060018060a01b03861682526020522054908282106101785760208561011d8585038733610847565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100f057816003193601126100f057805190828454600181811c908083169283156102e1575b60209384841081146102ce578388529081156102b2575060011461025d575b505050829003601f01601f191682019267ffffffffffffffff84118385101761024a575082918261024692528261063c565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061029e5750505050830101858080610214565b805488860183015293019284908201610288565b60ff1916878501525050151560051b8401019050858080610214565b634e487b7160e01b895260228a52602489fd5b91607f16916101f5565b5050346100f05760203660031901126100f05760209181906001600160a01b03610313610685565b16815280845220549051908152f35b919050346103e157806003193601126103e15761033d610685565b6001600160a01b0316916024359190831561039f57506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9261038587956002546106b6565b60025585855284835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b8280fd5b5050346100f057806003193601126100f05761011d60209261042e610408610685565b338352600186528483206001600160a01b038216845286529184902054602435906106b6565b9033610847565b5050346100f057816003193601126100f0576020905160128152f35b839150346100f05760603660031901126100f05761046d610685565b6104756106a0565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036104af575b60208661011d8787876106d9565b8482106104d857509183916104cd6020969561011d95033383610847565b9193948193506104a1565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100f057816003193601126100f0576020906002549051908152f35b5050346100f057806003193601126100f05760209061011d61055a610685565b6024359033610847565b849084346103e157826003193601126103e15782600354600181811c90808316928315610632575b60209384841081146102ce578388529081156102b257506001146105dc57505050829003601f01601f191682019267ffffffffffffffff84118385101761024a575082918261024692528261063c565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83851061061e5750505050830101858080610214565b805488860183015293019284908201610608565b91607f169161058c565b6020808252825181830181905290939260005b82811061067157505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161064f565b600435906001600160a01b038216820361069b57565b600080fd5b602435906001600160a01b038216820361069b57565b919082018092116106c357565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b039081169182156107f457169182156107a35760008281528060205260408120549180831061074f57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b039081169182156108f857169182156108a85760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220fdc656aa7725f77639aa7644d83b06c503c142dfc2d9f668283af069b84a9b7e64736f6c6343000814003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a26469706673582212208b1c06e9d9a91d4b784f2282181e7be44d3d6dfa620b9fb30cb7613d97d36bb764736f6c63430008140033",
    "sourceMap": "1012:26024:60:-:0;;;;;;1594:4:25;1012:26024:60;;;;;;;;;2486:42;1645;1012:26024;;;;;;;;;1637:51;1012:26024;;;1637:51;1012:26024;1837:42;1012:26024;1837:42;1012:26024;;;1837:42;1012:26024;1911:42;1012:26024;1911:42;1012:26024;;;1911:42;1012:26024;2075:42;1012:26024;2075:42;1012:26024;;;2075:42;1012:26024;;2159:25;1012:26024;;;2159:25;1012:26024;2218:42;1012:26024;2218:42;1012:26024;;;2218:42;1012:26024;2305:42;1012:26024;2297:51;1012:26024;;;2297:51;1012:26024;2391:42;1012:26024;2383:51;1012:26024;;;2383:51;1012:26024;2478:51;1012:26024;;;2478:51;1012:26024;2551:101;1012:26024;;;;;:::i;:::-;;;;;;-1:-1:-1;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;1012:26024:60;;;;;;;;;;;;;2782:197;1012:26024;;:::i;:::-;;;;;;;-1:-1:-1;1012:26024:60;;;;;;;2782:197;1012:26024;2782:197;1012:26024;;;;;;;;;;;;3013:66;;1012:26024;;;;;;;;;;;2782:197;1012:26024;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1012:26024:60:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2266:82;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;1809:70;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25158:5;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;25153:11;;1012:26024;;25153:11;:::i;:::-;1012:26024;25172:11;1012:26024;;25172:50;;;;;1012:26024;25205:14;1012:26024;;;;;;;;;;;25172:50;;;;;;;;;;;;;1012:26024;;;;25272:8;1012:26024;;;25295:9;1012:26024;25295:9;1012:26024;;25295:9;:::i;:::-;25172:11;1012:26024;;25313:42;;;;;;1012:26024;;;;;;;;;;;;;;;25313:42;;1012:26024;25313:42;;1012:26024;25313:42;;;;;;;;1012:26024;;25313:42;;;;:::i;:::-;1012:26024;;25313:42;1012:26024;25313:42;1012:26024;;;;;;;;;25313:42;1012:26024;;;25172:50;;;;:::i;:::-;1012:26024;;25172:50;;;;1012:26024;;;25172:50;1012:26024;;;;;;;;;;;;;;;;;;;;;;1436:30;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;1604:84;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;1504:20;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;1472:26;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;2354:80;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;1081:38;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;1125:52;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;1012:26024:60;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1012:26024:60;;;9693:5;;;;;:38;;;1012:26024;9690:1206;;;-1:-1:-1;;9752:5:60;1012:26024;-1:-1:-1;;;;;1012:26024:60;;9742:16;;1012:26024;;9742:16;:::i;:::-;1012:26024;;9768:11;1012:26024;;9768:37;;;;;1012:26024;;;;;;;;;;;;;9768:37;;;;;;;;;;9690:1206;1012:26024;;;9825:14;1012:26024;;;;9752:5;1012:26024;;;;;;;;;;9825:44;;1012:26024;9825:44;;1012:26024;;;;;1671:64:25;1012:26024:60;;;9825:44;;;;;;;;;;;;;;9690:1206;1012:26024;9879:36;1012:26024;;:::i;:::-;9890:7;;9879:36;:::i;:::-;1012:26024;9768:11;1012:26024;;;;;;;;;;;;9939:28;;;;;1012:26024;9939:28;;1671:64:25;9939:28:60;;;;;;;;;;9690:1206;9977:33;1012:26024;;;;:::i;:::-;9977:33;;;:::i;:::-;1012:26024;-1:-1:-1;;;;;;;;;;;10058:44:60;;;;;1012:26024;;-1:-1:-1;;;10058:44:60;;1012:26024;;10058:44;;1012:26024;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;;;;;;;;;;10058:44;;;;;;;;9690:1206;1012:26024;;;10112:12;1012:26024;;;;10112:39;;;;;;1012:26024;;;;;;;;;;;10112:39;;;;;1012:26024;10112:39;;1671:64:25;10112:39:60;;;;;;;;9690:1206;1012:26024;;9768:11;1012:26024;;10231:38;;;;;;1012:26024;;;;;;;10231:38;;;;;;;;1012:26024;10231:38;;1671:64:25;10231:38:60;;;;;;;;;;;9690:1206;1012:26024;;;;9768:11;1012:26024;;;;;10294:28;;;;;;;1012:26024;10294:28;;1671:64:25;10294:28:60;;;;;;;;;;;9690:1206;10343:17;;10384:7;10343:17;;;;:::i;:::-;10384:7;:::i;:::-;1012:26024;;10294:28;;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;;;10343:17;10294:28;;1012:26024;;;;10294:28;;;;;;1012:26024;;;;;;;;;10231:38;;;;;;;:::i;:::-;1012:26024;;10231:38;;;;;;1012:26024;;;;10231:38;1012:26024;;;;;;;;;;;10231:38;1012:26024;;;10112:39;;;;:::i;:::-;1012:26024;;10112:39;;;;1012:26024;;;;10058:44;;;;:::i;:::-;1012:26024;;10058:44;;;;9939:28;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;9977:33;1012:26024;;9939:28;;;;;;;;1012:26024;;;;;;;;;9825:44;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;9825:44;;;;;;;;;1012:26024;;;;;;;;;9768:37;;;;:::i;:::-;1012:26024;;9768:37;;;;1012:26024;;;;9690:1206;10407:489;;;;10410:6;;;1012:26024;;;-1:-1:-1;;;;;;;;;;;10428:37:60;;;;;1012:26024;;;;;;;;10428:37;;;;;;1012:26024;10428:37;;;:::i;:::-;;;;;;;;;;;;;;10407:489;-1:-1:-1;;10485:5:60;1012:26024;-1:-1:-1;;;;;1012:26024:60;10475:16;;1012:26024;;10475:16;:::i;:::-;10501:11;1012:26024;;10501:37;;;;;1012:26024;;;;;;;;;;;;10501:37;;;;;;;;;;10407:489;;1012:26024;;10428:37;;;;:::i;:::-;1012:26024;;10428:37;;;;10407:489;10652:5;1012:26024;-1:-1:-1;;;;;1012:26024:60;;10642:16;;1012:26024;;10642:16;:::i;:::-;1012:26024;10668:11;1012:26024;;10668:37;;;;;1012:26024;;;;;;;;;;;;10668:37;;;;;;;;;;;;;10407:489;1012:26024;;;10725:14;1012:26024;;;;;10652:5;1012:26024;;;;;;;;;;;;10725:44;;1012:26024;10725:44;;1012:26024;;;;;1671:64:25;10725:44:60;;;;;;;;;;;10407:489;1012:26024;-1:-1:-1;;;;;;;;;;;10779:60:60;;;;;1012:26024;;;;;;;;10779:60;;;;;;1012:26024;10779:60;;;:::i;:::-;;;;;;;;;;;;;;10407:489;1012:26024;;10668:11;1012:26024;;10849:38;;;;;1012:26024;;;;;;;;;;;;;;10849:38;;1012:26024;10849:38;;1671:64:25;1012:26024:60;10849:38;;;;;;;;;10407:489;;1012:26024;;10779:60;;;;:::i;:::-;1012:26024;;10779:60;;;;;1012:26024;;;;;;;;;10779:60;1012:26024;;;10725:44;;;;;1012:26024;10725:44;;;;;;;;;1012:26024;10725:44;;;:::i;:::-;;;1012:26024;;;;;;;10725:44;;;;;;;-1:-1:-1;10725:44:60;;10668:37;;;;:::i;:::-;1012:26024;;10668:37;;;;1012:26024;;;;;9693:38;1012:26024;9723:8;9702:17;1012:26024;;;9702:17;;:::i;:::-;:29;;9693:38;;1012:26024;;;;;;;;;;;;;26541:8;1012:26024;;26568:11;1012:26024;;;-1:-1:-1;;;26541:40:60;;;-1:-1:-1;;;;;1012:26024:60;;;;26541:40;;1012:26024;;;26541:40;;:8;;1012:26024;;;26541:40;;1012:26024;;;;;;;;26541:40;;;;;;;;;;1012:26024;26532:53;;;;:::i;:::-;1012:26024;;;;;;26621:9;1012:26024;;;;;26602:29;;;;;;;1012:26024;26602:29;;1012:26024;26602:29;;;;;;;;;;1012:26024;26593:42;;;;:::i;:::-;1012:26024;;;;;;26568:11;1012:26024;;26643:45;;;;;1012:26024;;;;;;26643:45;;1012:26024;26643:45;;1012:26024;26679:8;;1012:26024;26679:8;;;1012:26024;;;;;1671:64:25;26643:45:60;;;;;;;;;;;1012:26024;;;;;;;;;26568:11;1012:26024;;;;;26705:40;;;;;;;1012:26024;26705:40;;1012:26024;26705:40;;;;;;;;;;;1012:26024;26696:60;;;;:::i;:::-;1012:26024;;;;;;26621:9;1012:26024;;;;;26773:29;;;;;;;1012:26024;26773:29;;1012:26024;26773:29;;;;;;;;;;;1012:26024;26764:42;;;;:::i;:::-;1012:26024;26621:9;1012:26024;;-1:-1:-1;;;;;;;;;;;26814:19:60;;;;;;1012:26024;;;;;;;;;;;;;;;26814:19;;1012:26024;26814:19;;1012:26024;26814:19;;;;;;;;;;;1012:26024;;;;26568:11;1012:26024;;;;;;;;26621:9;1012:26024;;26841:65;;;;;;1012:26024;;;;;;;;;;;;;;;26841:65;;1012:26024;26841:65;;1012:26024;;;;;;;;1671:64:25;26841:65:60;;;;;;;;1012:26024;;;;;;;;;26568:11;1012:26024;;;;;26923:40;;;;;;;1012:26024;26923:40;;1012:26024;26923:40;;;;;;;;;;;;;;;1012:26024;26914:53;;;;:::i;:::-;1012:26024;;;26621:9;1012:26024;;;;;26984:29;;;;;;;1012:26024;26984:29;;1012:26024;26984:29;;;;;;;;;;;1012:26024;26975:49;;;;:::i;26984:29::-;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;26975:49;1012:26024;;26984:29;;;;;;;;26923:40;;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;;;;;26914:53;26923:40;;;;;;;26841:65;;;;:::i;:::-;1012:26024;;26841:65;;;;26814:19;;;;:::i;:::-;1012:26024;;26814:19;;;;;1012:26024;;;26773:29;;;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;26764:42;1012:26024;;;26773:29;;;;;;;;26705:40;;;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;26696:60;1012:26024;;;26705:40;;;;;;;;26643:45;;;;:::i;:::-;1012:26024;;26643:45;;;;;1012:26024;;;26602:29;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;26593:42;1012:26024;;26602:29;;;;;;;26541:40;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;26532:53;1012:26024;;26541:40;;;;;;;1012:26024;;;;;;;;;;;;;25753:9;1012:26024;-1:-1:-1;;;;;;;;;;;1012:26024:60;-1:-1:-1;;;;;1012:26024:60;;;;25744:19;;;;;1012:26024;;;;;25744:19;;;;1012:26024;25744:19;;1012:26024;;;25744:19;;;;;;;;;;;;;;;1012:26024;;;;25771:11;1012:26024;;;;;1671:64:25;;;;1012:26024:60;;;25798:97;;;;;;;;;;1012:26024;25798:97;;;;;;:::i;:::-;25771:125;;;;;1012:26024;;;;;;;;;;;;;;;;;25771:125;;;;1012:26024;25771:125;;1012:26024;;;;;;:::i;:::-;25771:125;;;;;;;;;;1012:26024;;;;;25997:20;;;;;;;;-1:-1:-1;;;;;25997:20:60;;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;26025:12;1012:26024;;;;;;26059:59;;;1012:26024;-1:-1:-1;;;1012:26024:60;;-1:-1:-1;;;1012:26024:60;;;;26059:59;;;;;;:::i;:::-;1671:64:25;26049:70:60;;1012:26024;;26025:120;;;;;;1012:26024;;-1:-1:-1;;;26025:120:60;;1012:26024;26025:120;;1671:64:25;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;26025:120;;;;;;;;;;;1012:26024;;;;25753:9;1012:26024;;26154:19;;;;;1012:26024;;;;;;26154:19;;;;;;;1012:26024;26154:19;;1012:26024;26154:19;;;;;;;;;;;1012:26024;;;;25771:11;1012:26024;;;;;26208:97;;;;;;;;;1012:26024;26208:97;;;;;;:::i;:::-;26181:125;;;;;1012:26024;;;;;;;26181:125;;;;;;;;;1012:26024;26181:125;;1012:26024;;;;;;:::i;:::-;26181:125;;;;;;;;;;1012:26024;;;;;25771:11;1012:26024;;;;;;;;;;;;26340:49;;;1012:26024;26340:49;;1012:26024;26340:49;;;;;;;;;;;;;1012:26024;;;;;1671:64:25;;;;:::i;:::-;1012:26024:60;1671:64:25;;1012:26024:60;;;-1:-1:-1;;;1012:26024:60;;;;;;3979:6:25;3975:101;;1012:26024:60;;;3975:101:25;-1:-1:-1;;;;;;;;;;;4006:31:25;4063:1;1012:26024:60;;;4006:31:25;;;;;:::i;:::-;;;;4063:1;:::i;:::-;3975:101;;;1012:26024:60;;;26340:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;26181:125;;;;:::i;:::-;1012:26024;;26181:125;;;;26154:19;;;;:::i;:::-;1012:26024;;26154:19;;;;;1012:26024;;;;;;;;;26025:120;;;;:::i;:::-;1012:26024;;26025:120;;;;25997:20;-1:-1:-1;;;1671:64:25;;;1012:26024:60;1671:64:25;;;;25771:125:60;;;;:::i;:::-;1012:26024;;25771:125;;;;25744:19;;;;:::i;:::-;1012:26024;;25744:19;;;;1012:26024;;;;;;;;;;;;;1221:44;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;7445:11;1012:26024;;;-1:-1:-1;;;7445:19:60;;1012:26024;-1:-1:-1;;;;;1012:26024:60;7445:19;;1012:26024;;;;;;;;7445:19;;;;;;;7499:18;7445:19;;;;;1012:26024;;7507:9;1012:26024;;7499:18;;:::i;7445:19::-;;;;;;;;;;;;;;;:::i;:::-;;;;;1012:26024;;;;;;;;;;;;;1051:24;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;18333:9;1012:26024;-1:-1:-1;;;;;1012:26024:60;18333:9;;1012:26024;;18333:9;:::i;:::-;1012:26024;18351:11;1012:26024;;18416:17;1012:26024;18351:83;;;;;;1012:26024;;;;;;;;;;;;;;;18351:83;;1012:26024;18351:83;;;:::i;:::-;;;;;;;;;;;;;;1012:26024;;;-1:-1:-1;;;;;;;;;;;18442:34:60;;;;;;1012:26024;;;;;18442:34;;18381:22;;1012:26024;18381:22;;;18442:34;;1012:26024;18442:34;;1012:26024;;;;;;-1:-1:-1;;;1012:26024:60;;;;18442:34;;;;;;;;;;;1012:26024;;;18351:11;1012:26024;;;18416:17;1012:26024;18484:82;;;;;1012:26024;;-1:-1:-1;;;18484:82:60;;1012:26024;;18484:82;;1012:26024;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;;;;;;;;-1:-1:-1;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18405:9;1012:26024;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18381:22;1012:26024;18381:22;;;1012:26024;;;;;;;;;;;;;;;;;1671:64:25;18484:82:60;;;;;;;;;;1012:26024;;;;;;;;18405:9;1012:26024;;;;;;;;;;;;-1:-1:-1;1012:26024:60;;;;;;;;-1:-1:-1;1012:26024:60;;-1:-1:-1;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1012:26024:60;;;;;-1:-1:-1;;1012:26024:60;;;;;;;;-1:-1:-1;1012:26024:60;;;;;;;-1:-1:-1;;;1012:26024:60;;18416:17;1012:26024;;;1671:64:25;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18442:34;;;;:::i;:::-;1012:26024;;18442:34;;;;18351:83;;;;:::i;:::-;1012:26024;;18351:83;;;;1012:26024;;;;;;;-1:-1:-1;;1012:26024:60;;;;;;:::i;:::-;;;;;;;;;;;;;;;10968:6;;;;;:15;;;1012:26024;10968:38;;;1012:26024;10965:1142;;;11027:5;1012:26024;-1:-1:-1;;;;;1012:26024:60;11017:16;;1012:26024;;11017:16;:::i;:::-;1012:26024;11043:11;1012:26024;;11043:37;;;;;1012:26024;;;;;;;;;;;;;11043:37;;;;;;;;;;;;;10965:1142;1012:26024;;;11100:14;1012:26024;;;;11027:5;1012:26024;;;;;;;;;;;11100:44;;1012:26024;11100:44;;1012:26024;;;;;1671:64:25;1012:26024:60;;;11100:44;;;;;;;;;;;;;;10965:1142;1012:26024;11154:43;1012:26024;;1671:64:25;;;:::i;:::-;1012:26024:60;1671:64:25;;-1:-1:-1;;;1012:26024:60;;;;11165:7;;11154:43;:::i;:::-;1012:26024;11043:11;1012:26024;;;;;;;;;;;;11221:28;;;;;1012:26024;11221:28;;1671:64:25;11221:28:60;;;;;;;;;;;10965:1142;-1:-1:-1;1012:26024:60;;11259:49;;1671:64:25;1012:26024:60;1671:64:25;:::i;:::-;1012:26024:60;1671:64:25;;1012:26024:60;;;;;11259:49;;:::i;:::-;1012:26024;11043:11;1012:26024;;11318:27;;;;;1012:26024;;-1:-1:-1;;;11318:27:60;;1012:26024;11318:27;;1671:64:25;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;11318:27;;;;;;;;;;;10965:1142;1012:26024;;11043:11;1012:26024;;;;;11370:28;;;;;;;1012:26024;11370:28;;1671:64:25;11370:28:60;;;;;;;;;;;10965:1142;11419:17;11446:41;11419:17;;;;:::i;:::-;-1:-1:-1;;;1012:26024:60;;1671:64:25;;;;:::i;:::-;1012:26024:60;1671:64:25;;1012:26024:60;;;11446:41;:::i;11370:28::-;;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;;11446:41;11370:28;;;;;;;11318:27;;;;;;;:::i;:::-;1012:26024;;11318:27;;;;;;11221:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;11259:49;1012:26024;;;11221:28;;;;;;;;11100:44;;-1:-1:-1;11100:44:60;-1:-1:-1;11100:44:60;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;;;11100:44;;;;;;;;;11043:37;;;;:::i;:::-;1012:26024;;11043:37;;;;10965:1142;11505:6;-1:-1:-1;11505:6:60;;;;1012:26024;;-1:-1:-1;;;;;;;;;;;11523:37:60;;;;;1012:26024;;;;;;;;11523:37;;;;;;1012:26024;11523:37;;;:::i;11502:605::-;11661:8;11651:18;;11661:8;;;1012:26024;;-1:-1:-1;;;;;;;;;;;11681:60:60;;;;;1012:26024;;;;;;;;11681:60;;;;;;1012:26024;11681:60;;;:::i;11648:459::-;1012:26024;;;;;;;;11839:16;1012:26024;11849:5;1012:26024;;11839:16;:::i;:::-;1012:26024;11865:11;1012:26024;;11865:37;;;;;1012:26024;;;;;;;;;;;;11865:37;;;;;;;;;;;;;11648:459;1012:26024;;;11922:14;1012:26024;;;;;11849:5;1012:26024;;;;;;;;;;;;11922:44;;1012:26024;11922:44;;1012:26024;;;;;1671:64:25;11922:44:60;;;;;;;;;;;11648:459;1012:26024;11976:36;1012:26024;;:::i;:::-;11987:7;;11976:36;:::i;:::-;-1:-1:-1;;;;;;;;;;;12022:39:60;;;;;;1012:26024;;;;;;;;;;;;;;;12022:39;;1012:26024;;12022:39;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;12022:39;;;;;;;;;;;11648:459;1012:26024;;11865:11;1012:26024;;12071:27;;;;;;1012:26024;;-1:-1:-1;;;12071:27:60;;1012:26024;12071:27;;1671:64:25;;;;1012:26024:60;;;;;;;;;;;;;;;;;12071:27;;;;;;;;11648:459;;1012:26024;;12022:39;;;;:::i;:::-;1012:26024;;12022:39;;;;11922:44;;;;;1012:26024;11922:44;;;;;;;;;1012:26024;11922:44;;;:::i;:::-;;;1012:26024;;;;;;;11922:44;;;;;;;-1:-1:-1;11922:44:60;;11865:37;;;;:::i;:::-;1012:26024;;11865:37;;;;10968:38;10987:19;10998:8;10987:19;;;10968:38;;:15;10978:5;;;;10968:15;;1012:26024;;;;;;;;;;;;;12333:5;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;12328:11;;1012:26024;;12328:11;:::i;:::-;-1:-1:-1;;;;;;;;;;;12347:60:60;;;;;1012:26024;;;;;;;;12347:60;;;;;;1012:26024;12347:60;;;:::i;:::-;;;;;;;;;;;;;;1012:26024;;;12415:11;1012:26024;;12415:56;;;;;1012:26024;12448:20;1012:26024;;;;;;;;;;;12415:56;;;;;;;;;;1012:26024;;12347:60;;;;:::i;:::-;1012:26024;;12347:60;;;;1012:26024;;;;;;;;;;;;;17937:9;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;17937:9;;1012:26024;;17937:9;:::i;:::-;-1:-1:-1;;;;;;;;;;;17955:49:60;;;;;1012:26024;;-1:-1:-1;;;17955:49:60;;;1012:26024;;17955:49;;1012:26024;;;;;;;;;;;;17955:49;1012:26024;;;17955:49;;;;;;;;;;;;;1012:26024;;;;18012:11;1012:26024;;18090:17;1012:26024;18012:96;;;;;;1012:26024;;-1:-1:-1;;;18012:96:60;;1012:26024;;;;;;;;;;;18012:96;;1012:26024;18012:96;;;:::i;:::-;;;;;;;;;;;;;;1012:26024;18116:49;;;;;;;1012:26024;;18116:49;;;1012:26024;;18116:49;;1012:26024;;;;;;;;;;;;;;;;;;;;;;18116:49;;;;;;;;;;;1012:26024;;;18012:11;1012:26024;;18090:17;1012:26024;18173:92;;;;;;1012:26024;;-1:-1:-1;;;18173:92:60;;1012:26024;;;;;;;;;;;18173:92;;1012:26024;18173:92;;;:::i;:::-;;;;;;;;;;;1012:26024;;18116:49;;;;:::i;:::-;1012:26024;;18116:49;;;;18012:96;;;;:::i;:::-;1012:26024;;18012:96;;;;17955:49;;;;:::i;:::-;1012:26024;;17955:49;;;;1012:26024;;;;;;;;;;;;;1530:18;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;1554:24;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;1885:68;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;2191:69;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;1357:31;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;-1:-1:-1;;1012:26024:60;;;;;;:::i;:::-;;;:::i;:::-;20088:10;1012:26024;;;20136:20;;1012:26024;;;;;;;;;;;;;;;;;;;20194:20;1012:26024;;20194:20;1012:26024;;;;20240:6;;;;;;;:17;;;1012:26024;20237:3624;;;-1:-1:-1;;20273:5:60;1012:26024;20268:11;;-1:-1:-1;;;;;1012:26024:60;20268:11;:::i;:::-;20289;1012:26024;-1:-1:-1;;;;;1012:26024:60;20289:48;;;;;1012:26024;;;;;;;;;20289:48;;;;1012:26024;;;20289:48;;;;;;;;;;;;20237:3624;-1:-1:-1;;20352:3:60;1012:26024;20347:9;;-1:-1:-1;;;;;1012:26024:60;20347:9;:::i;:::-;20289:11;1012:26024;-1:-1:-1;;;;;1012:26024:60;20366:46;;;;;1012:26024;;;;;20366:46;;;;;;;;;;;;;;;;;;20237:3624;-1:-1:-1;20289:11:60;1012:26024;;;;;;;;;;-1:-1:-1;;;;;1012:26024:60;;20422:32;;;;20237:3624;20422:32;;;;-1:-1:-1;;;;;;;;;;;20464:47:60;;;;1012:26024;;-1:-1:-1;;;20464:47:60;;1012:26024;;20464:47;;1012:26024;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;20464:47:60;;;;;;;;20237:3624;-1:-1:-1;20289:11:60;1012:26024;-1:-1:-1;;;;;1012:26024:60;20521:20;;;;;1012:26024;;;;;;;;;;;;;20521:20;;1012:26024;;20521:20;;1671:64:25;20521:20:60;;;;;;;;20237:3624;-1:-1:-1;;20556:9:60;1012:26024;20556:9;;-1:-1:-1;;;;;1012:26024:60;20556:9;:::i;:::-;20289:11;1012:26024;20637:17;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;20576:79;;;;;1012:26024;;-1:-1:-1;;;20576:79:60;;1012:26024;;;;;;;;;;;20576:79;;1012:26024;20576:79;;;:::i;:::-;;;;;;;;;;;20237:3624;1012:26024;;;;;;;20289:11;1012:26024;;20685:28;;1012:26024;20750:1;1012:26024;;;;;;20750:1;1012:26024;;;;;;;20795:18;1012:26024;20754:3;1012:26024;;20795:18;;:::i;:::-;20273:5;1012:26024;20352:3;1012:26024;-1:-1:-1;;;;;1012:26024:60;;;20893:20;;1012:26024;;20843:22;;21025:33;;20194:20;;20941:35;;1012:26024;20941:35;;:::i;:::-;1012:26024;21025:33;;;:::i;:::-;21096:28;21068:57;21096:28;;1012:26024;;1671:64:25;;;:::i;:::-;1012:26024:60;1671:64:25;;-1:-1:-1;;;1012:26024:60;;;;21068:57;:::i;:::-;21135:38;1012:26024;;;1671:64:25;;;:::i;:::-;1012:26024:60;1671:64:25;;-1:-1:-1;;;1012:26024:60;;;;21135:38;:::i;:::-;1012:26024;;-1:-1:-1;;;21205:36:60;;1012:26024;21205:36;;1671:64:25;;;1012:26024:60;;;;;;21205:36;;;;;;;;;;;20237:3624;1012:26024;;;;;;;;;;;;;;21271:36;;1012:26024;;21271:36;;1671:64:25;21271:36:60;;;;;;;;;;;20237:3624;1012:26024;;21317:97;21424:96;1012:26024;;;1671:64:25;;;;:::i;:::-;1012:26024:60;1671:64:25;;1012:26024:60;;;;;-1:-1:-1;;;1012:26024:60;;;;21317:97;;:::i;:::-;1012:26024;;1671:64:25;;;;:::i;:::-;1012:26024:60;1671:64:25;;1012:26024:60;;;;;-1:-1:-1;;;1012:26024:60;;;;21424:96;;:::i;:::-;21574:12;1012:26024;;;21530:66;;-1:-1:-1;;;;;1012:26024:60;21566:29;;1671:64:25;1012:26024:60;1671:64:25;:::i;:::-;1012:26024:60;1671:64:25;;-1:-1:-1;;;1012:26024:60;;;;21530:66;:::i;:::-;1012:26024;21817:15;;21814:34;;20237:3624;1012:26024;21861:13;;21858:29;;20237:3624;21934:25;22045:78;21934:25;;;:::i;:::-;1012:26024;;;;;;20273:5;1012:26024;;22068:22;1012:26024;;1671:64:25;;;;:::i;:::-;20273:5:60;1671:64:25;;1012:26024:60;;;;;22045:78;:::i;:::-;20273:5;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;-1:-1:-1;;;;;;;;;;;22133:15:60;;;;1012:26024;;;;;;22133:15;;1012:26024;22133:15;;1012:26024;22133:15;;1012:26024;22133:15;;-1:-1:-1;;;;;;;;;;;22133:15:60;;;;;;;;20237:3624;1012:26024;;;;;;20289:11;1012:26024;;22158:65;22194:28;;1012:26024;;1671:64:25;;;:::i;:::-;1012:26024:60;1671:64:25;;-1:-1:-1;;;1012:26024:60;;;;22158:65;:::i;:::-;22233:20;;;;;1012:26024;;;;;;;;;;;;;22233:20;;;1012:26024;22233:20;;1671:64:25;22233:20:60;;;;;;;;20237:3624;1012:26024;;22616:72;1012:26024;22422:89;22554:21;1012:26024;;;;;;20273:5;1012:26024;;22278:22;1012:26024;;;:::i;:::-;22422:89;;:::i;:::-;22554:21;;:::i;:::-;20352:3;1012:26024;;;;-1:-1:-1;;;;;1012:26024:60;22637:20;1012:26024;;:::i;:::-;22616:72;;:::i;:::-;20352:3;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;-1:-1:-1;;;;;;;;;;;22698:13:60;;;;1012:26024;;;;;;22698:13;;1012:26024;22698:13;;1012:26024;22698:13;;1012:26024;22698:13;;-1:-1:-1;;;;;;;;;;;22698:13:60;;;;;;;;20237:3624;-1:-1:-1;20289:11:60;1012:26024;-1:-1:-1;;;;;1012:26024:60;20754:3;22724:28;;:35;20754:3;;22773:56;;;-1:-1:-1;;;;;;;;;;;22773:56:60;;;;1012:26024;;-1:-1:-1;;;22773:56:60;;1012:26024;;;;;22773:56;1012:26024;22773:56;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;;22773:56:60;;;;;;;;22721:455;-1:-1:-1;20289:11:60;1012:26024;-1:-1:-1;;;;;1012:26024:60;22841:20;;;;;1012:26024;;;;;;;;;;;;;22841:20;;1012:26024;;22841:20;;1671:64:25;22841:20:60;;;;;;;;22721:455;;;;1012:26024;;;;;21574:12;1012:26024;;23209:29;1012:26024;;1671:64:25;;;:::i;:::-;20594:6:60;1671:64:25;;1012:26024:60;;;;;23240:2;11368:19:28;1012:26024:60;20754:3;1012:26024;;11368:19:28;:::i;:::-;11402:16;11398:132;;22721:455:60;20237:3624;;;1012:26024;;11398:132:28;11439:33;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;11439:33:28;;;;;:::i;:::-;;;;10819:19;1012:26024:60;20754:3;1012:26024;;10819:19:28;:::i;:::-;23240:2:60;10853:16:28;;10849:340;11398:132;10849:340;1012:26024:60;;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;;;;20637:17;1012:26024;;;;;;;;;-1:-1:-1;;;1671:64:25;1012:26024:60;;;10890:53:28;1012:26024:60;;;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;-1:-1:-1;;;;;;;;;;;10962:32:28;;;;;;;;1012:26024:60;;;;;;;20754:3;1012:26024;;;;;:::i;:::-;;;;;;1671:64:25;11013:32:28;;;1012:26024:60;;;;;;;23240:2;1012:26024;;;;-1:-1:-1;;;1671:64:25;1012:26024:60;;;23240:2;1012:26024;;;1671:64:25;11064:39:28;1012:26024:60;;;;;;23240:2;1012:26024;;;;-1:-1:-1;;;1671:64:25;1012:26024:60;;;;;;1671:64:25;11122:36:28;;;:::i;:::-;10849:340;;;11398:132;;22841:20:60;;;;:::i;:::-;1012:26024;;22841:20;;;;22773:56;;;;:::i;:::-;1012:26024;;22773:56;;;;22721:455;22890:20;;;;;1012:26024;;;;;;;;;;;;;22890:20;;1012:26024;;22890:20;;1671:64:25;22890:20:60;;;;;;;;22721:455;-1:-1:-1;;20352:3:60;1012:26024;23081:83;;-1:-1:-1;;;;;1012:26024:60;;;22935:20;;1012:26024;;:::i;:::-;23081:83;;:::i;:::-;22721:455;;22890:20;;;;:::i;:::-;1012:26024;;22890:20;;;;22698:13;;;;:::i;:::-;1012:26024;;22698:13;;;;22233:20;;;;:::i;:::-;1012:26024;;22233:20;;;;22133:15;;;;:::i;:::-;1012:26024;;22133:15;;;;21858:29;21876:11;;-1:-1:-1;21858:29:60;;21814:34;21834:14;;21814:34;;21271:36;;;1012:26024;21271:36;;1012:26024;21271:36;;;;;;1012:26024;21271:36;;;:::i;:::-;;;1012:26024;;;;;;;21317:97;21271:36;;;;;-1:-1:-1;21271:36:60;;;1012:26024;;;;;;;;;21205:36;;;1012:26024;21205:36;;1012:26024;21205:36;;;;;;1012:26024;21205:36;;;:::i;:::-;;;1012:26024;;;;;;;;21205:36;;;;;-1:-1:-1;21205:36:60;;1012:26024;-1:-1:-1;;;1012:26024:60;;;;;;1671:64:25;1012:26024:60;20576:79;;;;:::i;:::-;1012:26024;;20576:79;;;;20521:20;;;;:::i;:::-;1012:26024;;20521:20;;;;20464:47;;;;:::i;:::-;1012:26024;;20464:47;;;;20422:32;;;;;20366:46;;;;:::i;:::-;1012:26024;;20366:46;;;;20289:48;;;;:::i;:::-;1012:26024;;20289:48;;;;20237:3624;23295:566;;;;;;;;;;1012:26024;;;;-1:-1:-1;;;;;;;;;;;23316:37:60;;;;;1012:26024;;;;;;;;23316:37;;;;;;1012:26024;23316:37;;;:::i;23295:566::-;1012:26024;;;;;;;;;;;23451:11;1012:26024;23456:5;1012:26024;;23451:11;:::i;:::-;1012:26024;23472:11;1012:26024;;23472:48;;;;;1012:26024;;;;;;;;;;;;;23472:48;;;;1012:26024;23472:48;;;;;;;;;;;;23295:566;1012:26024;;23530:9;1012:26024;23535:3;1012:26024;;23530:9;:::i;:::-;1012:26024;23472:11;1012:26024;;23549:46;;;;;1012:26024;;;;;23549:46;;;;;;;;;;;;;;;;;;23295:566;1012:26024;;23615:9;1012:26024;23615:9;1012:26024;;23615:9;:::i;:::-;1012:26024;23472:11;1012:26024;;;23696:17;1012:26024;23635:79;;;;;;1012:26024;;-1:-1:-1;;;23635:79:60;;1012:26024;;;;;;;;;;;23635:79;;1012:26024;23635:79;;;:::i;:::-;;;;;;;;;;;;;;23295:566;1012:26024;;;;;;;23472:11;1012:26024;;23724:32;;1012:26024;;23724:32;;;;;23295:566;23724:32;;;;-1:-1:-1;;;;;;;;;;;23766:56:60;;;;;1012:26024;;;;;;;;23766:56;;;;;;1012:26024;23766:56;;;:::i;:::-;;;;;;;;;;;;;;23295:566;1012:26024;;23472:11;1012:26024;;23832:20;;;;;1012:26024;;;;;;;;;;;;;23832:20;;1012:26024;;23832:20;;1671:64:25;23832:20:60;;;;;;;;23295:566;;1012:26024;;23766:56;;;;:::i;:::-;1012:26024;;23766:56;;;;23724:32;;;;;23635:79;;;;;;;:::i;:::-;1012:26024;;23635:79;;;;;23549:46;;;;:::i;:::-;1012:26024;;23549:46;;;;23472:48;;;;:::i;:::-;1012:26024;;23472:48;;;;20240:17;1012:26024;20254:3;1012:26024;;;20250:7;20240:17;;1012:26024;-1:-1:-1;;;1012:26024:60;;;;;;1671:64:25;1012:26024:60;;;;;;;;;;;;;;13825:11;1012:26024;;13908:5;1012:26024;-1:-1:-1;;;;;1012:26024:60;;;13817:28;;1012:26024;13903:11;;1012:26024;;13903:11;:::i;:::-;1012:26024;;;;13922:56;;;;;1012:26024;;;;;;13922:56;;13955:20;;1012:26024;13955:20;;13922:56;;;;;;;;;;1012:26024;;;;;;;;;;;14034:28;1012:26024;;;;;;14034:28;;;:::i;:::-;1012:26024;14110:15;1012:26024;;;;;;;;;;;;14110:35;;;;;;;;;;;;;;;1012:26024;1671:64:25;1012:26024:60;1671:64:25;;1012:26024:60;;14100:46;1012:26024;14164:9;1012:26024;14164:9;1012:26024;;14164:9;:::i;:::-;1012:26024;;;;14550:17;1012:26024;14485:83;;;;;;1012:26024;;-1:-1:-1;;;14485:83:60;;1012:26024;;;;;;;;;;;14485:83;;1012:26024;14485:83;;;:::i;:::-;;;;;;;;;;;;;;1012:26024;;;;;;;14576:19;;;;;1012:26024;;;;;;;;;;;;;14576:19;;;;;;;;;;;;;;1012:26024;;;14628:28;1012:26024;;;14628:28;;;:::i;:::-;14110:15;1012:26024;;;;;;14687:35;;;;;;;;;;;;7918:5:28;14687:35:60;;;;;1012:26024;1671:64:25;1012:26024:60;1671:64:25;;1012:26024:60;;14677:46;:68;7918:5:28;;:::i;14687:35:60:-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;14576:19;;;;;;:::i;:::-;1012:26024;;14576:19;;;;;14485:83;;;;:::i;:::-;1012:26024;;14485:83;;;;14110:35;;;;;;;;;;;;;:::i;:::-;;;;1012:26024;-1:-1:-1;;;1012:26024:60;;;;;;1671:64:25;1012:26024:60;13922:56;;;;:::i;:::-;1012:26024;;13922:56;;;;1012:26024;;;;;;;-1:-1:-1;;1012:26024:60;;;;;;:::i;:::-;;;:::i;:::-;14828:10;;1012:26024;;;14876:20;;1012:26024;;;;;;;;;;;;;;;;;;;14934:20;;1012:26024;;;;;;;;;14980:6;;:17;;;1012:26024;14977:2889;;;-1:-1:-1;;15013:5:60;1012:26024;-1:-1:-1;;;;;1012:26024:60;;15008:11;;1012:26024;;15008:11;:::i;:::-;15029;1012:26024;;;;;15029:48;;;;;1012:26024;;;;;;;;;;15029:48;;;;;;;;;;;;;;;14977:2889;1012:26024;;15087:9;1012:26024;15092:3;1012:26024;;15087:9;:::i;:::-;1012:26024;;;;15106:46;;;;;;1012:26024;;;;;;15106:46;;;;;;;;;;;;;;;;;;;14977:2889;1012:26024;;;;;;;;;;15162:32;;1012:26024;;15162:32;;;;;14977:2889;15162:32;;;;-1:-1:-1;;;;;;;;;;;15204:47:60;;;;;;1012:26024;;-1:-1:-1;;;15204:47:60;;;1012:26024;;15204:47;;1012:26024;;;;;;;;;;;;;15204:47;1012:26024;;;15204:47;;;;;;;;;;;;;14977:2889;1012:26024;;;;;;15261:20;;;;;;1012:26024;;;;;;;;;;15261:20;;;;1012:26024;;15261:20;;1671:64:25;1012:26024:60;;15261:20;;;;;;;;;;;;;;14977:2889;1012:26024;;;;;;;;;;;;;15312:23;;;1012:26024;15312:23;;1671:64:25;1012:26024:60;;;15312:23;;;;;;;;;;;;;;14977:2889;1012:26024;;;1671:64:25;;;:::i;:::-;1012:26024:60;1671:64:25;;-1:-1:-1;;;1012:26024:60;;;;7096:6:25;;7092:100;;;;14977:2889:60;1012:26024;;;;15405:9;1012:26024;15405:9;1012:26024;;15405:9;:::i;:::-;1012:26024;;;;15486:17;1012:26024;15425:79;;;;;;1012:26024;;;;;;;;;;;;;;;15425:79;;1012:26024;15425:79;;;:::i;:::-;;;;;;;;;;;;;;14977:2889;1012:26024;;;15013:5;1012:26024;;15534:22;1012:26024;;15092:3;1012:26024;;15584:20;1012:26024;;;;;15633:28;;;15665:2;1012:26024;;;;;;15665:2;1012:26024;;;;;;;15685:22;15632:50;;;;:::i;:::-;1012:26024;15749:28;;;1012:26024;15665:2;1012:26024;;;;;;15665:2;1012:26024;;;;;;;15748:53;1012:26024;15785:3;1012:26024;;;15748:53;:::i;:::-;16214:15;1012:26024;16214:15;;16211:34;;14977:2889;1012:26024;16258:13;;16255:29;;14977:2889;16303:20;;;;;1012:26024;;;;;;;16303:20;;;;;;;;1012:26024;16303:20;;1671:64:25;16303:20:60;;;;;;;;;;;14977:2889;16361:25;;;16555:89;16361:25;16749:72;16361:25;16687:21;16361:25;;:::i;:::-;1012:26024;15013:5;1012:26024;;16411:22;1012:26024;;;:::i;16687:21::-;1012:26024;;15092:3;1012:26024;;16770:20;1012:26024;;:::i;16749:72::-;1012:26024;;;;15785:3;16834:28;;:35;15785:3;;16883:56;;;;;;;1012:26024;;;;16883:56;;;;;;;;;1012:26024;16883:56;;;:::i;:::-;;;;;;;;;;;;;;16831:454;1012:26024;;;;16951:20;;;;;1012:26024;;;;;;16951:20;;;;;;;1012:26024;;16951:20;;1671:64:25;16951:20:60;;;;;;;;16831:454;;1012:26024;;16883:56;;;;:::i;:::-;1012:26024;;16883:56;;;;16831:454;17000:20;;;;;;;;;;;;;;1012:26024;;;;;;17000:20;;;;;;;1012:26024;;17000:20;;1671:64:25;17000:20:60;;;;;;;;16831:454;1012:26024;;17191:83;1012:26024;15092:3;1012:26024;;17045:20;1012:26024;;;:::i;17000:20::-;;;;:::i;:::-;1012:26024;;17000:20;;;;16303;;;;;;;:::i;:::-;1012:26024;;16303:20;;;;;1012:26024;;;;16303:20;1012:26024;;;;;;;;;16303:20;1012:26024;;;16255:29;16273:11;;-1:-1:-1;16255:29:60;;16211:34;16231:14;;-1:-1:-1;16211:34:60;;1012:26024;-1:-1:-1;;;1012:26024:60;;;;;1671:64:25;;1012:26024:60;15425:79;;;;:::i;:::-;1012:26024;;15425:79;;;;;1012:26024;;;7092:100:25;7123:30;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;7123:30:25;;;;;:::i;:::-;;;;6809:200;;7092:100;;;;;6809:200;1012:26024:60;;;;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;6840:40:25;1012:26024:60;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;;1671:64:25;-1:-1:-1;;;;;;;;;;;6899:30:25;;;;1012:26024:60;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;1671:64:25;6948:30;;;:::i;:::-;6809:200;;;;15312:23:60;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;15312:23;;;;;;;;15261:20;;;;:::i;:::-;1012:26024;;15261:20;;;;15204:47;;;;:::i;:::-;1012:26024;;15204:47;;;;15162:32;;;;;15106:46;;;;;;;:::i;:::-;1012:26024;;15106:46;;;;;15029:48;;;;:::i;:::-;1012:26024;;15029:48;;;;14977:2889;17300:566;;;;;;;;;;;;1012:26024;;;;-1:-1:-1;;;;;;;;;;;17321:37:60;;;;;1012:26024;;;;;;;;17321:37;;;;;;1012:26024;17321:37;;;:::i;17300:566::-;1012:26024;;;;;;;;;;;17456:11;1012:26024;17461:5;1012:26024;;17456:11;:::i;:::-;1012:26024;17477:11;1012:26024;;17477:48;;;;;;1012:26024;;;;;;;;;;;;17477:48;;;;;;;;;;;;;;;1012:26024;;17535:9;1012:26024;17540:3;1012:26024;;17535:9;:::i;14980:17::-;1012:26024;14994:3;1012:26024;;;14990:7;14980:17;;1012:26024;-1:-1:-1;;;1012:26024:60;;;;;;1671:64:25;1012:26024:60;;;;;;;;;;;;;;1394:36;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;12174:5;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;12169:11;;1012:26024;;12169:11;:::i;:::-;-1:-1:-1;;;;;;;;;;;12188:37:60;;;;;1012:26024;;;;;;;;12188:37;;;;;;1012:26024;12188:37;;;:::i;:::-;;;;;;;;;;;;;;1012:26024;;;12233:11;1012:26024;;12233:37;;;;;1012:26024;;;;;;;;;;;;;12233:37;;;;;;;;;;1012:26024;;12188:37;;;;:::i;:::-;1012:26024;;12188:37;;;;1012:26024;;;;;;;;;;;;;;;;;:::i;:::-;;7580:5;;;;;;:22;;;1012:26024;7577:709;;;-1:-1:-1;;7623:5:60;1012:26024;-1:-1:-1;;;;;1012:26024:60;;7613:16;;1012:26024;;7613:16;:::i;:::-;1012:26024;;7639:11;1012:26024;;7639:37;;;;;1012:26024;;;;;;;;;;;;;7639:37;;;;;;;;;;7577:709;1012:26024;;;7696:14;1012:26024;;;;7623:5;1012:26024;;;;;;;;;;;;7696:44;;1012:26024;7696:44;;1012:26024;;;;;1671:64:25;7696:44:60;;;;;;;;;;;7577:709;1012:26024;7750:36;1012:26024;;:::i;7750:36::-;1012:26024;;7639:11;1012:26024;;;;;;;;;;;;;7810:28;;1012:26024;7810:28;;1671:64:25;7810:28:60;;;;;;;;;;;7577:709;1012:26024;;;7848:33;1012:26024;;;;:::i;:::-;7848:33;;;:::i;:::-;7639:11;1012:26024;;;;;;;;;;;7905:27;;;;;;;;;;;;;7577:709;7942:31;1012:26024;;-1:-1:-1;;;1012:26024:60;;1671:64:25;;;;:::i;:::-;1012:26024:60;1671:64:25;;1012:26024:60;;;7942:31;:::i;7905:27::-;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;7942:31;1012:26024;;7905:27;;;;;;;;7810:28;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;;7810:28;;;;;;;7696:44;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;7696:44;;;;;;;;7639:37;;;;:::i;:::-;1012:26024;;7639:37;;;;7577:709;7988:298;;;-1:-1:-1;7991:6:60;;;-1:-1:-1;;;;;;;;;;;8009:37:60;;;;;1012:26024;;;;;;;;8009:37;;;;;;1012:26024;8009:37;;;:::i;7988:298::-;-1:-1:-1;;;;;;;;;;;8144:60:60;;;;;1012:26024;;;;;;;;8144:60;;;;;;1012:26024;8144:60;;;:::i;7580:22::-;7589:13;7594:8;7589:13;;;7580:22;;1012:26024;;;;;;;;;;;;;2440:89;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;23914:5;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;23909:11;;1012:26024;;23909:11;:::i;:::-;23928;1012:26024;;;;;23928:44;;;;;1012:26024;23961:8;1012:26024;;;;;;;;;;;23928:44;;;;;;;;;;;;;1012:26024;;;;23989:9;1012:26024;;;-1:-1:-1;;;;;;;;;;;23980:19:60;;;;;;1012:26024;;;;;;23980:19;;;;1012:26024;23980:19;;1012:26024;;23980:19;;;;;;;;;;;;;;;;;;1012:26024;;;;;;;24068:17;1012:26024;24007:79;;;;;;1012:26024;;-1:-1:-1;;;24007:79:60;;1012:26024;;;;;;;;;;;24007:79;;1012:26024;24007:79;;;:::i;:::-;;;;;;;;;;;;;;1012:26024;24181:35;;;;;;;1012:26024;;-1:-1:-1;;;24181:35:60;;1012:26024;;24181:35;;1012:26024;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;24181:35;1012:26024;;;24181:35;;;;;;;;;;;;;1012:26024;;;;23914:5;1012:26024;;24224:15;;;;;1012:26024;;24224:15;;;1012:26024;24224:15;;1012:26024;24224:15;;;;;;;;;;;;;;;;;1012:26024;;;;24247:11;1012:26024;;24247:36;;;;;;1012:26024;;;;;;;24247:36;;;;1012:26024;;24247:36;;1012:26024;;;;;;;;;;;:::i;:::-;;;;;24247:36;;;;;;;;;;;;;1012:26024;24291:38;;;;;;;1012:26024;;-1:-1:-1;;;24291:38:60;;24308:4;1012:26024;24291:38;;1012:26024;;;;;;;;;;;;;;;;;;24291:38;;;;;;;;;;;1012:26024;;;;24247:11;1012:26024;;24337:36;;;;;;1012:26024;;;;24337:36;;;;;1012:26024;;24337:36;;1012:26024;;;;;;;;;:::i;:::-;;;;;;24337:36;;;;;;;;;;;;;1012:26024;24476:13;;;1012:26024;;;;;;;;;24446:44;;;;;1012:26024;;;;24577:20;;;;;;1012:26024;;;;;;;;;;24577:20;;;;;1012:26024;24577:20;;1671:64:25;24577:20:60;;;;;;;;;;;1012:26024;;;;;;;;;;;;;;;;;;24627:22;;;;;;;;;;;;;;;1012:26024;;;;;;;;;;24676:26;;;1012:26024;-1:-1:-1;;;1012:26024:60;;24676:26;;;;;;:::i;:::-;1671:64:25;24666:37:60;;1012:26024;;;24715:23;;;;1671:64:25;24715:23:60;;;1671:64:25;;;;;;;;;:::i;:::-;;;24715:23:60;;;;;;;:::i;:::-;1671:64:25;24705:34:60;;1012:26024;;;1671:64:25;;;:::i;:::-;1012:26024:60;1671:64:25;;-1:-1:-1;;;1012:26024:60;;;;4452:6:25;;;;4448:101;;;;1012:26024:60;;;;;;;;;;24762:44;;;;;1012:26024;;24893:20;;;;;1012:26024;;;;;;24893:20;;;;;;;;1012:26024;24893:20;;1671:64:25;24893:20:60;;;;;;;;1012:26024;;4448:101:25;4479:31;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;4479:31:25;;;;;:::i;:::-;;;;4147:212;;4448:101;;;;;4147:212;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;4178:44:25;1012:26024:60;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;4241:34;;;;;;;;1012:26024:60;;;;;;;;;;;;;:::i;:::-;;;;1671:64:25;4294:34;;;;;:::i;:::-;4147:212;;;;;24627:22:60;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;;;;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;24025:6;1012:26024;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24627:22;;;;;;;1012:26024;;;;24577:20;;;;:::i;:::-;1012:26024;;24577:20;;;;24337:36;;;;:::i;:::-;1012:26024;;24337:36;;;;24291:38;;;;:::i;:::-;1012:26024;;24291:38;;;;24247:36;;;;:::i;:::-;1012:26024;;24247:36;;;;24224:15;;;;:::i;:::-;1012:26024;;24224:15;;;;24181:35;;;;:::i;:::-;1012:26024;;24181:35;;;;24007:79;;;;:::i;:::-;1012:26024;;24007:79;;;;23980:19;;;;:::i;:::-;1012:26024;;23980:19;;;;23928:44;;;;:::i;:::-;1012:26024;;23928:44;;;;1012:26024;;;;;;;;;;;;;24982:11;1012:26024;;;-1:-1:-1;;;24982:30:60;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;24982:30;;;;;;;;;;;1012:26024;;;;;25038:30;;;;;;;;;;;;;25094:8;25038:30;;;;;1012:26024;1671:64:25;;;;25094:8:60;;:::i;25038:30::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;24982;;;;;;;;;;;;;;:::i;:::-;;;;;1012:26024;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;;;;;;;;;;;;;;12586:11;1012:26024;;12669:5;1012:26024;-1:-1:-1;;;;;1012:26024:60;;;12578:28;;12586:11;;12664;;1012:26024;;12664:11;:::i;:::-;1012:26024;;;;12683:56;;;;;1012:26024;;;;;;12683:56;;;;12716:20;;1012:26024;12716:20;;12683:56;;;;;;;;;;;;;1012:26024;;;;;;;;;;;12795:28;1012:26024;;;;;;12795:28;;;:::i;:::-;1012:26024;12871:15;1012:26024;;;;;;;;;;;;12871:35;;;;;;;;;;;;;;;1012:26024;1671:64:25;1012:26024:60;1671:64:25;;1012:26024:60;;12861:46;1012:26024;12920:9;1012:26024;12920:9;1012:26024;;12920:9;:::i;:::-;1012:26024;;;;13302:17;1012:26024;13241:79;;;;;;1012:26024;;-1:-1:-1;;;13241:79:60;;1012:26024;;;;;;;;;;;13241:79;;1012:26024;13241:79;;;:::i;:::-;;;;;;;;;;;;;;1012:26024;;;13353:28;1012:26024;;;;;13353:28;;;:::i;:::-;1012:26024;;12871:15;1012:26024;;;;;;13412:35;;;;;;;;;;;;7918:5:28;13412:35:60;;;;;1671:64:25;1012:26024:60;1671:64:25;;1012:26024:60;;13402:46;:68;7918:5:28;;:::i;:::-;13534:16:60;1012:26024;12669:5;1012:26024;;13534:16;:::i;:::-;-1:-1:-1;;;;;;;;;;;13558:41:60;;;;;;1012:26024;;-1:-1:-1;;;13558:41:60;;;1012:26024;;13558:41;;1012:26024;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;13558:41;1012:26024;;;13558:41;;;;;;;;;;;;;1012:26024;;;;;;;13607:37;;;;;;1012:26024;;;;;;;13607:37;;;;;;;;;;;;;;;;;;1012:26024;13652:41;;;;;;;1012:26024;;13652:41;;;1012:26024;;13652:41;;1012:26024;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;;;;;;;;;;13652:41;;;;;;;;;;;1012:26024;;;;;13701:37;;;;;1012:26024;;;;;;;;;;;;;13701:37;;;1012:26024;13701:37;;1671:64:25;13701:37:60;;;;;;;;1012:26024;;13652:41;;;;:::i;:::-;1012:26024;;13652:41;;;;13607:37;;;;:::i;:::-;1012:26024;;13607:37;;;;13558:41;;;;:::i;:::-;1012:26024;;13558:41;;;;13412:35;;;;;;;;;;;;;:::i;13241:79::-;;;;:::i;:::-;1012:26024;;13241:79;;;;12871:35;;;;;;;;;;;;;:::i;:::-;;;;12683:56;;;;:::i;:::-;1012:26024;;12683:56;;;;1012:26024;;;;;;;;;;;;;1183:32;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;1271:44;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;2047:70;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;25439:8;1012:26024;25500:11;1012:26024;25522:10;1012:26024;;;-1:-1:-1;;;25473:61:60;;-1:-1:-1;;;;;1012:26024:60;;;;25473:61;;1012:26024;;;;;;;;;25473:61;;;;1012:26024;;;;;;;25473:61;;;;;;;;;;;1012:26024;;;;1671:64:25;;;;:::i;:::-;1012:26024:60;1671:64:25;;1012:26024:60;;;;;-1:-1:-1;;25562:17:60;5545:6:25;;;;;;5541:100;;1012:26024:60;;;5541:100:25;5572:30;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;5572:30:25;;;;;:::i;:::-;;;;5255:203;;5541:100;;;1012:26024:60;;;5255:203:25;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;5286:41:25;1012:26024:60;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;5346:31;-1:-1:-1;;;;;;;;;;;5346:31:25;;;;;;1012:26024:60;;;;;;;;;;;;;:::i;:::-;;;;1671:64:25;5396:31;;;;;:::i;:::-;5255:203;;;;;25473:61:60;;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;25473:61;;;;;;;;;1012:26024;;;;;;;;;;;;;1321:30;1012:26024;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;3156:18;;;;;-1:-1:-1;;;;;3156:18:60;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;;;;;;;3141:33;1012:26024;;;;;;;;;;;;;;;;;3278:59;;;;;-1:-1:-1;;;1012:26024:60;;;;-1:-1:-1;;;1012:26024:60;;;;3278:59;;;;;;:::i;:::-;1671:64:25;3251:100:60;;1012:26024;;3365:10;1012:26024;;;;;;;;3214:171;;;;1012:26024;;-1:-1:-1;;;3214:171:60;;;1012:26024;3214:171;;1671:64:25;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;3214:171;;;;;;;;;;;1012:26024;;;;;;;;;3490:57;;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;3490:57;;;;;;:::i;:::-;1671:64:25;3463:98:60;;1012:26024;3575:8;1012:26024;;3426:167;;;;;1012:26024;;3426:167;;;1012:26024;3426:167;;1671:64:25;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;3426:167;;;;;;;;;;;1012:26024;;;;;;;;;3666:59;;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;3278:59;3666;;;;;:::i;:::-;1671:64:25;3656:70:60;;1012:26024;3365:10;1012:26024;;3632:107;;;;;1012:26024;;3632:107;;;1012:26024;3632:107;;1671:64:25;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;3632:107;;;;;;;;;;;1012:26024;;;;;;;;;3817:64;;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;3817:64;;;;;;:::i;:::-;1671::25;3807:75:60;;1012:26024;3884:7;1012:26024;;3783:109;;;;;1012:26024;;3783:109;;;1012:26024;3783:109;;1671:64:25;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;3783:109;;;;;;;;;;;1012:26024;;;;;;;;;;3958:52;;;1012:26024;;;-1:-1:-1;;;1012:26024:60;;;;3958:52;;;;;;:::i;:::-;1671:64:25;3948:63:60;;1012:26024;;;;3924:100;;;;;1012:26024;;3924:100;;;1012:26024;3924:100;;1671:64:25;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;3924:100;;;;;;;;1012:26024;;;;;;;;4088:42;;;1012:26024;-1:-1:-1;;;1012:26024:60;;3884:7;4088:42;;;;;:::i;:::-;1671:64:25;4078:53:60;;1012:26024;4133:12;1012:26024;;4054:92;;;;;1012:26024;;4054:92;;;1012:26024;4054:92;;1671:64:25;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;4054:92;;;;;;;;1012:26024;;;;;;;;;4199:32;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;4199:32;;;;;;;;;1012:26024;;4182:49;1012:26024;;;;;;;4182:49;1012:26024;;;;;;;;;4305:54;;;;1012:26024;-1:-1:-1;;;1012:26024:60;;;;;;-1:-1:-1;;;1012:26024:60;;;;4133:12;4305:54;;;;;:::i;:::-;1671:64:25;4295:65:60;;4271:115;;;;;;1012:26024;;4271:115;;;1012:26024;4271:115;;1671:64:25;;;;1012:26024:60;;;;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;4271:115;;;;;;;;;;1012:26024;;;;;;;;;4438:36;;;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;4438:36;;;;;;;;;1012:26024;;4417:57;1012:26024;;;;;;4417:57;1012:26024;;;;;;;4543:58;;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;4543:58;;;;;;:::i;:::-;1671:64:25;4533:69:60;;4509:123;;;;;;1012:26024;;4509:123;;;1012:26024;4509:123;;1671:64:25;;;;1012:26024:60;;;;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;4509:123;;;;;;;;;;1012:26024;;;;4182:49;1012:26024;;;;;4417:57;1012:26024;;4640:69;;;;;;1012:26024;;;;;;;;;;;;;4640:69;;;1012:26024;4640:69;;1671:64:25;1012:26024:60;;;;;;4640:69;;;;;;;;1012:26024;;;;;;;;;4758:29;;;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;4758:29;;;;;;;;;1012:26024;;4744:43;1012:26024;;;;;;4744:43;1012:26024;;;;;;;;4860:51;;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;4860:51;;;;;;:::i;:::-;1671:64:25;4850:62:60;;4826:109;;;;;;1012:26024;;4826:109;;;1012:26024;4826:109;;1671:64:25;;;;1012:26024:60;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;4826:109;;;;;;;;;;1012:26024;;;;;;;;;4987:33;;;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;4987:33;;;;;;;;;1012:26024;;4969:51;1012:26024;;;;;;4969:51;1012:26024;;;;;;;;5092:55;;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;5092:55;;;;;;:::i;:::-;1671:64:25;5082:66:60;;5058:117;;;;;;1012:26024;;5058:117;;;1012:26024;5058:117;;1671:64:25;;;;1012:26024:60;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;5058:117;;;;;;;;;;1012:26024;;;;;;;;;5232:40;;;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;5232:40;;;;;;;;;1012:26024;;;;;;;;;;;;;;;;;;5342:62;;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;5342:62;;;;;;:::i;:::-;1671:64:25;5332:73:60;;5308:131;;;;;;1012:26024;;5308:131;;;1012:26024;5308:131;;1671:64:25;;;;1012:26024:60;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;5308:131;;;;;;;;;;1012:26024;;;;;;;;;5476:26;;;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;5476:26;;;;;;;;;1012:26024;;;;;;;;;;;;;;;;;;5567:48;;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;3575:8;5567:48;;;;;:::i;:::-;1671:64:25;5557:59:60;;5533:103;;;;;;1012:26024;;5533:103;;;1012:26024;5533:103;;1671:64:25;;;;1012:26024:60;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;5533:103;;;;;;;;;;1012:26024;;;;;5680:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;;;;;;;;;;;;;;;;;5772:49;;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;;5772:49;;;;;:::i;:::-;1671:64:25;5762:60:60;;5727:133;;;;;;1012:26024;;5727:133;;;1012:26024;5727:133;;1671:64:25;;;;1012:26024:60;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;5727:133;;;;;;;;;;1012:26024;;;;;5897:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;5888:21;1012:26024;;;;;;5888:21;1012:26024;;;;;;;;5986:46;;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;3884:7;5986:46;;;;;:::i;:::-;1671:64:25;5976:57:60;;5941:127;;;;;;1012:26024;;5941:127;;;1012:26024;5941:127;;1671:64:25;;;;1012:26024:60;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;5941:127;;;;;;;;;;1012:26024;;;;;6105:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;6097:19;1012:26024;;;;;;6097:19;1012:26024;;;;;;;;6194:45;;;1012:26024;;;;-1:-1:-1;;;1012:26024:60;;;;6194:45;;;;;;:::i;:::-;1671:64:25;6184:56:60;;6149:125;;;;;;1012:26024;;6149:125;;;1012:26024;6149:125;;1671:64:25;;;;1012:26024:60;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;6149:125;;;;;;;;;;1012:26024;;;;;6337:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;;6309:45;1012:26024;;;;;;;6309:45;1012:26024;;;;;;-1:-1:-1;;;1012:26024:60;;6431:51;;;;1012:26024;;;;;;4860:51;6431;;;;;:::i;:::-;1671:64:25;6421:62:60;;6386:151;;;;;;1012:26024;;6386:151;;;1012:26024;6386:151;;1671:64:25;;;;1012:26024:60;;;;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;6386:151;;;;;;;;;;1012:26024;-1:-1:-1;;1012:26024:60;;;6557:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:26024;;;;;6194:45;1012:26024;;;6194:45;1012:26024;;;;;6612:40;;;1012:26024;-1:-1:-1;;;1012:26024:60;;6097:19;6612:40;;;;;:::i;:::-;1671:64:25;6602:51:60;;6581:76;;;;;1012:26024;;;;;;;;;;;;;;;6581:76;;1012:26024;6581:76;;1671:64:25;1012:26024:60;;;;1671:64:25;6581:76:60;;;;;;;;1012:26024;;;4417:57;1012:26024;;;;4860:51;1012:26024;;;;;;;;;;;;;6741:79;;;;1012:26024;6741:79;;1012:26024;;;;;;6741:79;;;;;;;;;;;;;;;1012:26024;;;;;;;;;;;;4417:57;1012:26024;;;;;4860:51;1012:26024;;;;;;7096:79;;;;;;;1012:26024;7096:79;;1012:26024;;;;7096:79;;;;;;;;;;;1012:26024;;;;;;;;;;;;;7096:79;;;;;;-1:-1:-1;7096:79:60;;;;;;:::i;:::-;;;;;6741;;;;;;;;;;;;;;:::i;:::-;;;;6581:76;;;;:::i;:::-;1012:26024;;6581:76;;;;6557:14;-1:-1:-1;;;1671:64:25;;1012:26024:60;;1671:64:25;;;;6386:151:60;;;;:::i;:::-;1012:26024;;6386:151;;;;6337:17;-1:-1:-1;;;1671:64:25;;1012:26024:60;;1671:64:25;;;;6149:125:60;;;;:::i;:::-;1012:26024;;6149:125;;;;5941:127;;;;:::i;:::-;1012:26024;;5941:127;;;;5727:133;;;;:::i;:::-;1012:26024;;5727:133;;;;5533:103;;;;:::i;:::-;1012:26024;;5533:103;;;;5476:26;-1:-1:-1;;;1671:64:25;;1012:26024:60;;1671:64:25;;;;5308:131:60;;;;:::i;:::-;1012:26024;;5308:131;;;;5058:117;;;;:::i;:::-;1012:26024;;5058:117;;;;4826:109;;;;:::i;:::-;1012:26024;;4826:109;;;;4640:69;;;;:::i;:::-;1012:26024;;4640:69;;;;4509:123;;;;:::i;:::-;1012:26024;;4509:123;;;;4438:36;-1:-1:-1;;;1671:64:25;;1012:26024:60;;1671:64:25;;;;4271:115:60;;;;:::i;:::-;1012:26024;;4271:115;;;;4199:32;-1:-1:-1;;;1671:64:25;;1012:26024:60;;1671:64:25;;;;4054:92:60;;;;:::i;:::-;1012:26024;;4054:92;;;;3924:100;;;;:::i;:::-;1012:26024;;3924:100;;;;3783:109;;;;:::i;:::-;1012:26024;;3783:109;;;;3632:107;;;;:::i;:::-;1012:26024;;3632:107;;;;3426:167;;;;:::i;:::-;1012:26024;;3426:167;;;;3214:171;;;;:::i;:::-;1012:26024;;3214:171;;;;3156:18;-1:-1:-1;;;1671:64:25;;;1012:26024:60;1671:64:25;;;;1012:26024:60;;;;;;;-1:-1:-1;;1012:26024:60;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1012:26024:60;;;8362:5;;;;;:38;;;1012:26024;8359:1249;;;-1:-1:-1;8421:5:60;1012:26024;-1:-1:-1;;;;;1012:26024:60;8411:16;;1012:26024;;8411:16;:::i;:::-;8437:11;1012:26024;;;;;8437:37;;;;;1012:26024;;;;;;;;;;;;;8437:37;;;;;;;;;;8359:1249;1012:26024;;;8494:14;1012:26024;;;;8421:5;1012:26024;;;;;;;;;;;8494:44;;1012:26024;8494:44;;1012:26024;;;;;1671:64:25;1012:26024:60;;;8494:44;;;;;;;;;;;;;;8359:1249;1012:26024;8548:36;1012:26024;;:::i;:::-;8559:7;;8548:36;:::i;:::-;1012:26024;;;;;;;;;;;;;;8608:28;;;;;1012:26024;8608:28;;1671:64:25;8608:28:60;;;;;;;;;;8359:1249;8646:19;;;;;:::i;:::-;1012:26024;-1:-1:-1;;;;;;;;;;;8718:44:60;;;;;1012:26024;;-1:-1:-1;;;8718:44:60;;1012:26024;;8718:44;;1012:26024;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;;;;;;;;;;8718:44;;;;;;;;8359:1249;1012:26024;;;;;;;;8772:38;;;;;;1012:26024;;;;;;;;;;;8772:38;;;;8807:2;1012:26024;8772:38;;1671:64:25;8772:38:60;;;;;;;;8359:1249;1012:26024;;;;;8859:38;;;;;;1012:26024;;;;;;;8859:38;;;;;;;;1012:26024;8859:38;;1671:64:25;8859:38:60;;;;;;;;;;;8359:1249;1012:26024;;;;;;;;;;8922:28;;;;;;;1012:26024;8922:28;;1671:64:25;8922:28:60;;;;;;;;;;;8359:1249;8971:17;;9012:7;8971:17;1012:26024;8971:17;;;;;:::i;:::-;9012:7;;;:::i;:::-;1012:26024;;;;;;;;;;;9045:27;;;;;;;;;;;;;8359:1249;9096:7;;;;;:::i;9045:27::-;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;9096:7;1012:26024;;9045:27;;;;;;;;;8922:28;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;;;8922:28;;;9012:7;8922:28;;;;;;;8859:38;;;;;;;:::i;:::-;1012:26024;;8859:38;;;;;;8772;;;;:::i;:::-;1012:26024;;8772:38;;;;8718:44;;;;:::i;:::-;1012:26024;;8718:44;;;;8608:28;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;8646:19;1012:26024;;8608:28;;;;;;;;1012:26024;;;;;;;;;8494:44;;;;;;;;;;;;;;;;;:::i;:::-;;;1012:26024;;;;;8494:44;;;;;;;;;8437:37;;;;:::i;:::-;1012:26024;;8437:37;;;;8359:1249;9119:489;;;;;;9122:6;;;1012:26024;;;;-1:-1:-1;;;;;;;;;;;9140:37:60;;;;;1012:26024;;;;;;;;9140:37;;;;;;1012:26024;9140:37;;;:::i;9119:489::-;9364:5;1012:26024;-1:-1:-1;;;;;1012:26024:60;;9354:16;;1012:26024;;9354:16;:::i;:::-;1012:26024;9380:11;1012:26024;;9380:37;;;;;1012:26024;;;;;;;;;;;;9380:37;;;;;;;;;;9119:489;1012:26024;;;;9437:14;1012:26024;;;;;9364:5;1012:26024;;;;;;;;;;;;9437:44;;1012:26024;9437:44;;1012:26024;;;;;1671:64:25;9437:44:60;;;;;;;;;;;1012:26024;-1:-1:-1;;;;;;;;;;;9491:60:60;;;;;1012:26024;;;;;;;;9491:60;;;;;;1012:26024;9491:60;;;:::i;9380:37::-;;;;;;;:::i;:::-;;;;;;8362:38;1012:26024;8392:8;8371:17;1012:26024;;;8371:17;;:::i;:::-;:29;;8362:38;;1012:26024;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;1671:64:25:-;-1:-1:-1;;;;;1671:64:25;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:25;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;;-1:-1:-1;;1671:64:25;;;;:::o;:::-;;;;;;;;;;:::i;:::-;1012:26024:60;1671:64:25;1012:26024:60;;1671:64:25;;;:::i;:::-;;;;-1:-1:-1;1671:64:25;;;;:::o;:::-;;;:::o;1819:584::-;1873:7;1012:26024:60;;;;;;;;;;;;;;;1896:14:25:o;1869:528::-;1941:25;-1:-1:-1;;;;;;;;;;;2939:104:25;;1980:374;;2367:19;;;:::o;1980:374::-;1012:26024:60;;;;;;;2196:43:25;;;;1012:26024:60;;;1671:64:25;;;1012:26024:60;1671:64:25;;;1012:26024:60;2196:43:25;;;;;:::i;:::-;2086:175;1671:64;1012:26024:60;;2086:175:25;;1671:64;2196:43;2086:175;;1671:64;;;;;;;;;;;;;;:::i;:::-;;;2086:175;1671:64;2086:175;;;;;;;:::i;:::-;2047:232;;;;;;;:::i;:::-;2196:43;1671:64;;;2312:27;;1671:64;;;;2196:43;2312:27;1671:64;1012:26024:60;;;;1671:64:25;;;;2297:42;2367:19;:::o;1012:26024:60:-;;;;;;;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;:::o;:::-;;;;-1:-1:-1;;;1012:26024:60;;;;;;;:::o;:::-;;;;-1:-1:-1;;;1012:26024:60;;;;;;;:::o;3615:277:25:-;-1:-1:-1;;;;;1012:26024:60;;;;;3678:6:25;;;3674:212;;3615:277;;:::o;3674:212::-;1012:26024:60;;;;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;3705:44:25;1012:26024:60;;;;;;;;;;;:::i;:::-;;;;;;3768:34:25;;;;;;;;1012:26024:60;;;;;;;;;;;:::i;:::-;;;;;;3821:34:25;;;;;:::i;:::-;3615:277::o;2410:424::-;-1:-1:-1;;;;;;;;;;;2939:104:25;;2445:359;;2410:424;1012:26024:60;;;;2928:1:25;1012:26024:60;;;2928:1:25;1012:26024:60;2410:424:25:o;2445:359::-;1012:26024:60;;2645:67:25;;;;1012:26024:60;;;;1671:64:25;;;1012:26024:60;;;1671:64:25;2705:4;1012:26024:60;;;1671:64:25;1012:26024:60;2645:67:25;;1012:26024:60;1671:64:25;;;;;;-1:-1:-1;;;;;1671:64:25;;;;;-1:-1:-1;1671:64:25;2534:196;;1671:64;;;;1012:26024:60;1671:64:25;2534:196;;;1671:64;;;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;1012:26024:60;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;:::o;:::-;1671:64:25;1012:26024:60;1671:64:25;;;;:::i;:::-;1012:26024:60;1671:64:25;;-1:-1:-1;;;1012:26024:60;;;;:::o;:::-;1671:64:25;1012:26024:60;1671:64:25;;;;:::i;:::-;1012:26024:60;1671:64:25;;-1:-1:-1;;;1012:26024:60;;;;:::o;:::-;;;;;1671:64:25;;1012:26024:60;;;;;;;;;;;;:::i;:::-;1671:64:25;;-1:-1:-1;;1671:64:25;1012:26024:60;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;;;;;;;:::i;:::-;;:::o;3418:191:25:-;3496:10;;3492:111;;3418:191;;:::o;3492:111::-;-1:-1:-1;;;;;;;;;;;3527:30:25;3582:9;1012:26024:60;;;3527:30:25;;;;;:::i;:::-;;;;3255:157;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;;;;;;;;;;;;;;3345:30:25;;;:::i;5469:178::-;5545:6;;;5541:100;;5469:178;;;:::o;5541:100::-;-1:-1:-1;;;;;;;;;;;5572:30:25;5628:1;1012:26024:60;;;5572:30:25;;;;;:::i;:::-;;;;5628:1;:::i;5202:262::-;5259:6;5255:203;;5202:262;:::o;5255:203::-;1012:26024:60;;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;5286:41:25;1012:26024:60;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;5346:31;-1:-1:-1;;;;;;;;;;;5346:31:25;;;;;;1012:26024:60;;;;;;;;;;;:::i;5202:262:25:-;26679:8:60;5259:6:25;;;;5255:203;;5202:262;;:::o;5255:203::-;1012:26024:60;;;;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;5286:41:25;1012:26024:60;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;5346:31;-1:-1:-1;;;;;;;;;;;5346:31:25;;;;;;1012:26024:60;;;;;;;;;;;:::i;5202:262:25:-;5259:6;;;5255:203;;5202:262;;:::o;1998:108:28:-;-1:-1:-1;;;;;;;;;;;2049:22:28;;;;;1012:26024:60;;-1:-1:-1;;;2049:22:28;;-1:-1:-1;;;;;1012:26024:60;;;2049:22:28;;;1012:26024:60;;;-1:-1:-1;;;1012:26024:60;;;1671:64:25;2049:22:28;;;1012:26024:60;;;2049:22:28;;;;;;;;;;1998:108;2081:18;;;;;;1012:26024:60;;;;;;;;;;;;;;;2081:18:28;;2049:22;2081:18;;1012:26024:60;2081:18:28;;;;;;;;1998:108;;:::o;2081:18::-;;;;;:::i;:::-;1012:26024:60;;1998:108:28;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;1012:26024:60;;;;;;;;;;:::o;:::-;1671:64:25;;;1012:26024:60;;;;;;;;;;;;;;;;;;:::o;1449:98:28:-;-1:-1:-1;;;;;;;;;;;1495:22:28;;;;;1012:26024:60;;-1:-1:-1;;;1495:22:28;;-1:-1:-1;;;;;1012:26024:60;;;1495:22:28;;;1012:26024:60;;;-1:-1:-1;;;1012:26024:60;;;1671:64:25;1495:22:28;;;1012:26024:60;;;1495:22:28;;;;;;;;;;1449:98;1527:13;;;;;;1012:26024:60;;;;;;;;;;;;;;;1527:13:28;;1495:22;1527:13;;1012:26024:60;1527:13:28;;;;;;;;1449:98;;:::o;1495:22::-;;;;;;;:::i;:::-;;;;;1012:26024:60;;;;;;;;:::i;:::-;;1671:64:25;1012:26024:60;;1671:64:25;;;:::i;:::-;1012:26024:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;24025:6;1012:26024;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;24025:6;-1:-1:-1;1012:26024:60;;;;-1:-1:-1;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1012:26024:60;;;;;-1:-1:-1;;1012:26024:60;;;;;;;;-1:-1:-1;1012:26024:60;;;;;;;1671:64:25;;;-1:-1:-1;1012:26024:60;;;;;-1:-1:-1;1012:26024:60;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1012:26024:60;13291:9;1012:26024;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:25;1012:26024:60:o;:::-;;;;;13291:9;-1:-1:-1;1012:26024:60;;;-1:-1:-1;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;1671:64:25;1012:26024:60;;;;;;;;;;;;;;-1:-1:-1;1012:26024:60;;;;-1:-1:-1;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1012:26024:60;;;;;;;;;;;;;;;;;-1:-1:-1;1012:26024:60;;-1:-1:-1;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;:::o;:::-;1671:64:25;1012:26024:60;1671:64:25;;;;:::i;:::-;1012:26024:60;1671:64:25;;1012:26024:60;;;;;:::o;:::-;1671:64:25;1012:26024:60;1671:64:25;;;;:::i;:::-;1012:26024:60;1671:64:25;;1012:26024:60;;;;;:::o;:::-;1671:64:25;1012:26024:60;1671:64:25;;;;:::i;:::-;1012:26024:60;1671:64:25;;1012:26024:60;;;;;:::o;11201:335:28:-;;16609:1:60;11368:19:28;;;;:::i;:::-;11402:16;11398:132;;11201:335;;;:::o;11398:132::-;-1:-1:-1;;;;;;;;;;;11439:33:28;1012:26024:60;;;;11439:33:28;;;;;:::i;:::-;;;;10819:19;;;;:::i;:::-;16609:1:60;10853:16:28;;10849:340;;11398:132;11201:335;;;:::o;10849:340::-;1012:26024:60;;;;;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;10890:53:28;1012:26024:60;;;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;-1:-1:-1;;;;;;;;;;;10962:32:28;;;;;;;;1012:26024:60;;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;11013:32:28;;;1012:26024:60;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;16609:1;1012:26024;;;1671:64:25;11064:39:28;1012:26024:60;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;1671:64:25;11122:36:28;;;:::i;:::-;10849:340;;;;;;11201:335;;21363:1:60;11368:19:28;;;;:::i;:::-;11402:16;11398:132;;11201:335;;;:::o;11398:132::-;-1:-1:-1;;;;;;;;;;;11439:33:28;1012:26024:60;;;;11439:33:28;;;;;:::i;:::-;;;;10819:19;;;;:::i;:::-;21363:1:60;10853:16:28;;10849:340;;11398:132;11201:335;;;:::o;10849:340::-;1012:26024:60;;;;;-1:-1:-1;;;;;;;;;;;1012:26024:60;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;10890:53:28;1012:26024:60;;;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;-1:-1:-1;;;;;;;;;;;10962:32:28;;;;;;;;1012:26024:60;;;;;;;;;;;;:::i;:::-;;;;;1671:64:25;11013:32:28;;;1012:26024:60;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;21363:1;1012:26024;;;1671:64:25;11064:39:28;1012:26024:60;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;1671:64:25;11122:36:28;;;:::i;37202:138::-;37288:5;;;;;;37308;;;;:::i;37288:45::-;37328:5;;;:::i;1012:26024:60:-;;;;;;-1:-1:-1;18034:6:60;1012:26024;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1012:26024:60;18079:9;1012:26024;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:25;1012:26024:60:o;:::-;18079:9;-1:-1:-1;1012:26024:60;;;-1:-1:-1;1012:26024:60;;-1:-1:-1;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18034:6;-1:-1:-1;1012:26024:60;;;;-1:-1:-1;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:26024:60;;;;;;1671:64:25;1012:26024:60;;;;;;;;6548:139:30;-1:-1:-1;6548:139:30;;;;6628:51;1012:26024:60;;6628:51:30;;1012:26024:60;6628:51:30;;;;;;;;;1012:26024:60;6628:51:30;;;1012:26024:60;;;;;;:::i;:::-;;;;;1671:64:25;6628:51:30;1671:64:25;;6628:51:30;;;;;;:::i;:::-;1671:64:25;392:159:30;131:42;392:159;;;6548:139::o;1012:26024:60:-;;;;;;;;;;;;;-1:-1:-1;;;;;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:25;1012:26024:60;;;1671:64:25;;:::i;:::-;1012:26024:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "SSVNetwork()": "faf7772e",
    "SSVToken()": "7bf5d908",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "failed()": "ba414fa6",
    "feeRecipient()": "46904840",
    "frensArt()": "94cd95e3",
    "frensLogo()": "ca413fdc",
    "frensMetaHelper()": "bc48e947",
    "frensOracle()": "edc91a92",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "funToken()": "845380a2",
    "pmFont()": "cae72da3",
    "setUp()": "0a9254e4",
    "stakingPool()": "0c56ae3b",
    "stakingPool2()": "5f583c1d",
    "stakingPoolFactory()": "a1b8adcb",
    "stakingPoolImplementation()": "2aa8195e",
    "testAddToDeposit(uint64,uint64)": "020f12da",
    "testAddToDepositWrongPool(uint64,uint64)": "b7ab10ee",
    "testBadWithdrawalCred()": "8adcff77",
    "testClaim(uint32,uint32)": "5c97929d",
    "testDeposit(uint72)": "4ccd89c4",
    "testEmptyStakeModifier()": "5176a102",
    "testExit()": "456f30ca",
    "testFees(uint32,uint32)": "5efae371",
    "testGetIds()": "3c20ae96",
    "testOwner()": "9e535c69",
    "testPubKeyMismatch()": "94892dda",
    "testSSVTokenAllowance()": "16599bf5",
    "testSetArt()": "f1759a8b",
    "testSetFeeRecipient()": "b3ec6b8e",
    "testStake()": "3a1143da",
    "testStakeTwoStep()": "5dcf6be5",
    "testTooMuchDeposit()": "8d299cc4",
    "testTransferToken()": "b672b4d4",
    "testWithdraw(uint72,uint72)": "90f805d9",
    "vm()": "3a768463",
    "waves()": "875d5012"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SSVNetwork\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SSVToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensLogo\",\"outputs\":[{\"internalType\":\"contract FrensLogo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensOracle\",\"outputs\":[{\"internalType\":\"contract FrensOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"funToken\",\"outputs\":[{\"internalType\":\"contract FunToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pmFont\",\"outputs\":[{\"internalType\":\"contract PmFont\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool2\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolImplementation\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"x\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"y\",\"type\":\"uint64\"}],\"name\":\"testAddToDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"x\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"y\",\"type\":\"uint64\"}],\"name\":\"testAddToDepositWrongPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBadWithdrawalCred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"testClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"}],\"name\":\"testDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testEmptyStakeModifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"testFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testPubKeyMismatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSSVTokenAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSetArt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSetFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStakeTwoStep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTooMuchDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"},{\"internalType\":\"uint72\",\"name\":\"y\",\"type\":\"uint72\"}],\"name\":\"testWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"waves\",\"outputs\":[{\"internalType\":\"contract Waves\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/StakingPoolTest.t.sol\":\"StakingPoolTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensArt.sol\":{\"keccak256\":\"0x6fc3ddbcb82a540c6cb5862bfd3b32b758f6f28292ce6553f9b31d5242076e5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://431413f8466c5fa7885eb18cb9a627c83f2face7284622ff4d26e5c726e8581e\",\"dweb:/ipfs/QmW8Dd53X8TCEwy9rGGnix981H8eT42XFVq3CGd9xHjs4R\"]},\"contracts/FrensLogo.sol\":{\"keccak256\":\"0xf56d97e69b11272fd6d003e9a4c6774da4df43e6d539e229b213be8d31bf767d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48c8bc31ce15905d0c3b7edd3fc59a12cbc6643baf3236b0cd8408ee2788eabb\",\"dweb:/ipfs/QmT6dJH7nACq8xS1gZyUPuxyTF3MUD9KoWjMzfqwxZLfs2\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0x446caa0f7ba537a12580a573e25e4f1451ee84e28ac5b690896325ae9a550b05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1eada04da867f4f88e7f3c9610a3193130f42668f17f2b3a89853dae02962d5c\",\"dweb:/ipfs/QmQFkHt5eeQxqcazJxBjEVsrd4q1oDvwf6gD335UkmM1Ss\"]},\"contracts/FrensOracle.sol\":{\"keccak256\":\"0x47b53ff148dbc4cbde609fd92f77dd024d8bbea9100a86d251ba19007f86e7f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b76b61a142e05f91751d9f92833bb871f2e64c0f9eff063c80493ac02b22d7d2\",\"dweb:/ipfs/QmcL1gRKGt6oWBk7tE8RqPMkFbQpEiXA7zuWatruLmM2NL\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0x018bb9c1b5570cf3e5e2c6d640649964824982091719aa8edf07658bdb8d7970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a2d5d9106bbc1219b9cb79cb6871f21dc5f3b55301ce83959edd4a9b3ae3ca9\",\"dweb:/ipfs/QmSGydiFaYRt7CaXZyfevRhYzizXpe5ZR8UJog147yRuGH\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x63d2019b0f15796d3bbbe1900353696ed1a6f7333e907cb4a5bbfaffb4111dc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a711e671a79d4e8d2f6679d7999cf6715ff9d195a55e0438799942d07a53f97d\",\"dweb:/ipfs/QmZDkQMDd7BGgXnFQzoUWjyw3B6jeVVLxaVTre2RTEWJ4p\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0xc6f96d09d0c1f3349bc216170fdc6d58961b5a69b9a65fa825afeeb47b9eaac9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2f900c4c9343c2274e0839d5b3dace55bea9ba115efdfa7de002bac1ac2550ee\",\"dweb:/ipfs/QmRAoCgRFznFk8RtFf5FtRUWCZzLSRwNpe3UNpjXnvQ3XR\"]},\"contracts/PmFont.sol\":{\"keccak256\":\"0xb5f38951a3e1695fad83b578e2e041165465c9821f464941246a38361c9a34f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f44a0f3aa53ca3aed2af8f1743850dedb663e079885513018b32a1fbc50f86a\",\"dweb:/ipfs/QmUWKaHvEortrBVqvrJggrBjsX8BC9rGB9kqNCoNMeixUd\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0xa606b645339cbd520669bbd0b5f8b29d85432e0bdbca8db91ed50d65ed9f5321\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93cf93a75de75baf7c111607d464249381b5e7f418a498c0b0aec87f23b5fc56\",\"dweb:/ipfs/QmZBrYQLhpkXX2RFP5S82Acjeroq735kxCJ39cVBo7Fvqv\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0xdd7d06a8633be91446831dc744bff8281117e5b20127b1988829dc68af8f83ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf3c210c831a9155b0567d849cabd749f196aa240c18322023532cfe0d3c2f4d\",\"dweb:/ipfs/QmRZTk5UfysP5ygU84h8uBxhdmQaTpw6FdyiDZNDSr4ATC\"]},\"contracts/Waves.sol\":{\"keccak256\":\"0x1fddf83b0e583cec7aa37fc45b7c89f7d4898567d1fcb324adf61685d60831ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7aa6af83006c320c1d89ee51767ead618ff60ed3339c27aa98cc7b2612adb2\",\"dweb:/ipfs/QmUYZJv4hXk7ixPZzJ8sLApBvBnxidRytEz2jW63h6s75x\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x839f7e3c08d72fc538e0889fb75065435242ae3b9d81c839176a8309326775db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://869748145485481385c88e27b24e2952017bb11a150739dcdb1d50915830d4b9\",\"dweb:/ipfs/QmTQ9jy87d8qxpPLg3g3tqE63GJenfD1cz16x5iZnkuJao\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x71ec8963cc6af99db89417e259f4987b2503e31585db6450e7140e192d868e32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e5727b5f0f1d911d827f3b97bb00c4a6a21aa3b235ff2dcf9c70122c9485bc\",\"dweb:/ipfs/QmNTf6qo7kCzhuzyuV7q5rpmaT4Juepfgkc6eXYc93HYLT\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0x9ca4f7eb7011a8f1ed7a6d9a0f88ab68b29d49b63aa8864a694b63d5551a0bad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://691442367708458da9827c029828f74ddea99a4b327a2e31f2efdfd759b97f88\",\"dweb:/ipfs/Qmbd6EADu2GntQhPobDgdRg9c6vzwutzgn7fZfa5gTC8Jr\"]},\"contracts/interfaces/IFrensLogo.sol\":{\"keccak256\":\"0x71b64fda21ce2b1daa8f795394c34335837044734eaeaf1e73bd7d3a836365bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dd1adc76ac6ccbf64393fc480bedba681b01b1b33e68459149b879caa0fcc1a\",\"dweb:/ipfs/QmaLbTp7sztsYHKQ1D4vyGzvdRWwNGF3KqExWzCSiCdinM\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0xc08609d3c44bdaf6d77150129ed72337dfaee1a560e305bd2f435bb8ac0d1f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a56b465c201630f128ce60fddd6c9fd341193ce759b7a854996bf33bab5b042c\",\"dweb:/ipfs/QmYdSsAYumebM5BypK4tPxGoNKmezFv5VAHQotEDLQKjFb\"]},\"contracts/interfaces/IFrensOracle.sol\":{\"keccak256\":\"0xb8fb907cadbdd9dd146bd3179d385be91b039955df1eb85731afbbed01894e57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af779ef4e0f538f2ca4a397f0b8f757d33c7f3d2b64baf29d39045ae7b41bdce\",\"dweb:/ipfs/QmQytMCQNJCF5PoSB3EMSYNWaZqbHYjfSppHAZ3sUCCRYS\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0xef1985c0b95767f7b96d1f21aed9e48142c021d25d574f0615323ec2b83ad996\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074079edb1b5b586e73914cd4203e49eb5fd813baa6fc85038de0f23bd5a25e7\",\"dweb:/ipfs/QmQXtreUs6eJyuoLEGb79a1nWwdiziQeoL2kbjTPnYk1G3\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0xb5ee629c513705bc3c46fbe4ce81f6a9edac2c0d1f7030da14b3859a2e8aa39e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://970db7758aa9fa468922dae70b2c85c3094506dfb59293520d4fd83769b3bee1\",\"dweb:/ipfs/QmVjiqtVZYCxXVKtxsFZhMJvFcTYhKFuiBa6eP3UtpnVeW\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0xfd293708621d8eb26c25db108d90583d36ab7f4a7f1f71a75e0b6f54c9a0a451\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c10da0cd1b7cccb05340a2505803ca0ff8fe1821c5107059c95d09eff6e7a1a4\",\"dweb:/ipfs/QmfSzqmRf2sYBMfXzav6jdkuNc6N4xoN3NUJ1o5624vUkt\"]},\"contracts/interfaces/IPmFont.sol\":{\"keccak256\":\"0x505d6001f751cbbe1261b1a87160d99c438ff76d198f316b5fc8a9066f629e24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f00e50f07ffca6b806ec9afa4cd5e0325c6c80f691014fab4732782eedb18eef\",\"dweb:/ipfs/QmV5o8JGPuAhUXUzeUt97oo7gTCFSjNicXhBiKpsxGuzvs\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0xc4849e951336ce62ba55f6b4a6158a8c1bc8716e41b83a4afa98b23c1d97442c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3beb90e7b61ecd038b18fccda4384f60b0e5c486d1392d35ad3e9be5c3d012ae\",\"dweb:/ipfs/QmP5VAe3ZFFyTjWsyyTm5VN8U2d5u6U3cfcMHJHticD9w6\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0xcee30eac27ab95cc55787c7458c3ff7ed36057fd12057e5eec29dd9936b6c758\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c09e426fee67d9dbe240525ab303376a8fc4f81f71385a33e2bd47e315d355a\",\"dweb:/ipfs/QmPSqu8AvLLXSyxajXfgu4V2DQudr9rHXpyNqaDx6iuMeE\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0x004e7a6a1ea7ac2dd49f26e4b423da2e87b4c9014867ec81f9572a15e0fba4a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ad4480a298be6ea7421524b1b185a634566cea4f989ceb7dac8094b17f807a2\",\"dweb:/ipfs/QmeNsCgQQif5w4Yuz3L7oddxsMXSzmECFgesdEHQ5Nca9P\"]},\"contracts/interfaces/IWaves.sol\":{\"keccak256\":\"0x5a318f5ff6701f3371425a37f40db5dfc5a960a197602bb561ca084b305d12b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f23abde1abc61d913d90bef65a3c421f2c037151304f61ac27585ad02d310c34\",\"dweb:/ipfs/QmeK8VZ9LR2JhXSNBotFjoEsXdjBfgrt6QfdMDuPnTL1rq\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/FakeSSVNetwork.sol\":{\"keccak256\":\"0x2c0b6aee21281d61d9cd20151cb3396fb965bef3447e97c987cf01a4f0069a52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b641d11e76297c7354de882dfa101c157e24814c2b7ef70e40084b7b76aa9be\",\"dweb:/ipfs/QmThh7dUM3bd8tDNHZYBnq35N5NEbuqZc2ML3i63FchtwP\"]},\"test/foundry/FunToken.sol\":{\"keccak256\":\"0x9d37401be3ed1802cb40211b1f756602a73339e903814b26cfdbcf08ff9b54fa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://df6888c92567d363dbd2ac0d478d97e994f2cdf2cdeb98681c33cc9333481f0a\",\"dweb:/ipfs/QmX9ENkhRQVkiHbDpV7FgcnjZDxZ12nmximYZXVQuhXtbj\"]},\"test/foundry/StakingPoolTest.t.sol\":{\"keccak256\":\"0x0d429eec04e81244ef23719be8911b7be026293f4aff2dde792df9cd0e6cb35b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://aaeb5cc5ea0d5e2db234d0c3995e4b95d07bc7a1e20ef28733b48020406c543c\",\"dweb:/ipfs/QmPAkdtmdybaqmFwxadzN3JYfTkK7QcbbmjSiemjm9LFxD\"]},\"test/foundry/TestHelper.sol\":{\"keccak256\":\"0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f\",\"dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SSVNetwork",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SSVToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeRecipient",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensLogo",
          "outputs": [
            {
              "internalType": "contract FrensLogo",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensOracle",
          "outputs": [
            {
              "internalType": "contract FrensOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "funToken",
          "outputs": [
            {
              "internalType": "contract FunToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pmFont",
          "outputs": [
            {
              "internalType": "contract PmFont",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool2",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolImplementation",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "x",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "y",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddToDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "x",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "y",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddToDepositWrongPool"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBadWithdrawalCred"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "x",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "y",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testEmptyStakeModifier"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExit"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "x",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "y",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFees"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetIds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testPubKeyMismatch"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSSVTokenAllowance"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSetArt"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSetFeeRecipient"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStakeTwoStep"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTooMuchDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            },
            {
              "internalType": "uint72",
              "name": "y",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "waves",
          "outputs": [
            {
              "internalType": "contract Waves",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/StakingPoolTest.t.sol": "StakingPoolTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensArt.sol": {
        "keccak256": "0x6fc3ddbcb82a540c6cb5862bfd3b32b758f6f28292ce6553f9b31d5242076e5e",
        "urls": [
          "bzz-raw://431413f8466c5fa7885eb18cb9a627c83f2face7284622ff4d26e5c726e8581e",
          "dweb:/ipfs/QmW8Dd53X8TCEwy9rGGnix981H8eT42XFVq3CGd9xHjs4R"
        ],
        "license": "MIT"
      },
      "contracts/FrensLogo.sol": {
        "keccak256": "0xf56d97e69b11272fd6d003e9a4c6774da4df43e6d539e229b213be8d31bf767d",
        "urls": [
          "bzz-raw://48c8bc31ce15905d0c3b7edd3fc59a12cbc6643baf3236b0cd8408ee2788eabb",
          "dweb:/ipfs/QmT6dJH7nACq8xS1gZyUPuxyTF3MUD9KoWjMzfqwxZLfs2"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0x446caa0f7ba537a12580a573e25e4f1451ee84e28ac5b690896325ae9a550b05",
        "urls": [
          "bzz-raw://1eada04da867f4f88e7f3c9610a3193130f42668f17f2b3a89853dae02962d5c",
          "dweb:/ipfs/QmQFkHt5eeQxqcazJxBjEVsrd4q1oDvwf6gD335UkmM1Ss"
        ],
        "license": "MIT"
      },
      "contracts/FrensOracle.sol": {
        "keccak256": "0x47b53ff148dbc4cbde609fd92f77dd024d8bbea9100a86d251ba19007f86e7f9",
        "urls": [
          "bzz-raw://b76b61a142e05f91751d9f92833bb871f2e64c0f9eff063c80493ac02b22d7d2",
          "dweb:/ipfs/QmcL1gRKGt6oWBk7tE8RqPMkFbQpEiXA7zuWatruLmM2NL"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0x018bb9c1b5570cf3e5e2c6d640649964824982091719aa8edf07658bdb8d7970",
        "urls": [
          "bzz-raw://4a2d5d9106bbc1219b9cb79cb6871f21dc5f3b55301ce83959edd4a9b3ae3ca9",
          "dweb:/ipfs/QmSGydiFaYRt7CaXZyfevRhYzizXpe5ZR8UJog147yRuGH"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0x63d2019b0f15796d3bbbe1900353696ed1a6f7333e907cb4a5bbfaffb4111dc4",
        "urls": [
          "bzz-raw://a711e671a79d4e8d2f6679d7999cf6715ff9d195a55e0438799942d07a53f97d",
          "dweb:/ipfs/QmZDkQMDd7BGgXnFQzoUWjyw3B6jeVVLxaVTre2RTEWJ4p"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0xc6f96d09d0c1f3349bc216170fdc6d58961b5a69b9a65fa825afeeb47b9eaac9",
        "urls": [
          "bzz-raw://2f900c4c9343c2274e0839d5b3dace55bea9ba115efdfa7de002bac1ac2550ee",
          "dweb:/ipfs/QmRAoCgRFznFk8RtFf5FtRUWCZzLSRwNpe3UNpjXnvQ3XR"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/PmFont.sol": {
        "keccak256": "0xb5f38951a3e1695fad83b578e2e041165465c9821f464941246a38361c9a34f2",
        "urls": [
          "bzz-raw://1f44a0f3aa53ca3aed2af8f1743850dedb663e079885513018b32a1fbc50f86a",
          "dweb:/ipfs/QmUWKaHvEortrBVqvrJggrBjsX8BC9rGB9kqNCoNMeixUd"
        ],
        "license": "MIT"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0xa606b645339cbd520669bbd0b5f8b29d85432e0bdbca8db91ed50d65ed9f5321",
        "urls": [
          "bzz-raw://93cf93a75de75baf7c111607d464249381b5e7f418a498c0b0aec87f23b5fc56",
          "dweb:/ipfs/QmZBrYQLhpkXX2RFP5S82Acjeroq735kxCJ39cVBo7Fvqv"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0xdd7d06a8633be91446831dc744bff8281117e5b20127b1988829dc68af8f83ad",
        "urls": [
          "bzz-raw://cf3c210c831a9155b0567d849cabd749f196aa240c18322023532cfe0d3c2f4d",
          "dweb:/ipfs/QmRZTk5UfysP5ygU84h8uBxhdmQaTpw6FdyiDZNDSr4ATC"
        ],
        "license": "MIT"
      },
      "contracts/Waves.sol": {
        "keccak256": "0x1fddf83b0e583cec7aa37fc45b7c89f7d4898567d1fcb324adf61685d60831ba",
        "urls": [
          "bzz-raw://ab7aa6af83006c320c1d89ee51767ead618ff60ed3339c27aa98cc7b2612adb2",
          "dweb:/ipfs/QmUYZJv4hXk7ixPZzJ8sLApBvBnxidRytEz2jW63h6s75x"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x839f7e3c08d72fc538e0889fb75065435242ae3b9d81c839176a8309326775db",
        "urls": [
          "bzz-raw://869748145485481385c88e27b24e2952017bb11a150739dcdb1d50915830d4b9",
          "dweb:/ipfs/QmTQ9jy87d8qxpPLg3g3tqE63GJenfD1cz16x5iZnkuJao"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x71ec8963cc6af99db89417e259f4987b2503e31585db6450e7140e192d868e32",
        "urls": [
          "bzz-raw://81e5727b5f0f1d911d827f3b97bb00c4a6a21aa3b235ff2dcf9c70122c9485bc",
          "dweb:/ipfs/QmNTf6qo7kCzhuzyuV7q5rpmaT4Juepfgkc6eXYc93HYLT"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0x9ca4f7eb7011a8f1ed7a6d9a0f88ab68b29d49b63aa8864a694b63d5551a0bad",
        "urls": [
          "bzz-raw://691442367708458da9827c029828f74ddea99a4b327a2e31f2efdfd759b97f88",
          "dweb:/ipfs/Qmbd6EADu2GntQhPobDgdRg9c6vzwutzgn7fZfa5gTC8Jr"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensLogo.sol": {
        "keccak256": "0x71b64fda21ce2b1daa8f795394c34335837044734eaeaf1e73bd7d3a836365bf",
        "urls": [
          "bzz-raw://7dd1adc76ac6ccbf64393fc480bedba681b01b1b33e68459149b879caa0fcc1a",
          "dweb:/ipfs/QmaLbTp7sztsYHKQ1D4vyGzvdRWwNGF3KqExWzCSiCdinM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0xc08609d3c44bdaf6d77150129ed72337dfaee1a560e305bd2f435bb8ac0d1f46",
        "urls": [
          "bzz-raw://a56b465c201630f128ce60fddd6c9fd341193ce759b7a854996bf33bab5b042c",
          "dweb:/ipfs/QmYdSsAYumebM5BypK4tPxGoNKmezFv5VAHQotEDLQKjFb"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensOracle.sol": {
        "keccak256": "0xb8fb907cadbdd9dd146bd3179d385be91b039955df1eb85731afbbed01894e57",
        "urls": [
          "bzz-raw://af779ef4e0f538f2ca4a397f0b8f757d33c7f3d2b64baf29d39045ae7b41bdce",
          "dweb:/ipfs/QmQytMCQNJCF5PoSB3EMSYNWaZqbHYjfSppHAZ3sUCCRYS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0xef1985c0b95767f7b96d1f21aed9e48142c021d25d574f0615323ec2b83ad996",
        "urls": [
          "bzz-raw://074079edb1b5b586e73914cd4203e49eb5fd813baa6fc85038de0f23bd5a25e7",
          "dweb:/ipfs/QmQXtreUs6eJyuoLEGb79a1nWwdiziQeoL2kbjTPnYk1G3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0xb5ee629c513705bc3c46fbe4ce81f6a9edac2c0d1f7030da14b3859a2e8aa39e",
        "urls": [
          "bzz-raw://970db7758aa9fa468922dae70b2c85c3094506dfb59293520d4fd83769b3bee1",
          "dweb:/ipfs/QmVjiqtVZYCxXVKtxsFZhMJvFcTYhKFuiBa6eP3UtpnVeW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0xfd293708621d8eb26c25db108d90583d36ab7f4a7f1f71a75e0b6f54c9a0a451",
        "urls": [
          "bzz-raw://c10da0cd1b7cccb05340a2505803ca0ff8fe1821c5107059c95d09eff6e7a1a4",
          "dweb:/ipfs/QmfSzqmRf2sYBMfXzav6jdkuNc6N4xoN3NUJ1o5624vUkt"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IPmFont.sol": {
        "keccak256": "0x505d6001f751cbbe1261b1a87160d99c438ff76d198f316b5fc8a9066f629e24",
        "urls": [
          "bzz-raw://f00e50f07ffca6b806ec9afa4cd5e0325c6c80f691014fab4732782eedb18eef",
          "dweb:/ipfs/QmV5o8JGPuAhUXUzeUt97oo7gTCFSjNicXhBiKpsxGuzvs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0xc4849e951336ce62ba55f6b4a6158a8c1bc8716e41b83a4afa98b23c1d97442c",
        "urls": [
          "bzz-raw://3beb90e7b61ecd038b18fccda4384f60b0e5c486d1392d35ad3e9be5c3d012ae",
          "dweb:/ipfs/QmP5VAe3ZFFyTjWsyyTm5VN8U2d5u6U3cfcMHJHticD9w6"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0xcee30eac27ab95cc55787c7458c3ff7ed36057fd12057e5eec29dd9936b6c758",
        "urls": [
          "bzz-raw://6c09e426fee67d9dbe240525ab303376a8fc4f81f71385a33e2bd47e315d355a",
          "dweb:/ipfs/QmPSqu8AvLLXSyxajXfgu4V2DQudr9rHXpyNqaDx6iuMeE"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0x004e7a6a1ea7ac2dd49f26e4b423da2e87b4c9014867ec81f9572a15e0fba4a1",
        "urls": [
          "bzz-raw://8ad4480a298be6ea7421524b1b185a634566cea4f989ceb7dac8094b17f807a2",
          "dweb:/ipfs/QmeNsCgQQif5w4Yuz3L7oddxsMXSzmECFgesdEHQ5Nca9P"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IWaves.sol": {
        "keccak256": "0x5a318f5ff6701f3371425a37f40db5dfc5a960a197602bb561ca084b305d12b5",
        "urls": [
          "bzz-raw://f23abde1abc61d913d90bef65a3c421f2c037151304f61ac27585ad02d310c34",
          "dweb:/ipfs/QmeK8VZ9LR2JhXSNBotFjoEsXdjBfgrt6QfdMDuPnTL1rq"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439",
        "urls": [
          "bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c",
          "dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/FakeSSVNetwork.sol": {
        "keccak256": "0x2c0b6aee21281d61d9cd20151cb3396fb965bef3447e97c987cf01a4f0069a52",
        "urls": [
          "bzz-raw://5b641d11e76297c7354de882dfa101c157e24814c2b7ef70e40084b7b76aa9be",
          "dweb:/ipfs/QmThh7dUM3bd8tDNHZYBnq35N5NEbuqZc2ML3i63FchtwP"
        ],
        "license": "MIT"
      },
      "test/foundry/FunToken.sol": {
        "keccak256": "0x9d37401be3ed1802cb40211b1f756602a73339e903814b26cfdbcf08ff9b54fa",
        "urls": [
          "bzz-raw://df6888c92567d363dbd2ac0d478d97e994f2cdf2cdeb98681c33cc9333481f0a",
          "dweb:/ipfs/QmX9ENkhRQVkiHbDpV7FgcnjZDxZ12nmximYZXVQuhXtbj"
        ],
        "license": "UNLICENSED"
      },
      "test/foundry/StakingPoolTest.t.sol": {
        "keccak256": "0x0d429eec04e81244ef23719be8911b7be026293f4aff2dde792df9cd0e6cb35b",
        "urls": [
          "bzz-raw://aaeb5cc5ea0d5e2db234d0c3995e4b95d07bc7a1e20ef28733b48020406c543c",
          "dweb:/ipfs/QmPAkdtmdybaqmFwxadzN3JYfTkK7QcbbmjSiemjm9LFxD"
        ],
        "license": "UNLICENSED"
      },
      "test/foundry/TestHelper.sol": {
        "keccak256": "0x7150ae135e7d8aba84c84bc311a121db84f82f8851638b890a6df918043bd7f4",
        "urls": [
          "bzz-raw://b702f6e799e46346741d1078cf115f2d712ffcaec7f08ebfd8a803fc5277828f",
          "dweb:/ipfs/QmVUbR243Y4nixX4wkUPXoNjsUaYBkWKj4QTw7zQzYH4kA"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/StakingPoolTest.t.sol",
    "id": 34501,
    "exportedSymbols": {
      "AccessControl": [
        27691
      ],
      "Address": [
        30456
      ],
      "Base64": [
        31837
      ],
      "BoolGetter": [
        34536
      ],
      "Clones": [
        27963
      ],
      "Context": [
        30486
      ],
      "ContextUpgradeable": [
        27375
      ],
      "DSTest": [
        5440
      ],
      "ERC165": [
        30739
      ],
      "ERC20": [
        28550
      ],
      "ERC721": [
        29580
      ],
      "ERC721Enumerable": [
        30068
      ],
      "FakeSSVNetwork": [
        31857
      ],
      "FrensArt": [
        159
      ],
      "FrensLogo": [
        224
      ],
      "FrensMetaHelper": [
        503
      ],
      "FrensOracle": [
        580
      ],
      "FrensPoolShare": [
        911
      ],
      "FrensPoolShareTokenURI": [
        1171
      ],
      "FrensStorage": [
        1479
      ],
      "FunToken": [
        31884
      ],
      "IAccessControl": [
        27764
      ],
      "IDepositContract": [
        3111
      ],
      "IENS": [
        3248
      ],
      "IERC165": [
        30751
      ],
      "IERC20": [
        28628
      ],
      "IERC20Metadata": [
        28653
      ],
      "IERC721": [
        29696
      ],
      "IERC721Enumerable": [
        30099
      ],
      "IERC721Metadata": [
        30126
      ],
      "IERC721Receiver": [
        29714
      ],
      "IFrensArt": [
        3258
      ],
      "IFrensLogo": [
        3266
      ],
      "IFrensMetaHelper": [
        3299
      ],
      "IFrensOracle": [
        3316
      ],
      "IFrensPoolShare": [
        3367
      ],
      "IFrensPoolShareTokenURI": [
        3377
      ],
      "IFrensStorage": [
        3467
      ],
      "IMaliciousProxyInterface": [
        34512
      ],
      "IPmFont": [
        3475
      ],
      "IReverseResolver": [
        3485
      ],
      "IStakingPool": [
        3632
      ],
      "IStakingPoolFactory": [
        3645
      ],
      "IWaves": [
        3653
      ],
      "Initializable": [
        27329
      ],
      "Math": [
        31617
      ],
      "NftReceiver": [
        34585
      ],
      "Ownable": [
        27877
      ],
      "OwnableUpgradeable": [
        27075
      ],
      "PmFont": [
        1502
      ],
      "Script": [
        5703
      ],
      "SignedMath": [
        31722
      ],
      "StakingPool": [
        2816
      ],
      "StakingPoolFactory": [
        2943
      ],
      "StakingPoolTest": [
        34500
      ],
      "StdStorage": [
        8731
      ],
      "Strings": [
        30715
      ],
      "Test": [
        8633
      ],
      "Vm": [
        10752
      ],
      "Waves": [
        3092
      ],
      "console": [
        18816
      ],
      "console2": [
        26880
      ],
      "stdError": [
        8703
      ],
      "stdJson": [
        6063
      ],
      "stdMath": [
        9972
      ],
      "stdStorage": [
        9833
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:26998:60",
    "nodes": [
      {
        "id": 31886,
        "nodeType": "PragmaDirective",
        "src": "39:24:60",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 31887,
        "nodeType": "ImportDirective",
        "src": "181:28:60",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 9973,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31888,
        "nodeType": "ImportDirective",
        "src": "229:38:60",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 160,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31889,
        "nodeType": "ImportDirective",
        "src": "268:39:60",
        "nodes": [],
        "absolutePath": "contracts/FrensLogo.sol",
        "file": "../../contracts/FrensLogo.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 225,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31890,
        "nodeType": "ImportDirective",
        "src": "308:36:60",
        "nodes": [],
        "absolutePath": "contracts/PmFont.sol",
        "file": "../../contracts/PmFont.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 1503,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31891,
        "nodeType": "ImportDirective",
        "src": "345:35:60",
        "nodes": [],
        "absolutePath": "contracts/Waves.sol",
        "file": "../../contracts/Waves.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 3093,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31892,
        "nodeType": "ImportDirective",
        "src": "381:45:60",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31893,
        "nodeType": "ImportDirective",
        "src": "427:52:60",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 1172,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31894,
        "nodeType": "ImportDirective",
        "src": "480:42:60",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 1480,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31895,
        "nodeType": "ImportDirective",
        "src": "523:41:60",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 2817,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31896,
        "nodeType": "ImportDirective",
        "src": "565:48:60",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 2944,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31897,
        "nodeType": "ImportDirective",
        "src": "614:44:60",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 912,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31898,
        "nodeType": "ImportDirective",
        "src": "659:41:60",
        "nodes": [],
        "absolutePath": "contracts/FrensOracle.sol",
        "file": "../../contracts/FrensOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 581,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31899,
        "nodeType": "ImportDirective",
        "src": "701:60:60",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 3646,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31900,
        "nodeType": "ImportDirective",
        "src": "762:57:60",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 3112,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31901,
        "nodeType": "ImportDirective",
        "src": "820:50:60",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensArt.sol",
        "file": "../../contracts/interfaces/IFrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 3259,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31902,
        "nodeType": "ImportDirective",
        "src": "871:26:60",
        "nodes": [],
        "absolutePath": "test/foundry/TestHelper.sol",
        "file": "./TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 34586,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31903,
        "nodeType": "ImportDirective",
        "src": "898:30:60",
        "nodes": [],
        "absolutePath": "test/foundry/FakeSSVNetwork.sol",
        "file": "./FakeSSVNetwork.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 31858,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31904,
        "nodeType": "ImportDirective",
        "src": "929:24:60",
        "nodes": [],
        "absolutePath": "test/foundry/FunToken.sol",
        "file": "./FunToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 31885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31905,
        "nodeType": "ImportDirective",
        "src": "954:55:60",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34501,
        "sourceUnit": 28551,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34500,
        "nodeType": "ContractDefinition",
        "src": "1012:26024:60",
        "nodes": [
          {
            "id": 31910,
            "nodeType": "VariableDeclaration",
            "src": "1051:24:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "1067:8:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$159",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 31909,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31908,
                "name": "FrensArt",
                "nameLocations": [
                  "1051:8:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 159,
                "src": "1051:8:60"
              },
              "referencedDeclaration": 159,
              "src": "1051:8:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$159",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31913,
            "nodeType": "VariableDeclaration",
            "src": "1081:38:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "1104:15:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 31912,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31911,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "1081:15:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 503,
                "src": "1081:15:60"
              },
              "referencedDeclaration": 503,
              "src": "1081:15:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31916,
            "nodeType": "VariableDeclaration",
            "src": "1125:52:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "1155:22:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 31915,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31914,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "1125:22:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1171,
                "src": "1125:22:60"
              },
              "referencedDeclaration": 1171,
              "src": "1125:22:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31919,
            "nodeType": "VariableDeclaration",
            "src": "1183:32:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "1203:12:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$1479",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 31918,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31917,
                "name": "FrensStorage",
                "nameLocations": [
                  "1183:12:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1479,
                "src": "1183:12:60"
              },
              "referencedDeclaration": 1479,
              "src": "1183:12:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$1479",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31922,
            "nodeType": "VariableDeclaration",
            "src": "1221:44:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "1247:18:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 31921,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31920,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "1221:18:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2943,
                "src": "1221:18:60"
              },
              "referencedDeclaration": 2943,
              "src": "1221:18:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31925,
            "nodeType": "VariableDeclaration",
            "src": "1271:44:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "2aa8195e",
            "mutability": "mutable",
            "name": "stakingPoolImplementation",
            "nameLocation": "1290:25:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2816",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 31924,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31923,
                "name": "StakingPool",
                "nameLocations": [
                  "1271:11:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2816,
                "src": "1271:11:60"
              },
              "referencedDeclaration": 2816,
              "src": "1271:11:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2816",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31928,
            "nodeType": "VariableDeclaration",
            "src": "1321:30:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1340:11:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2816",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 31927,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31926,
                "name": "StakingPool",
                "nameLocations": [
                  "1321:11:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2816,
                "src": "1321:11:60"
              },
              "referencedDeclaration": 2816,
              "src": "1321:11:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2816",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31931,
            "nodeType": "VariableDeclaration",
            "src": "1357:31:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "5f583c1d",
            "mutability": "mutable",
            "name": "stakingPool2",
            "nameLocation": "1376:12:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$2816",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 31930,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31929,
                "name": "StakingPool",
                "nameLocations": [
                  "1357:11:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2816,
                "src": "1357:11:60"
              },
              "referencedDeclaration": 2816,
              "src": "1357:11:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$2816",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31934,
            "nodeType": "VariableDeclaration",
            "src": "1394:36:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1416:14:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$911",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 31933,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31932,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1394:14:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 911,
                "src": "1394:14:60"
              },
              "referencedDeclaration": 911,
              "src": "1394:14:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31937,
            "nodeType": "VariableDeclaration",
            "src": "1436:30:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "edc91a92",
            "mutability": "mutable",
            "name": "frensOracle",
            "nameLocation": "1455:11:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensOracle_$580",
              "typeString": "contract FrensOracle"
            },
            "typeName": {
              "id": 31936,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31935,
                "name": "FrensOracle",
                "nameLocations": [
                  "1436:11:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 580,
                "src": "1436:11:60"
              },
              "referencedDeclaration": 580,
              "src": "1436:11:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensOracle_$580",
                "typeString": "contract FrensOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31940,
            "nodeType": "VariableDeclaration",
            "src": "1472:26:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "ca413fdc",
            "mutability": "mutable",
            "name": "frensLogo",
            "nameLocation": "1489:9:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensLogo_$224",
              "typeString": "contract FrensLogo"
            },
            "typeName": {
              "id": 31939,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31938,
                "name": "FrensLogo",
                "nameLocations": [
                  "1472:9:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 224,
                "src": "1472:9:60"
              },
              "referencedDeclaration": 224,
              "src": "1472:9:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensLogo_$224",
                "typeString": "contract FrensLogo"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31943,
            "nodeType": "VariableDeclaration",
            "src": "1504:20:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "cae72da3",
            "mutability": "mutable",
            "name": "pmFont",
            "nameLocation": "1518:6:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PmFont_$1502",
              "typeString": "contract PmFont"
            },
            "typeName": {
              "id": 31942,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31941,
                "name": "PmFont",
                "nameLocations": [
                  "1504:6:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1502,
                "src": "1504:6:60"
              },
              "referencedDeclaration": 1502,
              "src": "1504:6:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PmFont_$1502",
                "typeString": "contract PmFont"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31946,
            "nodeType": "VariableDeclaration",
            "src": "1530:18:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "875d5012",
            "mutability": "mutable",
            "name": "waves",
            "nameLocation": "1543:5:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Waves_$3092",
              "typeString": "contract Waves"
            },
            "typeName": {
              "id": 31945,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31944,
                "name": "Waves",
                "nameLocations": [
                  "1530:5:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3092,
                "src": "1530:5:60"
              },
              "referencedDeclaration": 3092,
              "src": "1530:5:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Waves_$3092",
                "typeString": "contract Waves"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31949,
            "nodeType": "VariableDeclaration",
            "src": "1554:24:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "845380a2",
            "mutability": "mutable",
            "name": "funToken",
            "nameLocation": "1570:8:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FunToken_$31884",
              "typeString": "contract FunToken"
            },
            "typeName": {
              "id": 31948,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31947,
                "name": "FunToken",
                "nameLocations": [
                  "1554:8:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31884,
                "src": "1554:8:60"
              },
              "referencedDeclaration": 31884,
              "src": "1554:8:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FunToken_$31884",
                "typeString": "contract FunToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31955,
            "nodeType": "VariableDeclaration",
            "src": "1604:84:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1627:7:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 31950,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1604:15:60",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 31953,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1645:42:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 31952,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1637:8:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 31951,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1637:8:60",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 31954,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1637:51:60",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31958,
            "nodeType": "VariableDeclaration",
            "src": "1809:70:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "faf7772e",
            "mutability": "mutable",
            "name": "SSVNetwork",
            "nameLocation": "1824:10:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31956,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1809:7:60",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844443942433335614539343265463063466137363933303935346131353642336646333061344531",
              "id": 31957,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1837:42:60",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xDD9BC35aE942eF0cFa76930954a156B3fF30a4E1"
            },
            "visibility": "public"
          },
          {
            "id": 31961,
            "nodeType": "VariableDeclaration",
            "src": "1885:68:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "7bf5d908",
            "mutability": "mutable",
            "name": "SSVToken",
            "nameLocation": "1900:8:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31959,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1885:7:60",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839443635664638316133633438386435383562426662304266653363373730376337393137663534",
              "id": 31960,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1911:42:60",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x9D65fF81a3c488d585bBfb0Bfe3c7707c7917f54"
            },
            "visibility": "public"
          },
          {
            "id": 31964,
            "nodeType": "VariableDeclaration",
            "src": "2047:70:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "2062:10:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31962,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2047:7:60",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 31963,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2075:42:60",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 31970,
            "nodeType": "VariableDeclaration",
            "src": "2124:60:60",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "2141:15:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$3111",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 31966,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31965,
                "name": "IDepositContract",
                "nameLocations": [
                  "2124:16:60"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3111,
                "src": "2124:16:60"
              },
              "referencedDeclaration": 3111,
              "src": "2124:16:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$3111",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 31968,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 31955,
                  "src": "2176:7:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 31967,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3111,
                "src": "2159:16:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$3111_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 31969,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2159:25:60",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$3111",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31973,
            "nodeType": "VariableDeclaration",
            "src": "2191:69:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "2206:9:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31971,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2191:7:60",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 31972,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2218:42:60",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 31979,
            "nodeType": "VariableDeclaration",
            "src": "2266:82:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "2289:5:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 31974,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2266:15:60",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 31977,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2305:42:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 31976,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2297:8:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 31975,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2297:8:60",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 31978,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2297:51:60",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31985,
            "nodeType": "VariableDeclaration",
            "src": "2354:80:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "2377:3:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 31980,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2354:15:60",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 31983,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2391:42:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 31982,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2383:8:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 31981,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2383:8:60",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 31984,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2383:51:60",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31991,
            "nodeType": "VariableDeclaration",
            "src": "2440:89:60",
            "nodes": [],
            "constant": false,
            "functionSelector": "46904840",
            "mutability": "mutable",
            "name": "feeRecipient",
            "nameLocation": "2463:12:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 31986,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2440:15:60",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030363934323030303030303031333337",
                  "id": 31989,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2486:42:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000694200000001337"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 31988,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2478:8:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 31987,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2478:8:60",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 31990,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2478:51:60",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31994,
            "nodeType": "VariableDeclaration",
            "src": "2536:116:60",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "2542:6:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 31992,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2536:5:60",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575",
              "id": 31993,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2551:101:60",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_21dcdee5842ff0f482197d6a15db2c021a867314be6d63d4bb4246bbaafd3909",
                "typeString": "literal_string hex\"ac542dcb86a85a8deeef9150dbf8ad24860a066deb43b20294ed7fb65257f49899b7103c35b26289035de4227e1cc575\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31997,
            "nodeType": "VariableDeclaration",
            "src": "2658:100:60",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "2664:22:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 31995,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2658:5:60",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2",
              "id": 31996,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2689:69:60",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_15e0678a74c943adbbbd50fdf9fc6ac3c93162a3c810614e1c98914f8980a59e",
                "typeString": "literal_string hex\"0100000000000000000000004f81992fce2e1846dd528ec0102e6ee1f61ed3e2\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32000,
            "nodeType": "VariableDeclaration",
            "src": "2764:215:60",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2770:9:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 31998,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2764:5:60",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9",
              "id": 31999,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2782:197:60",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d36984ec5b61d40bef1c5fbe334dfcbf8cb40ea4c1dee515b99a6e9ce042c56e",
                "typeString": "literal_string hex\"92e3289be8c1379caae22fa1d6637c3953620db6eed35d1861b9bb9f0133be8b0cc631d16a3f034960fb826977138c59023543625ecb863cb5a748714ff5ee9f3286887e679cf251b6b0f14b190beac1ad7010cc136da6dd9e98dd4e8b7faae9\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32003,
            "nodeType": "VariableDeclaration",
            "src": "2985:94:60",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2993:17:60",
            "scope": 34500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 32001,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2985:7:60",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834303933313830323032303633623065363663643861656635613933346266616263663332393139653439343036343534326235663161333838396266353136",
              "id": 32002,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3013:66:60",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_29207914523896875400091520570111070750124087433100064560086113879594058380566_by_1",
                "typeString": "int_const 2920...(69 digits omitted)...0566"
              },
              "value": "0x4093180202063b0e66cd8aef5a934bfabcf32919e494064542b5f1a3889bf516"
            },
            "visibility": "internal"
          },
          {
            "id": 32393,
            "nodeType": "FunctionDefinition",
            "src": "3086:4290:60",
            "nodes": [],
            "body": {
              "id": 32392,
              "nodeType": "Block",
              "src": "3110:4266:60",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32006,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31919,
                      "src": "3141:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1479",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3156:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$1479_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 32008,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32007,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "3160:12:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1479,
                            "src": "3160:12:60"
                          },
                          "referencedDeclaration": 1479,
                          "src": "3160:12:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 32010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3156:18:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$1479",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "3141:33:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$1479",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 32012,
                  "nodeType": "ExpressionStatement",
                  "src": "3141:33:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 32019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3295:27:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "5353564e6574776f726b",
                                "id": 32020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3324:12:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_6d920d9dc9e52b0fc68fda8f2431c669b391e8052a81f28faa58a1893dc05174",
                                  "typeString": "literal_string \"SSVNetwork\""
                                },
                                "value": "SSVNetwork"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6d920d9dc9e52b0fc68fda8f2431c669b391e8052a81f28faa58a1893dc05174",
                                  "typeString": "literal_string \"SSVNetwork\""
                                }
                              ],
                              "expression": {
                                "id": 32017,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3278:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3282:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3278:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3278:59:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32016,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3251:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3251:100:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32023,
                        "name": "SSVNetwork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31958,
                        "src": "3365:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32013,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "3214:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3227:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3214:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3214:171:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32025,
                  "nodeType": "ExpressionStatement",
                  "src": "3214:171:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 32032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3507:27:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "535356546f6b656e",
                                "id": 32033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3536:10:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_cf7cad2040951f81d9f0ea44b3ed1709114ed61101e40b635889acce5817a1ab",
                                  "typeString": "literal_string \"SSVToken\""
                                },
                                "value": "SSVToken"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cf7cad2040951f81d9f0ea44b3ed1709114ed61101e40b635889acce5817a1ab",
                                  "typeString": "literal_string \"SSVToken\""
                                }
                              ],
                              "expression": {
                                "id": 32030,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3490:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3494:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3490:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3490:57:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32029,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3463:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3463:98:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32036,
                        "name": "SSVToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31961,
                        "src": "3575:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32026,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "3426:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3439:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3426:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3426:167:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32038,
                  "nodeType": "ExpressionStatement",
                  "src": "3426:167:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 32045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3683:27:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "5353564e6574776f726b",
                                "id": 32046,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3712:12:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_6d920d9dc9e52b0fc68fda8f2431c669b391e8052a81f28faa58a1893dc05174",
                                  "typeString": "literal_string \"SSVNetwork\""
                                },
                                "value": "SSVNetwork"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6d920d9dc9e52b0fc68fda8f2431c669b391e8052a81f28faa58a1893dc05174",
                                  "typeString": "literal_string \"SSVNetwork\""
                                }
                              ],
                              "expression": {
                                "id": 32043,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3666:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3670:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3666:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3666:59:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32042,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3656:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3656:70:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32049,
                        "name": "SSVNetwork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31958,
                        "src": "3728:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32039,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "3632:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3645:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3632:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3632:107:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32051,
                  "nodeType": "ExpressionStatement",
                  "src": "3632:107:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 32058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3834:27:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "4465706f736974436f6e7472616374",
                                "id": 32059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3863:17:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                },
                                "value": "DepositContract"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                                  "typeString": "literal_string \"DepositContract\""
                                }
                              ],
                              "expression": {
                                "id": 32056,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3817:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3821:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3817:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3817:64:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32055,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3807:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3807:75:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32062,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31955,
                        "src": "3884:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 32052,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "3783:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3796:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3783:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3783:109:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32064,
                  "nodeType": "ExpressionStatement",
                  "src": "3783:109:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 32071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3975:27:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "454e53",
                                "id": 32072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4004:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                },
                                "value": "ENS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                                  "typeString": "literal_string \"ENS\""
                                }
                              ],
                              "expression": {
                                "id": 32069,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3958:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3962:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3958:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3958:52:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32068,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3948:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3948:63:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32075,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31964,
                        "src": "4013:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32065,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "3924:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3937:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3924:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3924:100:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32077,
                  "nodeType": "ExpressionStatement",
                  "src": "3924:100:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "70726f746f636f6c2e6665652e726563697069656e74",
                                "id": 32084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4105:24:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a7383de6a675e1f7707d2a4203dfe5b10ebd3f64934351a03f6389c17278502d",
                                  "typeString": "literal_string \"protocol.fee.recipient\""
                                },
                                "value": "protocol.fee.recipient"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_a7383de6a675e1f7707d2a4203dfe5b10ebd3f64934351a03f6389c17278502d",
                                  "typeString": "literal_string \"protocol.fee.recipient\""
                                }
                              ],
                              "expression": {
                                "id": 32082,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4088:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4092:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4088:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4088:42:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32081,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4078:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4078:53:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 32087,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31991,
                        "src": "4133:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 32078,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "4054:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4067:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "4054:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4054:92:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32089,
                  "nodeType": "ExpressionStatement",
                  "src": "4054:92:60"
                },
                {
                  "expression": {
                    "id": 32096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32090,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31934,
                      "src": "4182:14:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32094,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31919,
                          "src": "4218:12:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4199:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3467_$returns$_t_contract$_FrensPoolShare_$911_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 32092,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32091,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "4203:14:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 911,
                            "src": "4203:14:60"
                          },
                          "referencedDeclaration": 911,
                          "src": "4203:14:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 32095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4199:32:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "4182:49:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 32097,
                  "nodeType": "ExpressionStatement",
                  "src": "4182:49:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4322:18:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265",
                                "id": 32105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4342:16:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                },
                                "value": "FrensPoolShare"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                                  "typeString": "literal_string \"FrensPoolShare\""
                                }
                              ],
                              "expression": {
                                "id": 32102,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4305:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4309:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4305:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4305:54:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32101,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4295:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4295:65:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32110,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31934,
                            "src": "4370:14:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 32109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4362:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32108,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4362:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4362:23:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32098,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "4271:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4284:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "4271:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4271:115:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32113,
                  "nodeType": "ExpressionStatement",
                  "src": "4271:115:60"
                },
                {
                  "expression": {
                    "id": 32120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32114,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31922,
                      "src": "4417:18:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32118,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31919,
                          "src": "4461:12:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4438:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3467_$returns$_t_contract$_StakingPoolFactory_$2943_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 32116,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32115,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "4442:18:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2943,
                            "src": "4442:18:60"
                          },
                          "referencedDeclaration": 2943,
                          "src": "4442:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 32119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4438:36:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "4417:57:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 32121,
                  "nodeType": "ExpressionStatement",
                  "src": "4417:57:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4560:18:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "5374616b696e67506f6f6c466163746f7279",
                                "id": 32129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4580:20:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                },
                                "value": "StakingPoolFactory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                }
                              ],
                              "expression": {
                                "id": 32126,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4543:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4547:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4543:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4543:58:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32125,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4533:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4533:69:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32134,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31922,
                            "src": "4612:18:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 32133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4604:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32132,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4604:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4604:27:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32122,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "4509:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4522:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "4509:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4509:123:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32137,
                  "nodeType": "ExpressionStatement",
                  "src": "4509:123:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783030",
                            "id": 32143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4673:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 32142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4665:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 32141,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4665:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4665:13:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32147,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31922,
                            "src": "4689:18:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 32146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4681:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4681:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4681:27:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32138,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31934,
                        "src": "4640:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 32140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4655:9:60",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27542,
                      "src": "4640:24:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4640:69:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32150,
                  "nodeType": "ExpressionStatement",
                  "src": "4640:69:60"
                },
                {
                  "expression": {
                    "id": 32157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32151,
                      "name": "frensOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31937,
                      "src": "4744:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$580",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32155,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31919,
                          "src": "4774:12:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4758:15:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3467_$returns$_t_contract$_FrensOracle_$580_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensOracle)"
                        },
                        "typeName": {
                          "id": 32153,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32152,
                            "name": "FrensOracle",
                            "nameLocations": [
                              "4762:11:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 580,
                            "src": "4762:11:60"
                          },
                          "referencedDeclaration": 580,
                          "src": "4762:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensOracle_$580",
                            "typeString": "contract FrensOracle"
                          }
                        }
                      },
                      "id": 32156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4758:29:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensOracle_$580",
                        "typeString": "contract FrensOracle"
                      }
                    },
                    "src": "4744:43:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensOracle_$580",
                      "typeString": "contract FrensOracle"
                    }
                  },
                  "id": 32158,
                  "nodeType": "ExpressionStatement",
                  "src": "4744:43:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4877:18:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734f7261636c65",
                                "id": 32166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4897:13:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                },
                                "value": "FrensOracle"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_860bbb213200eac708576387ea448e58ce6bbf9e0ac5e9b6a21f9482aeadcc96",
                                  "typeString": "literal_string \"FrensOracle\""
                                }
                              ],
                              "expression": {
                                "id": 32163,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4860:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4864:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4860:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4860:51:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32162,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4850:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4850:62:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32171,
                            "name": "frensOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31937,
                            "src": "4922:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensOracle_$580",
                              "typeString": "contract FrensOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensOracle_$580",
                              "typeString": "contract FrensOracle"
                            }
                          ],
                          "id": 32170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4914:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32169,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4914:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4914:20:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32159,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "4826:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4839:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "4826:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4826:109:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32174,
                  "nodeType": "ExpressionStatement",
                  "src": "4826:109:60"
                },
                {
                  "expression": {
                    "id": 32181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32175,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31913,
                      "src": "4969:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32179,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31919,
                          "src": "5007:12:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4987:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3467_$returns$_t_contract$_FrensMetaHelper_$503_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 32177,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32176,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "4991:15:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 503,
                            "src": "4991:15:60"
                          },
                          "referencedDeclaration": 503,
                          "src": "4991:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 32180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4987:33:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "4969:51:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 32182,
                  "nodeType": "ExpressionStatement",
                  "src": "4969:51:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5109:18:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734d65746148656c706572",
                                "id": 32190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5129:17:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                },
                                "value": "FrensMetaHelper"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                                  "typeString": "literal_string \"FrensMetaHelper\""
                                }
                              ],
                              "expression": {
                                "id": 32187,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5092:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5096:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "5092:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5092:55:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32186,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5082:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5082:66:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32195,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31913,
                            "src": "5158:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$503",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 32194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5150:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32193,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5150:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5150:24:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32183,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "5058:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5071:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "5058:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5058:117:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32198,
                  "nodeType": "ExpressionStatement",
                  "src": "5058:117:60"
                },
                {
                  "expression": {
                    "id": 32205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32199,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31916,
                      "src": "5207:22:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32203,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31919,
                          "src": "5259:12:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5232:26:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3467_$returns$_t_contract$_FrensPoolShareTokenURI_$1171_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 32201,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32200,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "5236:22:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1171,
                            "src": "5236:22:60"
                          },
                          "referencedDeclaration": 1171,
                          "src": "5236:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 32204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5232:40:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "5207:65:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 32206,
                  "nodeType": "ExpressionStatement",
                  "src": "5207:65:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5359:18:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                                "id": 32214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5379:24:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                },
                                "value": "FrensPoolShareTokenURI"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                                  "typeString": "literal_string \"FrensPoolShareTokenURI\""
                                }
                              ],
                              "expression": {
                                "id": 32211,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5342:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5346:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "5342:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5342:62:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32210,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5332:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5332:73:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32219,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31916,
                            "src": "5415:22:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1171",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 32218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5407:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32217,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5407:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5407:31:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32207,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "5308:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5321:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "5308:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5308:131:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32222,
                  "nodeType": "ExpressionStatement",
                  "src": "5308:131:60"
                },
                {
                  "expression": {
                    "id": 32229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32223,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31910,
                      "src": "5465:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32227,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31919,
                          "src": "5489:12:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$1479",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5476:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$3467_$returns$_t_contract$_FrensArt_$159_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 32225,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32224,
                            "name": "FrensArt",
                            "nameLocations": [
                              "5480:8:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 159,
                            "src": "5480:8:60"
                          },
                          "referencedDeclaration": 159,
                          "src": "5480:8:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$159",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 32228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5476:26:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$159",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "5465:37:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$159",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 32230,
                  "nodeType": "ExpressionStatement",
                  "src": "5465:37:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5584:18:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e73417274",
                                "id": 32238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5604:10:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                                  "typeString": "literal_string \"FrensArt\""
                                },
                                "value": "FrensArt"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                                  "typeString": "literal_string \"FrensArt\""
                                }
                              ],
                              "expression": {
                                "id": 32235,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5567:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5571:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "5567:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5567:48:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32234,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5557:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5557:59:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32243,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31910,
                            "src": "5626:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$159",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$159",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 32242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5618:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32241,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5618:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5618:17:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32231,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "5533:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5546:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "5533:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5533:103:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32246,
                  "nodeType": "ExpressionStatement",
                  "src": "5533:103:60"
                },
                {
                  "expression": {
                    "id": 32252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32247,
                      "name": "frensLogo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31940,
                      "src": "5668:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensLogo_$224",
                        "typeString": "contract FrensLogo"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5680:13:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensLogo_$224_$",
                          "typeString": "function () returns (contract FrensLogo)"
                        },
                        "typeName": {
                          "id": 32249,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32248,
                            "name": "FrensLogo",
                            "nameLocations": [
                              "5684:9:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 224,
                            "src": "5684:9:60"
                          },
                          "referencedDeclaration": 224,
                          "src": "5684:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensLogo_$224",
                            "typeString": "contract FrensLogo"
                          }
                        }
                      },
                      "id": 32251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5680:15:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensLogo_$224",
                        "typeString": "contract FrensLogo"
                      }
                    },
                    "src": "5668:27:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensLogo_$224",
                      "typeString": "contract FrensLogo"
                    }
                  },
                  "id": 32253,
                  "nodeType": "ExpressionStatement",
                  "src": "5668:27:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5789:18:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "4672656e734c6f676f",
                                "id": 32261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5809:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_da154728a3a6686dafabf1e5b55d292bc9ceede9ff4329d0cbd0d57ba0dd16df",
                                  "typeString": "literal_string \"FrensLogo\""
                                },
                                "value": "FrensLogo"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_da154728a3a6686dafabf1e5b55d292bc9ceede9ff4329d0cbd0d57ba0dd16df",
                                  "typeString": "literal_string \"FrensLogo\""
                                }
                              ],
                              "expression": {
                                "id": 32258,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5772:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5776:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "5772:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5772:49:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32257,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5762:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5762:60:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32266,
                            "name": "frensLogo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31940,
                            "src": "5842:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensLogo_$224",
                              "typeString": "contract FrensLogo"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensLogo_$224",
                              "typeString": "contract FrensLogo"
                            }
                          ],
                          "id": 32265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5834:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5834:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5834:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32254,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "5727:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5740:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "5727:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5727:133:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32269,
                  "nodeType": "ExpressionStatement",
                  "src": "5727:133:60"
                },
                {
                  "expression": {
                    "id": 32275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32270,
                      "name": "pmFont",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31943,
                      "src": "5888:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PmFont_$1502",
                        "typeString": "contract PmFont"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5897:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PmFont_$1502_$",
                          "typeString": "function () returns (contract PmFont)"
                        },
                        "typeName": {
                          "id": 32272,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32271,
                            "name": "PmFont",
                            "nameLocations": [
                              "5901:6:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1502,
                            "src": "5901:6:60"
                          },
                          "referencedDeclaration": 1502,
                          "src": "5901:6:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PmFont_$1502",
                            "typeString": "contract PmFont"
                          }
                        }
                      },
                      "id": 32274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5897:12:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PmFont_$1502",
                        "typeString": "contract PmFont"
                      }
                    },
                    "src": "5888:21:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PmFont_$1502",
                      "typeString": "contract PmFont"
                    }
                  },
                  "id": 32276,
                  "nodeType": "ExpressionStatement",
                  "src": "5888:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6003:18:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "506d466f6e74",
                                "id": 32284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6023:8:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a1596b96415ae17a1302419cd438f61b6db79a3ba20e11c0c5b4e512ccac7bb4",
                                  "typeString": "literal_string \"PmFont\""
                                },
                                "value": "PmFont"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a1596b96415ae17a1302419cd438f61b6db79a3ba20e11c0c5b4e512ccac7bb4",
                                  "typeString": "literal_string \"PmFont\""
                                }
                              ],
                              "expression": {
                                "id": 32281,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5986:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5990:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "5986:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5986:46:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32280,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5976:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5976:57:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32289,
                            "name": "pmFont",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31943,
                            "src": "6053:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PmFont_$1502",
                              "typeString": "contract PmFont"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PmFont_$1502",
                              "typeString": "contract PmFont"
                            }
                          ],
                          "id": 32288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6045:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32287,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6045:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6045:15:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32277,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "5941:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5954:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "5941:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5941:127:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32292,
                  "nodeType": "ExpressionStatement",
                  "src": "5941:127:60"
                },
                {
                  "expression": {
                    "id": 32298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32293,
                      "name": "waves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31946,
                      "src": "6097:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Waves_$3092",
                        "typeString": "contract Waves"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6105:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Waves_$3092_$",
                          "typeString": "function () returns (contract Waves)"
                        },
                        "typeName": {
                          "id": 32295,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32294,
                            "name": "Waves",
                            "nameLocations": [
                              "6109:5:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3092,
                            "src": "6109:5:60"
                          },
                          "referencedDeclaration": 3092,
                          "src": "6109:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Waves_$3092",
                            "typeString": "contract Waves"
                          }
                        }
                      },
                      "id": 32297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6105:11:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Waves_$3092",
                        "typeString": "contract Waves"
                      }
                    },
                    "src": "6097:19:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Waves_$3092",
                      "typeString": "contract Waves"
                    }
                  },
                  "id": 32299,
                  "nodeType": "ExpressionStatement",
                  "src": "6097:19:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6211:18:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "5761766573",
                                "id": 32307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6231:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_3f4e8d360a255d8b6d452e8197aa4eea6c2e102e0a735349071c1f520423fabf",
                                  "typeString": "literal_string \"Waves\""
                                },
                                "value": "Waves"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3f4e8d360a255d8b6d452e8197aa4eea6c2e102e0a735349071c1f520423fabf",
                                  "typeString": "literal_string \"Waves\""
                                }
                              ],
                              "expression": {
                                "id": 32304,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "6194:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6198:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "6194:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6194:45:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32303,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "6184:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6184:56:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32312,
                            "name": "waves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31946,
                            "src": "6260:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Waves_$3092",
                              "typeString": "contract Waves"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Waves_$3092",
                              "typeString": "contract Waves"
                            }
                          ],
                          "id": 32311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6252:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32310,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6252:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6252:14:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32300,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "6149:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6162:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "6149:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6149:125:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32315,
                  "nodeType": "ExpressionStatement",
                  "src": "6149:125:60"
                },
                {
                  "expression": {
                    "id": 32321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32316,
                      "name": "stakingPoolImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31925,
                      "src": "6309:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2816",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6337:15:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_StakingPool_$2816_$",
                          "typeString": "function () returns (contract StakingPool)"
                        },
                        "typeName": {
                          "id": 32318,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32317,
                            "name": "StakingPool",
                            "nameLocations": [
                              "6341:11:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2816,
                            "src": "6341:11:60"
                          },
                          "referencedDeclaration": 2816,
                          "src": "6341:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        }
                      },
                      "id": 32320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6337:17:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2816",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "6309:45:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 32322,
                  "nodeType": "ExpressionStatement",
                  "src": "6309:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 32329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6448:18:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "5374616b696e67506f6f6c",
                                "id": 32330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6468:13:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_4f0f4ad205cb2c62df68cd8981718333d0edac176ec3820a0738eaa1f8eb4335",
                                  "typeString": "literal_string \"StakingPool\""
                                },
                                "value": "StakingPool"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4f0f4ad205cb2c62df68cd8981718333d0edac176ec3820a0738eaa1f8eb4335",
                                  "typeString": "literal_string \"StakingPool\""
                                }
                              ],
                              "expression": {
                                "id": 32327,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "6431:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6435:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "6431:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6431:51:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32326,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "6421:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6421:62:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32335,
                            "name": "stakingPoolImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31925,
                            "src": "6503:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 32334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6495:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32333,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6495:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6495:34:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32323,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "6386:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6399:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "6386:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 32337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6386:151:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32338,
                  "nodeType": "ExpressionStatement",
                  "src": "6386:151:60"
                },
                {
                  "expression": {
                    "id": 32344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32339,
                      "name": "funToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31949,
                      "src": "6546:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FunToken_$31884",
                        "typeString": "contract FunToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6557:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FunToken_$31884_$",
                          "typeString": "function () returns (contract FunToken)"
                        },
                        "typeName": {
                          "id": 32341,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32340,
                            "name": "FunToken",
                            "nameLocations": [
                              "6561:8:60"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31884,
                            "src": "6561:8:60"
                          },
                          "referencedDeclaration": 31884,
                          "src": "6561:8:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FunToken_$31884",
                            "typeString": "contract FunToken"
                          }
                        }
                      },
                      "id": 32343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6557:14:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FunToken_$31884",
                        "typeString": "contract FunToken"
                      }
                    },
                    "src": "6546:25:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FunToken_$31884",
                      "typeString": "contract FunToken"
                    }
                  },
                  "id": 32345,
                  "nodeType": "ExpressionStatement",
                  "src": "6546:25:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "70726f746f636f6c2e6665652e70657263656e74",
                                "id": 32352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6629:22:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0d723a48edd74c03c4a97b981d154e10fa870f2dd14a5459bc155a4fa264e11e",
                                  "typeString": "literal_string \"protocol.fee.percent\""
                                },
                                "value": "protocol.fee.percent"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_0d723a48edd74c03c4a97b981d154e10fa870f2dd14a5459bc155a4fa264e11e",
                                  "typeString": "literal_string \"protocol.fee.percent\""
                                }
                              ],
                              "expression": {
                                "id": 32350,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "6612:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 32351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6616:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "6612:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 32353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6612:40:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 32349,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "6602:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 32354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6602:51:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 32355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6655:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 32346,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "6581:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 32348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6594:7:60",
                      "memberName": "setUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1379,
                      "src": "6581:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256) external"
                      }
                    },
                    "id": 32356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6581:76:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32357,
                  "nodeType": "ExpressionStatement",
                  "src": "6581:76:60"
                },
                {
                  "assignments": [
                    32359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32359,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "6733:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 32392,
                      "src": "6725:12:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 32358,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6725:7:60",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32365,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32362,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "6767:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 32363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6778:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 32360,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31922,
                        "src": "6741:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 32361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6760:6:60",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2942,
                      "src": "6741:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 32364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6741:79:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6724:96:60"
                },
                {
                  "expression": {
                    "id": 32373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32366,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31928,
                      "src": "6860:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2816",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32370,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32359,
                              "src": "6894:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6886:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 32368,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6886:8:60",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6886:13:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 32367,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2816,
                        "src": "6874:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2816_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 32372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6874:26:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2816",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "6860:40:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 32374,
                  "nodeType": "ExpressionStatement",
                  "src": "6860:40:60"
                },
                {
                  "assignments": [
                    32376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32376,
                      "mutability": "mutable",
                      "name": "pool2",
                      "nameLocation": "7087:5:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 32392,
                      "src": "7079:13:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 32375,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7079:7:60",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32382,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32379,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "7122:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 32380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7133:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 32377,
                        "name": "stakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31922,
                        "src": "7096:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPoolFactory_$2943",
                          "typeString": "contract StakingPoolFactory"
                        }
                      },
                      "id": 32378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7115:6:60",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2942,
                      "src": "7096:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 32381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7096:79:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7078:97:60"
                },
                {
                  "expression": {
                    "id": 32390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32383,
                      "name": "stakingPool2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31931,
                      "src": "7215:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2816",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32387,
                              "name": "pool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32376,
                              "src": "7250:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7242:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 32385,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7242:8:60",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7242:14:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 32384,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2816,
                        "src": "7230:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$2816_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 32389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7230:27:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$2816",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "7215:42:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 32391,
                  "nodeType": "ExpressionStatement",
                  "src": "7215:42:60"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "3095:5:60",
            "parameters": {
              "id": 32004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3100:2:60"
            },
            "returnParameters": {
              "id": 32005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32411,
            "nodeType": "FunctionDefinition",
            "src": "7382:143:60",
            "nodes": [],
            "body": {
              "id": 32410,
              "nodeType": "Block",
              "src": "7410:115:60",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32397,
                      "mutability": "mutable",
                      "name": "stakingPoolOwner",
                      "nameLocation": "7426:16:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 32410,
                      "src": "7418:24:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 32396,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7418:7:60",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32401,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32398,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "7445:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 32399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7457:5:60",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2683,
                      "src": "7445:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 32400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7445:19:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7418:46:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32403,
                        "name": "stakingPoolOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32397,
                        "src": "7481:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32406,
                            "name": "contOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31973,
                            "src": "7507:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7499:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32404,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7499:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7499:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 32402,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 3974,
                      "src": "7472:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 32408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7472:46:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32409,
                  "nodeType": "ExpressionStatement",
                  "src": "7472:46:60"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "7391:9:60",
            "parameters": {
              "id": 32394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7400:2:60"
            },
            "returnParameters": {
              "id": 32395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7410:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32517,
            "nodeType": "FunctionDefinition",
            "src": "7531:761:60",
            "nodes": [],
            "body": {
              "id": 32516,
              "nodeType": "Block",
              "src": "7569:723:60",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 32422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 32418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32416,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32413,
                        "src": "7580:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7584:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7580:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 32421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32419,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32413,
                        "src": "7589:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 32420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7594:8:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "7589:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7580:22:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 32477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32475,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32413,
                        "src": "7991:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7996:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7991:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 32513,
                      "nodeType": "Block",
                      "src": "8134:152:60",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 32499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8160:43:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 32496,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5471,
                                "src": "8144:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10752",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8147:12:60",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10238,
                              "src": "8144:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8144:60:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32501,
                          "nodeType": "ExpressionStatement",
                          "src": "8144:60:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32503,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "8224:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32502,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6259,
                                6280,
                                6304,
                                6328
                              ],
                              "referencedDeclaration": 6259,
                              "src": "8214:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8214:16:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32505,
                          "nodeType": "ExpressionStatement",
                          "src": "8214:16:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32506,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "8240:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8252:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "8240:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32509,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32413,
                                  "src": "8273:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "8240:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8240:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32512,
                          "nodeType": "ExpressionStatement",
                          "src": "8240:37:60"
                        }
                      ]
                    },
                    "id": 32514,
                    "nodeType": "IfStatement",
                    "src": "7988:298:60",
                    "trueBody": {
                      "id": 32495,
                      "nodeType": "Block",
                      "src": "7999:129:60",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8025:20:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32478,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5471,
                                "src": "8009:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10752",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8012:12:60",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10238,
                              "src": "8009:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8009:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32483,
                          "nodeType": "ExpressionStatement",
                          "src": "8009:37:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32485,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "8066:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32484,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6259,
                                6280,
                                6304,
                                6328
                              ],
                              "referencedDeclaration": 6259,
                              "src": "8056:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8056:16:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32487,
                          "nodeType": "ExpressionStatement",
                          "src": "8056:16:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32488,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "8082:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8094:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "8082:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32491,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32413,
                                  "src": "8115:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "8082:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8082:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32494,
                          "nodeType": "ExpressionStatement",
                          "src": "8082:37:60"
                        }
                      ]
                    }
                  },
                  "id": 32515,
                  "nodeType": "IfStatement",
                  "src": "7577:709:60",
                  "trueBody": {
                    "id": 32474,
                    "nodeType": "Block",
                    "src": "7603:379:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32424,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31979,
                              "src": "7623:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32423,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6259,
                              6280,
                              6304,
                              6328
                            ],
                            "referencedDeclaration": 6259,
                            "src": "7613:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7613:16:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32426,
                        "nodeType": "ExpressionStatement",
                        "src": "7613:16:60"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32427,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "7639:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7651:13:60",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2003,
                              "src": "7639:25:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32430,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32413,
                                "src": "7672:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "7639:35:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7639:37:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32433,
                        "nodeType": "ExpressionStatement",
                        "src": "7639:37:60"
                      },
                      {
                        "assignments": [
                          32435
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32435,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "7691:2:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32474,
                            "src": "7686:7:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32434,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7686:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32441,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32438,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31979,
                              "src": "7731:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 32439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7738:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 32436,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31934,
                              "src": "7696:14:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 32437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7711:19:60",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29792,
                            "src": "7696:34:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7696:44:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7686:54:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 32445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 32443,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32435,
                                "src": "7761:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 32444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7767:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7761:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "66697273742069642069732030",
                              "id": 32446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7770:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              },
                              "value": "first id is 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              }
                            ],
                            "id": 32442,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3923,
                              3944
                            ],
                            "referencedDeclaration": 3944,
                            "src": "7750:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 32447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7750:36:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32448,
                        "nodeType": "ExpressionStatement",
                        "src": "7750:36:60"
                      },
                      {
                        "assignments": [
                          32450
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32450,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "7801:6:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32474,
                            "src": "7796:11:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32449,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7796:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32455,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32453,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32435,
                              "src": "7835:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32451,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "7810:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7822:12:60",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "7810:24:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7810:28:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7796:42:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32457,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32413,
                              "src": "7857:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 32458,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32450,
                              "src": "7860:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "78203d20646570416d74",
                              "id": 32459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7868:12:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5149c7fe061070960194931258e2ce631d0b9783fa1c2a8619430b1c6b5003c",
                                "typeString": "literal_string \"x = depAmt\""
                              },
                              "value": "x = depAmt"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5149c7fe061070960194931258e2ce631d0b9783fa1c2a8619430b1c6b5003c",
                                "typeString": "literal_string \"x = depAmt\""
                              }
                            ],
                            "id": 32456,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4193,
                            "src": "7848:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 32460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7848:33:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32461,
                        "nodeType": "ExpressionStatement",
                        "src": "7848:33:60"
                      },
                      {
                        "assignments": [
                          32463
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32463,
                            "mutability": "mutable",
                            "name": "totDep",
                            "nameLocation": "7896:6:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32474,
                            "src": "7891:11:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32462,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7891:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32467,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 32464,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "7905:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7917:13:60",
                            "memberName": "totalDeposits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1653,
                            "src": "7905:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 32466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7905:27:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7891:41:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32469,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32413,
                              "src": "7951:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 32470,
                              "name": "totDep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32463,
                              "src": "7954:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "783d746f74446570",
                              "id": 32471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7962:10:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_341dec35a82d9dcb6818ce9d849bdbe1faee3490d7c4bf48d2976d53ad08cbcb",
                                "typeString": "literal_string \"x=totDep\""
                              },
                              "value": "x=totDep"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_341dec35a82d9dcb6818ce9d849bdbe1faee3490d7c4bf48d2976d53ad08cbcb",
                                "typeString": "literal_string \"x=totDep\""
                              }
                            ],
                            "id": 32468,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4193,
                            "src": "7942:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 32472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7942:31:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32473,
                        "nodeType": "ExpressionStatement",
                        "src": "7942:31:60"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4ccd89c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "7540:11:60",
            "parameters": {
              "id": 32414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32413,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "7559:1:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 32517,
                  "src": "7552:8:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 32412,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "7552:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7551:10:60"
            },
            "returnParameters": {
              "id": 32415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7569:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32693,
            "nodeType": "FunctionDefinition",
            "src": "8298:1316:60",
            "nodes": [],
            "body": {
              "id": 32692,
              "nodeType": "Block",
              "src": "8351:1263:60",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 32538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 32526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32524,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32519,
                        "src": "8362:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8366:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8362:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 32529,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32519,
                              "src": "8376:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 32528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8371:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32527,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8371:4:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8371:7:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 32533,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32521,
                              "src": "8386:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 32532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8381:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32531,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8381:4:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8381:7:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8371:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 32536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8392:8:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "8371:29:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8362:38:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 32637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32635,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32519,
                        "src": "9122:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9127:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9122:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 32689,
                      "nodeType": "Block",
                      "src": "9265:343:60",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32657,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "9364:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32656,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6259,
                                6280,
                                6304,
                                6328
                              ],
                              "referencedDeclaration": 6259,
                              "src": "9354:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9354:16:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32659,
                          "nodeType": "ExpressionStatement",
                          "src": "9354:16:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32660,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "9380:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9392:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "9380:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32663,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32519,
                                  "src": "9413:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "9380:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9380:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32666,
                          "nodeType": "ExpressionStatement",
                          "src": "9380:37:60"
                        },
                        {
                          "assignments": [
                            32668
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 32668,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "9432:2:60",
                              "nodeType": "VariableDeclaration",
                              "scope": 32689,
                              "src": "9427:7:60",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 32667,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9427:4:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 32674,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 32671,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "9472:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 32672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9479:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 32669,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31934,
                                "src": "9437:14:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 32670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9452:19:60",
                              "memberName": "tokenOfOwnerByIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29792,
                              "src": "9437:34:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view external returns (uint256)"
                              }
                            },
                            "id": 32673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9437:44:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9427:54:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 32678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9507:43:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 32675,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5471,
                                "src": "9491:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10752",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9494:12:60",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10238,
                              "src": "9491:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9491:60:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32680,
                          "nodeType": "ExpressionStatement",
                          "src": "9491:60:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32686,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32668,
                                "src": "9596:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 32681,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "9561:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9573:12:60",
                                "memberName": "addToDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2043,
                                "src": "9561:24:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) payable external"
                                }
                              },
                              "id": 32685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32684,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32521,
                                  "src": "9593:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "9561:34:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9561:38:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32688,
                          "nodeType": "ExpressionStatement",
                          "src": "9561:38:60"
                        }
                      ]
                    },
                    "id": 32690,
                    "nodeType": "IfStatement",
                    "src": "9119:489:60",
                    "trueBody": {
                      "id": 32655,
                      "nodeType": "Block",
                      "src": "9130:129:60",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9156:20:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32638,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5471,
                                "src": "9140:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10752",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9143:12:60",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10238,
                              "src": "9140:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9140:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32643,
                          "nodeType": "ExpressionStatement",
                          "src": "9140:37:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32645,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "9197:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32644,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6259,
                                6280,
                                6304,
                                6328
                              ],
                              "referencedDeclaration": 6259,
                              "src": "9187:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9187:16:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32647,
                          "nodeType": "ExpressionStatement",
                          "src": "9187:16:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32648,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "9213:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9225:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "9213:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32651,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32519,
                                  "src": "9246:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "9213:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9213:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32654,
                          "nodeType": "ExpressionStatement",
                          "src": "9213:37:60"
                        }
                      ]
                    }
                  },
                  "id": 32691,
                  "nodeType": "IfStatement",
                  "src": "8359:1249:60",
                  "trueBody": {
                    "id": 32634,
                    "nodeType": "Block",
                    "src": "8401:712:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32540,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31979,
                              "src": "8421:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32539,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6259,
                              6280,
                              6304,
                              6328
                            ],
                            "referencedDeclaration": 6259,
                            "src": "8411:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8411:16:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32542,
                        "nodeType": "ExpressionStatement",
                        "src": "8411:16:60"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32543,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "8437:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8449:13:60",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2003,
                              "src": "8437:25:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32546,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32519,
                                "src": "8470:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "8437:35:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8437:37:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32549,
                        "nodeType": "ExpressionStatement",
                        "src": "8437:37:60"
                      },
                      {
                        "assignments": [
                          32551
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32551,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "8489:2:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32634,
                            "src": "8484:7:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32550,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8484:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32557,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32554,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31979,
                              "src": "8529:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 32555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8536:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 32552,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31934,
                              "src": "8494:14:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 32553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8509:19:60",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29792,
                            "src": "8494:34:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8494:44:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8484:54:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 32561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 32559,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32551,
                                "src": "8559:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 32560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8565:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8559:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "66697273742069642069732030",
                              "id": 32562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8568:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              },
                              "value": "first id is 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              }
                            ],
                            "id": 32558,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3923,
                              3944
                            ],
                            "referencedDeclaration": 3944,
                            "src": "8548:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 32563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8548:36:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32564,
                        "nodeType": "ExpressionStatement",
                        "src": "8548:36:60"
                      },
                      {
                        "assignments": [
                          32566
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32566,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "8599:6:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32634,
                            "src": "8594:11:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32565,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8594:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32571,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32569,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32551,
                              "src": "8633:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32567,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "8608:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8620:12:60",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "8608:24:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8608:28:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8594:42:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32573,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32519,
                              "src": "8655:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 32574,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32566,
                              "src": "8658:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32572,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4168,
                            "src": "8646:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8646:19:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32576,
                        "nodeType": "ExpressionStatement",
                        "src": "8646:19:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "77726f6e67207374616b696e6720706f6f6c20666f72206964",
                              "id": 32580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8734:27:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8a0e49f187b287866cfd14d78201efb65845407b44cc98ad9bfcd726884d8866",
                                "typeString": "literal_string \"wrong staking pool for id\""
                              },
                              "value": "wrong staking pool for id"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8a0e49f187b287866cfd14d78201efb65845407b44cc98ad9bfcd726884d8866",
                                "typeString": "literal_string \"wrong staking pool for id\""
                              }
                            ],
                            "expression": {
                              "id": 32577,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5471,
                              "src": "8718:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10752",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 32579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8721:12:60",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10238,
                            "src": "8718:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 32581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8718:44:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32582,
                        "nodeType": "ExpressionStatement",
                        "src": "8718:44:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "3639",
                              "id": 32588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8807:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_69_by_1",
                                "typeString": "int_const 69"
                              },
                              "value": "69"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_69_by_1",
                                "typeString": "int_const 69"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_69_by_1",
                                  "typeString": "int_const 69"
                                }
                              ],
                              "expression": {
                                "id": 32583,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "8772:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8784:12:60",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2043,
                              "src": "8772:24:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32586,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32521,
                                "src": "8804:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "8772:34:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 32589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8772:38:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32590,
                        "nodeType": "ExpressionStatement",
                        "src": "8772:38:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32596,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32551,
                              "src": "8894:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 32591,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "8859:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8871:12:60",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2043,
                              "src": "8859:24:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32594,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32521,
                                "src": "8891:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "8859:34:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 32597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8859:38:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32598,
                        "nodeType": "ExpressionStatement",
                        "src": "8859:38:60"
                      },
                      {
                        "assignments": [
                          32600
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32600,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "8912:7:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32634,
                            "src": "8907:12:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32599,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8907:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32605,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32603,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32551,
                              "src": "8947:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32601,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "8922:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8934:12:60",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "8922:24:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8922:28:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8907:43:60"
                      },
                      {
                        "assignments": [
                          32607
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32607,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "8965:3:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32634,
                            "src": "8960:8:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32606,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8960:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32617,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 32610,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32519,
                                "src": "8976:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8971:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32608,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8971:4:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8971:7:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 32614,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32521,
                                "src": "8986:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8981:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32612,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8981:4:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8981:7:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8971:17:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8960:28:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32619,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32607,
                              "src": "9007:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32620,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32600,
                              "src": "9012:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32618,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4168,
                            "src": "8998:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8998:22:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32622,
                        "nodeType": "ExpressionStatement",
                        "src": "8998:22:60"
                      },
                      {
                        "assignments": [
                          32624
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32624,
                            "mutability": "mutable",
                            "name": "totDeps",
                            "nameLocation": "9035:7:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32634,
                            "src": "9030:12:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32623,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9030:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32628,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 32625,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "9045:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9057:13:60",
                            "memberName": "totalDeposits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1653,
                            "src": "9045:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 32627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9045:27:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9030:42:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32630,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32607,
                              "src": "9091:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32631,
                              "name": "totDeps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32624,
                              "src": "9096:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32629,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4168,
                            "src": "9082:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9082:22:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32633,
                        "nodeType": "ExpressionStatement",
                        "src": "9082:22:60"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "020f12da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddToDeposit",
            "nameLocation": "8307:16:60",
            "parameters": {
              "id": 32522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32519,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "8331:1:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 32693,
                  "src": "8324:8:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 32518,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8324:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32521,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "8341:1:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 32693,
                  "src": "8334:8:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 32520,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8334:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8323:20:60"
            },
            "returnParameters": {
              "id": 32523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8351:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32859,
            "nodeType": "FunctionDefinition",
            "src": "9620:1282:60",
            "nodes": [],
            "body": {
              "id": 32858,
              "nodeType": "Block",
              "src": "9682:1220:60",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 32714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 32702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32700,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32695,
                        "src": "9693:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9697:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9693:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 32705,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32695,
                              "src": "9707:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 32704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9702:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32703,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9702:4:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9702:7:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 32709,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32697,
                              "src": "9717:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 32708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9712:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32707,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9712:4:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9712:7:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9702:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 32712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9723:8:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "9702:29:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9693:38:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 32803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32801,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32695,
                        "src": "10410:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10415:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "10410:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 32855,
                      "nodeType": "Block",
                      "src": "10553:343:60",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32823,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "10652:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32822,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6259,
                                6280,
                                6304,
                                6328
                              ],
                              "referencedDeclaration": 6259,
                              "src": "10642:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10642:16:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32825,
                          "nodeType": "ExpressionStatement",
                          "src": "10642:16:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32826,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "10668:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10680:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "10668:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32829,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32695,
                                  "src": "10701:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "10668:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10668:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32832,
                          "nodeType": "ExpressionStatement",
                          "src": "10668:37:60"
                        },
                        {
                          "assignments": [
                            32834
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 32834,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "10720:2:60",
                              "nodeType": "VariableDeclaration",
                              "scope": 32855,
                              "src": "10715:7:60",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 32833,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "10715:4:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 32840,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 32837,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "10760:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 32838,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10767:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 32835,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31934,
                                "src": "10725:14:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 32836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10740:19:60",
                              "memberName": "tokenOfOwnerByIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29792,
                              "src": "10725:34:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view external returns (uint256)"
                              }
                            },
                            "id": 32839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10725:44:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10715:54:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 32844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10795:43:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 32841,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5471,
                                "src": "10779:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10752",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10782:12:60",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10238,
                              "src": "10779:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10779:60:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32846,
                          "nodeType": "ExpressionStatement",
                          "src": "10779:60:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32852,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32834,
                                "src": "10884:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 32847,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "10849:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10861:12:60",
                                "memberName": "addToDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2043,
                                "src": "10849:24:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) payable external"
                                }
                              },
                              "id": 32851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32850,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32697,
                                  "src": "10881:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "10849:34:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10849:38:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32854,
                          "nodeType": "ExpressionStatement",
                          "src": "10849:38:60"
                        }
                      ]
                    },
                    "id": 32856,
                    "nodeType": "IfStatement",
                    "src": "10407:489:60",
                    "trueBody": {
                      "id": 32821,
                      "nodeType": "Block",
                      "src": "10418:129:60",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10444:20:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32804,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5471,
                                "src": "10428:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10752",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10431:12:60",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10238,
                              "src": "10428:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10428:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32809,
                          "nodeType": "ExpressionStatement",
                          "src": "10428:37:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32811,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "10485:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32810,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6259,
                                6280,
                                6304,
                                6328
                              ],
                              "referencedDeclaration": 6259,
                              "src": "10475:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10475:16:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32813,
                          "nodeType": "ExpressionStatement",
                          "src": "10475:16:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32814,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "10501:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10513:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "10501:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32817,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32695,
                                  "src": "10534:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "10501:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10501:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32820,
                          "nodeType": "ExpressionStatement",
                          "src": "10501:37:60"
                        }
                      ]
                    }
                  },
                  "id": 32857,
                  "nodeType": "IfStatement",
                  "src": "9690:1206:60",
                  "trueBody": {
                    "id": 32800,
                    "nodeType": "Block",
                    "src": "9732:669:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32716,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31979,
                              "src": "9752:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32715,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6259,
                              6280,
                              6304,
                              6328
                            ],
                            "referencedDeclaration": 6259,
                            "src": "9742:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9742:16:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32718,
                        "nodeType": "ExpressionStatement",
                        "src": "9742:16:60"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32719,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "9768:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9780:13:60",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2003,
                              "src": "9768:25:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32722,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32695,
                                "src": "9801:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "9768:35:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9768:37:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32725,
                        "nodeType": "ExpressionStatement",
                        "src": "9768:37:60"
                      },
                      {
                        "assignments": [
                          32727
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32727,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "9820:2:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32800,
                            "src": "9815:7:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32726,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9815:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32733,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32730,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31979,
                              "src": "9860:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 32731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9867:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 32728,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31934,
                              "src": "9825:14:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 32729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9840:19:60",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29792,
                            "src": "9825:34:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9825:44:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9815:54:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 32737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 32735,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32727,
                                "src": "9890:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 32736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9896:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9890:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "66697273742069642069732030",
                              "id": 32738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9899:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              },
                              "value": "first id is 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                "typeString": "literal_string \"first id is 0\""
                              }
                            ],
                            "id": 32734,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3923,
                              3944
                            ],
                            "referencedDeclaration": 3944,
                            "src": "9879:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 32739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9879:36:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32740,
                        "nodeType": "ExpressionStatement",
                        "src": "9879:36:60"
                      },
                      {
                        "assignments": [
                          32742
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32742,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "9930:6:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32800,
                            "src": "9925:11:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32741,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9925:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32747,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32745,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32727,
                              "src": "9964:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32743,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "9939:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9951:12:60",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "9939:24:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9939:28:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9925:42:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32749,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32695,
                              "src": "9986:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 32750,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32742,
                              "src": "9989:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "78203d20646570416d74",
                              "id": 32751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9997:12:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5149c7fe061070960194931258e2ce631d0b9783fa1c2a8619430b1c6b5003c",
                                "typeString": "literal_string \"x = depAmt\""
                              },
                              "value": "x = depAmt"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5149c7fe061070960194931258e2ce631d0b9783fa1c2a8619430b1c6b5003c",
                                "typeString": "literal_string \"x = depAmt\""
                              }
                            ],
                            "id": 32748,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4193,
                            "src": "9977:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 32752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9977:33:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32753,
                        "nodeType": "ExpressionStatement",
                        "src": "9977:33:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "77726f6e67207374616b696e6720706f6f6c20666f72206964",
                              "id": 32757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10074:27:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8a0e49f187b287866cfd14d78201efb65845407b44cc98ad9bfcd726884d8866",
                                "typeString": "literal_string \"wrong staking pool for id\""
                              },
                              "value": "wrong staking pool for id"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8a0e49f187b287866cfd14d78201efb65845407b44cc98ad9bfcd726884d8866",
                                "typeString": "literal_string \"wrong staking pool for id\""
                              }
                            ],
                            "expression": {
                              "id": 32754,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5471,
                              "src": "10058:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10752",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 32756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10061:12:60",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10238,
                            "src": "10058:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 32758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10058:44:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32759,
                        "nodeType": "ExpressionStatement",
                        "src": "10058:44:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32765,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32727,
                              "src": "10148:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 32760,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31931,
                                "src": "10112:12:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10125:12:60",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2043,
                              "src": "10112:25:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32763,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32697,
                                "src": "10145:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "10112:35:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 32766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10112:39:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32767,
                        "nodeType": "ExpressionStatement",
                        "src": "10112:39:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32773,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32727,
                              "src": "10266:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 32768,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "10231:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10243:12:60",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2043,
                              "src": "10231:24:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 32772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32771,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32697,
                                "src": "10263:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "10231:34:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 32774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10231:38:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32775,
                        "nodeType": "ExpressionStatement",
                        "src": "10231:38:60"
                      },
                      {
                        "assignments": [
                          32777
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32777,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "10284:7:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32800,
                            "src": "10279:12:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32776,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10279:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32782,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32780,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32727,
                              "src": "10319:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32778,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "10294:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10306:12:60",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "10294:24:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10294:28:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10279:43:60"
                      },
                      {
                        "assignments": [
                          32784
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32784,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "10337:3:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32800,
                            "src": "10332:8:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32783,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10332:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32794,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 32787,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32695,
                                "src": "10348:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10343:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32785,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "10343:4:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10343:7:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 32791,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32697,
                                "src": "10358:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 32790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10353:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32789,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "10353:4:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10353:7:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10343:17:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10332:28:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32796,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32784,
                              "src": "10379:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32797,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32777,
                              "src": "10384:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 32795,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4168,
                            "src": "10370:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 32798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10370:22:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32799,
                        "nodeType": "ExpressionStatement",
                        "src": "10370:22:60"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b7ab10ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddToDepositWrongPool",
            "nameLocation": "9629:25:60",
            "parameters": {
              "id": 32698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32695,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "9662:1:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 32859,
                  "src": "9655:8:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 32694,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9655:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32697,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "9672:1:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 32859,
                  "src": "9665:8:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 32696,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9665:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9654:20:60"
            },
            "returnParameters": {
              "id": 32699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9682:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33041,
            "nodeType": "FunctionDefinition",
            "src": "10908:1205:60",
            "nodes": [],
            "body": {
              "id": 33040,
              "nodeType": "Block",
              "src": "10957:1156:60",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 32879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 32872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 32868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32866,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32861,
                          "src": "10968:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 32867,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32863,
                          "src": "10973:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "src": "10968:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 32871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32869,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32861,
                          "src": "10978:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 32870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10982:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10978:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "10968:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 32875,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32861,
                            "src": "10992:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          ],
                          "id": 32874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10987:4:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 32873,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "10987:4:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10987:7:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 32877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10998:8:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "10987:19:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10968:38:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 32954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32952,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32861,
                        "src": "11505:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 32953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11510:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "11505:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 32975,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32861,
                              "src": "11656:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "id": 32974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11651:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32973,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11651:4:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11651:7:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 32977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11661:8:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32"
                        },
                        "src": "11651:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 33036,
                        "nodeType": "Block",
                        "src": "11829:278:60",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 32998,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31979,
                                  "src": "11849:5:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 32997,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  6259,
                                  6280,
                                  6304,
                                  6328
                                ],
                                "referencedDeclaration": 6259,
                                "src": "11839:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 32999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11839:16:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33000,
                            "nodeType": "ExpressionStatement",
                            "src": "11839:16:60"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 33001,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31928,
                                    "src": "11865:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33003,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11877:13:60",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2003,
                                  "src": "11865:25:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 33005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 33004,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32861,
                                    "src": "11898:1:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "11865:35:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11865:37:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33007,
                            "nodeType": "ExpressionStatement",
                            "src": "11865:37:60"
                          },
                          {
                            "assignments": [
                              33009
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 33009,
                                "mutability": "mutable",
                                "name": "id",
                                "nameLocation": "11917:2:60",
                                "nodeType": "VariableDeclaration",
                                "scope": 33036,
                                "src": "11912:7:60",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 33008,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11912:4:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 33015,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 33012,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31979,
                                  "src": "11957:5:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 33013,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11964:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 33010,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31934,
                                  "src": "11922:14:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 33011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11937:19:60",
                                "memberName": "tokenOfOwnerByIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29792,
                                "src": "11922:34:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 33014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11922:44:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "11912:54:60"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 33019,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 33017,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33009,
                                    "src": "11987:2:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 33018,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11993:1:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "11987:7:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "66697273742069642069732030",
                                  "id": 33020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11996:15:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                    "typeString": "literal_string \"first id is 0\""
                                  },
                                  "value": "first id is 0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_4631ed9b9af7794e979cc5eaa084a97d514674c339f0f72425a3c9d85091c36a",
                                    "typeString": "literal_string \"first id is 0\""
                                  }
                                ],
                                "id": 33016,
                                "name": "assertTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  3923,
                                  3944
                                ],
                                "referencedDeclaration": 3944,
                                "src": "11976:10:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory)"
                                }
                              },
                              "id": 33021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11976:36:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33022,
                            "nodeType": "ExpressionStatement",
                            "src": "11976:36:60"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "6e6f7420656e6f756768206465706f7369746564",
                                  "id": 33026,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12038:22:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  },
                                  "value": "not enough deposited"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  }
                                ],
                                "expression": {
                                  "id": 33023,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5471,
                                  "src": "12022:2:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$10752",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 33025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12025:12:60",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10238,
                                "src": "12022:15:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 33027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12022:39:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33028,
                            "nodeType": "ExpressionStatement",
                            "src": "12022:39:60"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33032,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33009,
                                  "src": "12092:2:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 33033,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32863,
                                  "src": "12096:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                ],
                                "expression": {
                                  "id": 33029,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "12071:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12083:8:60",
                                "memberName": "withdraw",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2327,
                                "src": "12071:20:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256,uint256) external"
                                }
                              },
                              "id": 33034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12071:27:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33035,
                            "nodeType": "ExpressionStatement",
                            "src": "12071:27:60"
                          }
                        ]
                      },
                      "id": 33037,
                      "nodeType": "IfStatement",
                      "src": "11648:459:60",
                      "trueBody": {
                        "id": 32996,
                        "nodeType": "Block",
                        "src": "11671:152:60",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                  "id": 32982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11697:43:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  },
                                  "value": "total deposits cannot be more than 32 Eth"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  }
                                ],
                                "expression": {
                                  "id": 32979,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5471,
                                  "src": "11681:2:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$10752",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 32981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11684:12:60",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10238,
                                "src": "11681:15:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 32983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11681:60:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32984,
                            "nodeType": "ExpressionStatement",
                            "src": "11681:60:60"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 32986,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31979,
                                  "src": "11761:5:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 32985,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  6259,
                                  6280,
                                  6304,
                                  6328
                                ],
                                "referencedDeclaration": 6259,
                                "src": "11751:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 32987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11751:16:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32988,
                            "nodeType": "ExpressionStatement",
                            "src": "11751:16:60"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 32989,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31928,
                                    "src": "11777:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 32991,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11789:13:60",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2003,
                                  "src": "11777:25:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 32993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 32992,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32861,
                                    "src": "11810:1:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "11777:35:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11777:37:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 32995,
                            "nodeType": "ExpressionStatement",
                            "src": "11777:37:60"
                          }
                        ]
                      }
                    },
                    "id": 33038,
                    "nodeType": "IfStatement",
                    "src": "11502:605:60",
                    "trueBody": {
                      "id": 32972,
                      "nodeType": "Block",
                      "src": "11513:129:60",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 32958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11539:20:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 32955,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5471,
                                "src": "11523:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10752",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 32957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11526:12:60",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10238,
                              "src": "11523:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 32959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11523:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32960,
                          "nodeType": "ExpressionStatement",
                          "src": "11523:37:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32962,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "11580:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 32961,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6259,
                                6280,
                                6304,
                                6328
                              ],
                              "referencedDeclaration": 6259,
                              "src": "11570:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 32963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11570:16:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32964,
                          "nodeType": "ExpressionStatement",
                          "src": "11570:16:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 32965,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "11596:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 32967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11608:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "11596:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 32969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 32968,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32861,
                                  "src": "11629:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "11596:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11596:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32971,
                          "nodeType": "ExpressionStatement",
                          "src": "11596:37:60"
                        }
                      ]
                    }
                  },
                  "id": 33039,
                  "nodeType": "IfStatement",
                  "src": "10965:1142:60",
                  "trueBody": {
                    "id": 32951,
                    "nodeType": "Block",
                    "src": "11007:489:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32881,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31979,
                              "src": "11027:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 32880,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6259,
                              6280,
                              6304,
                              6328
                            ],
                            "referencedDeclaration": 6259,
                            "src": "11017:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 32882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11017:16:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32883,
                        "nodeType": "ExpressionStatement",
                        "src": "11017:16:60"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 32884,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "11043:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 32886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11055:13:60",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2003,
                              "src": "11043:25:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 32888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 32887,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32861,
                                "src": "11076:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "11043:35:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 32889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11043:37:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32890,
                        "nodeType": "ExpressionStatement",
                        "src": "11043:37:60"
                      },
                      {
                        "assignments": [
                          32892
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32892,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "11095:2:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32951,
                            "src": "11090:7:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32891,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11090:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32898,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32895,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31979,
                              "src": "11135:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 32896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11142:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 32893,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31934,
                              "src": "11100:14:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$911",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 32894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11115:19:60",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29792,
                            "src": "11100:34:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11100:44:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11090:54:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 32902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 32900,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32892,
                                "src": "11165:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 32901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11171:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11165:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "66697273742069642073686f756c642062652030",
                              "id": 32903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11174:22:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f634d6dfa91abdb9a8ea9f887107aaedb4d64d303182534e0f779f901ce2eea8",
                                "typeString": "literal_string \"first id should be 0\""
                              },
                              "value": "first id should be 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f634d6dfa91abdb9a8ea9f887107aaedb4d64d303182534e0f779f901ce2eea8",
                                "typeString": "literal_string \"first id should be 0\""
                              }
                            ],
                            "id": 32899,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3923,
                              3944
                            ],
                            "referencedDeclaration": 3944,
                            "src": "11154:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 32904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11154:43:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32905,
                        "nodeType": "ExpressionStatement",
                        "src": "11154:43:60"
                      },
                      {
                        "assignments": [
                          32907
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32907,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "11212:6:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32951,
                            "src": "11207:11:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32906,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11207:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32912,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32910,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32892,
                              "src": "11246:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32908,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "11221:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11233:12:60",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "11221:24:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11221:28:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11207:42:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32914,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32861,
                              "src": "11268:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 32915,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32907,
                              "src": "11271:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "6465706f73697420616d6f756e742073686f756c642062652078",
                              "id": 32916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11279:28:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_57454a5fb6f82784e3c7ccdcc153f71cbe3984c5f4580c5bddb74dce64e9be3b",
                                "typeString": "literal_string \"deposit amount should be x\""
                              },
                              "value": "deposit amount should be x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_57454a5fb6f82784e3c7ccdcc153f71cbe3984c5f4580c5bddb74dce64e9be3b",
                                "typeString": "literal_string \"deposit amount should be x\""
                              }
                            ],
                            "id": 32913,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4193,
                            "src": "11259:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 32917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11259:49:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32918,
                        "nodeType": "ExpressionStatement",
                        "src": "11259:49:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32922,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32892,
                              "src": "11339:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32923,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32863,
                              "src": "11343:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "expression": {
                              "id": 32919,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "11318:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11330:8:60",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2327,
                            "src": "11318:20:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 32924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11318:27:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32925,
                        "nodeType": "ExpressionStatement",
                        "src": "11318:27:60"
                      },
                      {
                        "assignments": [
                          32927
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32927,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "11360:7:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32951,
                            "src": "11355:12:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32926,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11355:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32932,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 32930,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32892,
                              "src": "11395:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 32928,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "11370:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 32929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11382:12:60",
                            "memberName": "depositForId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1638,
                            "src": "11370:24:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 32931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11370:28:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11355:43:60"
                      },
                      {
                        "assignments": [
                          32934
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 32934,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "11413:3:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 32951,
                            "src": "11408:8:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 32933,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11408:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 32944,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 32937,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32861,
                                "src": "11424:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 32936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11419:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32935,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "11419:4:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11419:7:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 32941,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32863,
                                "src": "11434:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 32940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11429:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 32939,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "11429:4:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11429:7:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11419:17:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11408:28:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32946,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32934,
                              "src": "11455:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32947,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32927,
                              "src": "11460:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "78202d207920732f62203d20746f74",
                              "id": 32948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11469:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5815aca85cc061142d1cbb42b2da86103f93e77a20ff6b31c861ff7a8a2f1ab9",
                                "typeString": "literal_string \"x - y s/b = tot\""
                              },
                              "value": "x - y s/b = tot"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5815aca85cc061142d1cbb42b2da86103f93e77a20ff6b31c861ff7a8a2f1ab9",
                                "typeString": "literal_string \"x - y s/b = tot\""
                              }
                            ],
                            "id": 32945,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4193,
                            "src": "11446:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 32949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11446:41:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32950,
                        "nodeType": "ExpressionStatement",
                        "src": "11446:41:60"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "90f805d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "10917:12:60",
            "parameters": {
              "id": 32864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32861,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "10937:1:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 33041,
                  "src": "10930:8:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 32860,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "10930:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32863,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "10947:1:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 33041,
                  "src": "10940:8:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 32862,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "10940:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10929:20:60"
            },
            "returnParameters": {
              "id": 32865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10957:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33062,
            "nodeType": "FunctionDefinition",
            "src": "12119:158:60",
            "nodes": [],
            "body": {
              "id": 33061,
              "nodeType": "Block",
              "src": "12160:117:60",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33045,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31979,
                        "src": "12174:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33044,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6169,
                        6190,
                        6214,
                        6238
                      ],
                      "referencedDeclaration": 6169,
                      "src": "12169:4:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12169:11:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33047,
                  "nodeType": "ExpressionStatement",
                  "src": "12169:11:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d757374206465706f736974206574686572",
                        "id": 33051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12204:20:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                          "typeString": "literal_string \"must deposit ether\""
                        },
                        "value": "must deposit ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                          "typeString": "literal_string \"must deposit ether\""
                        }
                      ],
                      "expression": {
                        "id": 33048,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "12188:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12191:12:60",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10238,
                      "src": "12188:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12188:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33053,
                  "nodeType": "ExpressionStatement",
                  "src": "12188:37:60"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33054,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31928,
                          "src": "12233:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12245:13:60",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2003,
                        "src": "12233:25:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "30",
                          "id": 33057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12266:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "src": "12233:35:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12233:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33060,
                  "nodeType": "ExpressionStatement",
                  "src": "12233:37:60"
                }
              ]
            },
            "functionSelector": "5176a102",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEmptyStakeModifier",
            "nameLocation": "12128:22:60",
            "parameters": {
              "id": 33042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12150:2:60"
            },
            "returnParameters": {
              "id": 33043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12160:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33083,
            "nodeType": "FunctionDefinition",
            "src": "12283:195:60",
            "nodes": [],
            "body": {
              "id": 33082,
              "nodeType": "Block",
              "src": "12320:158:60",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33066,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31979,
                        "src": "12333:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33065,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6169,
                        6190,
                        6214,
                        6238
                      ],
                      "referencedDeclaration": 6169,
                      "src": "12328:4:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12328:11:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33068,
                  "nodeType": "ExpressionStatement",
                  "src": "12328:11:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                        "id": 33072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12363:43:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                          "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                        },
                        "value": "total deposits cannot be more than 32 Eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                          "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                        }
                      ],
                      "expression": {
                        "id": 33069,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "12347:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12350:12:60",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10238,
                      "src": "12347:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12347:60:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33074,
                  "nodeType": "ExpressionStatement",
                  "src": "12347:60:60"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33075,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31928,
                          "src": "12415:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12427:13:60",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2003,
                        "src": "12415:25:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3333303030303030303030303030303030303030",
                          "id": 33078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12448:20:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_33000000000000000000_by_1",
                            "typeString": "int_const 33000000000000000000"
                          },
                          "value": "33000000000000000000"
                        }
                      ],
                      "src": "12415:54:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12415:56:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33081,
                  "nodeType": "ExpressionStatement",
                  "src": "12415:56:60"
                }
              ]
            },
            "functionSelector": "8d299cc4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTooMuchDeposit",
            "nameLocation": "12292:18:60",
            "parameters": {
              "id": 33063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12310:2:60"
            },
            "returnParameters": {
              "id": 33064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12320:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33188,
            "nodeType": "FunctionDefinition",
            "src": "12484:1261:60",
            "nodes": [],
            "body": {
              "id": 33187,
              "nodeType": "Block",
              "src": "12512:1233:60",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33087
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33087,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "12561:14:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 33187,
                      "src": "12556:19:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33086,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12556:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33093,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 33090,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31928,
                          "src": "12586:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        ],
                        "id": 33089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12578:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 33088,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12578:7:60",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12578:20:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12599:7:60",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "12578:28:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12556:50:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33095,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31979,
                        "src": "12669:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33094,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6169,
                        6190,
                        6214,
                        6238
                      ],
                      "referencedDeclaration": 6169,
                      "src": "12664:4:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12664:11:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33097,
                  "nodeType": "ExpressionStatement",
                  "src": "12664:11:60"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33098,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31928,
                          "src": "12683:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12695:13:60",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2003,
                        "src": "12683:25:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12716:20:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "12683:54:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12683:56:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33104,
                  "nodeType": "ExpressionStatement",
                  "src": "12683:56:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33106,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33087,
                          "src": "12756:14:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12773:20:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        },
                        "src": "12756:37:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33111,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "12803:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 33110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12795:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33109,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12795:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12795:20:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12816:7:60",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "12795:28:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33105,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4168,
                      "src": "12747:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12747:77:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33115,
                  "nodeType": "ExpressionStatement",
                  "src": "12747:77:60"
                },
                {
                  "assignments": [
                    33117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33117,
                      "mutability": "mutable",
                      "name": "deposit_count_hash",
                      "nameLocation": "12840:18:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 33187,
                      "src": "12832:26:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 33116,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12832:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33123,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 33119,
                            "name": "depositContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31970,
                            "src": "12871:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDepositContract_$3111",
                              "typeString": "contract IDepositContract"
                            }
                          },
                          "id": 33120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12887:17:60",
                          "memberName": "get_deposit_count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3110,
                          "src": "12871:33:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view external returns (bytes memory)"
                          }
                        },
                        "id": 33121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12871:35:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33118,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12861:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 33122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12861:46:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12832:75:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33125,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "12920:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33124,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6169,
                        6190,
                        6214,
                        6238
                      ],
                      "referencedDeclaration": 6169,
                      "src": "12915:4:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12915:15:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33127,
                  "nodeType": "ExpressionStatement",
                  "src": "12915:15:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33131,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31994,
                        "src": "13259:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33132,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31997,
                        "src": "13267:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33133,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32000,
                        "src": "13291:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33134,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32003,
                        "src": "13302:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33128,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "13241:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13253:5:60",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2083,
                      "src": "13241:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13241:79:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33136,
                  "nodeType": "ExpressionStatement",
                  "src": "13241:79:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33138,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33087,
                        "src": "13337:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33141,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "13361:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 33140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13353:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33139,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13353:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13353:20:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13374:7:60",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "13353:28:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33137,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4168,
                      "src": "13328:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13328:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33145,
                  "nodeType": "ExpressionStatement",
                  "src": "13328:54:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 33153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33148,
                                  "name": "depositContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31970,
                                  "src": "13412:15:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDepositContract_$3111",
                                    "typeString": "contract IDepositContract"
                                  }
                                },
                                "id": 33149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13428:17:60",
                                "memberName": "get_deposit_count",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3110,
                                "src": "13412:33:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () view external returns (bytes memory)"
                                }
                              },
                              "id": 33150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13412:35:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 33147,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "13402:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 33151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13402:46:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 33152,
                          "name": "deposit_count_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33117,
                          "src": "13452:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "13402:68:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33146,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6771,
                        6785
                      ],
                      "referencedDeclaration": 6771,
                      "src": "13390:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 33154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13390:81:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33155,
                  "nodeType": "ExpressionStatement",
                  "src": "13390:81:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33157,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31979,
                        "src": "13544:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33156,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6259,
                        6280,
                        6304,
                        6328
                      ],
                      "referencedDeclaration": 6259,
                      "src": "13534:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13534:16:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33159,
                  "nodeType": "ExpressionStatement",
                  "src": "13534:16:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 33163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13574:24:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 33160,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "13558:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13561:12:60",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10238,
                      "src": "13558:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13558:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33165,
                  "nodeType": "ExpressionStatement",
                  "src": "13558:41:60"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33166,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31928,
                          "src": "13607:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13619:13:60",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2003,
                        "src": "13607:25:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 33169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13640:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "13607:35:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13607:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33172,
                  "nodeType": "ExpressionStatement",
                  "src": "13607:37:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 33176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13668:24:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 33173,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "13652:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13655:12:60",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10238,
                      "src": "13652:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13652:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33178,
                  "nodeType": "ExpressionStatement",
                  "src": "13652:41:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 33184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13736:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 33179,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31928,
                          "src": "13701:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13713:12:60",
                        "memberName": "addToDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2043,
                        "src": "13701:24:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 33183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 33182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13733:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "13701:34:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 33185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13701:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33186,
                  "nodeType": "ExpressionStatement",
                  "src": "13701:37:60"
                }
              ]
            },
            "functionSelector": "3a1143da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStake",
            "nameLocation": "12493:9:60",
            "parameters": {
              "id": 33084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12502:2:60"
            },
            "returnParameters": {
              "id": 33085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12512:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33267,
            "nodeType": "FunctionDefinition",
            "src": "13751:1002:60",
            "nodes": [],
            "body": {
              "id": 33266,
              "nodeType": "Block",
              "src": "13786:967:60",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33192,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "13800:14:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 33266,
                      "src": "13795:19:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33191,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13795:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33198,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 33195,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31928,
                          "src": "13825:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        ],
                        "id": 33194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13817:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 33193,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13817:7:60",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13817:20:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13838:7:60",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "13817:28:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13795:50:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33200,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31979,
                        "src": "13908:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33199,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6169,
                        6190,
                        6214,
                        6238
                      ],
                      "referencedDeclaration": 6169,
                      "src": "13903:4:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13903:11:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33202,
                  "nodeType": "ExpressionStatement",
                  "src": "13903:11:60"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33203,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31928,
                          "src": "13922:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13934:13:60",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2003,
                        "src": "13922:25:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13955:20:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "13922:54:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13922:56:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33209,
                  "nodeType": "ExpressionStatement",
                  "src": "13922:56:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33211,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33192,
                          "src": "13995:14:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14012:20:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        },
                        "src": "13995:37:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33216,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "14042:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 33215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14034:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33214,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14034:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14034:20:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14055:7:60",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "14034:28:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33210,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4168,
                      "src": "13986:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13986:77:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33220,
                  "nodeType": "ExpressionStatement",
                  "src": "13986:77:60"
                },
                {
                  "assignments": [
                    33222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33222,
                      "mutability": "mutable",
                      "name": "deposit_count_hash",
                      "nameLocation": "14079:18:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 33266,
                      "src": "14071:26:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 33221,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14071:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33228,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 33224,
                            "name": "depositContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31970,
                            "src": "14110:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDepositContract_$3111",
                              "typeString": "contract IDepositContract"
                            }
                          },
                          "id": 33225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14126:17:60",
                          "memberName": "get_deposit_count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3110,
                          "src": "14110:33:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view external returns (bytes memory)"
                          }
                        },
                        "id": 33226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14110:35:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33223,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "14100:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 33227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14100:46:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14071:75:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33230,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "14164:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33229,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6259,
                        6280,
                        6304,
                        6328
                      ],
                      "referencedDeclaration": 6259,
                      "src": "14154:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14154:20:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33232,
                  "nodeType": "ExpressionStatement",
                  "src": "14154:20:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33236,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31994,
                        "src": "14507:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33237,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31997,
                        "src": "14515:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33238,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32000,
                        "src": "14539:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33239,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32003,
                        "src": "14550:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33233,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "14485:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14497:9:60",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2175,
                      "src": "14485:21:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14485:83:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33241,
                  "nodeType": "ExpressionStatement",
                  "src": "14485:83:60"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33242,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "14576:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14588:5:60",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2093,
                      "src": "14576:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 33245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14576:19:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33246,
                  "nodeType": "ExpressionStatement",
                  "src": "14576:19:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33248,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33192,
                        "src": "14612:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33251,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "14636:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 33250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14628:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33249,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14628:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14628:20:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14649:7:60",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "14628:28:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33247,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4168,
                      "src": "14603:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14603:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33255,
                  "nodeType": "ExpressionStatement",
                  "src": "14603:54:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 33263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33258,
                                  "name": "depositContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31970,
                                  "src": "14687:15:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDepositContract_$3111",
                                    "typeString": "contract IDepositContract"
                                  }
                                },
                                "id": 33259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14703:17:60",
                                "memberName": "get_deposit_count",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3110,
                                "src": "14687:33:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () view external returns (bytes memory)"
                                }
                              },
                              "id": 33260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14687:35:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 33257,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "14677:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 33261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14677:46:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 33262,
                          "name": "deposit_count_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33222,
                          "src": "14727:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "14677:68:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33256,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6771,
                        6785
                      ],
                      "referencedDeclaration": 6771,
                      "src": "14665:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 33264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14665:81:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33265,
                  "nodeType": "ExpressionStatement",
                  "src": "14665:81:60"
                }
              ]
            },
            "functionSelector": "5dcf6be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStakeTwoStep",
            "nameLocation": "13760:16:60",
            "parameters": {
              "id": 33189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13776:2:60"
            },
            "returnParameters": {
              "id": 33190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13786:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33599,
            "nodeType": "FunctionDefinition",
            "src": "14757:3116:60",
            "nodes": [],
            "body": {
              "id": 33598,
              "nodeType": "Block",
              "src": "14803:3070:60",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33275,
                      "mutability": "mutable",
                      "name": "maxUint32",
                      "nameLocation": "14816:9:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 33598,
                      "src": "14811:14:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33274,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14811:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33277,
                  "initialValue": {
                    "hexValue": "34323934393637323935",
                    "id": 33276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14828:10:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "4294967295"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14811:27:60"
                },
                {
                  "assignments": [
                    33279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33279,
                      "mutability": "mutable",
                      "name": "aliceDeposit",
                      "nameLocation": "14851:12:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 33598,
                      "src": "14846:17:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33278,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14846:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33288,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 33282,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33269,
                            "src": "14871:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 33281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14866:4:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 33280,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "14866:4:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14866:7:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3331393939393939393939393939393939393939",
                        "id": 33284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14876:20:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31999999999999999999_by_1",
                          "typeString": "int_const 31999999999999999999"
                        },
                        "value": "31999999999999999999"
                      },
                      "src": "14866:30:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 33286,
                      "name": "maxUint32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33275,
                      "src": "14899:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14866:42:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14846:62:60"
                },
                {
                  "assignments": [
                    33290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33290,
                      "mutability": "mutable",
                      "name": "bobDeposit",
                      "nameLocation": "14921:10:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 33598,
                      "src": "14916:15:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33289,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14916:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33294,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3332303030303030303030303030303030303030",
                      "id": 33291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14934:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32000000000000000000_by_1",
                        "typeString": "int_const 32000000000000000000"
                      },
                      "value": "32000000000000000000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 33292,
                      "name": "aliceDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33279,
                      "src": "14957:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14934:35:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14916:53:60"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33295,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33269,
                        "src": "14980:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14985:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "14980:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33298,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33271,
                        "src": "14990:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 33299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14994:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "14990:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14980:17:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33519,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33269,
                        "src": "17303:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17308:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "17303:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 33595,
                      "nodeType": "Block",
                      "src": "17446:420:60",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33541,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "17461:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33540,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6169,
                                6190,
                                6214,
                                6238
                              ],
                              "referencedDeclaration": 6169,
                              "src": "17456:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17456:11:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33543,
                          "nodeType": "ExpressionStatement",
                          "src": "17456:11:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33544,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "17477:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17489:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "17477:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33547,
                                  "name": "aliceDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33279,
                                  "src": "17510:12:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "17477:46:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17477:48:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33550,
                          "nodeType": "ExpressionStatement",
                          "src": "17477:48:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33552,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31985,
                                "src": "17540:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33551,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6169,
                                6190,
                                6214,
                                6238
                              ],
                              "referencedDeclaration": 6169,
                              "src": "17535:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17535:9:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33554,
                          "nodeType": "ExpressionStatement",
                          "src": "17535:9:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33555,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "17554:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17566:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "17554:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33558,
                                  "name": "bobDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33290,
                                  "src": "17587:10:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "17554:44:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17554:46:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33561,
                          "nodeType": "ExpressionStatement",
                          "src": "17554:46:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33563,
                                "name": "contOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31973,
                                "src": "17620:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 33562,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6259,
                                6280,
                                6304,
                                6328
                              ],
                              "referencedDeclaration": 6259,
                              "src": "17610:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17610:20:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33565,
                          "nodeType": "ExpressionStatement",
                          "src": "17610:20:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33569,
                                "name": "pubkey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31994,
                                "src": "17658:6:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 33570,
                                "name": "withdrawal_credentials",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31997,
                                "src": "17666:22:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 33571,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32000,
                                "src": "17690:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 33572,
                                "name": "deposit_data_root",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32003,
                                "src": "17701:17:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 33566,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "17640:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17652:5:60",
                              "memberName": "stake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2083,
                              "src": "17640:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                              }
                            },
                            "id": 33573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17640:79:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33574,
                          "nodeType": "ExpressionStatement",
                          "src": "17640:79:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33580,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33271,
                                "src": "17759:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33577,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31928,
                                    "src": "17737:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33576,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "17729:8:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 33575,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17729:8:60",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17729:20:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 33579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17750:8:60",
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "17729:29:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 33581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17729:32:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33582,
                          "nodeType": "ExpressionStatement",
                          "src": "17729:32:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                "id": 33586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17787:39:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                },
                                "value": "must be greater than 100 wei to claim"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                }
                              ],
                              "expression": {
                                "id": 33583,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5471,
                                "src": "17771:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10752",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17774:12:60",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10238,
                              "src": "17771:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17771:56:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33588,
                          "nodeType": "ExpressionStatement",
                          "src": "17771:56:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 33592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17855:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 33589,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "17837:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17849:5:60",
                              "memberName": "claim",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2496,
                              "src": "17837:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) external"
                              }
                            },
                            "id": 33593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17837:20:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33594,
                          "nodeType": "ExpressionStatement",
                          "src": "17837:20:60"
                        }
                      ]
                    },
                    "id": 33596,
                    "nodeType": "IfStatement",
                    "src": "17300:566:60",
                    "trueBody": {
                      "id": 33539,
                      "nodeType": "Block",
                      "src": "17311:129:60",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 33525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17337:20:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 33522,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5471,
                                "src": "17321:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10752",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17324:12:60",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10238,
                              "src": "17321:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17321:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33527,
                          "nodeType": "ExpressionStatement",
                          "src": "17321:37:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33529,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "17378:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33528,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6259,
                                6280,
                                6304,
                                6328
                              ],
                              "referencedDeclaration": 6259,
                              "src": "17368:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17368:16:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33531,
                          "nodeType": "ExpressionStatement",
                          "src": "17368:16:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33532,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "17394:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17406:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "17394:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33535,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33269,
                                  "src": "17427:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "src": "17394:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17394:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33538,
                          "nodeType": "ExpressionStatement",
                          "src": "17394:37:60"
                        }
                      ]
                    }
                  },
                  "id": 33597,
                  "nodeType": "IfStatement",
                  "src": "14977:2889:60",
                  "trueBody": {
                    "id": 33518,
                    "nodeType": "Block",
                    "src": "14998:2296:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33303,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31979,
                              "src": "15013:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33302,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6169,
                              6190,
                              6214,
                              6238
                            ],
                            "referencedDeclaration": 6169,
                            "src": "15008:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15008:11:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33305,
                        "nodeType": "ExpressionStatement",
                        "src": "15008:11:60"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33306,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "15029:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15041:13:60",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2003,
                              "src": "15029:25:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33309,
                                "name": "aliceDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33279,
                                "src": "15062:12:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "15029:46:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15029:48:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33312,
                        "nodeType": "ExpressionStatement",
                        "src": "15029:48:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33314,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31985,
                              "src": "15092:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33313,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6169,
                              6190,
                              6214,
                              6238
                            ],
                            "referencedDeclaration": 6169,
                            "src": "15087:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15087:9:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33316,
                        "nodeType": "ExpressionStatement",
                        "src": "15087:9:60"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33317,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "15106:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15118:13:60",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2003,
                              "src": "15106:25:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33320,
                                "name": "bobDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33290,
                                "src": "15139:10:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "15106:44:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15106:46:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33323,
                        "nodeType": "ExpressionStatement",
                        "src": "15106:46:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33329,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33271,
                              "src": "15192:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33326,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "15170:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15162:8:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 33324,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15162:8:60",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15162:20:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 33328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15183:8:60",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "15162:29:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 33330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15162:32:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33331,
                        "nodeType": "ExpressionStatement",
                        "src": "15162:32:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "757365207769746864726177207768656e206e6f74207374616b6564",
                              "id": 33335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15220:30:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              },
                              "value": "use withdraw when not staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              }
                            ],
                            "expression": {
                              "id": 33332,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5471,
                              "src": "15204:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10752",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15207:12:60",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10238,
                            "src": "15204:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 33336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15204:47:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33337,
                        "nodeType": "ExpressionStatement",
                        "src": "15204:47:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 33341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15279:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 33338,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "15261:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15273:5:60",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2496,
                            "src": "15261:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 33342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15261:20:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33343,
                        "nodeType": "ExpressionStatement",
                        "src": "15261:20:60"
                      },
                      {
                        "assignments": [
                          33345
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33345,
                            "mutability": "mutable",
                            "name": "aliceGetShare",
                            "nameLocation": "15296:13:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 33518,
                            "src": "15291:18:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33344,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15291:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33350,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15333:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33346,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "15312:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15324:8:60",
                            "memberName": "getShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2521,
                            "src": "15312:20:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15312:23:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15291:44:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33352,
                              "name": "aliceGetShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33345,
                              "src": "15354:13:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 33353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15369:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "616c69636547657453686172653d30",
                              "id": 33354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15372:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eabc20dd64a59debd059fb8384ce8ceb182218cd0505a83b470face57311fbb4",
                                "typeString": "literal_string \"aliceGetShare=0\""
                              },
                              "value": "aliceGetShare=0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_eabc20dd64a59debd059fb8384ce8ceb182218cd0505a83b470face57311fbb4",
                                "typeString": "literal_string \"aliceGetShare=0\""
                              }
                            ],
                            "id": 33351,
                            "name": "assertGt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4347,
                              4372,
                              4402,
                              4427
                            ],
                            "referencedDeclaration": 4372,
                            "src": "15345:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 33355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15345:45:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33356,
                        "nodeType": "ExpressionStatement",
                        "src": "15345:45:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33358,
                              "name": "contOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31973,
                              "src": "15405:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33357,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6169,
                              6190,
                              6214,
                              6238
                            ],
                            "referencedDeclaration": 6169,
                            "src": "15400:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15400:15:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33360,
                        "nodeType": "ExpressionStatement",
                        "src": "15400:15:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33364,
                              "name": "pubkey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31994,
                              "src": "15443:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33365,
                              "name": "withdrawal_credentials",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31997,
                              "src": "15451:22:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33366,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32000,
                              "src": "15475:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33367,
                              "name": "deposit_data_root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32003,
                              "src": "15486:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 33361,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "15425:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15437:5:60",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2083,
                            "src": "15425:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                            }
                          },
                          "id": 33368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15425:79:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33369,
                        "nodeType": "ExpressionStatement",
                        "src": "15425:79:60"
                      },
                      {
                        "assignments": [
                          33371
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33371,
                            "mutability": "mutable",
                            "name": "aliceBalance",
                            "nameLocation": "15519:12:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 33518,
                            "src": "15514:17:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33370,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15514:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33377,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33374,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "15542:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15534:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33372,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15534:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15534:14:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15549:7:60",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "15534:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15514:42:60"
                      },
                      {
                        "assignments": [
                          33379
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33379,
                            "mutability": "mutable",
                            "name": "bobBalance",
                            "nameLocation": "15571:10:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 33518,
                            "src": "15566:15:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33378,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15566:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33385,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33382,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31985,
                                "src": "15592:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15584:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33380,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15584:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15584:12:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15597:7:60",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "15584:20:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15566:38:60"
                      },
                      {
                        "assignments": [
                          33387
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33387,
                            "mutability": "mutable",
                            "name": "aliceShare",
                            "nameLocation": "15619:10:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 33518,
                            "src": "15614:15:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33386,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15614:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33400,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 33390,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 31928,
                                          "src": "15641:11:60",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 33389,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "15633:7:60",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 33388,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "15633:7:60",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 33391,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15633:20:60",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 33392,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15654:7:60",
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "15633:28:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 33393,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "15632:30:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3935",
                                "id": 33394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15665:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_95_by_1",
                                  "typeString": "int_const 95"
                                },
                                "value": "95"
                              },
                              "src": "15632:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 33396,
                              "name": "aliceDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33279,
                              "src": "15670:12:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15632:50:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "33323030303030303030303030303030303030303030",
                            "id": 33398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15685:22:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3200000000000000000000_by_1",
                              "typeString": "int_const 3200000000000000000000"
                            },
                            "value": "3200000000000000000000"
                          },
                          "src": "15632:75:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15614:93:60"
                      },
                      {
                        "assignments": [
                          33402
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33402,
                            "mutability": "mutable",
                            "name": "bobShare",
                            "nameLocation": "15737:8:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 33518,
                            "src": "15732:13:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33401,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15732:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33415,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 33405,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 31928,
                                          "src": "15757:11:60",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 33404,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "15749:7:60",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 33403,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "15749:7:60",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 33406,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15749:20:60",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 33407,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15770:7:60",
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "15749:28:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 33408,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "15748:30:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3935",
                                "id": 33409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15780:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_95_by_1",
                                  "typeString": "int_const 95"
                                },
                                "value": "95"
                              },
                              "src": "15748:34:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 33411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15785:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "15748:40:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 33413,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33387,
                            "src": "15791:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15748:53:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15732:69:60"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33416,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33387,
                            "src": "16214:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16228:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "16214:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33423,
                        "nodeType": "IfStatement",
                        "src": "16211:34:60",
                        "trueBody": {
                          "expression": {
                            "id": 33421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33419,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33387,
                              "src": "16231:10:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16244:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "16231:14:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33422,
                          "nodeType": "ExpressionStatement",
                          "src": "16231:14:60"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33424,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33402,
                            "src": "16258:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16270:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "16258:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33431,
                        "nodeType": "IfStatement",
                        "src": "16255:29:60",
                        "trueBody": {
                          "expression": {
                            "id": 33429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33427,
                              "name": "bobShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33402,
                              "src": "16273:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16283:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "16273:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33430,
                          "nodeType": "ExpressionStatement",
                          "src": "16273:11:60"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16321:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33432,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "16303:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16315:5:60",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2496,
                            "src": "16303:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 33436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16303:20:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33437,
                        "nodeType": "ExpressionStatement",
                        "src": "16303:20:60"
                      },
                      {
                        "assignments": [
                          33439
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33439,
                            "mutability": "mutable",
                            "name": "aliceBalanceExpected",
                            "nameLocation": "16338:20:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 33518,
                            "src": "16333:25:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33438,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "16333:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33443,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33440,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33371,
                            "src": "16361:12:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33441,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33387,
                            "src": "16376:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16361:25:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16333:53:60"
                      },
                      {
                        "expression": {
                          "id": 33450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33444,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33371,
                            "src": "16396:12:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33447,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31979,
                                  "src": "16419:5:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 33446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16411:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33445,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16411:7:60",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16411:14:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16426:7:60",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "16411:22:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16396:37:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33451,
                        "nodeType": "ExpressionStatement",
                        "src": "16396:37:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33453,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33371,
                              "src": "16573:12:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33454,
                              "name": "aliceBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33439,
                              "src": "16587:20:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 33455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16609:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "616c69636542616c616e636520706f73742d636c61696d2077726f6e67",
                              "id": 33456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16612:31:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              },
                              "value": "aliceBalance post-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              }
                            ],
                            "id": 33452,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7181,
                              7217,
                              7267,
                              7303
                            ],
                            "referencedDeclaration": 7217,
                            "src": "16555:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 33457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16555:89:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33458,
                        "nodeType": "ExpressionStatement",
                        "src": "16555:89:60"
                      },
                      {
                        "assignments": [
                          33460
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33460,
                            "mutability": "mutable",
                            "name": "bobBalanceExpected",
                            "nameLocation": "16666:18:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 33518,
                            "src": "16661:23:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33459,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "16661:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33464,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33461,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33379,
                            "src": "16687:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33462,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33402,
                            "src": "16700:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16687:21:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16661:47:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33466,
                              "name": "bobBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33379,
                              "src": "16758:10:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33469,
                                    "name": "bob",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31985,
                                    "src": "16778:3:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "16770:7:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33467,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "16770:7:60",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16770:12:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16783:7:60",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "16770:20:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "626f6242616c616e6365207072652d636c61696d2077726f6e67",
                              "id": 33472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16792:28:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              },
                              "value": "bobBalance pre-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              }
                            ],
                            "id": 33465,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4193,
                            "src": "16749:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 33473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16749:72:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33474,
                        "nodeType": "ExpressionStatement",
                        "src": "16749:72:60"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33477,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "16842:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16834:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33475,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16834:7:60",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16834:20:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16855:7:60",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "16834:28:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 33480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16866:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "16834:35:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 33516,
                          "nodeType": "Block",
                          "src": "16988:297:60",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 33498,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17018:1:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "id": 33495,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31928,
                                    "src": "17000:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33497,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17012:5:60",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2496,
                                  "src": "17000:17:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 33499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17000:20:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33500,
                              "nodeType": "ExpressionStatement",
                              "src": "17000:20:60"
                            },
                            {
                              "expression": {
                                "id": 33507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 33501,
                                  "name": "bobBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33379,
                                  "src": "17032:10:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 33504,
                                        "name": "bob",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 31985,
                                        "src": "17053:3:60",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 33503,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "17045:7:60",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 33502,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "17045:7:60",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 33505,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17045:12:60",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 33506,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17058:7:60",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "17045:20:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17032:33:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33508,
                              "nodeType": "ExpressionStatement",
                              "src": "17032:33:60"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33510,
                                    "name": "bobBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33379,
                                    "src": "17209:10:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 33511,
                                    "name": "bobBalanceExpected",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33460,
                                    "src": "17221:18:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "32",
                                    "id": 33512,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17241:1:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  {
                                    "hexValue": "626f6242616c616e636520706f73742d636c61696d2077726f6e67",
                                    "id": 33513,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17244:29:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    },
                                    "value": "bobBalance post-claim wrong"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    }
                                  ],
                                  "id": 33509,
                                  "name": "assertApproxEqAbs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    7181,
                                    7217,
                                    7267,
                                    7303
                                  ],
                                  "referencedDeclaration": 7217,
                                  "src": "17191:17:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256,string memory)"
                                  }
                                },
                                "id": 33514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17191:83:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33515,
                              "nodeType": "ExpressionStatement",
                              "src": "17191:83:60"
                            }
                          ]
                        },
                        "id": 33517,
                        "nodeType": "IfStatement",
                        "src": "16831:454:60",
                        "trueBody": {
                          "id": 33494,
                          "nodeType": "Block",
                          "src": "16871:111:60",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                    "id": 33485,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16899:39:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    },
                                    "value": "must be greater than 100 wei to claim"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 33482,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5471,
                                    "src": "16883:2:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$10752",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 33484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16886:12:60",
                                  "memberName": "expectRevert",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10238,
                                  "src": "16883:15:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) external"
                                  }
                                },
                                "id": 33486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16883:56:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33487,
                              "nodeType": "ExpressionStatement",
                              "src": "16883:56:60"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 33491,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16969:1:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "id": 33488,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31928,
                                    "src": "16951:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16963:5:60",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2496,
                                  "src": "16951:17:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 33492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16951:20:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33493,
                              "nodeType": "ExpressionStatement",
                              "src": "16951:20:60"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "5c97929d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaim",
            "nameLocation": "14766:9:60",
            "parameters": {
              "id": 33272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33269,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "14783:1:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 33599,
                  "src": "14776:8:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33268,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14776:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33271,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "14793:1:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 33599,
                  "src": "14786:8:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33270,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14786:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14775:20:60"
            },
            "returnParameters": {
              "id": 33273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14803:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33637,
            "nodeType": "FunctionDefinition",
            "src": "17879:393:60",
            "nodes": [],
            "body": {
              "id": 33636,
              "nodeType": "Block",
              "src": "17919:353:60",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33603,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "17937:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33602,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6259,
                        6280,
                        6304,
                        6328
                      ],
                      "referencedDeclaration": 6259,
                      "src": "17927:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17927:20:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33605,
                  "nodeType": "ExpressionStatement",
                  "src": "17927:20:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7769746864726177616c2063726564656e7469616c206d69736d61746368",
                        "id": 33609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17971:32:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        },
                        "value": "withdrawal credential mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 33606,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "17955:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17958:12:60",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10238,
                      "src": "17955:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17955:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33611,
                  "nodeType": "ExpressionStatement",
                  "src": "17955:49:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33615,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31994,
                        "src": "18034:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "01000000000000000000000000dead",
                        "id": 33616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18042:35:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        "value": "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ޭ"
                      },
                      {
                        "id": 33617,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32000,
                        "src": "18079:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33618,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32003,
                        "src": "18090:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33612,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "18012:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18024:9:60",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2175,
                      "src": "18012:21:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18012:96:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33620,
                  "nodeType": "ExpressionStatement",
                  "src": "18012:96:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7769746864726177616c2063726564656e7469616c206d69736d61746368",
                        "id": 33624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18132:32:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        },
                        "value": "withdrawal credential mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 33621,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "18116:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18119:12:60",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10238,
                      "src": "18116:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18116:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33626,
                  "nodeType": "ExpressionStatement",
                  "src": "18116:49:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33630,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31994,
                        "src": "18191:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "01000000000000000000000000dead",
                        "id": 33631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18199:35:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        "value": "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ޭ"
                      },
                      {
                        "id": 33632,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32000,
                        "src": "18236:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33633,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32003,
                        "src": "18247:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33627,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "18173:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18185:5:60",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2083,
                      "src": "18173:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18173:92:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33635,
                  "nodeType": "ExpressionStatement",
                  "src": "18173:92:60"
                }
              ]
            },
            "functionSelector": "8adcff77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBadWithdrawalCred",
            "nameLocation": "17888:21:60",
            "parameters": {
              "id": 33600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17909:2:60"
            },
            "returnParameters": {
              "id": 33601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17919:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33669,
            "nodeType": "FunctionDefinition",
            "src": "18278:295:60",
            "nodes": [],
            "body": {
              "id": 33668,
              "nodeType": "Block",
              "src": "18315:258:60",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33641,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "18333:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33640,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6259,
                        6280,
                        6304,
                        6328
                      ],
                      "referencedDeclaration": 6259,
                      "src": "18323:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18323:20:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33643,
                  "nodeType": "ExpressionStatement",
                  "src": "18323:20:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33647,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31994,
                        "src": "18373:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33648,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31997,
                        "src": "18381:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33649,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32000,
                        "src": "18405:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33650,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32003,
                        "src": "18416:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33644,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "18351:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18363:9:60",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2175,
                      "src": "18351:21:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18351:83:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33652,
                  "nodeType": "ExpressionStatement",
                  "src": "18351:83:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7075624b6579206d69736d61746368",
                        "id": 33656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18458:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2714402f8c3b573b64268d127ae315c0053fe45c201e45c87cf1244c19f77ab9",
                          "typeString": "literal_string \"pubKey mismatch\""
                        },
                        "value": "pubKey mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2714402f8c3b573b64268d127ae315c0053fe45c201e45c87cf1244c19f77ab9",
                          "typeString": "literal_string \"pubKey mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 33653,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "18442:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18445:12:60",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10238,
                      "src": "18442:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18442:34:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33658,
                  "nodeType": "ExpressionStatement",
                  "src": "18442:34:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "dead",
                        "id": 33662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18502:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3905d344717efd562447a4960eea941c1244adc31f53525d0ec1397ff6951c9c",
                          "typeString": "literal_string hex\"dead\""
                        },
                        "value": "ޭ"
                      },
                      {
                        "id": 33663,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31997,
                        "src": "18513:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33664,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32000,
                        "src": "18537:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33665,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32003,
                        "src": "18548:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3905d344717efd562447a4960eea941c1244adc31f53525d0ec1397ff6951c9c",
                          "typeString": "literal_string hex\"dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33659,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "18484:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18496:5:60",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2083,
                      "src": "18484:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18484:82:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33667,
                  "nodeType": "ExpressionStatement",
                  "src": "18484:82:60"
                }
              ]
            },
            "functionSelector": "94892dda",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testPubKeyMismatch",
            "nameLocation": "18287:18:60",
            "parameters": {
              "id": 33638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18305:2:60"
            },
            "returnParameters": {
              "id": 33639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18315:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34096,
            "nodeType": "FunctionDefinition",
            "src": "20018:3850:60",
            "nodes": [],
            "body": {
              "id": 34095,
              "nodeType": "Block",
              "src": "20063:3805:60",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33677,
                      "mutability": "mutable",
                      "name": "maxUint32",
                      "nameLocation": "20076:9:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34095,
                      "src": "20071:14:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33676,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20071:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33679,
                  "initialValue": {
                    "hexValue": "34323934393637323935",
                    "id": 33678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "20088:10:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "4294967295"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20071:27:60"
                },
                {
                  "assignments": [
                    33681
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33681,
                      "mutability": "mutable",
                      "name": "aliceDeposit",
                      "nameLocation": "20111:12:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34095,
                      "src": "20106:17:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33680,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20106:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33690,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 33684,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33671,
                            "src": "20131:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 33683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20126:4:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 33682,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "20126:4:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20126:7:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3331393939393939393939393939393939393939",
                        "id": 33686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20136:20:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31999999999999999999_by_1",
                          "typeString": "int_const 31999999999999999999"
                        },
                        "value": "31999999999999999999"
                      },
                      "src": "20126:30:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 33688,
                      "name": "maxUint32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33677,
                      "src": "20159:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20126:42:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20106:62:60"
                },
                {
                  "assignments": [
                    33692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33692,
                      "mutability": "mutable",
                      "name": "bobDeposit",
                      "nameLocation": "20181:10:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34095,
                      "src": "20176:15:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33691,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20176:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33696,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3332303030303030303030303030303030303030",
                      "id": 33693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20194:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32000000000000000000_by_1",
                        "typeString": "int_const 32000000000000000000"
                      },
                      "value": "32000000000000000000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 33694,
                      "name": "aliceDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33681,
                      "src": "20217:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20194:35:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20176:53:60"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33697,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33671,
                        "src": "20240:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20245:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "20240:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33700,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33673,
                        "src": "20250:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 33701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20254:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "20250:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "20240:17:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 34018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 34016,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33671,
                        "src": "23298:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 34017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23303:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "23298:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 34092,
                      "nodeType": "Block",
                      "src": "23441:420:60",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34038,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "23456:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 34037,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6169,
                                6190,
                                6214,
                                6238
                              ],
                              "referencedDeclaration": 6169,
                              "src": "23451:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23451:11:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34040,
                          "nodeType": "ExpressionStatement",
                          "src": "23451:11:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 34041,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "23472:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 34043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "23484:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "23472:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 34045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 34044,
                                  "name": "aliceDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33681,
                                  "src": "23505:12:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "23472:46:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 34046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23472:48:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34047,
                          "nodeType": "ExpressionStatement",
                          "src": "23472:48:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34049,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31985,
                                "src": "23535:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 34048,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6169,
                                6190,
                                6214,
                                6238
                              ],
                              "referencedDeclaration": 6169,
                              "src": "23530:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23530:9:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34051,
                          "nodeType": "ExpressionStatement",
                          "src": "23530:9:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 34052,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "23549:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 34054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "23561:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "23549:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 34056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 34055,
                                  "name": "bobDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33692,
                                  "src": "23582:10:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "23549:44:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 34057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23549:46:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34058,
                          "nodeType": "ExpressionStatement",
                          "src": "23549:46:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34060,
                                "name": "contOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31973,
                                "src": "23615:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34059,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6259,
                                6280,
                                6304,
                                6328
                              ],
                              "referencedDeclaration": 6259,
                              "src": "23605:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23605:20:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34062,
                          "nodeType": "ExpressionStatement",
                          "src": "23605:20:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34066,
                                "name": "pubkey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31994,
                                "src": "23653:6:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 34067,
                                "name": "withdrawal_credentials",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31997,
                                "src": "23661:22:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 34068,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32000,
                                "src": "23685:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 34069,
                                "name": "deposit_data_root",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32003,
                                "src": "23696:17:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 34063,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "23635:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 34065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23647:5:60",
                              "memberName": "stake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2083,
                              "src": "23635:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                              }
                            },
                            "id": 34070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23635:79:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34071,
                          "nodeType": "ExpressionStatement",
                          "src": "23635:79:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34077,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33673,
                                "src": "23754:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 34074,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31928,
                                    "src": "23732:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 34073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23724:8:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 34072,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23724:8:60",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23724:20:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 34076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23745:8:60",
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "23724:29:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 34078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23724:32:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34079,
                          "nodeType": "ExpressionStatement",
                          "src": "23724:32:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                "id": 34083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23782:39:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                },
                                "value": "must be greater than 100 wei to claim"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                  "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                }
                              ],
                              "expression": {
                                "id": 34080,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5471,
                                "src": "23766:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10752",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 34082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23769:12:60",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10238,
                              "src": "23766:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 34084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23766:56:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34085,
                          "nodeType": "ExpressionStatement",
                          "src": "23766:56:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 34089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23850:1:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 34086,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "23832:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 34088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23844:5:60",
                              "memberName": "claim",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2496,
                              "src": "23832:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) external"
                              }
                            },
                            "id": 34090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23832:20:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34091,
                          "nodeType": "ExpressionStatement",
                          "src": "23832:20:60"
                        }
                      ]
                    },
                    "id": 34093,
                    "nodeType": "IfStatement",
                    "src": "23295:566:60",
                    "trueBody": {
                      "id": 34036,
                      "nodeType": "Block",
                      "src": "23306:129:60",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 34022,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23332:20:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 34019,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5471,
                                "src": "23316:2:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$10752",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 34021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23319:12:60",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10238,
                              "src": "23316:15:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 34023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23316:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34024,
                          "nodeType": "ExpressionStatement",
                          "src": "23316:37:60"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34026,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "23373:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 34025,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                6259,
                                6280,
                                6304,
                                6328
                              ],
                              "referencedDeclaration": 6259,
                              "src": "23363:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23363:16:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34028,
                          "nodeType": "ExpressionStatement",
                          "src": "23363:16:60"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 34029,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "23389:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 34031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "23401:13:60",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2003,
                                "src": "23389:25:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 34033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 34032,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33671,
                                  "src": "23422:1:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "src": "23389:35:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 34034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23389:37:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34035,
                          "nodeType": "ExpressionStatement",
                          "src": "23389:37:60"
                        }
                      ]
                    }
                  },
                  "id": 34094,
                  "nodeType": "IfStatement",
                  "src": "20237:3624:60",
                  "trueBody": {
                    "id": 34015,
                    "nodeType": "Block",
                    "src": "20258:3031:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33705,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31979,
                              "src": "20273:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33704,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6169,
                              6190,
                              6214,
                              6238
                            ],
                            "referencedDeclaration": 6169,
                            "src": "20268:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20268:11:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33707,
                        "nodeType": "ExpressionStatement",
                        "src": "20268:11:60"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33708,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "20289:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "20301:13:60",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2003,
                              "src": "20289:25:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33711,
                                "name": "aliceDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33681,
                                "src": "20322:12:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "20289:46:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20289:48:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33714,
                        "nodeType": "ExpressionStatement",
                        "src": "20289:48:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33716,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31985,
                              "src": "20352:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33715,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6169,
                              6190,
                              6214,
                              6238
                            ],
                            "referencedDeclaration": 6169,
                            "src": "20347:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20347:9:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33718,
                        "nodeType": "ExpressionStatement",
                        "src": "20347:9:60"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33719,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "20366:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "20378:13:60",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2003,
                              "src": "20366:25:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33722,
                                "name": "bobDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33692,
                                "src": "20399:10:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "20366:44:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20366:46:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33725,
                        "nodeType": "ExpressionStatement",
                        "src": "20366:46:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33731,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33673,
                              "src": "20452:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33728,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "20430:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "20422:8:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 33726,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "20422:8:60",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20422:20:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 33730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20443:8:60",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "20422:29:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 33732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20422:32:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33733,
                        "nodeType": "ExpressionStatement",
                        "src": "20422:32:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "757365207769746864726177207768656e206e6f74207374616b6564",
                              "id": 33737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20480:30:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              },
                              "value": "use withdraw when not staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_23e3cdd019d219795cbb826322029bc3c9e493fd421b8c7075b9411e241ce9a7",
                                "typeString": "literal_string \"use withdraw when not staked\""
                              }
                            ],
                            "expression": {
                              "id": 33734,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5471,
                              "src": "20464:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10752",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20467:12:60",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10238,
                            "src": "20464:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 33738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20464:47:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33739,
                        "nodeType": "ExpressionStatement",
                        "src": "20464:47:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 33743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20539:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 33740,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "20521:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20533:5:60",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2496,
                            "src": "20521:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 33744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20521:20:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33745,
                        "nodeType": "ExpressionStatement",
                        "src": "20521:20:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33747,
                              "name": "contOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31973,
                              "src": "20556:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33746,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6169,
                              6190,
                              6214,
                              6238
                            ],
                            "referencedDeclaration": 6169,
                            "src": "20551:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20551:15:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33749,
                        "nodeType": "ExpressionStatement",
                        "src": "20551:15:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33753,
                              "name": "pubkey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31994,
                              "src": "20594:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33754,
                              "name": "withdrawal_credentials",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31997,
                              "src": "20602:22:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33755,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32000,
                              "src": "20626:9:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 33756,
                              "name": "deposit_data_root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32003,
                              "src": "20637:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 33750,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "20576:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20588:5:60",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2083,
                            "src": "20576:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                            }
                          },
                          "id": 33757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20576:79:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33758,
                        "nodeType": "ExpressionStatement",
                        "src": "20576:79:60"
                      },
                      {
                        "assignments": [
                          33760
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33760,
                            "mutability": "mutable",
                            "name": "poolBalance",
                            "nameLocation": "20670:11:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34015,
                            "src": "20665:16:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33759,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20665:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33767,
                        "initialValue": {
                          "components": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33763,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31928,
                                    "src": "20693:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "20685:7:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33761,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20685:7:60",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20685:20:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "20706:7:60",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "20685:28:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 33766,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "20684:30:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20665:49:60"
                      },
                      {
                        "assignments": [
                          33769
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33769,
                            "mutability": "mutable",
                            "name": "fees",
                            "nameLocation": "20729:4:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34015,
                            "src": "20724:9:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33768,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20724:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33775,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 33770,
                              "name": "poolBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33760,
                              "src": "20736:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 33771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20750:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "20736:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 33773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20754:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "20736:21:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20724:33:60"
                      },
                      {
                        "assignments": [
                          33777
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33777,
                            "mutability": "mutable",
                            "name": "poolBalanceMinusFees",
                            "nameLocation": "20772:20:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34015,
                            "src": "20767:25:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33776,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20767:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33781,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33778,
                            "name": "poolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33760,
                            "src": "20795:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 33779,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33769,
                            "src": "20809:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20795:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20767:46:60"
                      },
                      {
                        "assignments": [
                          33783
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33783,
                            "mutability": "mutable",
                            "name": "aliceBalance",
                            "nameLocation": "20828:12:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34015,
                            "src": "20823:17:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33782,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20823:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33789,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33786,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31979,
                                "src": "20851:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20843:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33784,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20843:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20843:14:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20858:7:60",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "20843:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20823:42:60"
                      },
                      {
                        "assignments": [
                          33791
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33791,
                            "mutability": "mutable",
                            "name": "bobBalance",
                            "nameLocation": "20880:10:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34015,
                            "src": "20875:15:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33790,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20875:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33797,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33794,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31985,
                                "src": "20901:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20893:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33792,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20893:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20893:12:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20906:7:60",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "20893:20:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20875:38:60"
                      },
                      {
                        "assignments": [
                          33799
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33799,
                            "mutability": "mutable",
                            "name": "aliceShare",
                            "nameLocation": "20928:10:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34015,
                            "src": "20923:15:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33798,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20923:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33805,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 33800,
                              "name": "poolBalanceMinusFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33777,
                              "src": "20941:20:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 33801,
                              "name": "aliceDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33681,
                              "src": "20964:12:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "20941:35:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3332303030303030303030303030303030303030",
                            "id": 33803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20979:20:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32000000000000000000_by_1",
                              "typeString": "int_const 32000000000000000000"
                            },
                            "value": "32000000000000000000"
                          },
                          "src": "20941:58:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20923:76:60"
                      },
                      {
                        "assignments": [
                          33807
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33807,
                            "mutability": "mutable",
                            "name": "bobShare",
                            "nameLocation": "21014:8:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34015,
                            "src": "21009:13:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33806,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21009:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33811,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33808,
                            "name": "poolBalanceMinusFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33777,
                            "src": "21025:20:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 33809,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33799,
                            "src": "21048:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21025:33:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21009:49:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "706f6f6c2062616c616e6365",
                              "id": 33815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21080:14:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_779319e71ef35324697aba13ac9186fe57f31aef12ecc53ff2cf215113745e48",
                                "typeString": "literal_string \"pool balance\""
                              },
                              "value": "pool balance"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33818,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31928,
                                    "src": "21104:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21096:7:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33816,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21096:7:60",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21096:20:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21117:7:60",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "21096:28:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_779319e71ef35324697aba13ac9186fe57f31aef12ecc53ff2cf215113745e48",
                                "typeString": "literal_string \"pool balance\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33812,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18816,
                              "src": "21068:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$18816_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 33814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21076:3:60",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11460,
                            "src": "21068:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256) view"
                            }
                          },
                          "id": 33821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21068:57:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33822,
                        "nodeType": "ExpressionStatement",
                        "src": "21068:57:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "616c696365207368617265",
                              "id": 33826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21147:13:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd18234c0b169b2c2eca24e96f5caa5d0d193e8133ade8f9036441a2fd02ffb8",
                                "typeString": "literal_string \"alice share\""
                              },
                              "value": "alice share"
                            },
                            {
                              "id": 33827,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33799,
                              "src": "21162:10:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_dd18234c0b169b2c2eca24e96f5caa5d0d193e8133ade8f9036441a2fd02ffb8",
                                "typeString": "literal_string \"alice share\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33823,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18816,
                              "src": "21135:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$18816_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 33825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21143:3:60",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11460,
                            "src": "21135:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256) view"
                            }
                          },
                          "id": 33828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21135:38:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33829,
                        "nodeType": "ExpressionStatement",
                        "src": "21135:38:60"
                      },
                      {
                        "assignments": [
                          33831
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33831,
                            "mutability": "mutable",
                            "name": "aliceDistShare",
                            "nameLocation": "21188:14:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34015,
                            "src": "21183:19:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33830,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21183:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33836,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21239:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33832,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "21205:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21217:21:60",
                            "memberName": "getDistributableShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2633,
                            "src": "21205:33:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21205:36:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21183:58:60"
                      },
                      {
                        "assignments": [
                          33838
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33838,
                            "mutability": "mutable",
                            "name": "bobDistShare",
                            "nameLocation": "21256:12:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34015,
                            "src": "21251:17:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33837,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21251:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33843,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 33841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21305:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 33839,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "21271:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21283:21:60",
                            "memberName": "getDistributableShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2633,
                            "src": "21271:33:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21271:36:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21251:56:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33845,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33799,
                              "src": "21335:10:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33846,
                              "name": "aliceDistShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33831,
                              "src": "21347:14:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "33",
                              "id": 33847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21363:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            {
                              "hexValue": "616c69636520736861726520646f6573206e6f74206d6174636820646973746962757461626c65207368617265",
                              "id": 33848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21366:47:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94ead52456c306a0ee8ea015866a6efc4924f1673533c3c6eef33531ca69933d",
                                "typeString": "literal_string \"alice share does not match distibutable share\""
                              },
                              "value": "alice share does not match distibutable share"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94ead52456c306a0ee8ea015866a6efc4924f1673533c3c6eef33531ca69933d",
                                "typeString": "literal_string \"alice share does not match distibutable share\""
                              }
                            ],
                            "id": 33844,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7181,
                              7217,
                              7267,
                              7303
                            ],
                            "referencedDeclaration": 7217,
                            "src": "21317:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 33849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21317:97:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33850,
                        "nodeType": "ExpressionStatement",
                        "src": "21317:97:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33852,
                              "name": "bobShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33807,
                              "src": "21442:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33853,
                              "name": "bobDistShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33838,
                              "src": "21452:12:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "33",
                              "id": 33854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21466:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            {
                              "hexValue": "626f6220736861726520646f6573206e6f74206d6174636820626f622064697374726962757461626c65207368617265",
                              "id": 33855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21469:50:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a481e1280f095d129acbaddd13d4ff35eacdbf80c751f741f12c1906050e14b4",
                                "typeString": "literal_string \"bob share does not match bob distributable share\""
                              },
                              "value": "bob share does not match bob distributable share"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a481e1280f095d129acbaddd13d4ff35eacdbf80c751f741f12c1906050e14b4",
                                "typeString": "literal_string \"bob share does not match bob distributable share\""
                              }
                            ],
                            "id": 33851,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7181,
                              7217,
                              7267,
                              7303
                            ],
                            "referencedDeclaration": 7217,
                            "src": "21424:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 33856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21424:96:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33857,
                        "nodeType": "ExpressionStatement",
                        "src": "21424:96:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "666565526563697069656e742e62616c616e6365",
                              "id": 33861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21542:22:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f76582784778f46f3bed3fcb7a150312e048bdb09582c48e016494f237918c49",
                                "typeString": "literal_string \"feeRecipient.balance\""
                              },
                              "value": "feeRecipient.balance"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33864,
                                    "name": "feeRecipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31991,
                                    "src": "21574:12:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21566:7:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33862,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21566:7:60",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21566:21:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21588:7:60",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "21566:29:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f76582784778f46f3bed3fcb7a150312e048bdb09582c48e016494f237918c49",
                                "typeString": "literal_string \"feeRecipient.balance\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33858,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18816,
                              "src": "21530:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$18816_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 33860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21538:3:60",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11460,
                            "src": "21530:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256) view"
                            }
                          },
                          "id": 33867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21530:66:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33868,
                        "nodeType": "ExpressionStatement",
                        "src": "21530:66:60"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33869,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33799,
                            "src": "21817:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21831:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "21817:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33876,
                        "nodeType": "IfStatement",
                        "src": "21814:34:60",
                        "trueBody": {
                          "expression": {
                            "id": 33874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33872,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33799,
                              "src": "21834:10:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21847:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "21834:14:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33875,
                          "nodeType": "ExpressionStatement",
                          "src": "21834:14:60"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33877,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33807,
                            "src": "21861:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21873:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "21861:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33884,
                        "nodeType": "IfStatement",
                        "src": "21858:29:60",
                        "trueBody": {
                          "expression": {
                            "id": 33882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33880,
                              "name": "bobShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33807,
                              "src": "21876:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21886:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "21876:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33883,
                          "nodeType": "ExpressionStatement",
                          "src": "21876:11:60"
                        }
                      },
                      {
                        "assignments": [
                          33886
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33886,
                            "mutability": "mutable",
                            "name": "aliceBalanceExpected",
                            "nameLocation": "21911:20:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34015,
                            "src": "21906:25:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33885,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21906:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33890,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33887,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33783,
                            "src": "21934:12:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33888,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33799,
                            "src": "21949:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21934:25:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21906:53:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33892,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33783,
                              "src": "22054:12:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33895,
                                    "name": "alice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31979,
                                    "src": "22076:5:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33894,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "22068:7:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33893,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22068:7:60",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22068:14:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22083:7:60",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "22068:22:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "616c69636542616c616e6365207072652d636c61696d2077726f6e67",
                              "id": 33898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22092:30:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_02de6246c7759ee4954d513dce217e7eebe13abc69149dc3ad46356b81057684",
                                "typeString": "literal_string \"aliceBalance pre-claim wrong\""
                              },
                              "value": "aliceBalance pre-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_02de6246c7759ee4954d513dce217e7eebe13abc69149dc3ad46356b81057684",
                                "typeString": "literal_string \"aliceBalance pre-claim wrong\""
                              }
                            ],
                            "id": 33891,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4193,
                            "src": "22045:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 33899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22045:78:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33900,
                        "nodeType": "ExpressionStatement",
                        "src": "22045:78:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33904,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31979,
                              "src": "22142:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 33901,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5471,
                              "src": "22133:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10752",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22136:5:60",
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10197,
                            "src": "22133:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 33905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22133:15:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33906,
                        "nodeType": "ExpressionStatement",
                        "src": "22133:15:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "7374616b696e6720506f6f6c2062616c616e6365",
                              "id": 33910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22170:22:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6607f890064ef28da9da8fd2c9c0382afac42c27c3a3ad066efbdd719c7e5a79",
                                "typeString": "literal_string \"staking Pool balance\""
                              },
                              "value": "staking Pool balance"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33913,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31928,
                                    "src": "22202:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33912,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "22194:7:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33911,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22194:7:60",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22194:20:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22215:7:60",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "22194:28:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6607f890064ef28da9da8fd2c9c0382afac42c27c3a3ad066efbdd719c7e5a79",
                                "typeString": "literal_string \"staking Pool balance\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33907,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18816,
                              "src": "22158:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$18816_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 33909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22166:3:60",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11460,
                            "src": "22158:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256) view"
                            }
                          },
                          "id": 33916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22158:65:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33917,
                        "nodeType": "ExpressionStatement",
                        "src": "22158:65:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22251:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33918,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31928,
                              "src": "22233:11:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$2816",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22245:5:60",
                            "memberName": "claim",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2496,
                            "src": "22233:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 33922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22233:20:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33923,
                        "nodeType": "ExpressionStatement",
                        "src": "22233:20:60"
                      },
                      {
                        "expression": {
                          "id": 33930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33924,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33783,
                            "src": "22263:12:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33927,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31979,
                                  "src": "22286:5:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 33926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22278:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33925,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22278:7:60",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22278:14:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22293:7:60",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "22278:22:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22263:37:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33931,
                        "nodeType": "ExpressionStatement",
                        "src": "22263:37:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33933,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33783,
                              "src": "22440:12:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33934,
                              "name": "aliceBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33886,
                              "src": "22454:20:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 33935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22476:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "616c69636542616c616e636520706f73742d636c61696d2077726f6e67",
                              "id": 33936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22479:31:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              },
                              "value": "aliceBalance post-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0dd869a293248bd26e5c5326816854a4903c7d94f2b721cb275642e834c5fae5",
                                "typeString": "literal_string \"aliceBalance post-claim wrong\""
                              }
                            ],
                            "id": 33932,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7181,
                              7217,
                              7267,
                              7303
                            ],
                            "referencedDeclaration": 7217,
                            "src": "22422:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 33937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22422:89:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33938,
                        "nodeType": "ExpressionStatement",
                        "src": "22422:89:60"
                      },
                      {
                        "assignments": [
                          33940
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33940,
                            "mutability": "mutable",
                            "name": "bobBalanceExpected",
                            "nameLocation": "22533:18:60",
                            "nodeType": "VariableDeclaration",
                            "scope": 34015,
                            "src": "22528:23:60",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33939,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "22528:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33944,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33941,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33791,
                            "src": "22554:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33942,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33807,
                            "src": "22567:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22554:21:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22528:47:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33946,
                              "name": "bobBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33791,
                              "src": "22625:10:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33949,
                                    "name": "bob",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31985,
                                    "src": "22645:3:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 33948,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "22637:7:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 33947,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22637:7:60",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22637:12:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 33951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22650:7:60",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "22637:20:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "626f6242616c616e6365207072652d636c61696d2077726f6e67",
                              "id": 33952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22659:28:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              },
                              "value": "bobBalance pre-claim wrong"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_07d35b713c5ff813ca56044f317a73c436730a16b116cdf59e197fa03b9b9b16",
                                "typeString": "literal_string \"bobBalance pre-claim wrong\""
                              }
                            ],
                            "id": 33945,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6821,
                              6846,
                              6859,
                              6875,
                              6917,
                              6959,
                              7001,
                              7038,
                              7075,
                              7112,
                              3974,
                              3999,
                              4029,
                              4054,
                              4113,
                              4138,
                              4168,
                              4193,
                              5293,
                              5328
                            ],
                            "referencedDeclaration": 4193,
                            "src": "22616:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 33953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22616:72:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33954,
                        "nodeType": "ExpressionStatement",
                        "src": "22616:72:60"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33958,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31985,
                              "src": "22707:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 33955,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5471,
                              "src": "22698:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10752",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22701:5:60",
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10197,
                            "src": "22698:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 33959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22698:13:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33960,
                        "nodeType": "ExpressionStatement",
                        "src": "22698:13:60"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33963,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31928,
                                  "src": "22732:11:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$2816",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22724:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33961,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22724:7:60",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22724:20:60",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22745:7:60",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "22724:28:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 33966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22756:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "22724:35:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 34002,
                          "nodeType": "Block",
                          "src": "22878:298:60",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 33984,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22908:1:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "id": 33981,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31928,
                                    "src": "22890:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33983,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "22902:5:60",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2496,
                                  "src": "22890:17:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 33985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22890:20:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33986,
                              "nodeType": "ExpressionStatement",
                              "src": "22890:20:60"
                            },
                            {
                              "expression": {
                                "id": 33993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 33987,
                                  "name": "bobBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33791,
                                  "src": "22922:10:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 33990,
                                        "name": "bob",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 31985,
                                        "src": "22943:3:60",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 33989,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "22935:7:60",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 33988,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "22935:7:60",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 33991,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22935:12:60",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 33992,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "22948:7:60",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "22935:20:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22922:33:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33994,
                              "nodeType": "ExpressionStatement",
                              "src": "22922:33:60"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33996,
                                    "name": "bobBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33791,
                                    "src": "23099:10:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 33997,
                                    "name": "bobBalanceExpected",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33940,
                                    "src": "23111:18:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "33",
                                    "id": 33998,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23131:1:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  {
                                    "hexValue": "626f6242616c616e636520706f73742d636c61696d2077726f6e67",
                                    "id": 33999,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23134:29:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    },
                                    "value": "bobBalance post-claim wrong"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_0f56c1f4e0be71154e905e37f498e4e0663e91a02a1568e98f8a7da477cf5c43",
                                      "typeString": "literal_string \"bobBalance post-claim wrong\""
                                    }
                                  ],
                                  "id": 33995,
                                  "name": "assertApproxEqAbs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    7181,
                                    7217,
                                    7267,
                                    7303
                                  ],
                                  "referencedDeclaration": 7217,
                                  "src": "23081:17:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256,string memory)"
                                  }
                                },
                                "id": 34000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23081:83:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 34001,
                              "nodeType": "ExpressionStatement",
                              "src": "23081:83:60"
                            }
                          ]
                        },
                        "id": 34003,
                        "nodeType": "IfStatement",
                        "src": "22721:455:60",
                        "trueBody": {
                          "id": 33980,
                          "nodeType": "Block",
                          "src": "22761:111:60",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "6d7573742062652067726561746572207468616e203130302077656920746f20636c61696d",
                                    "id": 33971,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22789:39:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    },
                                    "value": "must be greater than 100 wei to claim"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_604be891671b5eacad4a5890351010209defb6a9139f5aa2873b46f9818a5e72",
                                      "typeString": "literal_string \"must be greater than 100 wei to claim\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 33968,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5471,
                                    "src": "22773:2:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$10752",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 33970,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "22776:12:60",
                                  "memberName": "expectRevert",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10238,
                                  "src": "22773:15:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) external"
                                  }
                                },
                                "id": 33972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22773:56:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33973,
                              "nodeType": "ExpressionStatement",
                              "src": "22773:56:60"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 33977,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22859:1:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "id": 33974,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31928,
                                    "src": "22841:11:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$2816",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33976,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "22853:5:60",
                                  "memberName": "claim",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2496,
                                  "src": "22841:17:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 33978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22841:20:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33979,
                              "nodeType": "ExpressionStatement",
                              "src": "22841:20:60"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34005,
                              "name": "fees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33769,
                              "src": "23203:4:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 34008,
                                    "name": "feeRecipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31991,
                                    "src": "23217:12:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 34007,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23209:7:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 34006,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23209:7:60",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23209:21:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 34010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "23231:7:60",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "23209:29:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "3130",
                              "id": 34011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23240:2:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            {
                              "hexValue": "66656520726563697069656e742062616c616e636520696e636f7272656374",
                              "id": 34012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23244:33:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_395214c4be5535de3e0f29b75fce788733289f427fd8855be09d70ee263532e7",
                                "typeString": "literal_string \"fee recipient balance incorrect\""
                              },
                              "value": "fee recipient balance incorrect"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_395214c4be5535de3e0f29b75fce788733289f427fd8855be09d70ee263532e7",
                                "typeString": "literal_string \"fee recipient balance incorrect\""
                              }
                            ],
                            "id": 34004,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7181,
                              7217,
                              7267,
                              7303
                            ],
                            "referencedDeclaration": 7217,
                            "src": "23185:17:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 34013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23185:93:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34014,
                        "nodeType": "ExpressionStatement",
                        "src": "23185:93:60"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "5efae371",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFees",
            "nameLocation": "20027:8:60",
            "parameters": {
              "id": 33674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33671,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "20043:1:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34096,
                  "src": "20036:8:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33670,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20036:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33673,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "20053:1:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 34096,
                  "src": "20046:8:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33672,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20046:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20035:20:60"
            },
            "returnParameters": {
              "id": 33675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20063:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34215,
            "nodeType": "FunctionDefinition",
            "src": "23874:1046:60",
            "nodes": [],
            "body": {
              "id": 34214,
              "nodeType": "Block",
              "src": "23901:1019:60",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34100,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31979,
                        "src": "23914:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 34099,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6169,
                        6190,
                        6214,
                        6238
                      ],
                      "referencedDeclaration": 6169,
                      "src": "23909:4:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23909:11:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34102,
                  "nodeType": "ExpressionStatement",
                  "src": "23909:11:60"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 34103,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31928,
                          "src": "23928:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 34105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23940:13:60",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2003,
                        "src": "23928:25:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 34107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332",
                          "id": 34106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23961:8:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32"
                        }
                      ],
                      "src": "23928:42:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 34108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23928:44:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34109,
                  "nodeType": "ExpressionStatement",
                  "src": "23928:44:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34113,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "23989:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34110,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "23980:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23983:5:60",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10197,
                      "src": "23980:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23980:19:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34115,
                  "nodeType": "ExpressionStatement",
                  "src": "23980:19:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34119,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31994,
                        "src": "24025:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34120,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31997,
                        "src": "24033:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34121,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32000,
                        "src": "24057:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34122,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32003,
                        "src": "24068:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 34116,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "24007:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24019:5:60",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2083,
                      "src": "24007:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 34123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24007:79:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34124,
                  "nodeType": "ExpressionStatement",
                  "src": "24007:79:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d75737420626520677561726469616e",
                        "id": 34128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24197:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06c186a7f228984c160e264b8e18583eb31f00eea2d76d4e90ba0553b56e30a",
                          "typeString": "literal_string \"must be guardian\""
                        },
                        "value": "must be guardian"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f06c186a7f228984c160e264b8e18583eb31f00eea2d76d4e90ba0553b56e30a",
                          "typeString": "literal_string \"must be guardian\""
                        }
                      ],
                      "expression": {
                        "id": 34125,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "24181:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24184:12:60",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10238,
                      "src": "24181:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 34129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24181:35:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34130,
                  "nodeType": "ExpressionStatement",
                  "src": "24181:35:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34134,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31979,
                        "src": "24233:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 34131,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "24224:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24227:5:60",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10197,
                      "src": "24224:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24224:15:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34136,
                  "nodeType": "ExpressionStatement",
                  "src": "24224:15:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34140,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31994,
                        "src": "24270:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24278:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34137,
                        "name": "frensOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31937,
                        "src": "24247:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensOracle_$580",
                          "typeString": "contract FrensOracle"
                        }
                      },
                      "id": 34139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24259:10:60",
                      "memberName": "setExiting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 579,
                      "src": "24247:22:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (bytes memory,bool) external"
                      }
                    },
                    "id": 34142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24247:36:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34143,
                  "nodeType": "ExpressionStatement",
                  "src": "24247:36:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34149,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "24308:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$34500",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$34500",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 34148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24300:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34147,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24300:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24300:13:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34153,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "24323:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$34500",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$34500",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 34152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24315:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34151,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24315:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24315:13:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34144,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "24291:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24294:5:60",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10209,
                      "src": "24291:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 34155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24291:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34156,
                  "nodeType": "ExpressionStatement",
                  "src": "24291:38:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34160,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31994,
                        "src": "24360:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24368:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34157,
                        "name": "frensOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31937,
                        "src": "24337:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensOracle_$580",
                          "typeString": "contract FrensOracle"
                        }
                      },
                      "id": 34159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24349:10:60",
                      "memberName": "setExiting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 579,
                      "src": "24337:22:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (bytes memory,bool) external"
                      }
                    },
                    "id": 34162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24337:36:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34163,
                  "nodeType": "ExpressionStatement",
                  "src": "24337:36:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030303030303030",
                        "id": 34169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24476:13:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34166,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31928,
                            "src": "24454:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 34165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24446:8:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 34164,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24446:8:60",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24446:20:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 34168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24467:8:60",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "24446:29:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24446:44:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34171,
                  "nodeType": "ExpressionStatement",
                  "src": "24446:44:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 34175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24595:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 34172,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "24577:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24589:5:60",
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2496,
                      "src": "24577:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 34176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24577:20:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34177,
                  "nodeType": "ExpressionStatement",
                  "src": "24577:20:60"
                },
                {
                  "assignments": [
                    34179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34179,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "24619:5:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34214,
                      "src": "24605:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 34178,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "24605:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34183,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34180,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "24627:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24639:8:60",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2670,
                      "src": "24627:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 34182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24627:22:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24605:44:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "657869746564",
                                "id": 34188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24693:8:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a12a7ae4132c3f93fcc4fb46e9e900a1d1105abfd1ce8bcec1c533b1cd0a973c",
                                  "typeString": "literal_string \"exited\""
                                },
                                "value": "exited"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_a12a7ae4132c3f93fcc4fb46e9e900a1d1105abfd1ce8bcec1c533b1cd0a973c",
                                  "typeString": "literal_string \"exited\""
                                }
                              ],
                              "expression": {
                                "id": 34186,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "24676:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 34187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "24680:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "24676:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 34189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24676:26:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 34185,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "24666:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 34190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24666:37:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34194,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34179,
                                "src": "24732:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 34192,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "24715:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 34193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "24719:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "24715:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 34195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24715:23:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 34191,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "24705:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 34196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24705:34:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "6e6f7420657869746564",
                        "id": 34197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24740:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99c9d5bc62a5b3ac5fc5b3159df6dc8b50db32c0e245e1c9c901ce20d2ef2cd1",
                          "typeString": "literal_string \"not exited\""
                        },
                        "value": "not exited"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99c9d5bc62a5b3ac5fc5b3159df6dc8b50db32c0e245e1c9c901ce20d2ef2cd1",
                          "typeString": "literal_string \"not exited\""
                        }
                      ],
                      "id": 34184,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4054,
                      "src": "24657:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 34198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24657:96:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34199,
                  "nodeType": "ExpressionStatement",
                  "src": "24657:96:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030303030303030",
                        "id": 34205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24792:13:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34202,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31928,
                            "src": "24770:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 34201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24762:8:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 34200,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24762:8:60",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24762:20:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 34204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24783:8:60",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "24762:29:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24762:44:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34207,
                  "nodeType": "ExpressionStatement",
                  "src": "24762:44:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 34211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24911:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 34208,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "24893:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24905:5:60",
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2496,
                      "src": "24893:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 34212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24893:20:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34213,
                  "nodeType": "ExpressionStatement",
                  "src": "24893:20:60"
                }
              ]
            },
            "functionSelector": "456f30ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExit",
            "nameLocation": "23883:8:60",
            "parameters": {
              "id": 34097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23891:2:60"
            },
            "returnParameters": {
              "id": 34098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23901:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34244,
            "nodeType": "FunctionDefinition",
            "src": "24927:183:60",
            "nodes": [],
            "body": {
              "id": 34243,
              "nodeType": "Block",
              "src": "24956:154:60",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34222,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "24978:1:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34243,
                      "src": "24964:15:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 34220,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "24964:4:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34221,
                        "nodeType": "ArrayTypeName",
                        "src": "24964:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34226,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34223,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "24982:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24994:16:60",
                      "memberName": "getIdsInThisPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2505,
                      "src": "24982:28:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (uint256[] memory)"
                      }
                    },
                    "id": 34225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24982:30:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24964:48:60"
                },
                {
                  "assignments": [
                    34231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34231,
                      "mutability": "mutable",
                      "name": "q",
                      "nameLocation": "25034:1:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34243,
                      "src": "25020:15:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 34229,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "25020:4:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34230,
                        "nodeType": "ArrayTypeName",
                        "src": "25020:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34235,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34232,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "25038:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25050:16:60",
                      "memberName": "getIdsInThisPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2505,
                      "src": "25038:28:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (uint256[] memory)"
                      }
                    },
                    "id": 34234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25038:30:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25020:48:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34237,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34222,
                          "src": "25085:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 34238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25087:6:60",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "25085:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 34239,
                          "name": "q",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34231,
                          "src": "25094:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 34240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25096:6:60",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "25094:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34236,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4168,
                      "src": "25076:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25076:27:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34242,
                  "nodeType": "ExpressionStatement",
                  "src": "25076:27:60"
                }
              ]
            },
            "functionSelector": "3c20ae96",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetIds",
            "nameLocation": "24936:10:60",
            "parameters": {
              "id": 34216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24946:2:60"
            },
            "returnParameters": {
              "id": 34217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24956:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34281,
            "nodeType": "FunctionDefinition",
            "src": "25116:246:60",
            "nodes": [],
            "body": {
              "id": 34280,
              "nodeType": "Block",
              "src": "25145:217:60",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34248,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31979,
                        "src": "25158:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 34247,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6169,
                        6190,
                        6214,
                        6238
                      ],
                      "referencedDeclaration": 6169,
                      "src": "25153:4:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25153:11:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34250,
                  "nodeType": "ExpressionStatement",
                  "src": "25153:11:60"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 34251,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31928,
                          "src": "25172:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$2816",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 34253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25184:13:60",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2003,
                        "src": "25172:25:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 34255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130303030303030303030303030",
                          "id": 34254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25205:14:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000_by_1",
                            "typeString": "int_const 10000000000000"
                          },
                          "value": "10000000000000"
                        }
                      ],
                      "src": "25172:48:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 34256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25172:50:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34257,
                  "nodeType": "ExpressionStatement",
                  "src": "25172:50:60"
                },
                {
                  "assignments": [
                    34260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34260,
                      "mutability": "mutable",
                      "name": "newFrensArt",
                      "nameLocation": "25240:11:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34280,
                      "src": "25230:21:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensArt_$3258",
                        "typeString": "contract IFrensArt"
                      },
                      "typeName": {
                        "id": 34259,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34258,
                          "name": "IFrensArt",
                          "nameLocations": [
                            "25230:9:60"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3258,
                          "src": "25230:9:60"
                        },
                        "referencedDeclaration": 3258,
                        "src": "25230:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensArt_$3258",
                          "typeString": "contract IFrensArt"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34267,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34264,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31910,
                            "src": "25272:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$159",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$159",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 34263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "25264:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34262,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "25264:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25264:17:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34261,
                      "name": "IFrensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3258,
                      "src": "25254:9:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IFrensArt_$3258_$",
                        "typeString": "type(contract IFrensArt)"
                      }
                    },
                    "id": 34266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25254:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensArt_$3258",
                      "typeString": "contract IFrensArt"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25230:52:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34269,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "25295:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34268,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6169,
                        6190,
                        6214,
                        6238
                      ],
                      "referencedDeclaration": 6169,
                      "src": "25290:4:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25290:15:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34271,
                  "nodeType": "ExpressionStatement",
                  "src": "25290:15:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34276,
                            "name": "newFrensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34260,
                            "src": "25342:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFrensArt_$3258",
                              "typeString": "contract IFrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFrensArt_$3258",
                              "typeString": "contract IFrensArt"
                            }
                          ],
                          "id": 34275,
                          "name": "IFrensArt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3258,
                          "src": "25332:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFrensArt_$3258_$",
                            "typeString": "type(contract IFrensArt)"
                          }
                        },
                        "id": 34277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25332:22:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensArt_$3258",
                          "typeString": "contract IFrensArt"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFrensArt_$3258",
                          "typeString": "contract IFrensArt"
                        }
                      ],
                      "expression": {
                        "id": 34272,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "25313:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25325:6:60",
                      "memberName": "setArt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2748,
                      "src": "25313:18:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IFrensArt_$3258_$returns$__$",
                        "typeString": "function (contract IFrensArt) external"
                      }
                    },
                    "id": 34278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25313:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34279,
                  "nodeType": "ExpressionStatement",
                  "src": "25313:42:60"
                }
              ]
            },
            "functionSelector": "f1759a8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetArt",
            "nameLocation": "25125:10:60",
            "parameters": {
              "id": 34245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25135:2:60"
            },
            "returnParameters": {
              "id": 34246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25145:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34316,
            "nodeType": "FunctionDefinition",
            "src": "25368:255:60",
            "nodes": [],
            "body": {
              "id": 34315,
              "nodeType": "Block",
              "src": "25408:215:60",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34286,
                      "mutability": "mutable",
                      "name": "SSVTokie",
                      "nameLocation": "25422:8:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34315,
                      "src": "25416:14:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$28550",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 34285,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34284,
                          "name": "ERC20",
                          "nameLocations": [
                            "25416:5:60"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28550,
                          "src": "25416:5:60"
                        },
                        "referencedDeclaration": 28550,
                        "src": "25416:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$28550",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34290,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34288,
                        "name": "SSVToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31961,
                        "src": "25439:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34287,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28550,
                      "src": "25433:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$28550_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 34289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25433:15:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$28550",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25416:32:60"
                },
                {
                  "assignments": [
                    34292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34292,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "25461:9:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34315,
                      "src": "25456:14:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34291,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25456:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34304,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34297,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31928,
                            "src": "25500:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 34296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "25492:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34295,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "25492:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25492:20:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34301,
                            "name": "SSVNetwork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31958,
                            "src": "25522:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "25514:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34299,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "25514:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25514:19:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34293,
                        "name": "SSVTokie",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34286,
                        "src": "25473:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$28550",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 34294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25482:9:60",
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28105,
                      "src": "25473:18:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 34303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25473:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25456:78:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34306,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34292,
                        "src": "25551:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25567:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 34308,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "25567:7:60",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 34307,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "25562:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25562:13:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 34311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "25576:3:60",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "25562:17:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "6e6f7420636f72726563742073737620746f6b656e20616c6c6f77616e6365",
                        "id": 34312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25581:33:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3410587cdffa1b0152e384016073cea8e163e8aca2b943e2d1db259952a3ecd6",
                          "typeString": "literal_string \"not correct ssv token allowance\""
                        },
                        "value": "not correct ssv token allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3410587cdffa1b0152e384016073cea8e163e8aca2b943e2d1db259952a3ecd6",
                          "typeString": "literal_string \"not correct ssv token allowance\""
                        }
                      ],
                      "id": 34305,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4193,
                      "src": "25542:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 34313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25542:73:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34314,
                  "nodeType": "ExpressionStatement",
                  "src": "25542:73:60"
                }
              ]
            },
            "functionSelector": "16599bf5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSSVTokenAllowance",
            "nameLocation": "25377:21:60",
            "parameters": {
              "id": 34282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25398:2:60"
            },
            "returnParameters": {
              "id": 34283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25408:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34411,
            "nodeType": "FunctionDefinition",
            "src": "25629:853:60",
            "nodes": [],
            "body": {
              "id": 34410,
              "nodeType": "Block",
              "src": "25667:815:60",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34322,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "25753:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34319,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "25744:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25747:5:60",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10197,
                      "src": "25744:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25744:19:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34324,
                  "nodeType": "ExpressionStatement",
                  "src": "25744:19:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "736574466565526563697069656e7441646472657373286164647265737329",
                                    "id": 34333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "25838:33:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_dbcdc2ccd2b979d5a994f0d9e3de5b697ec9b310e279f4bf513fdcc4c0a885b3",
                                      "typeString": "literal_string \"setFeeRecipientAddress(address)\""
                                    },
                                    "value": "setFeeRecipientAddress(address)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_dbcdc2ccd2b979d5a994f0d9e3de5b697ec9b310e279f4bf513fdcc4c0a885b3",
                                      "typeString": "literal_string \"setFeeRecipientAddress(address)\""
                                    }
                                  ],
                                  "id": 34332,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "25828:9:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 34334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25828:44:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 34331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25821:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes4_$",
                                "typeString": "type(bytes4)"
                              },
                              "typeName": {
                                "id": 34330,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "25821:6:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25821:52:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 34338,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "25882:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              ],
                              "id": 34337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25874:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34336,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "25874:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25874:20:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34328,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "25798:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "25802:18:60",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "25798:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25798:97:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 34325,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "25771:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25783:14:60",
                      "memberName": "callSSVNetwork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2781,
                      "src": "25771:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 34341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25771:125:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34342,
                  "nodeType": "ExpressionStatement",
                  "src": "25771:125:60"
                },
                {
                  "assignments": [
                    34345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34345,
                      "mutability": "mutable",
                      "name": "fakeSSVNetwork",
                      "nameLocation": "25980:14:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34410,
                      "src": "25965:29:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FakeSSVNetwork_$31857",
                        "typeString": "contract FakeSSVNetwork"
                      },
                      "typeName": {
                        "id": 34344,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34343,
                          "name": "FakeSSVNetwork",
                          "nameLocations": [
                            "25965:14:60"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31857,
                          "src": "25965:14:60"
                        },
                        "referencedDeclaration": 31857,
                        "src": "25965:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeSSVNetwork_$31857",
                          "typeString": "contract FakeSSVNetwork"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34350,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "25997:18:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FakeSSVNetwork_$31857_$",
                        "typeString": "function () returns (contract FakeSSVNetwork)"
                      },
                      "typeName": {
                        "id": 34347,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34346,
                          "name": "FakeSSVNetwork",
                          "nameLocations": [
                            "26001:14:60"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31857,
                          "src": "26001:14:60"
                        },
                        "referencedDeclaration": 31857,
                        "src": "26001:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeSSVNetwork_$31857",
                          "typeString": "contract FakeSSVNetwork"
                        }
                      }
                    },
                    "id": 34349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25997:20:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FakeSSVNetwork_$31857",
                      "typeString": "contract FakeSSVNetwork"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25965:52:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "65787465726e616c2e636f6e74726163742e61646472657373",
                                "id": 34357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26076:27:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                "value": "external.contract.address"
                              },
                              {
                                "hexValue": "5353564e6574776f726b",
                                "id": 34358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26105:12:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_6d920d9dc9e52b0fc68fda8f2431c669b391e8052a81f28faa58a1893dc05174",
                                  "typeString": "literal_string \"SSVNetwork\""
                                },
                                "value": "SSVNetwork"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5c4b357732fa374a564a9a43a9c33724e76478599d0208ba19d4f3343686199f",
                                  "typeString": "literal_string \"external.contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6d920d9dc9e52b0fc68fda8f2431c669b391e8052a81f28faa58a1893dc05174",
                                  "typeString": "literal_string \"SSVNetwork\""
                                }
                              ],
                              "expression": {
                                "id": 34355,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "26059:3:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 34356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "26063:12:60",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "26059:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 34359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26059:59:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 34354,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "26049:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 34360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26049:70:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34363,
                            "name": "fakeSSVNetwork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34345,
                            "src": "26129:14:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeSSVNetwork_$31857",
                              "typeString": "contract FakeSSVNetwork"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FakeSSVNetwork_$31857",
                              "typeString": "contract FakeSSVNetwork"
                            }
                          ],
                          "id": 34362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26121:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34361,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26121:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26121:23:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34351,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31919,
                        "src": "26025:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$1479",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 34353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26038:10:60",
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "26025:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 34365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26025:120:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34366,
                  "nodeType": "ExpressionStatement",
                  "src": "26025:120:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34370,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "26163:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34367,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "26154:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26157:5:60",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10197,
                      "src": "26154:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26154:19:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34372,
                  "nodeType": "ExpressionStatement",
                  "src": "26154:19:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "736574466565526563697069656e7441646472657373286164647265737329",
                                    "id": 34381,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "26248:33:60",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_dbcdc2ccd2b979d5a994f0d9e3de5b697ec9b310e279f4bf513fdcc4c0a885b3",
                                      "typeString": "literal_string \"setFeeRecipientAddress(address)\""
                                    },
                                    "value": "setFeeRecipientAddress(address)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_dbcdc2ccd2b979d5a994f0d9e3de5b697ec9b310e279f4bf513fdcc4c0a885b3",
                                      "typeString": "literal_string \"setFeeRecipientAddress(address)\""
                                    }
                                  ],
                                  "id": 34380,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "26238:9:60",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 34382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26238:44:60",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 34379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "26231:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes4_$",
                                "typeString": "type(bytes4)"
                              },
                              "typeName": {
                                "id": 34378,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "26231:6:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26231:52:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 34386,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "26292:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              ],
                              "id": 34385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "26284:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34384,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "26284:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26284:20:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34376,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "26208:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "26212:18:60",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "26208:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26208:97:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 34373,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "26181:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26193:14:60",
                      "memberName": "callSSVNetwork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2781,
                      "src": "26181:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 34389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26181:125:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34390,
                  "nodeType": "ExpressionStatement",
                  "src": "26181:125:60"
                },
                {
                  "assignments": [
                    34392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34392,
                      "mutability": "mutable",
                      "name": "feeRecip",
                      "nameLocation": "26329:8:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 34410,
                      "src": "26321:16:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34391,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26321:7:60",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34400,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34397,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31928,
                            "src": "26376:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 34396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26368:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34395,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26368:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26368:20:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34393,
                        "name": "fakeSSVNetwork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34345,
                        "src": "26340:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeSSVNetwork_$31857",
                          "typeString": "contract FakeSSVNetwork"
                        }
                      },
                      "id": 34394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26355:12:60",
                      "memberName": "feeRecipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31843,
                      "src": "26340:27:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 34399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26340:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26321:68:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34402,
                        "name": "feeRecip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34392,
                        "src": "26407:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34405,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31928,
                            "src": "26425:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 34404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26417:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26417:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26417:20:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6665655265636970206e6f742073657420696e2066616b6520636f6e7472616374",
                        "id": 34407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26439:35:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5fe441182862f48d01fd060ef6216251c01a1ae54b6d0b063b02995516e226e",
                          "typeString": "literal_string \"feeRecip not set in fake contract\""
                        },
                        "value": "feeRecip not set in fake contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5fe441182862f48d01fd060ef6216251c01a1ae54b6d0b063b02995516e226e",
                          "typeString": "literal_string \"feeRecip not set in fake contract\""
                        }
                      ],
                      "id": 34401,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 3999,
                      "src": "26398:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 34408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26398:77:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34409,
                  "nodeType": "ExpressionStatement",
                  "src": "26398:77:60"
                }
              ]
            },
            "functionSelector": "b3ec6b8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetFeeRecipient",
            "nameLocation": "25638:19:60",
            "parameters": {
              "id": 34317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25657:2:60"
            },
            "returnParameters": {
              "id": 34318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25667:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34499,
            "nodeType": "FunctionDefinition",
            "src": "26488:545:60",
            "nodes": [],
            "body": {
              "id": 34498,
              "nodeType": "Block",
              "src": "26524:509:60",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34419,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "26568:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              ],
                              "id": 34418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "26560:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34417,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "26560:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26560:20:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34415,
                            "name": "funToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31949,
                            "src": "26541:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FunToken_$31884",
                              "typeString": "contract FunToken"
                            }
                          },
                          "id": 34416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "26550:9:60",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28062,
                          "src": "26541:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26541:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26583:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34414,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4168,
                      "src": "26532:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26532:53:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34424,
                  "nodeType": "ExpressionStatement",
                  "src": "26532:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34428,
                            "name": "contOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31973,
                            "src": "26621:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34426,
                            "name": "funToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31949,
                            "src": "26602:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FunToken_$31884",
                              "typeString": "contract FunToken"
                            }
                          },
                          "id": 34427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "26611:9:60",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28062,
                          "src": "26602:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26602:29:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26633:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34425,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4168,
                      "src": "26593:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26593:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34432,
                  "nodeType": "ExpressionStatement",
                  "src": "26593:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34438,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31928,
                            "src": "26665:11:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$2816",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 34437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26657:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34436,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26657:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26657:20:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3132333435363738",
                        "id": 34440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26679:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12345678_by_1",
                          "typeString": "int_const 12345678"
                        },
                        "value": "12345678"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_12345678_by_1",
                          "typeString": "int_const 12345678"
                        }
                      ],
                      "expression": {
                        "id": 34433,
                        "name": "funToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31949,
                        "src": "26643:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FunToken_$31884",
                          "typeString": "contract FunToken"
                        }
                      },
                      "id": 34435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26652:4:60",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31883,
                      "src": "26643:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 34441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26643:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34442,
                  "nodeType": "ExpressionStatement",
                  "src": "26643:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34448,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "26732:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              ],
                              "id": 34447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "26724:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34446,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "26724:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26724:20:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34444,
                            "name": "funToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31949,
                            "src": "26705:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FunToken_$31884",
                              "typeString": "contract FunToken"
                            }
                          },
                          "id": 34445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "26714:9:60",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28062,
                          "src": "26705:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26705:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3132333435363738",
                        "id": 34451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26747:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12345678_by_1",
                          "typeString": "int_const 12345678"
                        },
                        "value": "12345678"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_12345678_by_1",
                          "typeString": "int_const 12345678"
                        }
                      ],
                      "id": 34443,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4168,
                      "src": "26696:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26696:60:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34453,
                  "nodeType": "ExpressionStatement",
                  "src": "26696:60:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34457,
                            "name": "contOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31973,
                            "src": "26792:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34455,
                            "name": "funToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31949,
                            "src": "26773:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FunToken_$31884",
                              "typeString": "contract FunToken"
                            }
                          },
                          "id": 34456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "26782:9:60",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28062,
                          "src": "26773:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26773:29:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26804:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34454,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4168,
                      "src": "26764:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26764:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34461,
                  "nodeType": "ExpressionStatement",
                  "src": "26764:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34465,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "26823:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34462,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "26814:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10752",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26817:5:60",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10197,
                      "src": "26814:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26814:19:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34467,
                  "nodeType": "ExpressionStatement",
                  "src": "26814:19:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34473,
                            "name": "funToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31949,
                            "src": "26875:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FunToken_$31884",
                              "typeString": "contract FunToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FunToken_$31884",
                              "typeString": "contract FunToken"
                            }
                          ],
                          "id": 34472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26867:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34471,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26867:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26867:17:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34475,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "26886:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3132333435363738",
                        "id": 34476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26897:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12345678_by_1",
                          "typeString": "int_const 12345678"
                        },
                        "value": "12345678"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_12345678_by_1",
                          "typeString": "int_const 12345678"
                        }
                      ],
                      "expression": {
                        "id": 34468,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31928,
                        "src": "26841:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$2816",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26853:13:60",
                      "memberName": "transferToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2807,
                      "src": "26841:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 34477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26841:65:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34478,
                  "nodeType": "ExpressionStatement",
                  "src": "26841:65:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 34484,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31928,
                                "src": "26950:11:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingPool_$2816",
                                  "typeString": "contract StakingPool"
                                }
                              ],
                              "id": 34483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "26942:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34482,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "26942:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26942:20:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34480,
                            "name": "funToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31949,
                            "src": "26923:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FunToken_$31884",
                              "typeString": "contract FunToken"
                            }
                          },
                          "id": 34481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "26932:9:60",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28062,
                          "src": "26923:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26923:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26965:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34479,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4168,
                      "src": "26914:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26914:53:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34489,
                  "nodeType": "ExpressionStatement",
                  "src": "26914:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34493,
                            "name": "contOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31973,
                            "src": "27003:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34491,
                            "name": "funToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31949,
                            "src": "26984:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FunToken_$31884",
                              "typeString": "contract FunToken"
                            }
                          },
                          "id": 34492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "26993:9:60",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28062,
                          "src": "26984:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26984:29:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3132333435363738",
                        "id": 34495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27015:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12345678_by_1",
                          "typeString": "int_const 12345678"
                        },
                        "value": "12345678"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_12345678_by_1",
                          "typeString": "int_const 12345678"
                        }
                      ],
                      "id": 34490,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6821,
                        6846,
                        6859,
                        6875,
                        6917,
                        6959,
                        7001,
                        7038,
                        7075,
                        7112,
                        3974,
                        3999,
                        4029,
                        4054,
                        4113,
                        4138,
                        4168,
                        4193,
                        5293,
                        5328
                      ],
                      "referencedDeclaration": 4168,
                      "src": "26975:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26975:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34497,
                  "nodeType": "ExpressionStatement",
                  "src": "26975:49:60"
                }
              ]
            },
            "functionSelector": "b672b4d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferToken",
            "nameLocation": "26497:17:60",
            "parameters": {
              "id": 34412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26514:2:60"
            },
            "returnParameters": {
              "id": 34413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26524:0:60"
            },
            "scope": 34500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31906,
              "name": "Test",
              "nameLocations": [
                "1040:4:60"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8633,
              "src": "1040:4:60"
            },
            "id": 31907,
            "nodeType": "InheritanceSpecifier",
            "src": "1040:4:60"
          }
        ],
        "canonicalName": "StakingPoolTest",
        "contractDependencies": [
          159,
          224,
          503,
          580,
          911,
          1171,
          1479,
          1502,
          2816,
          2943,
          3092,
          31857,
          31884
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34500,
          8633,
          5703,
          5440
        ],
        "name": "StakingPoolTest",
        "nameLocation": "1021:15:60",
        "scope": 34501,
        "usedErrors": [],
        "usedEvents": [
          3659,
          3663,
          3667,
          3671,
          3675,
          3679,
          3683,
          3687,
          3693,
          3699,
          3707,
          3715,
          3721,
          3727,
          3733,
          3739,
          6087,
          6092,
          6097,
          6104,
          6111,
          6118
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 60
}